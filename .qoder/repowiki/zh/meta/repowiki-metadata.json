{"knowledge_relations":[{"id":1,"source_id":"795c56cf-a97b-46da-880c-f65be872dd7f","target_id":"75b314c6-c95b-4fbb-a7d1-7ef581d1a885","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 795c56cf-a97b-46da-880c-f65be872dd7f -\u003e 75b314c6-c95b-4fbb-a7d1-7ef581d1a885","gmt_create":"2025-09-16T13:54:20.6472284+08:00","gmt_modified":"2025-09-16T13:54:20.6472284+08:00"},{"id":2,"source_id":"795c56cf-a97b-46da-880c-f65be872dd7f","target_id":"83344851-1330-4bad-bc79-a04242a0d419","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 795c56cf-a97b-46da-880c-f65be872dd7f -\u003e 83344851-1330-4bad-bc79-a04242a0d419","gmt_create":"2025-09-16T13:54:20.6482555+08:00","gmt_modified":"2025-09-16T13:54:20.6482555+08:00"},{"id":3,"source_id":"795c56cf-a97b-46da-880c-f65be872dd7f","target_id":"0934d747-2410-4c3a-a776-e5c2269ac287","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 795c56cf-a97b-46da-880c-f65be872dd7f -\u003e 0934d747-2410-4c3a-a776-e5c2269ac287","gmt_create":"2025-09-16T13:54:20.6622288+08:00","gmt_modified":"2025-09-16T13:54:20.6622288+08:00"},{"id":4,"source_id":"dc66196b-20f6-41f0-b00d-85548615ff5c","target_id":"14bf6a6a-ebbd-4fb5-900f-b492ab57db9b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: dc66196b-20f6-41f0-b00d-85548615ff5c -\u003e 14bf6a6a-ebbd-4fb5-900f-b492ab57db9b","gmt_create":"2025-09-16T13:54:20.6638009+08:00","gmt_modified":"2025-09-16T13:54:20.6638009+08:00"},{"id":5,"source_id":"dc66196b-20f6-41f0-b00d-85548615ff5c","target_id":"a7322450-3c74-4099-b09f-35dc9aee976c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: dc66196b-20f6-41f0-b00d-85548615ff5c -\u003e a7322450-3c74-4099-b09f-35dc9aee976c","gmt_create":"2025-09-16T13:54:20.6648263+08:00","gmt_modified":"2025-09-16T13:54:20.6648263+08:00"},{"id":6,"source_id":"667a6eb3-f07e-45ef-a4a5-04dd2bf420bd","target_id":"a14ecfff-0da8-4865-83be-e3d601219b37","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667a6eb3-f07e-45ef-a4a5-04dd2bf420bd -\u003e a14ecfff-0da8-4865-83be-e3d601219b37","gmt_create":"2025-09-16T13:54:20.6658494+08:00","gmt_modified":"2025-09-16T13:54:20.6658494+08:00"},{"id":7,"source_id":"667a6eb3-f07e-45ef-a4a5-04dd2bf420bd","target_id":"707b3232-cc1d-49e6-bcf4-52a0f739a1b5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667a6eb3-f07e-45ef-a4a5-04dd2bf420bd -\u003e 707b3232-cc1d-49e6-bcf4-52a0f739a1b5","gmt_create":"2025-09-16T13:54:20.6668717+08:00","gmt_modified":"2025-09-16T13:54:20.6668717+08:00"},{"id":8,"source_id":"667a6eb3-f07e-45ef-a4a5-04dd2bf420bd","target_id":"0a6f3451-ce95-4c33-af7c-862af29510fd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667a6eb3-f07e-45ef-a4a5-04dd2bf420bd -\u003e 0a6f3451-ce95-4c33-af7c-862af29510fd","gmt_create":"2025-09-16T13:54:20.6678963+08:00","gmt_modified":"2025-09-16T13:54:20.6678963+08:00"},{"id":9,"source_id":"fa10b49c-9b59-47d3-952f-7674a43777b0","target_id":"9e97427e-0b54-468c-ad02-8f435ef7e210","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fa10b49c-9b59-47d3-952f-7674a43777b0 -\u003e 9e97427e-0b54-468c-ad02-8f435ef7e210","gmt_create":"2025-09-16T13:54:20.6689213+08:00","gmt_modified":"2025-09-16T13:54:20.6689213+08:00"},{"id":10,"source_id":"fa10b49c-9b59-47d3-952f-7674a43777b0","target_id":"6bf4ef4b-29bd-4d6e-944b-8fd2c429dc0f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fa10b49c-9b59-47d3-952f-7674a43777b0 -\u003e 6bf4ef4b-29bd-4d6e-944b-8fd2c429dc0f","gmt_create":"2025-09-16T13:54:20.6699463+08:00","gmt_modified":"2025-09-16T13:54:20.6699463+08:00"},{"id":11,"source_id":"fa10b49c-9b59-47d3-952f-7674a43777b0","target_id":"180284ea-753d-4819-a4c8-23b12ac4ee56","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fa10b49c-9b59-47d3-952f-7674a43777b0 -\u003e 180284ea-753d-4819-a4c8-23b12ac4ee56","gmt_create":"2025-09-16T13:54:20.6715153+08:00","gmt_modified":"2025-09-16T13:54:20.6715153+08:00"},{"id":12,"source_id":"730ba96c-8597-4fea-88e6-433d6c836cef","target_id":"1b8b0b2b-caf0-4927-9fd5-44510c51b31b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 730ba96c-8597-4fea-88e6-433d6c836cef -\u003e 1b8b0b2b-caf0-4927-9fd5-44510c51b31b","gmt_create":"2025-09-16T13:54:20.6725357+08:00","gmt_modified":"2025-09-16T13:54:20.6725357+08:00"},{"id":13,"source_id":"730ba96c-8597-4fea-88e6-433d6c836cef","target_id":"0c90a731-f352-43cf-bbeb-d941231c67f4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 730ba96c-8597-4fea-88e6-433d6c836cef -\u003e 0c90a731-f352-43cf-bbeb-d941231c67f4","gmt_create":"2025-09-16T13:54:20.673561+08:00","gmt_modified":"2025-09-16T13:54:20.673561+08:00"},{"id":14,"source_id":"730ba96c-8597-4fea-88e6-433d6c836cef","target_id":"0ed8b65c-96b1-4833-9e07-441708a5a759","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 730ba96c-8597-4fea-88e6-433d6c836cef -\u003e 0ed8b65c-96b1-4833-9e07-441708a5a759","gmt_create":"2025-09-16T13:54:20.6746109+08:00","gmt_modified":"2025-09-16T13:54:20.6746109+08:00"},{"id":15,"source_id":"a96fc791-1c67-49ca-a62a-83e4eadf0029","target_id":"c0e6e186-d609-447a-8f92-3c7b86f28cb3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a96fc791-1c67-49ca-a62a-83e4eadf0029 -\u003e c0e6e186-d609-447a-8f92-3c7b86f28cb3","gmt_create":"2025-09-16T13:54:20.6756427+08:00","gmt_modified":"2025-09-16T13:54:20.6756427+08:00"},{"id":16,"source_id":"a96fc791-1c67-49ca-a62a-83e4eadf0029","target_id":"e8e0d3f8-36ad-41d8-b7a4-af910152fe9d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a96fc791-1c67-49ca-a62a-83e4eadf0029 -\u003e e8e0d3f8-36ad-41d8-b7a4-af910152fe9d","gmt_create":"2025-09-16T13:54:20.6772362+08:00","gmt_modified":"2025-09-16T13:54:20.6772362+08:00"},{"id":17,"source_id":"a96fc791-1c67-49ca-a62a-83e4eadf0029","target_id":"0708206c-7924-4328-bc82-c8324b9aac60","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a96fc791-1c67-49ca-a62a-83e4eadf0029 -\u003e 0708206c-7924-4328-bc82-c8324b9aac60","gmt_create":"2025-09-16T13:54:20.6782664+08:00","gmt_modified":"2025-09-16T13:54:20.6782664+08:00"},{"id":18,"source_id":"f52a9807-89ed-4490-9a07-ebf205d5034f","target_id":"e913c1ff-1cba-4ac0-84f4-28279b53c549","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f52a9807-89ed-4490-9a07-ebf205d5034f -\u003e e913c1ff-1cba-4ac0-84f4-28279b53c549","gmt_create":"2025-09-16T13:54:20.6798087+08:00","gmt_modified":"2025-09-16T13:54:20.6798087+08:00"},{"id":19,"source_id":"f52a9807-89ed-4490-9a07-ebf205d5034f","target_id":"fc11593f-0f15-4ab9-85d1-a517fe9d8785","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f52a9807-89ed-4490-9a07-ebf205d5034f -\u003e fc11593f-0f15-4ab9-85d1-a517fe9d8785","gmt_create":"2025-09-16T13:54:20.6808392+08:00","gmt_modified":"2025-09-16T13:54:20.6808392+08:00"},{"id":20,"source_id":"f52a9807-89ed-4490-9a07-ebf205d5034f","target_id":"070d8856-a43a-48a8-9f8a-cc84bc3f3fdf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f52a9807-89ed-4490-9a07-ebf205d5034f -\u003e 070d8856-a43a-48a8-9f8a-cc84bc3f3fdf","gmt_create":"2025-09-16T13:54:20.6818788+08:00","gmt_modified":"2025-09-16T13:54:20.6818788+08:00"},{"id":21,"source_id":"d4f5f11a-f0ab-4a55-816d-3765f1ee56cb","target_id":"007a9ad3-7d7f-487f-846e-a20cd204d168","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d4f5f11a-f0ab-4a55-816d-3765f1ee56cb -\u003e 007a9ad3-7d7f-487f-846e-a20cd204d168","gmt_create":"2025-09-16T13:54:20.6834315+08:00","gmt_modified":"2025-09-16T13:54:20.6834315+08:00"},{"id":22,"source_id":"d4f5f11a-f0ab-4a55-816d-3765f1ee56cb","target_id":"3ce4481f-b791-4e7d-9af3-083899644d77","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d4f5f11a-f0ab-4a55-816d-3765f1ee56cb -\u003e 3ce4481f-b791-4e7d-9af3-083899644d77","gmt_create":"2025-09-16T13:54:20.6839457+08:00","gmt_modified":"2025-09-16T13:54:20.6839457+08:00"},{"id":23,"source_id":"d4f5f11a-f0ab-4a55-816d-3765f1ee56cb","target_id":"8bf82b3a-6152-4edb-9c56-0020584fd858","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d4f5f11a-f0ab-4a55-816d-3765f1ee56cb -\u003e 8bf82b3a-6152-4edb-9c56-0020584fd858","gmt_create":"2025-09-16T13:54:20.685537+08:00","gmt_modified":"2025-09-16T13:54:20.685537+08:00"},{"id":24,"source_id":"dce232e9-ab96-4e4e-be52-52d307170a31","target_id":"670b6d2e-0176-4dc9-9a15-469770d36c50","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: dce232e9-ab96-4e4e-be52-52d307170a31 -\u003e 670b6d2e-0176-4dc9-9a15-469770d36c50","gmt_create":"2025-09-16T13:54:20.6865654+08:00","gmt_modified":"2025-09-16T13:54:20.6865654+08:00"},{"id":25,"source_id":"dce232e9-ab96-4e4e-be52-52d307170a31","target_id":"031faf2b-7974-480e-aa4e-f89f552ff223","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: dce232e9-ab96-4e4e-be52-52d307170a31 -\u003e 031faf2b-7974-480e-aa4e-f89f552ff223","gmt_create":"2025-09-16T13:54:20.6881098+08:00","gmt_modified":"2025-09-16T13:54:20.6881098+08:00"},{"id":26,"source_id":"dce232e9-ab96-4e4e-be52-52d307170a31","target_id":"3b3580bb-2813-4170-b9a1-b631ba1c7954","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: dce232e9-ab96-4e4e-be52-52d307170a31 -\u003e 3b3580bb-2813-4170-b9a1-b631ba1c7954","gmt_create":"2025-09-16T13:54:20.6891378+08:00","gmt_modified":"2025-09-16T13:54:20.6891378+08:00"},{"id":27,"source_id":"90f68016-234a-4c72-8e77-e5b8d7982937","target_id":"e6e4aaf4-b364-402f-92f4-1007f08b03f8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 90f68016-234a-4c72-8e77-e5b8d7982937 -\u003e e6e4aaf4-b364-402f-92f4-1007f08b03f8","gmt_create":"2025-09-16T13:54:20.6906795+08:00","gmt_modified":"2025-09-16T13:54:20.6906795+08:00"},{"id":28,"source_id":"90f68016-234a-4c72-8e77-e5b8d7982937","target_id":"cb5b69b7-c5f3-4112-b4d0-efd2a565347d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 90f68016-234a-4c72-8e77-e5b8d7982937 -\u003e cb5b69b7-c5f3-4112-b4d0-efd2a565347d","gmt_create":"2025-09-16T13:54:20.691727+08:00","gmt_modified":"2025-09-16T13:54:20.691727+08:00"},{"id":29,"source_id":"90f68016-234a-4c72-8e77-e5b8d7982937","target_id":"4577d85e-f93b-40ac-93f1-9cbfe071e5c1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 90f68016-234a-4c72-8e77-e5b8d7982937 -\u003e 4577d85e-f93b-40ac-93f1-9cbfe071e5c1","gmt_create":"2025-09-16T13:54:20.6928195+08:00","gmt_modified":"2025-09-16T13:54:20.6928195+08:00"},{"id":30,"source_id":"10d58bca-29f5-414d-aefb-ad8429e391f8","target_id":"54dd14b5-009c-4b9f-80f5-cbc3c1550028","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 10d58bca-29f5-414d-aefb-ad8429e391f8 -\u003e 54dd14b5-009c-4b9f-80f5-cbc3c1550028","gmt_create":"2025-09-16T13:54:20.6943602+08:00","gmt_modified":"2025-09-16T13:54:20.6943602+08:00"},{"id":31,"source_id":"10d58bca-29f5-414d-aefb-ad8429e391f8","target_id":"157f7eb6-ec5e-4c0f-815a-4568d5d62b84","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 10d58bca-29f5-414d-aefb-ad8429e391f8 -\u003e 157f7eb6-ec5e-4c0f-815a-4568d5d62b84","gmt_create":"2025-09-16T13:54:20.6953931+08:00","gmt_modified":"2025-09-16T13:54:20.6953931+08:00"},{"id":32,"source_id":"10d58bca-29f5-414d-aefb-ad8429e391f8","target_id":"e8846eb7-0e4f-4406-bf45-d3a4c04e9a6e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 10d58bca-29f5-414d-aefb-ad8429e391f8 -\u003e e8846eb7-0e4f-4406-bf45-d3a4c04e9a6e","gmt_create":"2025-09-16T13:54:20.6964478+08:00","gmt_modified":"2025-09-16T13:54:20.6964478+08:00"},{"id":33,"source_id":"75b314c6-c95b-4fbb-a7d1-7ef581d1a885","target_id":"63c6805c-4268-4815-862a-d378829da22b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 75b314c6-c95b-4fbb-a7d1-7ef581d1a885 -\u003e 63c6805c-4268-4815-862a-d378829da22b","gmt_create":"2025-09-16T13:54:20.697991+08:00","gmt_modified":"2025-09-16T13:54:20.697991+08:00"},{"id":34,"source_id":"75b314c6-c95b-4fbb-a7d1-7ef581d1a885","target_id":"47abccb3-4324-4952-ac06-36d2c5a6eaae","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 75b314c6-c95b-4fbb-a7d1-7ef581d1a885 -\u003e 47abccb3-4324-4952-ac06-36d2c5a6eaae","gmt_create":"2025-09-16T13:54:20.6990233+08:00","gmt_modified":"2025-09-16T13:54:20.6990233+08:00"},{"id":35,"source_id":"75b314c6-c95b-4fbb-a7d1-7ef581d1a885","target_id":"009a3aa3-b953-4843-8629-7ce6306ccd94","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 75b314c6-c95b-4fbb-a7d1-7ef581d1a885 -\u003e 009a3aa3-b953-4843-8629-7ce6306ccd94","gmt_create":"2025-09-16T13:54:20.7005634+08:00","gmt_modified":"2025-09-16T13:54:20.7005634+08:00"},{"id":36,"source_id":"83344851-1330-4bad-bc79-a04242a0d419","target_id":"840ad2e5-5bf0-44ae-a055-912cc67833c9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 83344851-1330-4bad-bc79-a04242a0d419 -\u003e 840ad2e5-5bf0-44ae-a055-912cc67833c9","gmt_create":"2025-09-16T13:54:20.7021052+08:00","gmt_modified":"2025-09-16T13:54:20.7021052+08:00"},{"id":37,"source_id":"83344851-1330-4bad-bc79-a04242a0d419","target_id":"4ffcbbb6-f974-4a61-bc41-b3ca0439f7ea","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 83344851-1330-4bad-bc79-a04242a0d419 -\u003e 4ffcbbb6-f974-4a61-bc41-b3ca0439f7ea","gmt_create":"2025-09-16T13:54:20.7036602+08:00","gmt_modified":"2025-09-16T13:54:20.7036602+08:00"},{"id":38,"source_id":"83344851-1330-4bad-bc79-a04242a0d419","target_id":"32565744-a7a1-41cc-a7a7-96ca39d05e63","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 83344851-1330-4bad-bc79-a04242a0d419 -\u003e 32565744-a7a1-41cc-a7a7-96ca39d05e63","gmt_create":"2025-09-16T13:54:20.7046871+08:00","gmt_modified":"2025-09-16T13:54:20.7046871+08:00"},{"id":39,"source_id":"0934d747-2410-4c3a-a776-e5c2269ac287","target_id":"c6854a7c-27d1-4af2-9d35-0de6c1aa3c25","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0934d747-2410-4c3a-a776-e5c2269ac287 -\u003e c6854a7c-27d1-4af2-9d35-0de6c1aa3c25","gmt_create":"2025-09-16T13:54:20.7067569+08:00","gmt_modified":"2025-09-16T13:54:20.7067569+08:00"},{"id":40,"source_id":"0934d747-2410-4c3a-a776-e5c2269ac287","target_id":"85cb299b-7195-4f04-9212-fb1b2ac4aeef","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0934d747-2410-4c3a-a776-e5c2269ac287 -\u003e 85cb299b-7195-4f04-9212-fb1b2ac4aeef","gmt_create":"2025-09-16T13:54:20.7078468+08:00","gmt_modified":"2025-09-16T13:54:20.7078468+08:00"},{"id":41,"source_id":"0934d747-2410-4c3a-a776-e5c2269ac287","target_id":"964499dd-121a-4708-9ddc-6269d2b2a1f4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0934d747-2410-4c3a-a776-e5c2269ac287 -\u003e 964499dd-121a-4708-9ddc-6269d2b2a1f4","gmt_create":"2025-09-16T13:54:20.7088725+08:00","gmt_modified":"2025-09-16T13:54:20.7088725+08:00"},{"id":42,"source_id":"63c6805c-4268-4815-862a-d378829da22b","target_id":"6066851c-736d-4121-8c7a-26351a8ae6c8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 63c6805c-4268-4815-862a-d378829da22b -\u003e 6066851c-736d-4121-8c7a-26351a8ae6c8","gmt_create":"2025-09-16T13:54:20.7109278+08:00","gmt_modified":"2025-09-16T13:54:20.7109278+08:00"},{"id":43,"source_id":"63c6805c-4268-4815-862a-d378829da22b","target_id":"d89c25ce-817c-4d53-a89e-cb29757f0ba6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 63c6805c-4268-4815-862a-d378829da22b -\u003e d89c25ce-817c-4d53-a89e-cb29757f0ba6","gmt_create":"2025-09-16T13:54:20.7119546+08:00","gmt_modified":"2025-09-16T13:54:20.7119546+08:00"},{"id":44,"source_id":"63c6805c-4268-4815-862a-d378829da22b","target_id":"3470038f-6aef-4070-81fa-a1191cfee6bb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 63c6805c-4268-4815-862a-d378829da22b -\u003e 3470038f-6aef-4070-81fa-a1191cfee6bb","gmt_create":"2025-09-16T13:54:20.7134972+08:00","gmt_modified":"2025-09-16T13:54:20.7134972+08:00"},{"id":45,"source_id":"63c6805c-4268-4815-862a-d378829da22b","target_id":"186ab6ae-dc48-44eb-8964-089009aa7b58","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 63c6805c-4268-4815-862a-d378829da22b -\u003e 186ab6ae-dc48-44eb-8964-089009aa7b58","gmt_create":"2025-09-16T13:54:20.7145597+08:00","gmt_modified":"2025-09-16T13:54:20.7145597+08:00"},{"id":46,"source_id":"c6854a7c-27d1-4af2-9d35-0de6c1aa3c25","target_id":"d643764e-0348-493d-b67f-2c5ab50baddf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c6854a7c-27d1-4af2-9d35-0de6c1aa3c25 -\u003e d643764e-0348-493d-b67f-2c5ab50baddf","gmt_create":"2025-09-16T13:54:20.7161052+08:00","gmt_modified":"2025-09-16T13:54:20.7161052+08:00"},{"id":47,"source_id":"c6854a7c-27d1-4af2-9d35-0de6c1aa3c25","target_id":"7bb9e36d-503f-4d61-ad24-867e469506d9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c6854a7c-27d1-4af2-9d35-0de6c1aa3c25 -\u003e 7bb9e36d-503f-4d61-ad24-867e469506d9","gmt_create":"2025-09-16T13:54:20.7176677+08:00","gmt_modified":"2025-09-16T13:54:20.7176677+08:00"},{"id":48,"source_id":"47abccb3-4324-4952-ac06-36d2c5a6eaae","target_id":"c7332e39-63b1-4e15-ba35-47d1da5b8313","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 47abccb3-4324-4952-ac06-36d2c5a6eaae -\u003e c7332e39-63b1-4e15-ba35-47d1da5b8313","gmt_create":"2025-09-16T13:54:20.7186953+08:00","gmt_modified":"2025-09-16T13:54:20.7186953+08:00"},{"id":49,"source_id":"47abccb3-4324-4952-ac06-36d2c5a6eaae","target_id":"88b1d962-619b-4d66-8378-e654bd3a1685","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 47abccb3-4324-4952-ac06-36d2c5a6eaae -\u003e 88b1d962-619b-4d66-8378-e654bd3a1685","gmt_create":"2025-09-16T13:54:20.7202405+08:00","gmt_modified":"2025-09-16T13:54:20.7202405+08:00"},{"id":50,"source_id":"47abccb3-4324-4952-ac06-36d2c5a6eaae","target_id":"0d688f76-c9a8-4a5e-8672-35d79f338beb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 47abccb3-4324-4952-ac06-36d2c5a6eaae -\u003e 0d688f76-c9a8-4a5e-8672-35d79f338beb","gmt_create":"2025-09-16T13:54:20.7212694+08:00","gmt_modified":"2025-09-16T13:54:20.7212694+08:00"},{"id":51,"source_id":"47abccb3-4324-4952-ac06-36d2c5a6eaae","target_id":"dde080c3-013c-4d73-99ca-230651caab12","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 47abccb3-4324-4952-ac06-36d2c5a6eaae -\u003e dde080c3-013c-4d73-99ca-230651caab12","gmt_create":"2025-09-16T13:54:20.722869+08:00","gmt_modified":"2025-09-16T13:54:20.722869+08:00"},{"id":52,"source_id":"47abccb3-4324-4952-ac06-36d2c5a6eaae","target_id":"eaf70ee4-2bbd-41ee-b9be-dcd297c29587","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 47abccb3-4324-4952-ac06-36d2c5a6eaae -\u003e eaf70ee4-2bbd-41ee-b9be-dcd297c29587","gmt_create":"2025-09-16T13:54:20.7238965+08:00","gmt_modified":"2025-09-16T13:54:20.7238965+08:00"},{"id":53,"source_id":"85cb299b-7195-4f04-9212-fb1b2ac4aeef","target_id":"9a83b894-902c-4fe8-912d-bbb94372d0a5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 85cb299b-7195-4f04-9212-fb1b2ac4aeef -\u003e 9a83b894-902c-4fe8-912d-bbb94372d0a5","gmt_create":"2025-09-16T13:54:20.7254362+08:00","gmt_modified":"2025-09-16T13:54:20.7254362+08:00"},{"id":54,"source_id":"85cb299b-7195-4f04-9212-fb1b2ac4aeef","target_id":"b4f39f61-9229-4caa-8685-c3ad073239cd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 85cb299b-7195-4f04-9212-fb1b2ac4aeef -\u003e b4f39f61-9229-4caa-8685-c3ad073239cd","gmt_create":"2025-09-16T13:54:20.7269797+08:00","gmt_modified":"2025-09-16T13:54:20.7269797+08:00"},{"id":55,"source_id":"009a3aa3-b953-4843-8629-7ce6306ccd94","target_id":"66b6bf31-b092-4468-81dc-b60890654443","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 009a3aa3-b953-4843-8629-7ce6306ccd94 -\u003e 66b6bf31-b092-4468-81dc-b60890654443","gmt_create":"2025-09-16T13:54:20.7285424+08:00","gmt_modified":"2025-09-16T13:54:20.7285424+08:00"},{"id":56,"source_id":"009a3aa3-b953-4843-8629-7ce6306ccd94","target_id":"fa47af0e-c92c-4c76-bff8-be72d35156f2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 009a3aa3-b953-4843-8629-7ce6306ccd94 -\u003e fa47af0e-c92c-4c76-bff8-be72d35156f2","gmt_create":"2025-09-16T13:54:20.7300774+08:00","gmt_modified":"2025-09-16T13:54:20.7300774+08:00"},{"id":57,"source_id":"009a3aa3-b953-4843-8629-7ce6306ccd94","target_id":"0dfea513-03c5-4a90-a5e5-408db405d150","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 009a3aa3-b953-4843-8629-7ce6306ccd94 -\u003e 0dfea513-03c5-4a90-a5e5-408db405d150","gmt_create":"2025-09-16T13:54:20.7316385+08:00","gmt_modified":"2025-09-16T13:54:20.7316385+08:00"},{"id":58,"source_id":"009a3aa3-b953-4843-8629-7ce6306ccd94","target_id":"0d81b742-dd25-407e-8c71-2aea26d626fe","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 009a3aa3-b953-4843-8629-7ce6306ccd94 -\u003e 0d81b742-dd25-407e-8c71-2aea26d626fe","gmt_create":"2025-09-16T13:54:20.7331824+08:00","gmt_modified":"2025-09-16T13:54:20.7331824+08:00"}],"wiki_catalogs":[{"id":"2a4e3b5e-d8a7-47a0-a81a-f622873bd448","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"项目概述","description":"project-overview","prompt":"创建关于项目概述的全面内容，重点介绍基于ANTLR4实现的Cymbol语言编译器的整体目标和教学意义。解释该项目作为编译原理学习工具的定位，涵盖从词法分析到虚拟机代码生成的完整编译流程。描述21个演进阶段（ep1-ep21）的设计理念，展示如何逐步构建复杂编译器系统。使用代码库中的实际示例说明核心架构组件之间的关系，包括词法分析器、语法分析器、AST构建、符号表管理、类型检查、中间表示生成、控制流图构建和代码生成。为初学者提供概念性概述，同时为有经验的开发者提供技术细节，包括Java编程语言的使用、ANTLR4框架集成以及Maven构建系统配置。","parent_id":"","order":0,"progress_status":"completed","dependent_files":"README.md,ep20/README.md,ep19/README.md,ep20/pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9072192+08:00","gmt_modified":"2025-09-16T13:15:53.1369237+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02elJtBUgH0Ns0veIx1WPtM9wwkxI+/XAqHLxJLlHB8wV7ojrH0+b4JMz5OewwhBN1FoB9+dSw5m+vXsNUxTb0ysANN4bdy7By9MrLlSXxnoHXlWtVanoYQ3uWYvEMpx8QTR8XWr8HcBcVBZSCnWb9CxWZxwjWFNo/khPKIhJ2yoynDI95spSaOVPnkwMepauDf9cl4rE9AulSX/LspyYSCb4iMzmauX4mECO9eK9uSql0eQXYkrjkbngqz/EtGfJ67Z7Qx6vo6RbY9kUbEPOYr/9RB7iHmvNTt5xvRMpWCtRlotob+fI4iUujCwaIWq0F6TL/r0WCxAAhNm6mdkvK89yToINB9cfFayXzHdrtlWkPwJjvLE1uTy5H/SBzoPspk7Y2qan52WTQC2Mfe49x8Z8dsWQR0Fc6U4b66C2zQzzVRGm88tzFbOMqQaE6Y6Hp9UkWmp7n/HzSRQHvFapu6hgvGs8VFPtCPfV6TGlNjxZBOlRwWuSPqi1t6aa6IH44z5j/tDhPZdzz6W4rxYd92fzyjy3DonMPFyQpwaApsBjA7IFCMx80l7gx5pLffnB5VVBJVtXPpuKQWfSvi3BSzpxpexC9RFZv6oy4blB4nlAtzqzjnXGdhLzjezO86cOIGKBI7E0CG4kvxkGiXJDlpfOsaintJWB2dXUSEQGs/F+JlirmET6GGb5dBtdjm8cL1c3pZOQIgoqUR9k7KHwYHq23eTXy+diLmifAE80j3UWQVvM2BmKJDM4FmCs+9dl44h5W4KkXfNatHMKCetQ+XXd8KeGfX2WQFNI6ugceqi+QFkd6LKYLwJkLwKP9Y1bFI8/uu/MnBc2w66+sAn5DXAZ6hHZt1Ds2yDrHkUQYB1EMNOP8PZ66SCSJsMLMx7Vxd9z64YnMD50/AyOYluLvmL930YitqH5MwVvYQmlEQxY8FRlxqbM5ORmBTM9AMVmSgYCrBR2Uhqf7qrgRMXoL0iDuMB236re0RI7VEHT9r8oNpKVnKAM3YZZuCuU4HcIXTGIlJBMietWChZm1iyitDiDBUH7Kfd/d0RhGvQAcu8o7va1HTqqKy1ysY0i5I0PK/fV5zhZ012fKXS/z9rxl8gS5XjzOiZLfaDcEDwn35CI0SjRID7mxZG3cYBbmwoEWVKsDbmPuoFbWGvPHXmKFRxVvs35ouKzMmmg3318VeHoeYaqwwIfJMy3WDXaSu5MmLkQZoVdfZtSSn1WiK66sUBsUZBjv1Amio/q+rvQ9F/rQ6/P0TJMRE5unWdmXw5so3kBKYMOl6SZQbr7FqUY7blcHjbBxQcwWUiG8OwGN+MsQ==","layer_level":0},{"id":"c12e4963-9d9f-4385-b97b-255b098564c0","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"语法规则","description":"syntax-rules","prompt":"创建关于Cymbol语言语法规则的详细内容，重点介绍在CymbolParser.java中定义的BNF范式。系统性地文档化表达式语法（包括算术、逻辑和关系表达式）、语句语法（if、while、return、赋值等）、声明语法（变量、函数、结构体）以及程序整体结构的规则。使用EBNF表示法清晰展示各语法构造的产生式规则，解释左递归消除、运算符优先级和结合性处理等关键技术细节。提供实际代码示例说明语法结构如何映射到ANTLR4的语法规则，并解释词法符号与语法规则之间的关系。为初学者解释上下文无关文法的基本概念，为高级用户提供语法设计决策背后的原理，如为何选择特定的语法结构来支持语言特性。","parent_id":"4347657a-a722-4c91-b857-41410d0a46e4","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:37.6863987+08:00","gmt_modified":"2025-09-16T13:24:05.7898912+08:00","raw_data":"WikiEncrypted:F7IuOFBoY+w1jkMgJ5QawwgV//6vMnWz5fUufNu8JrWCb/uKf1X7JgjEFqu8eLPzfGxtRQY50lnaqAcn7Z3zin9jr43lCw5G4iK5ZOa5P4h18eHcxlbv0UeRO/NLMv8EPH/okSNWXQfhTwyKV1TKlkuxaS5AK21VucLml9ep4vp1KoWOWXd4I4sP7WbE1snxK3W4QQZ3p2KXV3+4RqFQQDdSj6zBFt3ESPzvKpFnBK7dQS2fZPg0dYpec/qXIPsvJkia5OuM4njZPlckJyGb6NrJe2v2pQRnhEFbK4eEQTh8FTz/xRwkkCVXw9C3ezeswFkcKFVDst2v1+HzVPm53BXUf/+kSSpNZ9xng1lYK5RC85HGnuejPTBpfTGrd3XlbwXqdxgDN08PWfJo/dvBgENmu4w7yeQ/d+63lNl5qkUlxCX0+kSfsnSFqvqVIx2KWGhxgdMTsrtge8OT5njhvowOA6dUSDw3YMdZBXuhiHIrZ6lyMT3Gl553GBD1qQ01RwrCGDKUenkyGxbd6HvHXs3CdyEjYe0kWlOeefKoxAubZl1IIp2pzRdrNifT888ebtI8mtorpu/rm9dftaOHdB7FOtHOKocd+4xglK2dbkJSE1gUdMZDlOvPok32EeUg7e8VDnyiZ+E3R5QHr0leSK9ueviRvYyxpnMzx5URTUng8BpxKSXrbTXfkgNuu+xKHqN/juByjKJxsotwCJf1u8NvMrjYRB1QfMA3wnDjfJhLLzjNLdtzH2YLxC+gXNvLkHeVqoc71ZyHYh1iwGAkrXGSNXCahX4vo979dakPSmHqoqnF975n9MjtlYiqLIs8q4Cen/pcrEkT0zYwU0zM+ohrRi23VHsmgm1EcIV03QKpgedf2Z4U9yxLS+mhaBpMHBO1K+vE33Y+CH4OdItalzjFRd4oLcy2e2vLHuV5Alvmupjw8g7WQwDN44W/Lh1QMiGFM2S9F7kWMU5KvW0gQj7vEUfL3RNhgUQ+3MJUQZCO7UYMYRz7nQ3ViUx0HZuxotQrTAIk7gEWsTzq2S5hNED2ogZi5wI+oV9tvTiGuZufvsF38Kn4KpSu7+H8bI15/niHMUtOHN1iJe10os1TyqU3X3a/i18O7FA5cJw1fkjSIs7DwDH5nw4YQDPz6uTDCgRfAbcjoqBzeQ32U8QFgb7ZXmAwSBq1gKif9Q/Ye3qCkI1GQtD1yfIqieF4++wxVk01pBKe0zHOxLduK6ekUmFBEXGxRUnwMcusieh8n7hcb068r5ov5Zna1XQgMiaqvOQUrFnKLszjE3yexMhvqNvaj5O1In9eZ7SbJfs+J6WabKiCIFnZkaB2DZ97EaJUeYJLmhA6gZHh8X/0IgxQKx4ZYEGp1SG8nKzxjGLlnhtOQx9CN/uaOjCOsbQWineb/bdfIGxehgKnH1hGRhgcLqvM+p2Nbeww5hhUtu7eOLA=","layer_level":1},{"id":"51290a87-693d-46e9-901e-7b67ed62e6c1","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"整体架构","description":"overall-architecture","prompt":"创建关于Cymbol编译器整体架构的全面内容，重点介绍其分层设计模式。详细描述从词法分析到代码生成的六个核心层次：词法层、语法层、语义层、IR层、CFG层和代码生成层。解释每个层次的职责边界和数据接口，使用系统上下文图展示各组件之间的依赖关系。说明模块化设计如何支持可扩展性，包括访问者模式在AST/IR遍历中的应用、构建器模式在节点创建中的实现，以及责任链模式在编译流水线中的运用。提供实际代码示例展示Compiler类如何协调各模块工作，并解释架构决策背后的权衡考虑，如性能与可维护性的平衡。","parent_id":"6a440a43-4f65-44f6-b0a9-2cfb1e5c0c9f","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/docs/project-architecture.md,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/pipeline/CompilerPipeline.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:41.2168903+08:00","gmt_modified":"2025-09-16T13:25:03.2132449+08:00","raw_data":"WikiEncrypted:KLd6hqS3YDnCCH772QA0H79opxzq6gDz6O6XbE8wXJCkKw6BpWqI3e9aCSSxRib9F26B5yw6s14IWTax2jsxi0p7Y7F4fNGx/u9rHMpFfkDKnJm/cghcz/UbMaiR7KKhEFpWFQOZAfE3Xf+2kdp2xIiyzoplRQwX3SrQ+yP2yOOdR/yS3fjOOH7x/NsQ1nt8BilbnPAnG+UAPZOSa9lpo/EqEvtnCw+/OFHlPiAjxAgd3vaBImQZrfIEsWTUoL9/A8vTvWkvUwWCAYE+fWNW7ZppvOPnfcp7/EO9BNRmbvntbbQXx1a/qVEcimnGi/0k4/ysdMWgEn7bAxLc25RDm3bvX0Rb11lF6wjsSlJ+TQVo/0g/9mD+DcR9OeH+VVDg8zir1W0CyKYCuQwEPOClwzne9yb9ATtfTnO9X8doKo86TAoykREjr+y5jL7o860/QnCkoQvhMHpRkXsLf9KubxK87uZbZ4UNQootMpSdxC/HZJB6c0EVGOE7AswAZzM6OjxAzb+DgBqPg6oWicqudo9VhhGoJkhxKzUoX2gCap2cndBP46PnYpq4Dq4koJoo7Lhjk4hdsL92MZBMn7tV46Uor26MlIDZsiZeBBKv6a92vnX8UEFVy/2LdQyJH+nThmb+KHHPOC+m4AaVyO18dq9fAlhmQ6+pL1R1ORBP9m5TAm98D/B3S5u4nGSwe2cEdTKY9kvAxmqZWHpR8hxlkd7pUVS6DtoaNoDNDeC+jCST87+VhXB6FiO3Xx9hqBhLpbXRLjZ7U8UD9+uQ0x0v5+dXvc8lg5fCBzfgkSyP3wY1X3/CjiTVS/7lKVWXLHSKTgsM86mEVG9Q6kfsoh+YEyOTfDVH2l0AkX4Lq2drHPEPYnf4TyHe/9sGoA8pbaaBFOxhMP8zz7vpqGyfcBsSJibulxDY+OU0SMmelstqejv45ZxQEuL7JE4SDKS1cydMXR/1HV/2B8VDbdHS3WlYfiY3EPm/v4KDUYC7N7METYXce7H5/Hrp9uS42dPYB9tfPpHQZ87WMh37mHsJZCh7bWxUSy/BH3qzd1xv7kIa7UzsZkCK+VWxUCNklR6+ijlYEAmFTdNAWgmGSmVJsv88rNEECZktpFglakBMMYli2pKVHQU8+p2HKx/MzyVRRLkgZ4CYY2QQm9QAcdWz+G9wO8uAyVoEQqzrTfrbuzE8CwPvCj3A0gs0eKqW1J6QoKjPZOi4RyCVWyW2UaOWB2UZIUzFJg9jCFajkAidR3YpijqUQEmlXqgWbMqjC7SzKIJmCyLwSUpb0Z+UL+S2dDiGDbfpHv3yQHzoAPb9tUzrFoDmQkP9mnZ9W48LKQLKQAcMlrPD4I5UTgAzkAJZeNa5uM/uOA46gAw5SxBoe6mFTs1Y2vqhZUJnziEx5h8utsTuEWC02S7m/cm2ahRZEY+9n/ATiTqrZZl/upR5JNQ9V7XZinmXFqk2M1kXpNwrgvrCbfe+Ax9JuoBxE6FwzAPk80W4YGFKXE7xkOBipXsqTrmZNDr+CX8MkeCzl2PExGx+gSiKcyB76yygd3dWoWtlQw==","layer_level":1},{"id":"1c4861fe-48d7-422e-9b1a-92b8b7a019b0","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"AST节点类型","description":"ast-nodes","prompt":"开发关于AST节点类型的详细内容，重点介绍ASTNode基类的设计和继承体系。详细说明表达式节点（如BinaryExprNode、CallFuncNode）、语句节点（如IfStmtNode、WhileStmtNode）和声明节点（如FuncDeclNode、VarDeclNode）的具体实现。解释每种节点类型的属性结构、构造方法和语义含义。使用实际代码示例展示不同类型节点的数据模型和关系。为初学者提供节点分类的直观解释，为高级用户详细介绍节点扩展和自定义节点类型的开发方法。","parent_id":"66345862-5842-4b9f-aea5-fef17844a70f","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/IfStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/FuncDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/type/TypeNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:49.4270622+08:00","gmt_modified":"2025-09-16T13:25:37.6312653+08:00","raw_data":"WikiEncrypted:9HSH6+Sj3YRj3ks5Bpq6iscu/dx5gYEs58vhlyo+HHkuTNkVWwjF9k6sy+KqXeGmXzOJ0qTjfC9FBhhlmi/V7z7NKHf103tQdPgTQ/j8/JtJKcstKJTWwMapEpi82RI2SMv60sFbj+mb4nEnOQ0d2N8N1kHhlDkc3Olaj149WkMktAWke/tUOqBnJSvY8xc9fmq3ZLiA2OnFjXEwWgW44reHstvLcguMQQeZm6VU4l+UFhlqyDeKe8v0GUoqd4LvUW9NqEcS41upBDlWBdOvKgUUT4muN3SzUILAopHLdbbsJF6ZBvWi6DUI6Iy9HFQIls1S9aM31TN7+Vm32RcXjOL+dmIRIesTmB9cENmBu8vKi165PkcrXb0FAkil5Ds0d5uKuYuK1980gbHZXYN96XfWVrO+3FcsVF8Csg+Qmmg+rP6pifFdK81/kpKc1bqzTxnS66XwB7Ri7aqZOT6BZIMO6medIUYvbXH3cWuhvDJNguRlkqWieMt7mzD+lNcFucmw4JjzVcohvMxJhvF/gOzUsmcxBqMNSvNuL8CpqbmmbedRcJ5Vx5+Fs8m6GUeom2GqVF+/T0FR3eIXamuMPemzEnP6MbxNSDkNIwCcZ7LXPhnWpmqB1g13+YJVDExu7FOPw/6HcGgi+6OID7qyfx//p2ohbMX5LfexifWhOyE5zGvsUGl/vVVRtcc7W+lFbWvr3E6a8sV3OVTkF0Rdj9MI02hH3NRfidexmJLe6G9Y2hHwx6qJoNCXu4jwzau49+RAlxN2sPIFbU3OUlFdyjGy+AXLFwJs4nhGfUED4KyCuoMYzJUnfRh0q1PXZ4+x4ZgsDyDZTiboE9VmStX2TMkt9jH7PnEAttRFxbdp6jPFI8pBzkvBolsFENpg3SdQgRPLKTtFQo8mX84w33LjnA4MVlbM22LEI4XA21Yt9u8PTxXHkptAsSw3esa61631paEQ4r3+AWnhiGHhuPsP7ggoBeMxLpC1B84XhQweV/AvjcWcrHmQxx2WHTpAFDpD76ztjcZ5eYwEe2NAbnmkk7xv53KlfLu8wSxyB4OoC0O4fEzfJ+rla+nlB6TMpGSgvatXdWZZgJCCv04XUc4FY4mwpt/eVoUKGDlXfKhID4eqfQ9RYwNlNg4p2Z9Dk8gDnLl7i6IwRe8sNVC9MUM5t/LAraqyCpmY6WAVnMtwmIe9lPEM+s+vU86d+wqJQipsJ5gP5MTjaX1FRA3+81atXDZnT1OBm2vfIkLhidSxNIb/XgnWQttSy/te0RNQQDpTevRhUx3O3IvafHYyAhwMMbJnvrHazTXUG26GSgM2WI754LLnGPCYwHQ/bCAcjtbsbVygGB1tKTv3+sF1aDbVyaf1qhO9ddLCTzHmWeMZ9nkdYaTumumNHl/1VVx3vLFvSziplYRh+QxlTRZ6CU6INreJxBrYhDGc4bo6pNNUzLVPofxBCg8xTUy/bA3zRjBuuBZRtHt7y08zXNX2a/B4DDgs/xfpHKJ4JdK8DlHTE9HNax3fPKHmZcP228V/EokH","layer_level":1},{"id":"decb1068-797d-4d49-9f80-b76dc1f30098","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"作用域系统","description":"scope-system","prompt":"创建关于作用域系统的详细内容，重点介绍GlobalScope和LocalScope的层次结构设计及其继承关系。解释BaseScope作为作用域基类提供的符号存储、查找和嵌套功能，以及Scope接口定义的通用行为。使用实际代码示例展示作用域链的创建过程，包括全局作用域与局部作用域的关联机制。说明作用域在函数定义、循环块和条件语句中的创建与销毁生命周期。为初学者提供作用域嵌套和变量可见性的基本概念，为高级用户详细介绍作用域链查找性能优化策略和异常处理机制。","parent_id":"59c404d9-484d-48e6-b14a-5bc14f06eaa5","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/GlobalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/LocalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/BaseScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/Scope.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:54.8671408+08:00","gmt_modified":"2025-09-16T13:26:02.124274+08:00","raw_data":"WikiEncrypted:b3pOzyHke+SxsoLN8IqcYwKPGrSmxLbd7RJKEtpr1hKRBkfZ7ra/rbM54/97+nLbR8xniK8VhGUcvLy8dsOxd7y14T7uLDGymIkIjpFq5C4lzOZMe3+Y4Ukcev+4tkUA3PY0ojqwYoMW/26Y/W2tnMvR13+UChDg5+YpvchBkgsNO/PQqyln2iqjuEjY5Y9b8c0YgiDL1y/ozKNQgd6qcFSZ8tBcbr3NZeNzkvRQDlAoaKrHvaL1jF2aXdB94FxzSW+3uCbahQzJLEjJQzosJQsBlZdM04nnL2iSORMtvAPYRS7r79KlIEt9ztlSmYsl0zu45dHUfAoAZ17CJKrTN71oBgwDD6t+/ooXeLpY0o5+KXNr/CblFNr3fj3IDMWAFXsErVxmgcVFhDnFPk00nB2AFzaOr3WXa3uQvM0TVur1xubOU5PubdKS4oss6kxDKZVYEPnBI2uCiWPBVlRihyZ9SQQi+dxVN7gfknMPLmA5NodpljsVotzeyIRUfDtO2I3d14BVwO86HPCHjtCaueXnHdT7fAMGp4SIcMw1tYHQNJo7bgXIqOVNwcMIEK7IC1kCGsvRxjPzA63yMIcoF96ggpzKpSQANaGscCoYmRGwHgeQ5MFxToWxe61Rz23rah4s2SzuhEMraUZrcJp6uG6H/PiZZApYat8imI7mVTy/G0tWgUz19KNuBUrF9sj/Cb6Pako5RVJI4fd7P9S2vuQEXL7fcjNURMhhp1+gmLR5rsdwI5r41F1467pV/Q+pUiwpH4QA5z6tkhDM7UJe9OnP7X42PfkRuDig/JlWAxvi17ZCnxSwm4/TwQ2hPk83DhXUf8EpqGj8ohHsC7dMNMn7CbBnoIdwzLoRXHD9M90dDl42npDxKknzBSkZzXdvn7I8OR4rTq5nQ4CW1uYp9pZBnytJ5cfzz1SvIKKiG2FMmvbt6qpswiSLEIyR/ssb06UA3QXvHC/+HeFhobzKSM314Mi5NCjOlA0oO63CM3H5fucTc0AYh/CxE8cLT6mqFixcJd8jtuTQlESJ6nvaZVZpSyRT/F63eBidjG3UeWoEH20LdNzOpaclgUr5mNf5N7Y7HLe11EmsfEl5peX0mQNx4DsiS65SOYCaIYkskRv7zNAihJF3KDyZRp5xZIolHU4Gdre+TDw47radqO0tiOeIom/aDMIB4FDWKYJQxYG/r8DEc4hy840q7wbCzrLb9qNvCHWf0ZOJQUdqFxMRjI20AnExU2lyjbv7ITm4ocrbML3480KFeZnLW2gCoPtLR1BA5vocca2rguHvPkE0OgeiacG/xa76poAx0wFtcST5UdeLDmx9oyccT/+d9IHxK2sSKC8pccC0N19DbwC31i2IOwBTsi2BmYZPXwxz6yrlcafTKPY3GxwbIv8QfRMlLNT6eUM7eOmF81eDQoy4JU6gPsI9cIGVQw4UAKfeKoPOdEI8sT9iMGZgrUW9nB0doHxTuq8CruYP8c2Ia5a+QN5em14HkH54cx8lmzWhly1pyC38BOGMqlCM7KZKg+L6DY0pL9kYOdKR8/oJUfZWEllm/Nz2VteAo5GT7QDZgM/be3SMaOBjJ8Il5WvHJpL0","layer_level":1},{"id":"245938e2-8d56-4e24-a319-c2c3f96b5410","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"类型定义","description":"type-definition","prompt":"开发关于类型定义的详细内容，重点介绍Cymbol语言中类型系统的底层实现。详细说明BuiltInTypeSymbol类如何定义和管理内建类型（如int、float、bool、void），以及TypeTable类型注册表的初始化和类型查找机制。解释StructType和ArrayType如何实现复合类型，包括结构体成员管理和数组维度处理。描述类型符号表的设计原理和类型唯一性保证机制。使用实际代码示例展示类型注册过程和类型查询API的使用方法。为初学者提供类型分类和基本概念的解释，为高级用户详细介绍类型系统扩展机制和自定义类型注册方法。","parent_id":"ac5bf875-9f29-42aa-a192-749af648a6ea","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/BuiltInTypeSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/StructType.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/ArrayType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:02.7169015+08:00","gmt_modified":"2025-09-16T13:26:22.5237675+08:00","raw_data":"WikiEncrypted:v7nU24v6M2kx2DIzA70Pyv2q6i7BzB/obrqqQpaWb1Fa2EOJ4gZKk+3OMBWwAQp3+dGGaH7FQmos6DD+dmj23NHVN/m4YKPjhk6YjL+nG+si/Q9FEmY3Ph0w1KpPo4Sjr8vwlT5136tBujcN0DUCoecxXB9H1Sx2lxTYrlGwIpvI0W50PUKJxTxTHWZqS6aWPsGfrlyC0v1RfMzRs5h6jRdkmr1mmvIxf9tBiyvF79eU4mt9wriJT2h4AkUbacnzMXbKLzgT5NxRr+4F5PBJaFrOkrFJ1TWKT90D4GgGTBcai6rWJijSmX9WIcYqBEJrb8pKfUjJGOwLoUPKtRp1rgVs3+F/XSSURgQFWOI/kFwxsb1qSpkjTd8PA/awf4akdnsrZCqplgIEYreCFujhfKwzTjhhm0/dqBhMj8RxsZN9xFAAXliiY+ca3vecfaAmaCkNXLuGT5uauSoMxmuWqM1j59M4YiOxEroBba+9Y7WFoHbjzxYXk+dnS4w4OLgA4QKvgVLcoOIlgFcR4/6KpqFwgOJqMt8SkXzpQIupZLdMWDRQ4b5CJXNj+eeYzg99TBI1rhm72Wfvp9HQ6f/DDOu682DHqyR6gEAvHOxc5iqJ9mvW3g9B6mEtqMnKPmX1Pn5tiYlmENNMcbMOYQLfp7S0SKBiOVNzntnn0uBjbKwIxNvy7CXqHdfWHU6yh/YNanHG5qmSSdu/PZThBHI7RY0H7KjDq+BePIzKTNNk68Jt+eoPk0GVDi7rW4Y/FfZurH+xy0Eh11NzAmJ6GXGwNjJCQgDl3uKIlheSpQtGLPEaH3E4FNCLJ7MnN5ZUdxBVJAhYH7coiFZo42x04vH6PMoY2rMmRFBKde+ZFl3mGmXIJcFKgZ+Y7g0ttoxztwRgKIa/Y0moLS1FFbRAM/L09A0XrVViGHuPm0abLRYye3glUHl9BqiucUtLREy3756i5S2yJFbhW3tP+jKwDlVnChh8IN9yrCFQ0huGHtURCc7o9+TpHUyeO7uXiOYfTEoQ6EuDWh37NR7bfE2UTYOD5/vgk4qvHmVp1r3b/FnpvUfVzz5KYUYGBOvIRe47ydXka8yo1hJjArHyQTzYuQfQuJoSCb9W51Mo2H9C/drCqUP3+GTlyp1E0zspXhbuQ9VI7qDTIhUiIZVoAetFuYXiq+kbXv1sCLj34RqdRsESwI9aOc63KzdJtJCOMGn0qG0phqSEe/7wbK7OqX8oGGVwKrt7O4drxv239JV5IIV7DYl9Kknwye5MZuSSeYZnbej+bRHAaekDXICuxM7SBlJtDQx5Ybm059UE1pHo3P+Xt25Q1tNmY1VL+DqjK9OoKMNPQhhAxWT/LMrOo6V/1tbXeSeNBKnHnT9PFojXvkrKyZz/T+OXJsGB8MzRPEutw3RFuyzAK+4Ov7dLXhfMQaPGsL9Hi/MMdrS30KQ3bpdcn2ubZBoiCOAQb9GyIbxaTJ3eiwZmL/uxCeSWKFL4ZHq8n55BsgVL+fDw7BNH8b4Aw7yqBINsv3Awf9mbPW95xnRccDv5qUesZdH0spt6al8W2CyKKXJf0jgtd1S1PvXVzvEptffBKd0QApfLLePJOOG2CuOj3TmMcS1OvF6VzematJ1fg5GOUywWrjF5JuckhoHJNDsJvcTs7TkSd2MZdmme","layer_level":1},{"id":"5e526e42-ebba-4f93-b071-2051aaf9d5e7","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"IR设计","description":"ir-design","prompt":"创建关于中间表示(IR)设计的详细内容，重点介绍IRNode基类的架构和继承体系。详细说明IR的分层设计，包括语句节点(Stmt)和表达式节点(Expr)的抽象。解释三地址码的设计原理及其在编译器中的优势。描述IR节点的类型系统，包括算术表达式、控制流语句、函数调用等核心节点类型。使用实际代码示例展示IRNode接口的设计和具体实现。为初学者提供IR设计的基本概念，为高级用户详细介绍如何扩展IR节点类型以支持新的语言特性。","parent_id":"5b067f09-3333-4799-9e1c-6c881ba1a4c3","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Stmt.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/Expr.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:06.3576469+08:00","gmt_modified":"2025-09-16T13:27:02.4866158+08:00","raw_data":"WikiEncrypted:5zsryW2FIDWexoStr0KMFYVG64DhoiL6adFJx9fmiQJarPbyMpBuvPHngc0zL1zIPBIf8eDvxJQVJ9k5ODzuCF5ghh4bbuoMN5wx5knlYwhTpHn+HKm6DbHRagPyYF7oWsSYkCa78wgbcQ1eiZshOoO7JnJmEPfI4qogmC9sDaKbdmeRMOlTuhvWRC7IqYuNQX3ZILXAzCmuVRW/+cVkobIZ8dtgCl8PnzwqvpbrXfJhCRhoEt/J8z7qYCCQx24rBMeVgU2ILNPOqOpUd3z4YMLE3JgkhhP3DLyuOlYcL79bO+jng8kfdIVFmRy68eF3I9EbHRqkbbBM/HSbWV/9ssvFQ6xBMiymPrT2pFdtvcwaiyMlHn3dDoKK4+aEJfNb4oL80brn1royWaXFFxG1in350M9FRq9+A0Gjx2UcSyxFl5M//mux14E+2AbZaRBqTs/H/ft1PWa7Ku3i6+aHC7pZJB6G9ocgUpyrzWmCsikt4MyCMa4ngHxomUNMQqefjiycCkhNBC3pVN+aP3s97vL1BMvd0FEAfyK1tTn2VAiAZmetuMH1vT7frVvpgtaLUcUdp4klJYPlRzl6pGAKOGTinYdCii3r4ra/YImBQ+cB7PUbP1Uco+lElamy+iDBPu/OhNjjvcS2y0rXm0ZANllcNFtNVPYVZ3OtXA6fF5iVMmPpIEwih74nOAIaG98LMJ6ntMhTUmynfMzDj4LnAuraW/SpSW7OWN6M2/mYiCj7+SXC4cWOSFG38jh297RD9+BlBnR/HZO/I191cv8YQKLPJrvqD4olDskQQxbp++8ajkk7mKkucOIl3GAHKCOzftwG6HJWlvCqCRNrgf7eTBthJd9Ej7UuUfALs8XGzQuGjcWrqZm+nnbzn17DIPspQI4+8/J+LGD2DduotgfxONk9hxgwThp9hDVmf6YwKh8QApmkMbZInl4udQz94it1RQyTHO7SegAZ1KLxffI6ZVMNKDW9ZfD9nlfD6zWfCsx7LVCufPrGcn39o1FHht+lB+mADppVPXCmczMoKWwdxKawsywMVaNuKa1gMxG4OkDmnkzDt/4NodrBLyekyVjF2IUUFPMBpLuLTlJZG1eJ+3JGr+QTXawN9ihRhxx+69fD0FzvVQodGcBjjtwD50skPwj1gOxGaMJ5n740A5fHLbQ5nDagsMmZaCgAcIFDZxqJ+Ufn0Cl9Vtk5xA3sb1qcVCPeqhCbEKhOSrudoC4+gl2JUqojGaQM0/j5YpTUbJp96VEQtUsDcLUTEinjj1sbgZxsBqXMUy8WrPuq40J3Fw==","layer_level":1},{"id":"c807c379-1092-48fb-a3f1-05595b9fda18","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"基本块","description":"basic_block","prompt":"开发关于基本块的详细内容，重点介绍BasicBlock类的设计原理和实现细节。详细说明基本块的定义标准（单一入口、单一出口）、基本块划分算法以及入口/出口节点的识别机制。解释BasicBlock中包含的IR指令列表、前驱块和后继块的管理方式。使用实际代码示例展示从线性IR序列到基本块划分的转换过程，包括跳转指令如何影响基本块边界。为初学者提供基本块在控制流分析中的作用解释，为高级用户详细介绍基本块的优化技术（如空块消除、冗余块合并）和性能考虑。","parent_id":"78a90da4-0651-4383-a60b-d0fb3120f02c","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:14.8076331+08:00","gmt_modified":"2025-09-16T13:27:29.7317338+08:00","raw_data":"WikiEncrypted:d1p4TGqnAtUiHitmFXVNDXdROkKA8/SO25FMpbMufD8ZHCcbE9uOMONXR1hq/OrUe6WP2Alrerfnc00fwIaUNNHyrAFKAgF4Yh0WSDVnXl8c35RrKtYXdODvcDv3LV97GvOy6tL9ZqkIBcfAOnapUJ17KRL2kgaH/vdbO+xpP4MXTqFH8MNlVF/3SsxNpMFfjO99zISsTfKLRxbYMmXULREcUVlmaUhD2U4aDqCDceAGCl2ahASDzjKVes3vxJMNqctbo8MRxUgCmp6gYk6aFBL2jcUp9Atu6JtE99aNSWow8yoa0PziY5c/BU7nl6Zuui5YyYcUAI7PAtpDwfKP6jXeH8OYjwDK+xgzK3VtaSp1Yg7zCYZf1mjummU3kJwOvJMhDlzQ4RLOJ/mPWncLKJpLIINcUaRdu4VQ8htVX5B3oRX/RR8bH6saZYenmZA+yTTyGTlcYqagFF4UxH6lGFPKkmQqLiOYgEqarGA4+Vg2Yf2vl+MUH26ITaU10PysqHFirl6w7+Lx36vfQh43T4s+Eqco87CvxCVB85YbAY9Qz7m+CFwilD7QCqihNZ5VQrkCvBS4Wk2e2Gh5qAy8XnT0lrn4GnEWwplgcoZnCO6X6SmgGyuaxqxcqLpkVlIb9XNdI7HSzKmqlKyx6A8vlSNO7g3BGMxGBNrg5RIs+zzrB9BWgRdZCuJAPJeW3ceWXWtUb1kZhOeyi0bQyMVOIJbtn4p0ovZFPkXHej8QJdOIUrVHAIbKDA/vno33GlRC1vPOhS/DuHS56xGm0NADfCC56u/asf36e49tsJ/kIBrJgb04hId7SGOBbvMgC6h8rjhPHz3SVKjoSEMg7NX5X1MFEqn1ScR7zTSDBc+HB/8JlOvupBRP1zY41a7Rvg6HK6J6HiEH0laVYvo6hlUi3/1BiTarJddbTrAxkGw+NbayuxVVMouD4NBIDPgnPWMmNoo6Tde/johwcGqyI6ymu423NaR6d/XI+VY8HVbi3crG9kr9HFTxoD+rzNJxl0iKKHxRuPq0dU5/PNxR+UqC37iWEj7/H1qEbEcgE84bJRRyae081NzZzvzx7TkwGTw4LUk3/i5AULBmdiJ42sBQa5259DSMRms7w0gIVbaBaklcCmqAlymSW4nL7EgY/Cu/FH3XORYpOHCUcvRRQ4g01NFLmUiID219+/P2ZyTDddzoN866VfIBbsx53waEaJeJrFAMFNCl0ln6D8k/RWAdxa/lmtzDx72NCIdLGrGqAR33vFn4JzxeNEiAkAUWUInCogvxc/BPFxQlLAS2Hj4fHXoN6QLPLMk2i6JI7Y3jyuSsNZFXklxAfxoW6p8Zjgus","layer_level":1},{"id":"8e7b9f8a-e4d2-420c-8a73-a7231a135567","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"优化框架","description":"optimization-framework","prompt":"创建关于代码优化框架的详细内容，重点介绍IFlowOptimizer接口定义的优化器扩展机制和ControlFlowAnalysis实现的优化流水线。详细说明优化器的注册、执行和协调机制，包括如何通过接口实现自定义优化算法。解释优化框架的设计原则和架构模式，如责任链模式在优化流水线中的应用。使用实际代码示例展示如何实现新的优化器并集成到现有框架中。为初学者提供优化框架基本概念的解释，为高级用户详细介绍优化器调度机制和性能监控方法。","parent_id":"50dac0db-cb65-44b7-8414-bdf4906d2e14","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:17.1572259+08:00","gmt_modified":"2025-09-16T13:27:58.5991494+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl3lPUMpNdx1kmDVaFEXPdSn6KRMhmvcEFPOSF7/uy4+AH2H6QgDfQlF97ulEn15Bd71D6TFjNU9GKouzhRDpe0FNjEEg88+YTeW0roXXsyYh6k08DarGhGl/VgZSE7HIQGtcLZPlnQQ/l8CkvI8r3jntJH8LG7flFFLPw9a2R5Mqk5+6xbwzD1agN7hMJJhqMuFjUMPEshFO8Id9ErkWOo1WVqBbIhAtPBN3rZYGuHhn3/dG+xrWm4xL5ULApW3OXciqaDtOszfZtZnexLJuHLvO/Gyawi4r0eDRkih9LFUqi599rQf3An2I4eiu/LE0zJrhyrbrhvgtqZXE9m5txTbNSSHKVBR19u7zXmXtnW5+Nv5WZnFVpZHsWZzCQfYnzS5DL99kloIaGTc4+MCfJvURMCQu0u6us/kjPfbWDuICxtJ9QehXH3WAgk1QjHljPJsvfWnUao3XZUZ1JggfIFLOMkQJerS2mEMFbB2jR+61Vb9UX3lgKN0ohgwzJhhlHrJQLCVLFYxRukwfbtn1Buh1u8qG1pcF2YPuqVPVj7jesVjNfIkE276hxPrE6HcUsMMY+Sp2DoNFOyCxsryX5uHvrZ7+nYzyQQBA2To68yKa9tAEvBizLcLznLh/wHwLp8JjGY6KlEYfT23BHquaFVX2rZZWYP0BpquVf1XJ+Nb08zFbrQeDdV2rsitUDLNtsOO2FRpFKTTFBy6LwjOtRzNRPd8EE9Oz8uIMrl4H3Pdm9TF/c1cSrSnpEIYtqkRFm4sB/tFjHaspNdVrGcFqO9Q3cMuvpkJwUbd5qvUSuMGmcfsSEzsXGdYY0wzvUfOkog55EGUDKaDMecnK5R3z6IP+fYBIRA0dpBbKAVcJ3iMXEuE7bQ/aToq6JT/VbbjZrLx4FrpiNx7EucoZtsZRBrPUsPULJyoR2+6/wqIeoP3S7T03cYzTDrzlhleLbhSaMD7GwzloDAoUXiieq5rEcXkhq4JYZ5TeQvyY0N13CK6SDX8u/qDaowZ3f1mRIC8v72FrB6AhD+SkR/zLfhgJzSwIF5NPIEql3zP217/5YgEbR8tIMydnVIJy5q6SosxgI2SuYL1Ao6xvl8Oz2GeSN/dI+26taYg5YR+0Y4rwvRh5YjpF5CYLcaiN+r3zHXrKJVlH9jFI8C++SdT5atvlnuZL5nYQxSIRRQphXuQ9KeP6XCH4JGkBNnPkluyRnlevJxmesMWHN4V12Bpk5lkChcruEGZi4uGEIsykPZ4r6v2nVI93z7egQbnmakqloiPGf/AFQ0HlClH2Jg3YzLqmUXW4OL9Zk/0/7OCGOrDZZLpmv5x1XAOIWOQcZULuoPZ/TQ==","layer_level":1},{"id":"ad8424c1-b4ea-487a-a8e2-393a2bec58ec","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"虚拟机指令","description":"vm-instructions","prompt":"创建关于虚拟机指令集架构的详细文档，重点介绍栈式虚拟机的指令设计与实现。详细说明BytecodeDefinition中定义的各类指令，包括算术运算指令（ADD、SUB、MUL、DIV）、逻辑运算指令、控制转移指令（JMP、CJMP）、函数调用指令（CALL、RET）和栈操作指令（PUSH、POP）。解释每条指令的二进制编码格式、操作数类型和执行语义。使用实际代码示例展示指令的定义方式和在VMInterpreter中的执行流程。为初学者提供栈式虚拟机工作原理的直观解释，为高级用户详细介绍指令编码优化、指令流水线设计和性能调优策略。涵盖指令集扩展机制和向后兼容性考虑。","parent_id":"3bbd7f64-8bfc-4aae-92e9-e662fa2ec09d","order":0,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/BytecodeDefinition.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/ByteCodeAssembler.java,ep18/src/main/java/org/teachfx/antlr4/ep18/VMInterpreter.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:27.9493434+08:00","gmt_modified":"2025-09-16T13:28:35.5518496+08:00","raw_data":"WikiEncrypted:ZPk8abBjeyXnp0OisA6w/UhFdDP676pwsA/oy7AAVEjM83wLbc7ogrl8UZ59I3MGysRIjDJUyFwiyPTmDp+920weX6aown88I5LF69J5/tBlpZK1QuZulez+bGUxaNyGiuw6hQA/IHbepRmUu7yxeTLL2jvFMWvXHF9Hfcxr+pWqsLITJrOkthy1YZsGAxxxTVC1Xb2l7NIbAxsETvEnK+6VHprskY8LtbHN8BWIaDbQXPLPdJmNNgibInEU3rWk2ZydwBXLKgX3+n3RSG/vrzBoNl/yYM/4K4bhfsMkyFE+aj8de8BPL8sC/zvYbsFUBu+FBEHQOG7HOsMi2g1VmLOfLIR49TlnDPP2vsJoEfOeTJr4IlVM5v0k5zn40cpVua55flyYwL2trd5aIdgAHkrU1we+zdF1dHGvWroXGJExGVCi+bz+bBEQv465qAFfqIm5IBZqgLjY8x02GGwLsXwW1uWj+dRgL1hLgYks725egcsjBR3JjCFwR7GsaJhOqnjBTAdtK9WSpP1YCwM+lFVVKCzI4gI4PnXD/yucb6JQknYIx+j9CWWzjveED8oJvELGXRelPuAId499YsZjOCWOLECEr1emP3r2ZXVYdGIM47Wq/34bgJ0Qg4q5OZLSmFZykSRnK0Mli9U/EnKPIdqhjA1vQvCIUa4dAIvgeqIRUH8pTDLrGzr0PMaGTB513k0JE3GBXHDTxN8EH0rxGyIsvb6QYwFmotAvK3O8IJMz1OT02zTunQP0EpxzmGervX0g1aecB8Tpu/dKjlyZF9csatHEJBcpdseJmdPeZUxnCu5e+pdLTW2DTFDlppm2HPuX+6FfZcA4GAoJ+Qq95DuRVapZNeBkS5dkUt1DZ+sFGB4I3vlnHOHlhRW9IPA0H/BiAMBKpSxqUjr1IYCtHWFpfjAUuTpmsUBOpR73AbuVEQrDFi2AvYu798bbqLHB3h5PkWRxI31U8TcYSWK0CT5+b6EFX0974Tgr56ifr4EEoiq98txxjKbIikYG1skhwMkBnqKYlLqrtLl1tvlxAbOuxcLYNq1pncYLgm/mSDs/80Cznf57fU+GrIEQjE5sa9bK2bvfGJ5VjjE0d9soUqZWibkyZzux2L7jy80kU5K7a/ca3P3EtVJuZ//Wwfn6w1vKN5S/5XT/yCWFYA+Bv4w0pffOZmoa/NbWaU7pY+m5iYRrQGrLVEiF9BsjwuziOjniqLTkMytqyYddyQJlhy0qXxKUiuovSLjN24Zz9nThDJ9esjSMleqInAqC1zvHTlCuzVVOx2mVe+s/tjVNcVIkMFjKp8I9cWD1uSkJ/t2FVR29rnIoY11elZSjzf/utU0bplEgASAL3DDiI2gFUV5sILLtE240Regcsdq3KY9B9qfNGulvs/2lPjpRg2yc8nDCBxVUblH90HCYpwPIbE6ReSN4Vqcg+5QX2U02V2co49O75xGBGp7xKtnWbJiEmnQQ3afl7tW6k7phuDLRBvY3xABntM3146qk/DpsjdaabCi5NX6zBL4fVUbrflz6Ug8B1zqG1lwozrVVI5KCu+A70c2P55c8gh67WoUBEko=","layer_level":1},{"id":"9c017d00-905b-4e0f-bee6-e238384fac60","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"单元测试","description":"unit-testing","prompt":"开发关于单元测试的详细内容，重点介绍如何验证编译器各个独立组件的正确性。详细解释TypeCheckerTest中如何测试类型检查器的各种场景，包括类型匹配、类型推导和错误报告。分析LocalDefineTest如何验证符号定义的正确性，包括作用域管理和符号解析。展示CymbolASTBuilderTest中如何验证AST构建的准确性，包括各种语法结构的正确解析。提供实际代码示例，说明如何使用JUnit和AssertJ编写有效的单元测试，包括边界条件测试、异常测试和模拟对象的使用。为初学者提供测试断言的最佳实践，为高级用户详细介绍测试覆盖率工具的使用和持续集成中的单元测试配置。","parent_id":"eb08f896-393d-441b-9c1c-d66e63a49069","order":0,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20/pass/sematic/TypeCheckerTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefineTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilderTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:30.4383403+08:00","gmt_modified":"2025-09-16T13:29:01.5680941+08:00","raw_data":"WikiEncrypted:oQ7VNoYBl3ApU4O5/TGa/YEO9ObmRNw6knddpSF6M+qfBokxpt9FAn5Oh9wXkjVweu6TpLk0XawcRFRcQ09Zi11OH7eEF7UJpscAlSD47IHPsFGGo1/QAVZgsK9wXlvUjXkZ2jCMxbovxlZepL4x4PwvCuRI7s0JRoF1BEeFGFMfDY5vu1sSiIUVBzLfomaKFcYHfiQPYSljbxhSiUoeqYt5zu9y12PKqW/Y8qM5yrsxX+Z/X+PEYJzVH+9lxINJh1mntCvH6CpuPccVtyAWjFs1vZvjWps9PjlXbFVcyUhvtztZxEYLLaNqn4vLfHAkoCfyxYyF/0Qfkyfkyjmf5W7hM0wt2mN5gWyRUNyEYoO6LqA0K3aurZFPoPX2xtBR13knD3rp7jVY1yXUlR+LskpZB1YuOQlwvTToZQn3WL/UV7d5sk50Pd2L1gHR8hU5AQ4NQMUJ9o99jLRH1XI6nU+Ez7mLnk2IBwJBCSsyGLvF6FAdFHwLX0A8wN3NlC74PmBhEKTF2A1yPOaNhjZ5wDwDE9SVcgqMOxpRAXqqjLvh9lb/QpiDgjh5/wzOm4E7KcLOUQcFLl/1W8gst0zYWZoUIusgRdVAAi6gA9BhvvRUkplKlIg4UydY+EIqL7JHPKmXMUqe/IEXUmWQS2BZBI+zYlC5mGqLBybUEIUI1I4Y+F+P1fPReg7C6aBLlpFy1AXrz6gk0UQRQVv1m/ASJiz/5Y8bYXIHmhz+pNDx8Ag21Y3r9PDpvE/WOUn9zJ9r2Q2tb/yoO2LdnZrcUpj7BtbcEz0R7Sw2IkjSG0pujSTvLe9zoIKEy3K0zeKqTvuEZ9tkDfwlV93YqNxHn7g9ikdRUOxQb7qxn2aFKWdx2P0CU8+zPkKJ2Lb2d6h1ppb2a6DIWW9j+KDYQJ3hRu4taHeWc8WMkiIjnghHwK6moGQWQGH3+u7cpldHqn3oz1vxwTEZChFxC1MSzXVb1RHEyQY0ELxSzywDwf3FekJCm7HtJjJNdceuNbJjRcTLj/rSSmI/G4UsquepD43jPo4P5WVjWzXlGOipKHSekJMxGvQuSYtcS88Vfyxk4WNVKnjgrLWdh3T1pJR9u2jiuiZ+ZK1sx3vgDoLPRUgirYwP1pm4g1rRLtdfZLMwhIT36zEUIsQLvB8QWeSh6zcjB0Sq3IHhiyUEHF2mMiuZh+yrn4rg4DOVeEhGrRCDwEBUaK6vzGk8+Zfu9Gin4CChWpnIuqkfhaqX1q6Zs6cDqZNxMOAKucfyU1LVW4ImaXKbe2UA2fLxXxPgRhSLp80H96oye4VNPUD7G7Ym61y5lyYPhpsR8YJKnYc6DLYVd4e14GEAA4C3e1k4A4ELw9g/z1biAYVgWfD61X6ufLAtVux7RPK5H29tmADojXpusBf4+J1vgi7/66zP/l/TSCLIKgH+iKYZBytY3dcLgGlnjGFgCvuB2xo1PuroI4zDPGo4dUK7ZvkIj6Ss2lsGNXqoa8hRhAiUdR8BkmtCPng7B9/LxDGMlvM77UloT9y8iuiKbGvGnrIS00aluz4uXhFexfmfZhZKILAEywD6Qf8UmbSznHzGHJ0Whgh2tfY+5JpG1EqxDyLu989bQNIRMCPsJskpcfyN2QLH6Rr8m62R5VFAfyE=","layer_level":1},{"id":"2502eb39-8ea0-4e6e-a412-61b8b06c9942","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"AST可视化","description":"ast-visualization","prompt":"开发关于AST可视化的详细内容，重点介绍Dumper类如何实现AST节点的递归遍历和格式化输出。详细说明Dumpable接口的设计原理和AST节点的可调试性实现。通过实际代码示例展示如何使用Dumper工具生成层次化的AST文本表示，解释缩进、节点类型标识和属性输出的格式规范。描述AST可视化在语法分析调试、语义理解教学和编译器开发过程中的具体应用场景。为初学者提供AST可视化解读指南，为高级用户详细介绍如何扩展Dumper功能以支持自定义节点类型和输出格式。","parent_id":"a9387ff2-2f30-4362-aa92-c7571e48427a","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/debugger/ast/Dumper.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:38.5749749+08:00","gmt_modified":"2025-09-16T13:29:40.4811611+08:00","raw_data":"WikiEncrypted:dXDsAbYfYn/Hcz9i+o5IMgEXoUUV44GISl7DOkCiCc8ilEpsbNs7HO0Hw1pQuVXANCUVMXjEfUd5EiuFy0YDI9hWJlkMDRF4Nzafz2GiQyVfXhybjIHu+BJNE1f1O3xlV7bk66xghRBnEcypDCLSJDSlyBG/a6PJg5DyKSkDiivh0GJPc6j6PUlWd3Vq4+ihOWXdWbAgLvF+1RTNQQMbTm6GLb4Km5i/JQb+ehBqrQvzskh/z3aEeCa8yvIBDJ5/DdKua3RovYj6ZAJMJ5PZmKkIOy4sIGioVosYiRz6k/TpLfbggpQ2Wvrs5XGWZbE9ndDAptFHhSwPY9TzxBxuwYEDDb1HLJSc7Iu0hUdG7jvqpCKzgWgUSXfx3DuclHc7W9WNwM0/0exTB/eahCSq/vD5L8UV0xbg1ZPvnCX8Tfa5AdTY4pcc2tkhniGzXqgK+lOdBNCDT1sBTseKaMIzdJgTqA/Jh4axUOeYr6lZJS51zHhLX4sNPk09pM8O/h4Nn/V9TkCjd33Qt1tFeygwSsk2JLIhBl9RNfPdSASfLQioFY8GHFuyLmEkxE6/luRYuDsW9Uh4berR/be2XjwnZCuEof4BlXJZHFYK0+b0WMbUnqmzB5R2fz+cb+v6t5Z2+ZAUORZug8us1j01OHyM5DpJixVlXqm+0f0GSiqs69XqO0whDccyGfn+Iy6tIUUqAlxMS7305ohbnkyDgmOuVYAsqSas+Ekl63tGdzw7hV1GKxUIcJOn1YKJrNTgyacEcJctkNUhXrQ5EWHqcZbmro+mMuRQ7lk7j0OSqvRu5suNo/okzB4LBgVRWZmcwtnKgir/BnjsZGQDCk4uPIQvEp45akkE633urqt1fnjIf0hxgmmJSHl1bHeKT4tmQ/Pz7Fzdt6V/a2k8tij5S1h/NnRBjdRjcjKXxclgzkT2E7sbSxHN4/C1fHJ85UWydICWPNMBO+aZdHnw9EULpKC/0CVw3f/rlVsGZ1vVQUQzWtf7A2HggqWPM3GhpSnDimEPgssoSTNqEWUhNjI1t2soLbgbUquwil+2dvbScyiP4d+grToTwALGR52mF6f+nzoWnpNB2UzD/9jmuJSjV1/IrP52gFuXoWXZSQX0ZpMmVHIYK9Q/at+bD+Y7rmka6aDH/WwIL2Uz9+U8PXgikTU/swNp6N5oT/bjHGwhFZkQgO9jWJoaGzuRxEsSjLHsvJiBdy965xktziOVDtrgoisulQ==","layer_level":1},{"id":"2f45dbd6-0f1f-46c8-a5d3-3382ff22fd32","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"架构模式","description":"architectural-patterns","prompt":"深入分析Cymbol编译器中应用的四种核心设计模式：访问者模式、构建器模式、责任链模式和工厂模式。详细解释访问者模式如何实现AST和IR的解耦遍历，提供ASTVisitor接口的具体实现示例；阐述构建器模式在CymbolASTBuilder中如何逐步构建复杂AST节点；说明责任链模式在CompilerPipeline中如何组织编译阶段的有序执行；描述工厂模式在节点创建过程中的应用。通过代码示例展示这些模式如何协同工作，提高代码的可维护性和扩展性，并讨论每种模式选择背后的设计权衡。","parent_id":"51290a87-693d-46e9-901e-7b67ed62e6c1","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/pipeline/CompilerPipeline.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRVisitor.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:45.0300875+08:00","gmt_modified":"2025-09-16T13:41:57.8040124+08:00","raw_data":"WikiEncrypted:EPw1VhZSv2AMLpYzHbCG5UqKlWf4bHxtjQmH0uHPA4Lao2NdNiSw7pZIHmc8LCoDEiZha/cTlnc48lxXIBQZN5rpQMrl3tiTrQdtHZjChxI8W7CUUDeo0RCvXzgFJq90RpVclemh0gsTy+kOYLoabqVD673XBKWdP1SGF13228PygbeUAMcb1TiAbLLDwPPrIGK9C/v6sqCcNbTm2Z4ye+XDnZdaSeTexFJIjeQMR5TKCZ9pJxM1xDhB1aueL7b6IUh3dny+67QC7srcwqnHkxB2uLf199q/bFouUd4v/0u9b7pSa/tAfrCugHb/PEIcHab6y3k+/3p2aGwOMlSoy0uenUzm50JJy8b7Iwo8AsEJZNQ1E6IoEBzkaKfXZ+jKc8FGWC74laqus0Stgu7/JTmF6sIn74qfbLTvs07jHpBOO2GOLtx1JVhUxHIKlv5vItok/xLkIfZveV/hqUj+4HhqmCe64HAGROp76zHXDHWaK8bNPwtkZIt6NXqRs9ndpKBbUBZDWKGB7EGd5f1icbANYevln0F1xYJP71XhtU3GGZpr3veX/pyaVmBZwraa8OkEm6+t+jlQuPv8l2tFNy4riwS3gT7DGMt4AO3oqKHoeVF0BEzpqU02mpVk/vpj2Vrf9Pbq5XwJf0CnnXOwLiZYNq/ITC+csZnFz+jlxdSOkfvb2T4wOjBL0Iqc5oitXdoW4BW5NgZSxbZop0KujQenjodHHvjeLR/5Vv4ozmecMaXYHs25mcaQJ9mBhZIhW/dBr1uq6GOGNXzIpvdFALzND7NFHYSND0fAPTEhpyIGXSiQq5gG4018+6MTgui9FiFlyC5i0sqdI2VSiIsJIWcko8DCByqUskP00WCFlbEXQfir7yKlEAJgKA+xqYCYPhLiZKqTDEMsd9+3y1bm7GRlcGct8RwaRYiqNAskM+yw9ZfpOVPStAWASJ9MqGXN0jbFvvd/LCqbhKzf6tl7fvp/Kx0NHHJ13f4O5tCYzinuY7Hio7m2C2xe29mtA2P1WdTNlstj9fhccyhNXiiysVETuiZn972wpGUEzSDQ3ezUvGrnKXcVULc9KejxG9yM5iM2R+uwdDKZtXmiOMN3l8KIgd6lg1CJKpYgCNvZBGUGUHQ2uFe3+EYnOUEPFRfeMRSLTfNwgxV8t6u5mxUnhryJjZrfpbkyToJc2qU4ssIu5uEbhvQ0WUGbZJm6FB8zzSI8Gp1xW2MsC62C1yc8FK4hIFyYNgjbONm8KUHzfsWdQ5obcphD0TrO8W7uGdwyrFDz+UkMy6T6fvSjrdv+qsWm2afV5qmygYbUi5+wzjwC35B6piDwgDtv+ZalPFuvttwwZdqE/zKMKn1bh/hlaIiDHqX4VD5EMEhi07ituNKsPdF1DxHV1tmms1TQRdEEbyYu++5DxX1p0e+gxc8U4almgcic2nEiETCmDCIVmKOkzkA1qg/CtWzSEhfEO460Bd4YythuKV4RFurO9S4uZuh34NxudAqH/POeMQ4qnN1x3p0ATIPt5HSJzQ4aP1bsY61MpXltja5Pnv3U8lUkL5ltUW8r+ne9IDCXJ5+7M4jqcO/h7WbYfr98Z0hXsB9SsHUDxCc4xVyC/2eCH+4xZA==","layer_level":2},{"id":"99ebfac5-23cc-4f41-903d-c0a8ad91b68c","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"流水线机制","description":"pipeline-mechanism","prompt":"开发关于Cymbol编译器流水线机制的详细内容，重点阐述CompilerPipeline接口的设计原理和ConfigurableCompilerPipeline的可配置实现。解释如何通过函数式接口（Function, BiFunction, TriFunction）实现各编译阶段的灵活插拔，包括词法分析、语法分析、符号定义、类型检查等阶段的函数式绑定机制。结合代码示例说明编译器如何通过方法链式调用(setLexicalAnalysisPhase, setSyntaxAnalysisPhase等)实现流水线的定制化配置。为初学者提供流水线数据流图，为高级开发者提供并发执行和阶段扩展的实现策略。","parent_id":"cfa29f6f-36e1-4ac9-b678-232e5fc8db68","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/pipeline/CompilerPipeline.java,ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/ConfigurableCompilerPipeline.java,ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:59.5189031+08:00","gmt_modified":"2025-09-16T13:42:00.274791+08:00","raw_data":"WikiEncrypted:oxtugALaf4ZaLWbA38Iyv/oQ/Ebfj457CHiDK4/rCbL59mAsqIHWhOpsAUSMU91UUcJaEVq/BpcDlNeyvVIuV+biygYjb12wgaVnhTXz5eBQmvGqeyoJADhQVmO9RQ3zv8T67Te6ORUrZ3iltHGeYAMTe6lPGsJbu/a0OruuayQbXmeUt0BPqjiKc+8G+oeKN0+TziDXJlZM3OYaxyOgQw1dpvpfgVV+odprCEEvBoWLql3FJ/Y5aTFYtVzpykyImVUY1q9072jYAbMroO3KV1q+16RbL9FNMQLrM/4A8l8jHNUtHUD3k2FB8JDLuLlYLorNc8TxNFoR3P5lty4khf1HiJJ65yutj2IgZc9LA0zp/YNg7mZQB23ZlzW/T8Fu9CUtPq5SVWFaaeJ0uiSsDwE3H0NVm5AI20x/syNBL7n2lQkZyCfkW5Dcvkyy0DIMZFtN3jKZ59wuU5rLD1e789dkABHH7WoS3rO097FFRel4qqLMo3u3PI5/4AGDYY5vdDXixIivs1hcnb6i6SfXqpqsqjob1XV6fwR4q3TfRy1i7XJiHUZUN7N0VgCFrlTdYQmZ314+7DsVReP0jMwxAUaUnLvNENN0cpZPvn4xyUsCud9UxqAniE3gfxjOmYcCOprMIEVjZEu6hjUghMYWF5BZBnQKSyckZ/KfFhk+fhx/6Dolde+57Tkl9uHhZ4HHT3zPDZNYPH6dn4nvRkmtzpnp1yfen0t8HKtlzj+GMQ0fVFre2u0a+wONAv2GyID5GvXYaXhgDj+O4T4ZbigSm9HTe1oe8N/uTr6aSvnrudK6Jg+NXAAnY5w8DSC3SM8ymapPWdLm1NBsBQuWyZLMhsJsh44ZrAP0iKcE1LpGmdW3Pkc3CyX/xB7FkO5c0nXRGX8pEfcMR5L4hipd2JlvOHYFk23ARnznT+3IJxsF3rwpD/brPJ1xCzd6FBVvs2+n09wEzDJbyePPmkHaIUWW9FzhP5NT2K/nVmCo5s9hPMu59sjCUOvKPpnJGyogVPgMYTrwaj3rNG/ECvPynP5BxtO4mOFikc9vaotkAjqwdPuNxGigNJ6rW+/4yIUDpOtXwJi0NJg7vpKxcT81jX99/k8uiaI0N2fk7BBPPtKXfOhj2NWu0GFvfBZU/D+8DRbKDHTRtWGsqjbkUh4BxaTQHa5zT2CoQPy0WNe3W2QrS3sOx3m8VEeqh5jlE+fiBjiPucN//DDBKAU7+kopwklwrQ1nQSGBQUAMWOxltv1RyV52uAGzqtzGlUjuvIT5V5rJdNr+y8rt2iBvjggicgBoYyIS7OynPjb5N7/PbeHLJDd/1ccTPQDAeReV3LyoP1QfXB6Ep1J6B+nwx9BpZPHtYBY2eHSgiYrCVwnctbR18KC1wvUif5W+ccBO+hEz+3XqlgH1HPCaVcR6iS1o2MrYoTtpNK+fvic+qz75RjJNTvNXFeK3SRLW+7JkxZgF0QEgmRum5fzxSWaKOkYQpp4a5Q+kR0u2GQmenB8mLRcrglQ=","layer_level":2},{"id":"fd1402ba-850d-4495-abef-d9ddac4538de","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"核心交互机制","description":"core-interaction","prompt":"创建关于编译器核心模块交互机制的详细内容，重点分析基于Task和Phase的编译流水线设计。详细说明Task接口如何通过Kleisli组合实现编译阶段的链式调用，使用实际代码示例展示then方法在编译流程中的应用。解释Phase枚举如何定义编译阶段的状态转换，以及驱动器如何协调各阶段的执行顺序。提供序列图展示从源代码输入到虚拟机指令输出的完整调用链，包括错误传播和短路执行机制。","parent_id":"53669189-b6cf-4d63-b11c-3fa5fd06fb4f","order":0,"progress_status":"completed","dependent_files":"ep20/docs/module-interaction.md,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Task.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:03.4530235+08:00","gmt_modified":"2025-09-16T13:42:52.7309235+08:00","raw_data":"WikiEncrypted:NMpG4jhY8r9zsYBp1pIpUwG5uHjzXgekX2LPLurG0xKtEwJWZAHPqwjUpFoRx7jf8i+TC2G48FvQ6jtvX0x9jBY9sqOhGIjA8SqCHgqJQ0GjvgRqi+mzSgADSFiWRQGi6c6gyfyEXFM43TZxNz10KhZEpPS12R1WZSCY9VvGdSR6dmynBXGFeKtu1a48N8Cvw4/qv/Sn49t+3VgI/nvO4oLTAlvC4DpKSbYUkzAS9K9eUbRrkMWwmaRUz0CaAOgtYrCOCxLCXkFBmzW7tzOo7UObypZH+zDW8oNO6rHHJq5NBhVkrf/JGMRi+M42Bb25NLX7sksDbvIURs40TenHKNaswfFTLdSCxnqzWFP2a+HEwnifBe2nP5mRm0gXaoHGeTUCkQoYOOXf0sy3Z6XqXrfydc+YT9RTcBRfTZOFCAKbrpHrQQPBJUj6nJvXqgvB/4uNAzciSlk73RerAxJ73l5Ub7WocwpvFWR3iq8o74DokYietxQfXIAlS3llC7Eyh1DuC6OXtBKFF0kQ2tapRS5ODAyf1HWpzP85BKCSAZFMstOx3eAPfDL4PsqohpURp6otqeNVjchYf2MYZC7jN+l8BdxVx0/w90UP28Rm9JBUIOPOOWQkOXVJ99wQcFmqXW7x3s2kU0iSOlxwDqreKTPV4TpjqgMmV3EyDeVzvI6DUvVR3sUUCgxrsJ9scAbDRy3bUrRaEbdkJqPfRZ3Y7FwJIemkRpl1ydjN2oCIouvN68oKwCPgAP6eSIwlHuTNvcbGHSegJ/KRFCuIAaMXDASnWsQaMX26WLAbSFDNgtt5Rk9Yo+M/rOyprh7uoagW43pcGAlwQwPFTli7NzUwQcY/m3VhvyaHEczgDP1/OwveTYD/v/NlEO0pX09GbJZCQkNEKeLu8SEhCxqKIYzolrlUAhAgqKkgQlgbxrPL2QbxOMDuuNS3PkxEbjA+hpDzD+YlAlNgT4ViduEcVKcWXuqaSr9zWtdMZE5AhZ2t3Hu0/uTnZVTOO6jyjJQO0AcSbf1dCIODKcRvum/FD/GHDkKPNBcn+tNRsFnAQ/tYnGI+zhcYUkQLooPc842prsT9IMd3pJVxUU+MJKnDn0Amx1LyRTx0RYQAjtMCu+xn2fR90/zrQz3p+AVxmdNP0Yc0clWdzrPFXwbh+XMQ1ysHC57v9z8hgU6uGcBzSUz/Ey2PvCth7xkOqWYVS5fSkydhHI64UQP/ympToTV6bmY+/7SNOaSJB8JgDVbrYu9JOPI=","layer_level":2},{"id":"dd3c4253-87cd-4ce0-b4f0-7806e8df4858","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"访问者模式","description":"visitor-pattern","prompt":"深入分析访问者模式在Cymbol编译器中的双重应用：AST遍历和IR遍历。详细解释ASTVisitor和IRVisitor接口的设计原理，展示如何通过accept方法实现双重分派。以CymbolASTBuilder为例，说明如何通过继承ASTBaseVisitor实现AST节点的构建；以CymbolIRBuilder为例，阐述如何将AST转换为IR。提供具体代码示例，展示访问者模式如何解耦数据结构与操作算法，提高代码的可扩展性。讨论添加新操作而不修改现有节点类的优势，以及模式带来的类型安全性和编译时检查好处。","parent_id":"2f45dbd6-0f1f-46c8-a5d3-3382ff22fd32","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:15.6111473+08:00","gmt_modified":"2025-09-16T13:46:05.2054555+08:00","raw_data":"WikiEncrypted:dF8BSW7cEiXf9j2e6Ei2PuP5TqYmi2U96wG9xpYslcOrLMvz9Emt5b15KnLHtYxcc76POJRMGagH9JTDinpBdZZWzdJDKcAa7dyRR8mmLiybQhzg3u7ubClyf82USm/8lSt9bzkwb3fTsqaRAHmQSj7jLHwJ840yTmdhHP2Z/Fl850Yg533KMs1jQoHqgK4py4a9AEz/YyTvkjIQ4hsQVTsxBi6t6s5tMlR34E0CZsDiXd5GIaRM3h6KH6430BImrHqvGEUfk4qP9NFocSPeY9MTz1N6FG6tG9e9Pz+GqHeLd4Xi9ijStiyZmvxfSZAGNbHPjnCBzzviKpYNsEjlAO8y0XyyeYFml+b4jgYhana3MDJ+D7fJ6UDRs6QVHwmCh85YNfNrJNyDN12Ks1R9uE6wyEpmgGPKfVDFiJd0dUI/1L3dl9i8fuUitGhyKkUpJmPxveIx5TWOszCPeA3nLv+IKtSrLM3FZoJhpHErKBSAX5XikKogg3ZfHFSCPKqu9RR2ePngPZYedGPu4hWNU1O5+2Gt8wyQmeqsUe4H8z/NGi76h0zkcXhhknTwyXP+0Phsvxf/tV43pPxgUkhI4QMpagui2NDtIuC+ZXhGNm5KdviiqH7eCbAiEm74mNgk21Qu8ukM2PBGW33zq/J5+ISs/iYI7so2kvXhGgrkcKvPPiS0eH1akPzMeuqtkq4/SHjNsGVf/v2v1ybPEYmYWGqg1gGuLzR4zotQJ8nG/RMu5jADZN1cEnKuK2IiA9BdhnS6W/6gju1LPh+PaGT3AUVk91X8e6DjVAZ7DzA58LVbShtZj1BN+9i4yaxDOS8S6xtSn+Z2iPlEQ82Sd4E7j9sGwx3COeOawdpOKMXfzkPP4EAcQSn3KSpO+XYnqCGIY/MUoTorSK9eKotMOWac67iwCLaX4Z41d3dXdlTGWtMTcws7MHW/6onxxb7tm7B/Cwp8SYsbiJmrk/+I8lU8BaXBxSAp6y2ArbrbURlvlPpZoVDOAai1lTlWBDeHuPcK0p6bw8Xlc1b+FLJlcIZrAmSwSAWIFjvBnVasuJcNg+yhyF/wEzFlCHhmtNK/CVofy8aSg4XshZ1kZCRa2Tmy3uBw1qDKALGVM5vb/A7nmdJtmobSoEa3Xhib80EkpfX8rdFYh5IzEtfm3bI0axKvCuAXqMfXJl8Hv0o3v2WW+L7ORLmnSNO6hqTmQklrwVIoRddj2k1+IECar23t/VP57TM1CBYwhIFCnerm/G4TlOX22RKnijLludcsOvi66B3zlmO8CIKDGX4h3h0E0cklodvv/TZzKgtOqiTgtpbH6tqZXvhuvC2kguQ7t8xhTbUuqUt27N25Bc2NpDRxSo/QKiKZJ8EjSHtmM48L7M+1HnIkzN7GB9HFmVGpjsFDtva7Mxfgguut5qbSOo5mZ49DoE8o5ltsEhcm8osXk62jdYZxkdLTCGagoBcAGVmKQF8Fx07XvjFANIBQtikrPDD2kQ==","layer_level":3},{"id":"6a39bdb8-c2e6-4956-a0e7-61c8c5e040d5","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"词法分析器职责","description":"lexer-responsibility","prompt":"详细阐述CymbolLexer的职责和实现机制。说明其如何将源代码字符流分解为有意义的词法单元（Token），包括标识符、关键字、运算符、字面量等的识别规则。解释ANTLR4生成的词法分析器工作原理，展示正则表达式定义与词法单元的映射关系。通过具体代码示例说明词法分析过程中的错误处理机制，如非法字符处理和注释过滤。分析词法分析器输出的Token流结构及其在后续语法分析阶段的使用方式，提供调试词法分析结果的方法和工具。","parent_id":"7d62c5d1-2817-4702-95fa-9504c6155b24","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:20.3095988+08:00","gmt_modified":"2025-09-16T13:47:12.7239062+08:00","raw_data":"WikiEncrypted:Y8aaI6XDPFZymR1mXozRasgZJUZXynSn3FKmWtJj6byfjDWjP8f0xUx9Y5NG27H8nJPsxi3ZW1LQa4ZftkJZyof5339kc6tV6usinfWXVDel6GyKQ/oh4tv43cA5ulXcCwrncUpWF1ipgpf5OnMhGr1Ns39JyGju9otHi+yoH3FnwHiJu/bmdNrCCSTYb7+zqaOPTq369n0O5IJDsOZFzggVdA1zrKHBM/vEjNSFh68WZ7zJCblcmn2ME7eJY0jkX8d3icKr9Phv7KSiEXzPxYBJkExRO0YJunoD/cfp9r5cG0K4Mqrb70lRD7kxa0ELBtpx3ECYGsPNe3gJ4s+BWD0epauBzQNlRkO0tqKsq90WUrbZKvefn7CNWcXWgBMKSgPf4uz7Va2yT/NC5b7ek+Dy+W0Rrld8pmp1M8ANb+5kV5YoP8gyYKNkgTkxNuH6iYWtMAT0VzsQP2BuWjm8wJTxDt4Bk7HV+pv+LiKUaYPO4bozahyxgpViF30Rfo7mxpH6LhrnIPPYsj+PxiFV+KnUAF/B642u0P/JtZRr3Vsc4yKFLhfyzKU89pmmsT8W/odMPoyTkeDGPlnfItQnOY4NhX/3clcNyDKY35OmdtEbeO9A1HLq5eGPDZhFLyFsbxekaVRlxx2nCDU+ZaU8vj8Y5xSCXCVMACWYOzgb8wXVBJpwLGEIeD8LZ403bskugcE9TtGaM48oB+CgnoLWIsX3Te8iPuAIfhqUBClhzIXbeIFtL6S7jKX9xLfFmlr2Huv2sTLPoRtbyU6Ag2R5KcLPxgCiBd3PGp61/T4fS43Z24wnWJdu162OZY7yKMgvUZWcEH/aAIOf8P3JxzElQzV1BnT0lW+kpC1g5oSN6QWRyN+0V7fr5+mww4PORGqu6dStr98TaxTcYOoysDPH7prFT+BxF1ItZLQvtieLVQgbvyYb8ZrlzZsQWOvl85mbeqsimD3DPum7uMwX4viB6Coi5jqCw9DqCIRQ4EgiwYIavkJwnQPx9W8xfBiSyBiHPNYEfKxlNCkiu7sSm2DZU6tJrOE7pntZaYmkvgFlARqjvbhssl96SD3xWAxzYuJ3sahATZvJ+NfaYWKZWpIoKaRZb64+NjaooHIouoPXZ3EaJbQNRFklFtDkoBZQp86AXVwYek6//ItIQg2HTmN3PA==","layer_level":3},{"id":"00146cc3-4e82-4d4e-9198-f0cc865d3b50","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"任务组合机制","description":"task-composition","prompt":"深入解析基于Kleisli组合的任务组合机制，详细说明Task接口如何通过then方法实现编译阶段的函数式组合。使用实际代码示例展示AST构建、符号定义、类型检查等阶段如何通过任务组合形成完整的编译流水线。解释flatMap操作在错误传播和短路执行中的作用，分析组合器如何保证类型安全的同时实现灵活的阶段编排。提供调用序列图展示多个Task组合后的执行流程和异常处理机制。","parent_id":"fd1402ba-850d-4495-abef-d9ddac4538de","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Task.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:27.0601362+08:00","gmt_modified":"2025-09-16T13:46:59.2972512+08:00","raw_data":"WikiEncrypted:xH3YSuct37KUaeaXXoc86BkDoskz3iaKK/9uBNIepTEDPfC1TfwsFLpKfSMdytZeiTrr/NSf7i+P9jwRmPTXbuGwH54pDZvWINDzUjczt9hRbgB3jEhOWsigmmwtc4BgNOElrk+XMkrYUQJo2M0UdTKf/rgCdX5OAwRjoiIs4+Iij+vAj+2d6G2FWAapXdFS9EaZnCLnSya2a5IfTZDJVK039mmLHtXTVRlE9MdWple6OetA8olgO67iaXp17yELxHuBKSPERTJQe/WK8W3+iCzGdaxM0MOAd+b1g0yij4XQ8nZc1o7dU2MwUa+yAeHySAzP+P42w3/CO8lV6rHszqjY+Y1DyHMgRY4GkO6Ia8PPAkWjx/ZDUTTsoPMFgu37tXCOMY8mUlM8ScgvLanAHekqz3KGLUXOFcelE3qFmEUhO10yXm8K0HiSU3sVIdPmVNmgZyoYp4q5Lk0K0j12q0nUtFljiyNNFJADTxmLIcLP8aRtj55CYkc+AFWYL96BdAyhfF/IAzJ/k/dBDk2tru/Be5laTeKQGani//3QQq5DmfRQtDGHm3A1/RqTTMsDQvvQFnsA+rPq8A+aQeyk+TZyylIvjzyZec2de5dMMHuK7fP3pbmRalU6rSowdlXP4L6syV3V8HaEATFkfbYzYp2QauYHbyENngZia2gn3srRjrR6LB3WfimF4jXYO7UiRoEoRHhc5Ynveseqe+54H7dOBkWucdYRW4HmsAu2W4Nna7T/DcaTdTUJX5qQatQZQOfbYgUyIrvsn9JoFUTIrXKZ9wA6Aum7fTyoALoX1pV/5CwW3fYZpW1z/NOYvXJPHtQ3Et/hRBDOJDU66HGzHR9aQcmtljQUPyt3t/Bqt/rfsW4/3H6t4qegjIsM3i0zhSXmXswFs08I3NG4yFSskrQBRUGrsSdKs0VikQc0x6EOPmiVxOz6UXxemLtOsAPr310pTzllPP7a+h39uunx5FNCsl563nias7sL7FxLKPNO99ocBrM+SJNHGtwHchy4O6x/VS1Y+//mJgQzDTmgWcAznmOPPO77PV2N9HZWs8w=","layer_level":3},{"id":"8a908783-f1ec-45ed-b156-328f82688ce1","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"AST数据流","description":"ast-data-flow","prompt":"详细阐述Cymbol编译器中抽象语法树(AST)的数据流动过程。从CymbolParser生成的解析树开始，描述CymbolASTBuilder如何遍历解析树并构建ASTNode层次结构。重点说明各种AST节点类型(如FuncDeclNode、VarDeclNode、BinaryExprNode)的创建时机和父子关系建立规则。通过具体代码示例展示一个函数声明从源代码到AST的完整转换过程，包括作用域信息的传递和位置信息的保留。解释ASTVisitor模式在AST遍历中的应用，以及如何保证AST结构的不可变性和线程安全性。","parent_id":"b84dbd21-6abd-4fbc-9be9-f13f8d0d5ba9","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:31.0907645+08:00","gmt_modified":"2025-09-16T13:48:02.8878436+08:00","raw_data":"WikiEncrypted:UGDb2RMVfkuNaxFeiOIqnyEp7WdfbvnoGEKBIHC5Wdkd5y8tXatPCCLsTT+SLSaE3We8QOvsz4aHMo2kDjjHdYraiTOYz7a4qVrUFp93KkqtwOFQ8rl1V+W+7hk9OeH6SFDvfliGN20WhbU23FeYrRAXD9mGYO895SOXHz8LoUUng9Xaof6aZNHMw8+ZBqDunVNla00uy5hPJQMmMFgIEs2xiwBs50ghNaCwYdEcss9bBVBUBBaErBZyYwbYj4xR18QFyBRKxxQuM6t23yHq7pDE3y2SttPtDs+4rHR3aSuHMwnizss0uD11CPTyhPWtSe7fj+kgaZkk3vcv7B42uzQ2dlrkiMHT1OUwBg7V35lLMMZMDp2a2wPryPyLvptNj4t7AM4gIY3nf4xC2Sj2R1He+XVb3HI2e+bC7maiu1c4kNv+TsdN2YPaOunVXW4nQmlOGxd332ZRhq5M7viBjQ9ONdlrfhKCyoUKM01l4yWYiN4l38FxWJQppaVJYIiUZ1fz+D444RYV8gPUJZ87C38qef4bIO2KbWuKAWCSiJBVMhDm+Imz+2CA3M9g7fiSSYGz6KGQLpLoZNyeP4sbh51jkcQITQd9yxc1JBpSXsR/u85jsV4mBMYW8iSxc2Z+aEpuUARM01zdl1SaO8bO6eqOR3YcrET8XxQLJxoikE+lk0XaMBi2HStNhoB2MNqUVxNpUuahMg2VN5qWEraEr7u2qgff6/YXfh7QeSKoGgr1D3PYB/JYeiDaC0QXNJRXI1BSrlk0OZ7hxhg69kyN+VJqfbMxhw0qKAg1/geTonSHI65TZeMcGORTVRrArNQgaVfqkLS0bx+gIOtq/MspHUTgzgxbBhFZH7sIHu+ZCGieL1QOL4IO/iO/WbXCc9TwOULVcx2pRmmOdR+Jc7r5docG6eOH9+u6ujjloy83sl+TocHoSlm1NK3CCWHR3dnZExeKWnJyi+iCwHKQsSzxFqaVBqOkw0QTyd7c3dr2fUe/9Vj9W5NQFvnuA126en5FSlqYe6d9UAnJllteHFq8Wd01hVm+yv3vVAwyG7IcSACiCB/oOxOw7gj4IaaxXr0+X6HGFi1lMMYqiIIGmzaNOS84OxVxmw1kbBb2WFGDdOQXuy8A34Lf4ch+AZihP5HEMAMvy+MP42AwSo0smv92GhbHUYaWo5GAwH/1xeEaaxWQ44XGQlN2Vgtie0BNRUMRTlp28WJTnJZPt/YFt9wgV4YgVKaa/cPAJ8hKBzSZV13aqP+eXud9CK0c70NN3cdv3Y6B/iCGJ+6BLJH0TJsUnjip18m2YftIT0ebQEJIO+j60JAVXL0fek8u8JYlXY/o","layer_level":3},{"id":"b265b40d-f55f-43d2-a8e0-520063c64ede","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"AST数据流","description":"ast-dataflow","prompt":"详细阐述AST构建阶段的数据流设计，重点分析CompileUnit作为AST数据契约的核心作用。解释CompileUnit如何封装源代码的完整抽象语法树、符号表和诊断信息，展示其字段定义和访问方法。通过CymbolASTBuilder的实现代码，说明AST节点的创建过程和父子关系建立机制。描述ASTNode基类的设计模式及其子类的继承体系，包括表达式节点、语句节点和声明节点的分类。提供实际代码示例展示AST遍历模式和数据提取方法，说明位置信息和类型信息在AST中的存储方式。","parent_id":"b71ebe8a-46f9-4d64-9f1a-b818a7fb554a","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/CompileUnit.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:35.5599893+08:00","gmt_modified":"2025-09-16T13:48:16.2357963+08:00","raw_data":"WikiEncrypted:UGDb2RMVfkuNaxFeiOIqn2/jj4M4bOqd5EGWtSxDIYhkNJhdUkgTgFfg3t+jPFBHshtlLSjrWgpvnf9S655/Sa0LUDOedPbhoTlBD1J/xhy0kBrBJds5d5WUi1CNpotZCJcj5c0Myn6tLyceS9a2U1hXMBx+KE0eCRC3mhVeHyZy5ORu4fiC3xEk5w6oknRZQaCn0K1MWhOpFoiTQPfUu9zLkjkrfZIuqcH4Pe3PLet96oQ7LRbLH+8Gyj5NjDZjbC8/FNb6/M+T15I6roGgYtwZlnSINQaFfczF7VpjTea2wiIhuycHJ0fHiqV+H6XpEDIPYpXrwNVomOv4CWWLF/9rU5P1azGay5Fqee2ScI4nsIWjcJ4K2lD4Y6Zaxrjm6jf2OYN5H2vNfCSHFT2T12uErcCsuxE28/RKJx6j3I4QrZ4fSVAfspKSia/hf1I+24TO3bt6s1vVqhx+H6i6EOFfHK9xRyjXonxlMoLP54Ewyppsg6FuA99CWYXk+rKRwjOX5T8bkpaUVTrK5t6CzlMX8zGi5j/uMtaLJ0pipIZuSNBUdPQKf7/W1dO+V/tWLfB4/WejUiZkF6l/t07vmJDT2q6cEG3kVVXh2QzbsvJKGkasDeaR+dXd9HWsNEcsoMJBe5jOmgQwi1eV1xPOt2mrkgGXDx0FFDuBQrA9zsetYgQNGa3q6ba1GGAvb0etKvf51MJBNtB07/4SxCMKNledGQpS/HhO/+fC46XXP72q40I3CGkhGoGV8nTc6xr/aP04w3CUFRQ0XToxXAGXpRINNepjFzkrGvEzWs7N2aEr9E7g+G4mef5OFK5nuVc8tUxNEG45gtQrwuG9FngdxiJn2II7H80NXf+3YyPKimUzKGKsSmqRXHmD+LisU0rU+FP19TUxIV32rlvmo+/nUdEy13GYJxk59ceqM+bPQZjeZIjxW1F0xpYn4XE8xDGkvQnrIHEkQXLh5njImBjJEF9++c2dQj/urzC8Wo85vLKHEmxFiqwori1DyBFg1sAlJlfwxt6MxleGKycEihteKujAc88mEkeVyMDv8zMxxV4XTg2gJQxv+/3N33RaRuXMw/0ri9qtAXoUcWNpKE3QzZOan7eQKw9mFII+vQhLzgKm5OyhBB33RjjYdd/BguQoyvmCqjENL5ca9qzskTI5LxeLG6+1OXB8HohmTgl5n5iH3+A2zd4q545VEPVJt03M9BtvEoujgjPs7j08OurZIpaLxAoAAg7AxibP+ACuJDuttnM3GN7uz7kPPFbQyW6DQnZNNV3LH464j4RYx4dQU5C4RZO93HeJkVJr3vqCQ+orL4s9koIRTfsMzOPo2gzkpuFy79wbM/9nTxkO3pGBRg==","layer_level":3},{"id":"8ea2be50-6153-4fd3-8013-629d980a3bd9","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"技术栈与依赖","description":"technology-stack","prompt":"开发关于技术栈与依赖的详细内容，重点介绍项目所使用的核心技术组件。详细说明ANTLR4在词法和语法分析中的关键作用，包括语法文件生成解析器和访问者模式的实现机制。阐述Maven作为构建工具的配置细节，解释pom.xml中定义的依赖关系和插件配置。描述Log4j2日志框架的集成方式和配置策略。介绍JUnit、Mockito和AssertJ测试框架的使用模式。提供实际代码示例展示这些技术如何协同工作，解释每个技术选型的设计决策和优势。为初学者提供安装和配置指南，为高级用户提供建议的最佳实践和性能优化技巧。","parent_id":"","order":1,"progress_status":"completed","dependent_files":"ep20/pom.xml,pom.xml,scripts/run.py,ep20/src/main/resources/log4j2.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9082505+08:00","gmt_modified":"2025-09-16T13:15:56.8166186+08:00","raw_data":"WikiEncrypted:w0CkdCdnXCcvlN5xOpiEhEX3U68GI0Ngj6azFMJo9xQD0Nwsj9XajeArLn33w436LuYJWl4xP0dT9zLNODhOpGVJci9elXO6VejbWAUEH3rjUx9Mbf5Oz9Hv+GMu9ULfBS/mPFhy9CcUT8id4lrTx6/SDetHOwcu2RoC6HiTy0K+jJ/4unGWvVC3x2x+EMcIEM4Cx9k2i+5U7dDQdkEMfPAf1ijf+h5FOXNLjaEzDMej5Aha+qVmks4n/UQU3zCeYzSWT6kzHViFlZyQJP9MlSoWMdpb1B3LhA59WQcJdsEWEqRAe1cusnt00roZ1MsjmikL+BLjyZXLjbKP/YgpHOQJg3LhFX2bCjNTzycLeDD10kddjKhmA2HwMvQ1uxcTdq+q8bWIpHeqrNB1B4wTb8824i/ZiHRca7+3Ixi8yOu9wmL8QVVxNDVfcv82yfYvrqhO+d/+EFRdXMQ2wCH64IfkytTRmfzddQPp1AxFe/7brMvzJv9/S2U4DDgJfSAjy8IphbabuUc6s/XQQYj/8RfjQD1wIqtemwrgYr9jHOTu6uAtZ913413X4ISauIgj4j5J6HNDu3U7xffUvwxj2EIpy7jFhUFrI5aJr/qg4hWG3UdIqlB+7VNwY9YK7diVdaFdadMVoS8T0EMU5Fh634bmwaS1H94k5pr/Awl/Z8y87D0w/d/yeETG1kNiOAOyfYp0ECF5Eum0zi7vjCzzuJx7B2CMckHAQdlSa2kcTI6xU7esc6FWDlzrQfk4lllDiZ5Ys8t+ijCIhMdlnIiuEbzZl69a3KjBzRMAK/iloHjwChwqDuZpmmNSFUzJbVGTFwL70igVqaaru4l93Bql0LOhX8itSvQCqKI3TbqGOWP1F4jRJfd2Y8OOAmciCn+MqB1MRCIp5rejisHDHIMSQZi8ns/VPhVX4qDw/uPSZfAtsJuNJChC8VhSQI2scnJU8YEt2hukOUm97Hrh29vfP2Yek3+omqlI3SgYgT8rvWmKUc5NWIdjTEMHqeATFsJoWYKWjqYZR5Qi8nK9Vuhhgupjx+ASwWliVBr4LzAUe+AfK5pDhoIHbd260HsFTfuuFHQBbNiYO5vs96R5Wnbbug+gBelI6Qn4FfZqh1lKTu6UzEXNSsumU3VvueNYl2VJTO9BhginaXfJhJUb8SuL1M0iiG3R79g9/GiPZRP862lZJuerTjKvldROuWPZq+B6MjFSqGBLmqRRo8LaMJSqIfkT/eYterdkX9EjaqhWUSiTZp+9fqNSX30inX8bOAHTZufF8h8GzlHWqF8EqBdACzPebgMv1s2z4pTqLgbqAP+MVcD4RMfkMEcRDkIGclP/","layer_level":0},{"id":"952b7aa9-263a-4a18-9c25-43aba1d99f7a","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"语法分析器实现","description":"parser-implementation","prompt":"开发关于语法分析器实现的深入内容，重点介绍ANTLR4生成的解析器组件。详细说明CymbolBaseListener和CymbolListener接口的设计与用途，解释监听器模式如何实现解析树的遍历和事件驱动处理。描述Location类在源码定位和错误报告中的作用，以及如何实现精确的语法错误定位。阐述ANTLR4自动生成的解析器工作流程，包括词法符号流处理、递归下降解析过程和解析树构建机制。提供实际示例展示如何通过监听器收集语法结构信息，以及如何处理语法错误恢复。为初学者解释解析器生成器的基本工作原理，为高级用户提供性能优化建议和自定义解析策略。","parent_id":"4347657a-a722-4c91-b857-41410d0a46e4","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolBaseListener.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolListener.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/Location.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:37.6874246+08:00","gmt_modified":"2025-09-16T13:29:48.5305271+08:00","raw_data":"WikiEncrypted:ZdM950mQYTpu8DmB7orTHk8/knnj8GuJWZWjM3XKB/6TeNyOZrXdMNQI5/OXYiYGT432FPf7gafeJXdD0gCb/KyOB1zzG5vYeTFDFNyHp4JjGBIV/A4oGfJU+dhYpoir+e5KAI18gtT0Q1YidkUzJ2RcptNtnW98FBCte4yndhglvGZ7uSc/KqsUy+0XRQRyG8xR6TBkFe7I9brVcC1sDLvjAuUWJh8z2gZjTqo20XyuYmPl4h/Q2DCqdU9JH4fIvwqvi+S/M2lg0YOLXToZatj1PdT21Edyxxz2beeak+C+jVxgqOMgL/qb34D6xPOxFscqTXRA7SgwCqn4EZlHmf5wtI+HvKTC5uiVT/oDCgDGbxh8iQCRBEzcqCNcFsxb/dyt26/YyROHfWID7W9FpjfPpqWj0cpPkypTAGp8HVjewmAGZOpQ1A7RXZHWoh2wnmSo6pVqDrD3T19lNhb9+5ucd4j32YRXtuMGdvEqzG7MN3mTB4Xy+JVQRhKUyZrOSGjmASnEOj1VR26ZEOHNi3LCfPWN0O7DwtbX0iynEzB0iarlyMjg2mCTNv6PfCMRiobhbwugfAQo/Udn52WCLhQ5lfdD9YDW+zpRlXKm1c+IYRjxRxOim0VYzMBz2iWMJtms5QtYXryj9wWr+lGd44qRQ3710Zrv3bw4gk6MHz10RqicEV0Z/bt+2HpDEeP0XqbU4IqOJ3FkIonXgxorAGIwaU/LMWYQ+rSfu7KJchrBRIfL46E0z59d/52mnbrTqBLahFGxd6aKqnrCpD+6q4Q2SQhni1r4OluCKVKprHaujnQ+louv/OgXiJ4nFSCVUZ8b25pRlaO+w5zifzwdYwdDVjOv9VSTX+RfiZ/84ctZwpWuYAQr6qt2xozG/r1c6MCt/UiUmvipLe+34lX54/NR0eM+R8VA+MGmDBsa20q1vSCrItDzz6L+z8ejNf+xoKFiZK+QSMz40gEvUPXFZJ/8+c/sv3cyXAH/7LKGiJdiGB+dr54Q5tOBbPIM35ojPBnCdgS3iq0bPx1z2VgdpMsE1cYGydClxzEBsjthzJ58qGYRyYh60t0bJ1eYBjyecdvM9W0Clnx+EtYc6w6nLuxvJcQ5jA9x4+oBFEfqL/6vixEiuObYCk1WTDtUoWcWo3USmo7KRwaAI5usugpLoxdUSRGaJS4dRMjbgfDPwLmv2wbq/xnb6cNuIA7w7LA8QjafuoFA4lBmv9HVO+hUKgJA+KOopjwQY5tVSCUWpVmumiwXIJyR1UQ1fpMoVbuGlFdJ+fcA3HQGPCBzMH8YXjgF16P/g8tDyzcICE73auErVg4wk4MngwWqsW8VniffhUAW9yOpJtAwjBWJo/fnUM8UM9zoI02UHhyyCmZ93t496IYSdZocdgQxW9cYAw7Lc8NckC05J4n1Ym5oScQNpp3f8ClXFGLNwa1VTGb9KW9mHLSPXBrxT27mfGkiu8ndZdedS8VtpYxxdATVVhvIGBZo5HBrhEFzBGbh0YatpCxEjE20xXlUWqSYf/3On/z6kbaU7s97Q2CwFQWDM+Wani4aA9/eM0VD4ci9576XzhW88OUzrPsIlzKdZD0sNOWoS8R9rrGk2SXxHlC62P7sYRFmWHq6/Mzl1HvXh/9OmbXHVyyR2wBF3phhTRgFBAyu","layer_level":1},{"id":"cfa29f6f-36e1-4ac9-b678-232e5fc8db68","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"编译流程","description":"compilation-process","prompt":"开发关于Cymbol编译器工作流程的详细内容，深入解析从源代码到虚拟机字节码的完整转换过程。详细说明编译流水线(CompilerPipeline)的执行机制，包括各个处理阶段(Phase)的顺序和交互方式。使用实际代码示例展示数据如何在CymbolLexer → CymbolParser → CymbolASTBuilder → LocalDefine → TypeChecker → CymbolIRBuilder → CFGBuilder → CymbolAssembler之间流动。解释错误处理机制和异常传播路径，以及如何通过Task和Phase抽象实现流程控制。为初学者提供流程图，为高级开发者提供状态转换细节。","parent_id":"6a440a43-4f65-44f6-b0a9-2cfb1e5c0c9f","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/pipeline/CompilerPipeline.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:41.218977+08:00","gmt_modified":"2025-09-16T13:30:31.3627804+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U3FNfJfu+TTspIuuEFrofhn/jvDkaIhZWSqj09gHdfD2SmaSUfC8qQsKMqto2nh6dfknKGgPwNl53GZyDqAeJoCsri0glwkr6SeLsqEwIUbYw6mdvddsFIGVbtLzldwDs5DuV+OJ6qo1LStWRDAXfyI2ZeF2IvJ/nHLjeE1hkpIa96txqyLuKLkcTYM3F/kUP9eKLkS6FDGS7iPxB9PsOTdTsNsoMsq2Q9Ld5zAj70vo8xZxxfWVZWc88kYY2mQQMB+1HSb3rtYP9h9i2n7ugedufECIgq0vz9JgUyBFimG2Xx0gz7hPUmyNDstfYcsxbkeiJYyqmy6pogCiUoky27sjLTwx5JwN93UTLB4lZfC7PZed8oicmVwrdThBwVmED59rmD1UxEv43hhwuEbeFeFuPmc8Z7t+y54EC5UL3l1WMjNthvLVbAxqkVeYcpnORoLzVWQENbTYv+K2JRDB3NObEs3mVtbjF8zAzLdYQn8BM6jPVUMpmm3PDwvA2SKNx5xCgpEDT17fobRAtNugUZiyjHFDqCIFZFJi7fEdbZYuYswHLUD8Ky7z2+P8OWxaFUohAhzO3EGUCizyFwW8RzhpYQWjUokHLB72lVEqC9JM+Oi5zA8vLYIqltD5BgcctgvCJHvAtl9usWifwMy7XBv3SKssU/xfKMWG9WD6K/omLH88/pXAdFDiMrIpx2dWUhFsqEedgc5lCHSQCqdmH3qsVo2TffZOSoKEhacuvCT1YU6i3mOa9QcmQdqKCUe3brKwY8LIERyLXJm9soeXzYs89oEQIe+k3ADhk+Eg88NNBEL9W6wLF949u18MeHi9/DERBnwekfcA02fpAXuLfqY89u90QOehAxHVN3g0jVE9lrawVyBjB78zVkvTml6I9xnizxF31vNjQZvWdp4jXMqDODE9yVTuSjayhua2mTmYLwABVvHwqTCuO0FGmhKI3Ji71dfLNGBS6DaVv/ArrwR04Hok33e3A6yRQwt8MBf94AlYcxgCHeZhoD1zQRCS/iCnLjia/Bec+4dqcnsJgb8hJrVXLGDHJTxYI4DSBIN8M0rABaJ32AqV7RaANSV7K/Sy+S/Mn8PIPYZCEJw7MN+zy6zfONe/pQ+Rm2+a0tpz0d/tMR62cK6DBPe5W+rhjEuySRFDkKHE8oXK3F6xw3fQWbaCnc4BiNYa4aFgnoAcLGKbDWF0oh3noekKpVEJ/rj0cSbhlhlebbv51PkBylfr4NQ+Tl2DBSk0sKBVp1QGJMbAoLAmziAHR3tfnayfUbotlakvIxgAvQAeyP0b+nILZ+IFw9J8oX+eDwnAXcpaKeNzMXttjVP5BUEV4jyO0ykb1pyMiaGowJi/QYkRcBwbW4V3Rla9HiCgPndjrXi0F54l4gJ6YpTKC2lPB48x/VoGR9hKZWVDQp958Ya2/eJyeyfQq7uChON/SXwsljml","layer_level":1},{"id":"af52659c-1424-4bfa-a252-049c2dc3bef7","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"AST构建","description":"ast-building","prompt":"开发关于AST构建过程的详细内容，重点介绍CymbolASTBuilder如何将ANTLR4生成的解析树转换为更简洁的AST表示。详细说明ASTBaseVisitor在遍历解析树时的节点转换逻辑，包括表达式、语句和声明的构建过程。解释编译单元(CompileUnit)的组织结构和构建流程。使用实际代码示例展示从解析树到AST的转换过程，特别是复杂结构如函数定义和控制流语句的处理。为初学者提供构建流程的逐步解释，为高级用户详细介绍错误处理和异常恢复机制。","parent_id":"66345862-5842-4b9f-aea5-fef17844a70f","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/ASTBaseVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/CompileUnit.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:49.4285929+08:00","gmt_modified":"2025-09-16T13:30:50.9752731+08:00","raw_data":"WikiEncrypted:p+8HMnxIgmacoUzP4iv4UXlwk8mnFjh1GPFHA6WL0CBY8vGdWO3IealeOqXDUk8diV1+oxQDaJrcf//2nvWiGeZanytsvo4krLP7xicOctobmU2TnmoSu7Sqi3sgNnWqdrZd/j7Dvn2bj2JrE4+R9MBPnBAxcbSwpyyaElQPwlmqokDpSmTpFZ3o6Bf9wYz+RcjAmf/o/f47zRnJKhJQF64ffkAonwTsCyGqJllTDalKV99Y1ZffbQzMqDT4PyUdcyqvZu8pcqG9if/Je3YUOhdlcIhYoyvW9LhEuA1fD+yk8/tMbOlOB7GcklRFNiNGzoQrFPNJXYIK4XITMps6GqGNI9cWZlPtx10c2Bk4BaLB/o1UOzm01jPDnoZnbYpV/1XJU11MOj+squHSB3lXT4ybxms6E2aaDNUfhFV8PZxV6HEaxcmV8nuJ40H0J8LYujk67iYYqUlgav2/rE1AwsfWCmyMcoGEr4LAnl9okJ9o3T13HVanNmrnf3bnIa6yBlx2KUSl+c9X3YSrgav6ZLTQJlXpe4k4jPCvddwTswEjnoO3qdSVlAx45u3kxZ4oHP8th9kS+uW6tdYalNBvWVGaWeRg1eN4h8TPFfdMZDCvNOxVTY0NNQjhQyKTAYUCF9+gOkoqip17LXaNke289+z5AkXAShwMc418yem2hxvP35Kv5iCGI0UjnjUtNmufdk7RRsZIkOOfmxXHp6Qu+5aDn+CC6IOOTKvNPXyHbXB06OU8gvtfVWuwF7EWM18u0YuI975CwC+PbkdKzC2VuQaAunrK6N3qkl/e3qka5JtnM+vV6TvYVKTQCfg9ckVLpf8DRQqWHvwyRLwYUpeluBgqnCgV0C5ba07FA0dwj2wojXMZ7MLLsLn8cctVu4sQQY/pTJDFDHHGUytaLvgrraOsw/DmxeyLMQHjdSuq2+6Gw53l4hp7wBt+Q3Wz2AMTkuTCU+V+t5Zqe0ohaFwDWs4TmSOQoLp7et2mblsT04T4UwfiyqvqC91lz5cPH0bnN86KX2BAUyuNr7udWw00OrNLx0QvKdA+jtEWLRHUJHSQqv2UeR0uDy9xvZPMOfi2NxizZmoDutDTXwqNKgJOEVIqNRxV+aQlLM0pVpV7MTRDYq1eVG0VRshC/ZL+meZANFxymg1eCLPbn7TbA9TzvEFU5Ve7eAlqQ8GTdWCnRVdmHHHVdExwb25EjK176Topq+Atze47FYATx80IBSobb95UjzDPpsP8HGYjDmbwgu4EnfalA/ZsE/yCYdeHtbQSM2KiUO22P6aN41OrqyTywfh0bGYYuIsKBDkILb7lJV7/Z/6mY2VsXZFCxelrh7/QAQ2koBaGc+BqsJau4fQ026gViVfH4iNJCMfTFLEZeW3iLascVGeGYnwV4plVRIm+XvbmN1WzNHtT2ew19PifQ2SgWcz5hbI8v88x3i9oW1ZCHIKmINM0UPVKkx/Txnn3jPrbpNOLViloTMnWc+7fzA==","layer_level":1},{"id":"67400259-7b47-46ff-8e44-9d3840045e65","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"符号定义","description":"symbol-definition","prompt":"开发关于符号定义的详细内容，重点阐述LocalDefine访问者如何在AST遍历过程中收集变量、函数和结构体的声明信息。详细说明VariableSymbol、MethodSymbol和StructSymbol等符号类型的属性定义和创建过程。使用实际代码示例展示从源代码声明到符号对象创建的完整流程，包括名称、类型、作用域和位置信息的提取。解释符号定义阶段如何处理重复声明检测和作用域内的符号冲突。为初学者提供符号基本属性的概念理解，为高级用户详细介绍符号元数据扩展和自定义符号类型的实现方法。","parent_id":"59c404d9-484d-48e6-b14a-5bc14f06eaa5","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/MethodSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/StructSymbol.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:54.868171+08:00","gmt_modified":"2025-09-16T13:32:10.148541+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO7xow1s00sgUn7K05wH5ik32vsyLklicpd0GJ1cJf5KhcOdJbkxyeRPizM8ckPOBQ12BzibtuG6QhI/PxVcjHOYdnFmFJELRhVM/gD924j9IivRnYpw2IANd67hzJMpBNk3BZqdYGPEOWOaA6N6hDppXEdFhslDQk00CPZq4qrfLRXkINuuYKWpDCh2QM9Hs0Vr/qj+qof7arNBuscbF7eJQgd6E9d0oQoW4jdnJV1UWuAwmFuIDsQ4Eq7jcN6G89W8+GuNSFad1OAelCZZPk7hSGXaFljrd8MT0BCfbph6FRImn4eEcEyZsbBBJTKS5P4Wc3ooI2aT17jMjmuQpv5zPWRGUPitMMVmITDCtd2CiqglBieBTLr8lXyRi3tfrTW85ua5iX8q9IiT+l/K37yq97Uhl08SXQqaN1SKpUssE/8hSrImBVKgNaxCDqIIms8brdfYkJPMJ6kzkOiQRyWt5iOCPMHobAzF06NRgXeoyDuNq7uS1+0Lx+yjbEcVBsx9gNJIdvjWQ6w5oUUr3lBhP84vlLbXuiJYC7X6gmg0TsWBGUG+++E2ePRfEIwrO/kvKNCkVDj83gVeufh/Tdu64cYcbz5LjIOlbnZkXLFlDfgNXGmIZKgPaYK+txsYotqO5mmh6jl1yrGvNC5xb3xYA3RA9E6oJNTF+A2SKhN+eth27ICPLplDDklYH6NPG7ab8YsDYy0z0LVAbWUVWQS8JF+2XMXq1ArqlZCk4IQ9mR1EjQNw8BziVPDBd0ZfyL+TuZuRtWqaxoeMdUMjYZoKd0zioOZgTRLZ7k0ST5TWjD/SqKT4w+rYpkKGChk3Ao8TeSK6HpSiS3gcDVRCjWj98NHg2YZOHcME06LKJIDBepMNA1RP2LszNLAI/fVA4deKJnawcsPsEeclHMw4vNV/+KgJXbsX5GAm/VAARAhqcklAHVydU3kdHWN1RBTnngfa51P/QWCxMjiXiL3PvahTx0unusBPhaAE/drj8+2utFBc1p8QuhLctlXiuceAKOmuTh4MuyYOpyV3WbqYJfF5CURwrEJaV/2hLDGAJ5Ik6FaPCFax524uAdQTNMETrxVuf4WMwlSMK98Ogyjd2pxswXykrSNj+FVutwkf54xrBfu9MhZTEbbcJC6+Yd8oPxnwxiGpL3CCG3p/K4l4idEa1waBUnceLI7Szj5+7awGlV7/zKeB3f9R7Fzjx+aGxV8Sl2qAMmDOLqjIUVgVYelV8AYyueVyiylIuAR/pRtDy6WW53qwgMXHuzT4xjY6NbqInFPsm6OPmjui66PRAAyr9GTa5SDTq2kSNWlydebaKZwhAE4MnRtitlD9wV5uWbI6dWUd8Zgs1aCD7pRSVFTIyswr6TO9aiYIE/gqbLeQ2Vv29xyPZY4jkJADW1XesczpdmeJDBcnJebNlcYukpVtqQTbqt10U0x+Lu/wS33vf6IGni/P97MUCB2GNY23gkeGEn9kNNJHFNAc7cGy9Beh9Mb+q/C6EE4iKgwJf5gPjl9GZh00UoX24FIsG1jjvol9JbK1PfkleGK43bCuplSrXp62ElwggFRa9Olh1D4Dnz+9kmeZZVlvS0VWLHkSmhYiag9kmdkCfuPn5Z4Nbu9Jg=","layer_level":1},{"id":"541c2ec8-8988-419a-ae47-92bf0c831eb9","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"类型检查","description":"type-checking","prompt":"开发关于类型检查的详细内容，重点介绍静态类型检查器的实现机制。详细说明TypeChecker如何遍历AST执行类型验证，包括表达式类型推断、语句类型验证和函数调用匹配。解释类型兼容性判断算法，涵盖类型转换规则、运算符重载解析和函数签名匹配。描述类型检查过程中错误报告机制和恢复策略。使用实际代码示例展示类型检查器如何检测类型不匹配、非法操作和函数调用错误。为初学者提供类型检查流程的逐步解析，为高级用户详细介绍复杂表达式类型推导和多态操作符处理机制。","parent_id":"ac5bf875-9f29-42aa-a192-749af648a6ea","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/OperatorType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:02.7184423+08:00","gmt_modified":"2025-09-16T13:32:14.8985779+08:00","raw_data":"WikiEncrypted:k6ifZ4FfRXeNXjA+c31imNeoWWtRDgiWzjmDh3nXULUMP2UQrvOFec43b727dHk0XYPHSefGpAEsOofGA9dKueu1uKJ3LRVm7tnEA0Q5/jGc09MfxWoYWURnyftYxX7t8DiSJIDuwQ+SyIqdxEkXPuVHruZ2dCrurkfzI5ZPizlH0XsSiW4g7wu+rdOVigCP5Ly483vALFIG6+RkgZy/wGP3zuK76slSbfCZmj+mLmVKfF/pCDqJYsog7VA49+dt8a5CwVD4ejggFLw4dZ74vHIhxJjRZDli230OiEL1drW2OeWceHg85pa5KQF5n3mqQj+IETkpM5lea86BjoVPY0W0ymA1arj1QhIMhFeos/0z2f2n325Y4QR4d6kLpP6eDzz7rLOklzz4awukx8T2e7996SKhXVpCf2OAR7bQeyHfmC5rY5P4ZfagC1hk8g2LxStHuueDtumvDzh5vjiD3zrxh7Ot7nWiYMm7CigGjzOrh74PtLb1POo7lLIL7/F6k+H2o10S2CRip4811e5HlrY2Mjnm6Q3mIxz5WTudCJv0LEZ3n0q0ZuEUEp8CsgZ4TaL5a86v4bx7HaG+2PrTv0VEwxmkazDbNkna+z3NqAqGDMpHIvLhmJl0mQUvOdHWutK1qD9cVP1mHpq/PXHpljmnaYuf07P6V3/CN9TuHqO9QhBBqgR84C78mecN6zxBJAaGG23wWMJVQ5fK913ykjIAar+eh/PVPTtLTEgpDreE8aTSMbIS5ZMZRZa0R7MU2Iy68WV9Lvyxqhhq9sJ5apptyHp+FNhXkp7aKz+LgFyu5mf6N4ewqMy7hvAd1JpM3bn910+8+TwevofZQFRLJyvH8yXl0W0MGVJwOoPoNZJLcysJ9nxoA73J/+ChgNxpwSrtpYTEJTQDKRcIy7na079BTLGYw/IOe02e5vm74PAZ2hjML1gkWKjB7PH6fHRC63rRrtUlELFG7Z3X1Ua8P47Oylt3Wlsrp0lHs/6/8psOZvjS1d350cLJz/KjTjWvE780LcmnRzgBz0Mf2PKLgrS7M/eMpPYhN69QdrSmwoCIkh2+xwhQtjg9Lrojmzf8OgOFFH79SuemmbbNgU+8BlHeD2SlTtDAhVVleOmFNgpljmO4KKTTDduBFUa/crTgEa0oAoPOBN1c/F8mzdJAiWwjbF7kN66NfiK7aGx7tTsqyqtPSzgtIlHpR0B+wCtSjp+y30Kwan/SJHpmfTnu3C0cQGwg3ui1j5sbboAxfzeKzE5zesHTr4P0FrR5cgOuzZl0skwOWSesU9V7470m6arQ4g5vWncE+N5VSTt8Y3B/NdhqP6V+FngPbw25QUnX5nQ30BUPpjgkfNVtp5rLtOaEMbbmUs1W04XjhgfzNDdV+0HAZ4rTzgUyIF3w9E2qth3NXH33tK23Ww0R4UjTzl+C/LbXT6tW947WY67pE3KJBhEF9PvNpIs6a3qS7Tbgp+rsfYLlrPbkW70FeMoztkKtQZ+4KnRBeFQBgNHVkjA=","layer_level":1},{"id":"83b3756c-f4b3-4565-ac42-f327499b3747","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"IR生成","description":"ir-generation","prompt":"开发关于IR生成过程的详细内容，重点介绍CymbolIRBuilder如何将AST转换为线性IR表示。详细说明遍历AST并生成相应IR指令的算法流程。使用实际代码示例展示常见编程结构（如算术表达式、条件语句、循环结构）的IR生成过程。解释基本块划分和控制流指令生成的实现细节。为初学者提供从AST到IR的转换概念，为高级用户详细介绍IR生成过程中的优化机会和自定义转换规则的实现方法。","parent_id":"5b067f09-3333-4799-9e1c-6c881ba1a4c3","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:06.3586839+08:00","gmt_modified":"2025-09-16T13:33:23.8491483+08:00","raw_data":"WikiEncrypted:uVeKaLIC1dtzg9FD9NaCSPLxH5udmZxUH4dxLbLGS4Hvo0gsLGrHFkuWtx1HI4+oT/T/cA/wMP1YnPurSwg7mSSSt+iXl4faIioMNAhtfEKqjM7tLHVq6/Z07Yg0SgMifq/NCnkBZRNSu/yzxZOS4QGiJGnwru+uKPkgltuEVWhLWoBtvDqfHKLrwkjFf1o58c5BEHK6w2Esy623o6U/N7O5MBK2qjGOoot7qSzS4VmZONF6GWUnBwqpqJfrl40D2w7r6ZmAGNegexU2+aNeRNOIOP0BHQaDyw8/s2q9J7q6WSbbwD05PT79CrBdH+PA2Xf3xAp2NZpc9TAwqlsp6ea26bxAZnXEF8SRhoxzGIumPhInu/RxG3VDS16DLtcQ1k0Sy3S+duZgUFvHTjR5MfcXbajqxJeOEKsw6ll3rRN0fBKIGzxU35ySn4m7sNUIL/jvuq0iu6+5IfNWZwnEHUeEdaMxRjpBwFB2o6/W8H8vdgwql/kM7g6Xn19hpU/1p3CsJV0HDZ45pNMlbf3V7lRfDEtNn6z7ufkgtO4pCQ2eZqmVjC8RFB6zYPF0vMS0+aQXlIvly0ZKcAblsYHF0BUK90X82Ca6hlr0HIUlcG3RWXvh4R6eNZ/e78NgdQAUIcKnewyuDjPY1z4jHzmk1gB1XyE9nVPUSWNz4RYi/tV0flVe2lg1yj2koMiC+lljXSjw316SjIX+9dyd1VzXFaS8oswXwvP84B98bjOJzGrjN8dAm2/1ujWptJa/0TgfZkeD1FpMWxQROCoDIPFeHFB6wMmXOOBWSCjzVQvSUHkkXsj8GIOrH1RVR9QkdUQcQSKHH1kmLOhFt6zJYTaMfVGYpVvrZBRM2nRjArKc0TIcVgqV6KCNJBUv+J597VAfxW4P00XwnYU3CgoUrJMOpxI7ypGj0+BfAWVAh10dTXAVOytH63kNVrCHqHsaTCYm9BWziDmvwIwHttP/eIHHkD+dax/LJ5dKD+/iDqdg72gPVlwJ15FAHE6izR+DDtZWY1ALhV/3oL0Pj+5B2WYHJDb8vWI/Rg/NvFgBUP3m9Ubq4vYLOxRomVZ5fDxhsnshu3PgcjaOF0J1X7zd/wIP/9hpkYhQ53iYqdjHakt2NKqqCvEF3slHZef1AzZogT71MmsWPTETSNwsLp8tTdZgF/xbRlC6SLrXykV1o6+rXL7bAN+TmbeDpLnls+wKszelVRvtf2V/CF0/c93Wo7WZoyMtkRZDVVZYb/DdBhgkIq0DunHmzpBWtTttQu4151n/ZVmA9P4flG5LUOV4cMUQsQ==","layer_level":1},{"id":"4f644029-4767-4307-af06-0a9198f6c53d","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"控制流边","description":"control_flow_edge","prompt":"开发关于控制流边的详细内容，重点介绍控制流边的构建机制和在CFG中的作用。详细说明条件跳转、无条件跳转和函数调用如何生成不同类型的控制流边。解释CFG类中基本块之间前驱-后继关系的维护方式，以及控制流边如何影响程序执行路径。使用实际代码示例展示if-else分支、while循环和switch语句的控制流边构建过程。为初学者提供控制流边在程序执行流程中的可视化解释，为高级用户详细介绍控制流边的分析技术（如支配关系、循环检测）和优化策略。","parent_id":"78a90da4-0651-4383-a60b-d0fb3120f02c","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:14.8086652+08:00","gmt_modified":"2025-09-16T13:33:18.9282942+08:00","raw_data":"WikiEncrypted:QIBzkuXysBzMSQmkzf4c675GxUxPnyN/62CeRrGKgsWYmkEmKwYzZrucHo1sMqLz8TiqVb895cZEowlGr/ShmCkINq2bO6gHbTCzrUX3Z2XGSjCCE4JiFFPGVIcmYWwKRMLydWoP2IjDN30bFaCqFmtbgQHBlGPqZaTKB70rTi6GA7vAyJk3hh2pqvvMBHgWloJFLuQZrLQSK0aSY0lZoszk8azyS3crassMGGMhkbRfLZWSw/1lzt2my8+y8XbaUmO+EOx6C/7H2U6LGamiuHiJp6VMah/WY0ugNqpkbFPtnjTCblNxyBw6Vd5m5flcnAHaC9pQOvpUilk5LixTOEVFrPdjggdsPmgOQIgikyRfS0amGbWTOlfKQzy0EHqhhQvadCP1cRY131k2Zq9CgFjX7F0ET0jrHJFlN34lViHm0w+q/H47onJMTOXHxDXfZM1JJos/CKdh0Qj5Ac7BjV4WobTLQ5qpQh14YV6aqqCaKKUs3pgirTm7JcquA2xPL6Rwy7cwrWlMk9B7sNzzBjUP+U6BH2PI5nH6jiADsmeERDONQ5uAMox8dnhrkTysYyGTJIdUaufS4ysCFD4K4MawsyYA4BbEXJHA0RP0GqtIXWX/Q3v7u52YbQVbytJ0stfEsMzVLVl0wfcHhbJaqRimCs3n0VmqKSz4E5OR7nfsTp2upb/P5mfn/vnFsvDuAtPT2IyN07IgF6gAwOOLXH5934A8SgFhKLDyLNMsX6FwD1H8hkKlIAVaFyOCVWl2doCgwRQXcaE2DjgeQ9lD5ImbwaWGuJuc/YurkO5MDVxB+mTvsqqo3b8yGCXXmgiSBVSmg/B2JVnZBxr7Hyjj1xLLDYlKXE4Y1AIQJGjgoPClhAJDowG9/m4YYiVjhYqcWqt2Sgydom3F9987ZEAKv8zRWldqhAzjUJ2OE2R/whKTsjVr0f2NvMgK0BTz/ss9X+CZB+0M03N8ITetK6fq/y+f2c9aU8NjJMyLQPIhKG2yDhPCcB7rzEYCOxOhVp4F3zjHLKcgBeeAoKMywwUMtNdLIdzO28gixCIwveAAfieC3WeAH0MZSxanURhuvv+dTlqiSfDWOqiHlpbpOa007tOH6ZH+w52DufxbeYw1WV6tseubeaJ0MGu5l225sEIOSDZoNW0rMW2/L1MVFjQueGrzeCI5/Vg3fu84maETZxTIDawAugOePWlytLcvn/e1q6R4OM8E9Jkr86ROTVKLsoZALzSN3BlWe+XQAmLCPrp6OTGEF6yq4KPMb3hOVBBQHoO7Ch2BRKjHGPtSYOSl+8zxHsLcjqhoA7mppH4dN+tu4puqa34VMO0EO11OiE7ixp7raHBv1anUUkaqsjHcr+DV0toOmnotzS93s78Qu3RybT3UyQGZY4D2cLfKNtCd","layer_level":1},{"id":"9db0f9e1-cb55-4c77-8a56-e0dee6afeac5","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"跳转优化","description":"jump-optimization","prompt":"开发关于跳转优化的详细内容，重点介绍ControlFlowAnalysis实现的空标签消除和冗余跳转优化技术。详细说明跳转优化的算法逻辑、实现细节和优化效果，包括如何识别和消除无用的基本块和跳转指令。使用实际代码示例展示优化前后的控制流图对比，说明性能提升效果。解释跳转优化在编译器优化中的重要性及其对后续优化阶段的影响。为初学者提供跳转优化基本概念的解释，为高级用户详细介绍优化算法的边界条件和异常处理机制。","parent_id":"50dac0db-cb65-44b7-8414-bdf4906d2e14","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:17.1582601+08:00","gmt_modified":"2025-09-16T13:34:24.7212112+08:00","raw_data":"WikiEncrypted:aJ5eBvpghNuWA8HwKeAUXdx+Phmmc9+J8FL3XxwbWFBl4Qa5A/B0H/6hK5tbnLjAKLqlxxbwY0IYYNFH3D3/SfES6ggPf625XZA/M4Vx09cHJajyU/g+76G5Fvkap4gFSkpkSdb4CTX0fycCUezC1fWVkK+gCZdOOw4QZeoZkvOGmOQ1cPpy18gdIeDlxweXnw3/Us3+v497xRAFDMiJqcx6aQ8Bh2C1DNn6khSJsWzbJs0uTjA5m3hKnwoxPTeZRLwSIzNjFymLhCCUpYPUW1QRELkPLBAq+rVnC6ec7rFxJCGtq7sGIMQ5CLXJjwD7oMTV/2La0bHLmpAQmxhzcDHz5E1MhCOiFpko8x01SRSDV869lhT2w1dmU5CWZMS5QXiHwhsjBEs6LMg6tiicRrT+4Lizf+UC87G73/Q9pYZKI6bKrmrPxZu4/mOQ3ArdnY1b5jbieird3DyiKRsd32/KYlHOjj7XXNzhssbHPFJWgpAtV+IIoijkmQuJr2pHF7H3GiANcxaPJyFwvjkah2Lc3Fy1pYP+Vw9qSidCgpaAQooXVh5Qgilb2CCMmlRkLMC1NAPRoQM6Z2EHNiHdb+gyhBSSdEk5xD2+NVdaVHENTZASzqqI2wc7xr6vRHBNNx2lOKrBnbT+yZ+gL/jtLoPCLGB8iqWBq9boDe8Hx6Sj6vsXC+wo6avmkQyFrrIO84pXJeTRgGFPcxZwPrzTNXYl3WhjB6EgWe3/y+f3G0BWRIOOmMlkEHKO4julVnGeuqqWWWZwRi58s6wx4adZOnlSzp7ZYz22k0fNf/7IMoJWE93ghGujO7syH+b9m+QJuq/DUoYFFJ/9kJVA0yp/PoVwFEWSVcoH2G9tjfrGvaLesHZw0kCvGUm2dzUy9b7ngu2w/5kb6RL9BRDWJnK9QUvQ+MfyVJeLIL+3UJdRbKEGL9JtyDslfvu4m9hAen+V3Bz9Wr75q9F9U2yScLnOy/FRokLttP3g/Rt67Hc/M9mLJHdCWhlQDFNhgM/IEDaorJMcavQQogoyKUsH0ITgqAquQbY8NpMtZIiIybK+dC2i0sTxJMg7ELqVry3pgqgDEdQhMBcC/MaKawEv1GFbMdKA6HiqgMKU5axueoZIn4x1rfz9VaPDc5lf51IgYecgU2+9eBxVupUlVheSp7ERR5erDmWp0EvFyqM46yeFr68gfF+HOelGJhCVZlyG5lPsB4EHp7r220XqoRfeWMQ4DvbbIlIRgP7tnxIHu3QVsF/8818KWlEWCQb7alhn6nM0H7DlNDbRRsgas+pVkNr96w==","layer_level":1},{"id":"c4d3b681-f7e5-414f-8a29-1d5eb3d73d8a","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"代码生成器","description":"code-generator","prompt":"开发关于代码生成器的详细内容，重点介绍CymbolAssembler如何将优化后的中间表示（IR）转换为栈式虚拟机的字节码。详细说明CymbolAssembler的遍历机制和指令发射逻辑，解释IOperatorEmitter接口定义的可扩展指令发射器架构，以及CymbolVMIOperatorEmitter的具体实现。使用实际代码示例展示从IR节点（如BinExpr、Assign、CJMP）到虚拟机指令的映射过程。为初学者提供代码生成流程的逐步解析，为高级用户详细介绍指令选择策略、表达式求值顺序处理、函数调用约定和异常处理机制的实现。涵盖代码生成器的测试验证方法和性能基准分析。","parent_id":"3bbd7f64-8bfc-4aae-92e9-e662fa2ec09d","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolVMIOperatorEmitter.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:27.9508998+08:00","gmt_modified":"2025-09-16T13:34:33.589454+08:00","raw_data":"WikiEncrypted:l0OSRLb3jX0WYjxj0Qo/HzhLJrl2uRFNT/reSQoEWm7ijnc3nZoeS873/OA4MYQhc8FvnfH8pKI4P8PtFJtmw7/kCGGJ0VKijx3Rr7nmduPr3bH1Q2b6rWLCewpqxNfnU7bl3VQspDoXRyQh+77zoNsmqu/gYxiXQ6PBuKToRoyz+p1/eYFS8B7PpvjgvcaQE3tTFYOh93MG7aKLbsRRkcobc2kM8dDnaTy90v0gsfoEo+OEt83SsjwgZucAB2fSK2fU51tW0ioyVZPD94eMasgS35mMjfa8A6dSFLMd1uwRIf3OhYY5lJyQJXynwIGnSFZJnydCLJMtzINnqJEI5Dc2wtFG1FThcR93xsGvmV4mXbXm6/Wgjo70I1F/pOiZFpgQXei0QYMeM9evFHrjSCb9W+gMH3Eax+MuQU5sYh7vNiOFmWThG+/1HSdEb7hYcErirAFomZME/oJ5bDv2oTOMNufKgE3syX1U8iqWDe82+JdiOI4+2dLES1HHtfX7u0pYbMF0ligzbpSphCvOcHLF8gMJTJeug1DI4xKVdA1v7E2Ik8bdxVf49x5WRNm6YRdeMVtzH85LnqcHpgFDFF7FF27pIYLUxITwuDMePHzAL8Sm1FRwfSzwJFr/vumbl9EU8RDe6cLD+ejfS526fYDNfPLI5epVlJwGFIRzBWcu/QwPAfpEN5FEdVGeofqUedPQ3KYjBIutJGfX3lq4whBhK5X10Za5FMQ02bonVOg7yc5Zt04bBx60k4n9CPDsZuawwWrjDU5PgRlStrW6LVGZQ6QhFg7a+8vqp1BtdMMKDMuiJfE1cPraa+iW++YtgfwSlW19js8XhrJkfk0QGsOIIjX5TgAvOLiAtGt0VTNCLvEJE6kJLKaMqM9cbewRGH2SyDLEBGI5baM4LQd2xZioOzTRk3cfT+/RUQoJIEUAR+kqTTDaC60Twr9ztHsfBOv5ddjP2vsz/TWxmgjNxg+H6NlbzrUb+5SZ5/P46PDF5y1M2Mm7FfY5yX9gX655XIyMZD4nDTu+mqWDT/f3rEOS/axmS7LAb8tU0seAdubE09XGA1E/2XOTo7nHeGotWCR0H8FUX4JwMP5idGad6bv5VckF89EaXn6wgK4mIhvCvvFHhxSaswDI7HaNcQm6fxyOR0ceNRzpa9IxKzgkg8XoEM3+FSe1IT/zg2G4oi+J84xgIpxSXXUM0rdlSFVPaWke5nAG+fnxYWXWvOxAOh5jW87C6d9VKVzs0+6iXS60dR9nRDPhVwMYQP51uDcp7MuGABlySUtc744Xr7svMqTVAIauueHoypiofrCpnDcH79e/EDUFkz5W1traXB1QBGz4zEZEDrFrSdavU4iBTgu1OLvIH1bfjQkLt/5eDP7ubRmbjeN4NFrGrs+hYlfmRc/Q6T3I/dlQ7joqTfOsRtV0/D3IwGrQAreCJAbI/JGjcewZiR2HS5Ujif84E8FFLWWDLJozGkDJLi6Lqob63xlpq7cyurTu7LszUH8uVf9pDfnhZRAVxdwPPZzGr4sHqSZf+unDcLpdZHTqZk8IiDa5HtnWxsrAlXh5wZQSRrtFMUOVd9LQC/NPxPH0rYjD/8fWyGajrSK+wn5QOmz8Sw==","layer_level":1},{"id":"3ad8f373-67c2-4879-a98f-14f9f14e5634","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"集成测试","description":"integration-testing","prompt":"开发关于集成测试的详细内容，重点介绍如何验证编译器多个组件协同工作的正确性。详细解释CymbolAssemblerTest如何测试代码生成器与IR构建器的集成，包括指令序列的正确性和调试信息的生成。分析CFGBuilderTest如何验证控制流图构建器与IR的集成，包括基本块划分和控制流边的准确性。展示CymbolIRBuilderTest中如何测试中间表示生成器与AST构建器的集成，确保三地址码的正确生成。提供实际代码示例，说明如何设计集成测试用例来验证数据在不同编译阶段的正确传递。为初学者提供集成测试的基本概念，为高级用户详细介绍测试桩和模拟对象的使用策略，以及如何识别和测试关键的集成点。","parent_id":"eb08f896-393d-441b-9c1c-d66e63a49069","order":1,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssemblerTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilderTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilderTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:30.4393775+08:00","gmt_modified":"2025-09-16T13:35:42.6927919+08:00","raw_data":"WikiEncrypted:0j4RRfWJQdenLQLpT+DwLTyjMVG5sQffpuJQoSG8tbOVCukW9eq2bqobYYACR3zRn/N/FP6n0t+ZzbrLBFIDPesB7QJDvVDQOl3SgQryCDnspW+GzrCJG9cttc1Jsv6LhVJ/AIngRFhQaWX4KBX0rctUNghW7uGPOqIa5DC5ieUNkukf9PtkP5+az3/zq7PSAr5s7mzl14UMleXcRUIX6CTQD+/69fzx3SvgFOYmiqLM7qdCZiJ2Bv5U11aG0G+nNQ3wNxpkZoqry0AG4DYJ5fA4lWWm2SfLdIMGICJgLYDcTAUeLZpXU08Try5b/pL1dgMXsRa8WobIroqeUsY5V2V2LGxJMtCu+S9ZpA7XH8ZLLAUygVkjSPdNDbmvYy1ivJkTSDXnJ3Sb3cPRQvIE0XbGb8uNFdarSK0eS/aO1AsagZjM1PeamzyRYbX5lNC+h+SIf3H69seTZ0EYd0pZf1EiFcpWvL5CnuKkMFYDSf7cq2t9n6sAGEilMPmRIhXgZ0yPPoeESIhKH/BYDzAafKQTlhTcKwGk3eh2unra7Uam7Km4Uenl6qPKxyFzE/YrAjAnQqVJMGSZ7YGtXfWTL1V75x0Gykna+vif9JyVomI1eXwcPK6fkGwqB7870KMXohn0BvjH+iyLLjGqSPPWLbpe4RCNJfZ4viR8h5+RXKXbzxG7BDa47XZ6BfG0Hu2ODnAVE3Ra9SJ5NJSCZhBTub80UBbdir/6DT32FJYmwz0XYEj6cD3l+/YmrFrjqA941J7ywh+voi4LoTT8NoL44fNv8S7OnhaQxhiYaECAzEnfgQr3aBTECJXpVcDvM/07pDE0qvz7dGXgWpVuxsyefaoaEP/ebUIifN3gGCwk4Kf5gLkzLCzTOIVRj5N8PFCekr5iWM7IVa8fFsLloMjwpVJm0bgfOQ/LOo1WkNl9abeJ09DApWOJ/UnqEVZFIJ/8GkIXS6rR7hXKDvTMzuDZpYoM6rBpXPekhV5fpMnOuJELBsNpU1ueZxAv8UKk/9BL3tF56UeIvJOm1CnXLmBv/on6ni3uRKd0aTjkaF+az3xj5RuOL6arlkQyf5fE92jzPtAH+SC1phbyb9nqUTNyiu+Ercr0iaQn2vzt+vlnhFCJSaCuyJHoiI32mm0os6MwKUsxilN/gNEJB5fJcLz0IjrrgmxGIT/quWI4HgP/YcjeTTzP4Ol7mWHeft1541qTtxCSuebwfsMV9Hy3NbqIw6D7r+uwEXCzFib0iTzg/scPSxeXNdpLUbnap2hJYCsvcm8niPOHszCdsah+M9YzqlR9tsHQWr1r7hmWkEYzxI47dbtlOL98qADlzTv59jUkmgjet+r32Og0OsIyeuoIlRUVU3LP9upBBbRm6N/zCyplWB/RFNqpe0DFyEBuLLRnm8P6oNxSEyDnsnZ3tOSTVNyPwyHCoBZ3u0e767wIQHrxOPkkaBYRqvx5UIoCdtjrQSbyeRKOCsBfzKnkqxfAc4mw4yCbXebx8nTEcjdJ+ZWCTs9AlS0PLJ2L+ZhRB+8m7ghxWG0llZTeB6i4W1Dp+8Wc4fCRqfuoqoexg+wcs0AxyLOTL9WRQMRin6L7wVcBUiSTNd02ByncZik/3hetYgUyZL5T6IVZrZOgLpWgWu9jkhqu6nx5pRCQgr38Ct1i5CkEzzHQHol2PVfwSmhkj9hYM6p5GeGtEWgfU1o10U4=","layer_level":1},{"id":"620d98e2-85a4-4079-8dac-3109be919d5b","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"IR可视化","description":"ir-visualization","prompt":"开发关于IR可视化的详细内容，重点介绍中间表示在不同编译阶段的文本化输出格式。详细说明原始IR（graph_0_origin.md）和优化后IR（graph_0_optimized.md）的文件结构、指令序列和数据流表示方法。通过对比分析展示代码优化前后的IR差异，解释基本块、三地址码和控制流指令的可视化模式。描述如何利用这些可视化文件进行IR正确性验证、优化效果评估和教学演示。为开发者提供IR可视化解读技巧，包括指令语义理解、数据依赖分析和性能瓶颈识别。","parent_id":"a9387ff2-2f30-4362-aa92-c7571e48427a","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/resources/graph_0_origin.md,ep20/src/main/resources/graph_0_optimized.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:38.5765548+08:00","gmt_modified":"2025-09-16T13:35:25.9514125+08:00","raw_data":"WikiEncrypted:Cwy8NUwV5gKXV4lJv71Ozb7LIHpkVntB5qy2BvKJmJY/5wpLjYw7kACPMFvS5QA4u8l2Fp4KEaOI8KBXcVi6gn0vLWHERsWQwd0Kl9RjcuplGLiijnqR09hU7eHPydFgQnrz1W0EVMUZjXutlLVvLj9KcXz3qfdwUA9Z179aA1/CZPToADDtsvT8YZSpMejoY4VRV7d39IBw6Qy3fgCL3x5xx2trAZLf42zOXxUfqfEO5zlSL+lH2QrZmoQH8qpFgp90CGSZ/hJLS2oAHYxeq1kWUXXRxHx5yQrLmakJf6dVC0UCLgFijV4aQKFIqs+NR6ns7d+Zv2NSCtM/pAvoWS8kGHExZ6C/OWf6vrvfQ21GbxakGP+b4F6eJrez83j6V3AhhUiSTfXUX0Ug0pK2kD2F/BPuAN+i8vyNuektPgRU5ff8ywW+Y/ZNYx/qIi+HVn3x7ollp8rEl9rRcwUVLidL05Ua1aHuTC3D6qYmpjgvKaByHl4g1NYZP5EZ3VF1/N0CVDGz4t560N3JVFgQ+9urnW2B9a7ubtutGNV3OdhCv1uZRqaBAH4erhMVKilHlbL0huKxzdaGEQ3wt1jngil3+4b8YdmGS/+8DeByDXZYtNR9BKpmbEnnE4d9yOChAWtGpg0ddhF3NMq1VxKMgxH6407HQi+GgFQZTLCJPQTXin2S6mK05Ev6B6GRVKRVo7TKbBymt1Ax3j9Vwl8XQgUMtnMqBxHuGrweUXxLqVI/HsCWw/ZPYGAdLBqiYCaiv8ZDyjdP3A60oMWVC105qAh6zbnaxY/1vH9OBraE+/G/Zb19oCmDsKBYTOXgUbx9pwLzHE1WjseMZo2ZG4hHGlAFae1fjOdhoSFMR+Wvdb49vpL9jeT4uW8YNkqqh6Ck8AH3VlXS4WkCzcY6XMRlsnjHrV/NgOXVV8ImkaVfm4a9pQV0I/jG33vQdbhRt5ngcYPmeqUTctT4zlY9Aa91XFmPqjeo/esXYftmvUivbD5Tj25fSbB0rGBgz3H+ezmX/wsXidoO5xmlaemSf2oTbF6GnEVLfj+OXDSZxvdS0mWSwVr7XQw6/HnE2UvcjUJZa+eKcem6K1wIJcH8H2EsP+yB0b34gjRa1lBMZ/d9MJkDvZppyJNV4uPREHR1Wrkj6GlpTJF8l0myiDztlduxGU3hME6eTKvWmimFI4SNcaMj7gm7+x4FHheJzWMLWUi2FOLrg3xcTl8l/pDGlsNbpxuwLEsp1dKJ399t7LIe49c=","layer_level":1},{"id":"7d62c5d1-2817-4702-95fa-9504c6155b24","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"组件职责","description":"component-responsibilities","prompt":"详细阐述编译器各核心组件的职责划分和接口定义。说明CymbolLexer如何将源代码分解为词法单元，CymbolParser如何构建解析树，CymbolASTBuilder如何转换为抽象语法树，CymbolIRBuilder如何生成中间表示，以及CymbolAssembler如何完成最终代码生成。通过序列图展示组件间的调用关系，使用接口契约描述各组件的输入输出规范。重点分析Compiler类作为协调者的角色，如何通过依赖注入管理组件生命周期，并提供实际代码示例说明组件间的数据传递机制。","parent_id":"51290a87-693d-46e9-901e-7b67ed62e6c1","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:45.0316309+08:00","gmt_modified":"2025-09-16T13:42:59.7650726+08:00","raw_data":"WikiEncrypted:4Zqjl5aZEo1Vv5NKBpebTkTkJnqMY6vRji3zUx2KWI5YHz8pPkMMxzSM3Rs9aiUqalQcJXZ1hH0nLNMJPrmOgfugOvBoitGR1Kms1iootHEhPeKPEXFrVVdGC9GbqoK5xV0EYYjeB/e/HK2dsxpxluTdDcGNN16EM7i0NfOf5AyRlK/XbNp60uP7+UYlSi2gpXK0LUJhLAcBkEHwtx7jmY9YLV4wPRTvlRNddWCOSv91oRsjyBKoF7YkyhXYrIMlbHWJaeEZKk9aMuj0KZjAg8n28Jy8SAuCzwA5wVtKmG7ffPoKQw8RXGd+8awNn2AQ88dLKkFDSuq5g7oxXxnakoHJUd6XzaKb+0tCQD8aXSFav2+Lo4XJnsaIOBkPLIzVQ6mUksiRVZW6YU4skQwL610acyi8xhb+xT+pYqEJTWEYF5M2QSMJMT5EeK3FyzUTVTTEG0BA4CpZT7LFBdGke9v0tNidKhh/eAVUV0Tg+Fo4hSxEa5YL6aW/O0GR6sPZHTRBEYoE96IQ8UA46B117XwDGXgpK5Vx2ixjIF0jXqSvsEnuNWL9l5OS3Q9x6p4QZLLp0lZ7HLsQJwlU1iWriBwlnctsit0/LS6yXeg8s7TEB8md53vj4Se9wNfSwUjPLM114kAWS9+ixuI6RHwIOPPFsdem/zldPFJ2HgQ7RuVO8AGau57qoxPod/WppgDxNRCLvg12esF3CdisDmEodO1Bd0+o7Jop7yE8X4963l4UUw2H5l55RZJBE2eVa9MnfWviI+jc8tgDdVGrTJxL81UIaYvg9YXuLUL41OUn7IhxOBwSwl7RaRtGJwHxClUrQ/C7GYj9wnH/8ESiTF8PSgGajhuSeAuCdH7j53ZrRqoh3sKQA35OD9UIfvPVfPBXNYuuIGGtLxrJbfMQ884NHiwqfqvFUjaUx2392CG8xmbUan/A0iQj6VxpH38GzArDLZPMPk4bqcGevtrfwHKA5apD6Eo1ykuog3v7mh6Rn1v1pjp6YdgYyooTApxCslyaQTg+IhKZJqksjCknBiw/ShRtnfDf6P0t7xYI+zaFPVf+izyU0hDeo8Bp0n1Ao0cPkz2BJcLj6hOVzUEKCmcbGnyTi/PGsue0ndJ/j9kRl0WTXi2rX9uOB+NrehC1rwE0EH03GK0R0HuzulP74+g6wePERWkuV0OkFJLQYsnbYbjGnDQywS1sVvPuRcyjXRFy9l8awitHu6aMaiTT3jAyJT7tNKJo8c8p+s4j++LM2u+3Ys/U8/DA0R8iwIuXe2tBZ29kRCKXzsoxvBnQP8Gtkna4xJOkD3MgWYh5FPOjNpobTrVOeo6QKiY2GDLDylFsTEIkeH+dXZ4f6ASfRFV+kGDuFkjN3Ns/jO3jdoo2H5YZc7ACLMGBFYnlJ3eGVBgVuGlKPKhd5eiqPQHG01PYMMCek2FNqhwUd7p5FvBNNTpgwtd/2pf7p7Gw3h7CERveHYOiJAiFSqc0dMAkhNGsqkaFKZfd4VrJdbiA64u7boMNLu+H2c+53Zcx7hutuILz6xMxL8fOMmOtbO2kpjPk3Vn6/8bEJrmwLkl/Tc++MEVRAmhjIdSYSciM0QTDPMjnuTbZRhBY+oHWJRVfgOcjk7oJInSvZV0kpHCpIzHPQw7ThtYSqk2ngaUWifkFJfqUb/3nTB26rUEaIiMneRSrrcC2ty6UCfRpJojjHODTRE5b+0k1xjxDbJ/zrTXv2GCJxkbD9zO5bXVBTs/TpMB4VyLBiZTvSdQj2T4VeHafxchw2QkGpXTdYi0zphMBKNPCS54PDiUVeWdmw6GuMoSyDA==","layer_level":2},{"id":"02aea45d-d804-4ccb-ac81-c478ffe8b376","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"阶段执行","description":"phase-execution","prompt":"开发关于编译阶段执行机制的详细内容，深入解析Phase枚举类型定义的各个编译阶段（如AST、IR、CFG、ASM）及其执行顺序。说明Task类如何封装编译任务并协调各阶段的执行流程，包括阶段间的依赖关系和状态转换。使用序列图展示从源代码输入到虚拟机指令输出的完整执行路径，突出PhaseExecutor如何驱动ASTBaseVisitor、CymbolIRBuilder、CFGBuilder和CymbolAssembler等组件协同工作。为初学者提供阶段执行流程图，为高级开发者提供阶段跳过和条件执行的实现细节。","parent_id":"cfa29f6f-36e1-4ac9-b678-232e5fc8db68","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Task.java,ep20/docs/compilation-sequence.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:59.5204224+08:00","gmt_modified":"2025-09-16T13:43:53.2973098+08:00","raw_data":"WikiEncrypted:Sq+/p8Wa2iWvvgytzJ/V34AeikhaRB8/XAxIyitWBMNpkE/9kDmoGhdSAlSqkTb2QMGl0dYmSneJg8LFPc/k4zZsFG/sws0FRx3OsqQaMiOft3lGTe1K76rRepZei5/cqmyO27VIt1L8bwT6Ei1n1ICCjdTufX+w7/unZm2bjRZRzc4RK24KPneUGv6ouz+EHPx+4v94SlCmKFIm2ZcmkWTMQOQLzQH1LesVDcxhP80uNScIlxTGQFdbX79VeTqDnsOPmClc2BriJmYJXj2YPkUePKdFyZLaNLNRIJrDDCqhk4fIFQzR0vKKG84ALYr1mYGO9oHRMqd+70Ft+03TwJv0x9ttW1O5gvEOJrbfdmfTatjM04WWY1Qj60eNt9Yyc+OcwEy7j5UzaNE+C3ExJu9ngE466hzdVMmYC8Uxv6ZbuMy3klplALXLuM7X6n7UVAjSa/7N5Xr7bO/QJqr8KOm/faGE5Va7rX8znwmBlIv/uJPLpJMpB+lrUikrokhDnXKY2eoAJeuRBklWsJiM4xbc/HoJ8lm+UPYwjggMhXtmdHSH2Vzc9K0nUa43FqBmFvoKgVhhQtI2QER/KJXCygIZMITpr4i/4AkTDZt5TRzHystNNTg2z10BFMnAxY/lcEcxqKKqyVQVdiVvtZAeyhNXoVsCXwdQOQ+JeCPVxXBPzJy8/pS1p1eQaM64XCU7/TCntGDfXzZSdAZKatFODdakbtrWIXODDbOXeXlG8enDkMluet/rk1t5N5kQnLyjZp8N4ZFUtrKJ17JE6fgnQ6R2OmRLg7DNB+Zbxc6l5gcmBe3iUW1a/Fem9hsph87/BgrlIyj5ymlS300iR7f6YP3Zi6FT7C3b7j505328oiQ7IOYfbmAIuYQCLsP9myZwLBULoKlOK+3XTAXg4zvHR7+3kUBWhzEUJCg0AM693ixnBOng1huMxpKhM2A63mTHemehBCyRqEpFVjhINT3rgnyUjVIP0CnpOrxY5yN7aP5RbPjnD40hqLBknzENSeRCY0i7c89Bc2dm0lkWIm1xUiuq7aOpcNzpAnPwp5f79YlQg2G5ivZU1EmyCxwprP5DYvcPvPMN1XSaypIaPHeW4fuqhVzyG9smKy9Op6503d474ti5W6G3GEIM0NisD+c/KqSsol77+7z+ilYczds07t3PIi8NS796lbWhqqknCTHazrM9zyK5JY0uEyDTtJRgNngAAailGc6dBCpAYDsdRJZfXAWr5oSentg1BZN4E2e96LGvpICrNQWnT/XQuXT/xPx8BynmfzW5IeKJ4d1pmK5RwPi4OWwNZAiQ/7P+8BIr8hKlkyCS56pYq5/kPOmtiVhAPsqM8IPaQqWL31ai539MYnwLzIJw0fCvT4gE4xo=","layer_level":2},{"id":"b71ebe8a-46f9-4d64-9f1a-b818a7fb554a","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"数据契约与中间表示","description":"data-contract","prompt":"创建关于编译器各模块间数据传递契约的详细内容，重点分析CompileUnit和Prog等中间数据结构的设计。详细说明AST构建阶段如何生成包含符号表信息的CompileUnit，以及IR生成阶段如何将其转换为包含基本块的Prog结构。使用实际代码示例展示数据模型的字段定义和访问模式，解释类型信息、位置信息等元数据在各阶段的传递机制。提供类图展示核心数据模型的继承体系和关联关系。","parent_id":"53669189-b6cf-4d63-b11c-3fa5fd06fb4f","order":1,"progress_status":"completed","dependent_files":"ep20/docs/module-interaction.md,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/CompileUnit.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Prog.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:03.4550955+08:00","gmt_modified":"2025-09-16T13:43:53.1475579+08:00","raw_data":"WikiEncrypted:/j3nBh2eZGsOhaH4GyKbokiR7itiM2xo7ApFX13bldOe8V/TJ3CzEYOyg9N42CqFu0DvmZGpJIIuMOUgAE8zYwHdLkXQTEVhIeHDouWEcCdP/EvV2nx5eX3Bzba5s8uP2P6VUnkdZCpXDGzeP9P5gr+tHzQwX5K8PMRw9ooRamByna/V2vBvaxcuhS3oMTBbaKMm0JwyvpGbYIFUXgIo4i5VUbG7RyC81VjoVJpA1bvdlWoDoAYOVLf8emDmKZKNfb35Tu96p0fb3j42KuVy40TkcfiNJ5gVSovwYOpMmmTaNZ5s64UXFV37lZIwLavJKveQuINX3p+r0UfcJhO1C/qWO2tRhECjgVkbswsrsd/Nivj8vW9heNUjGBzars1r7DR/8javyU7RtqZJcun2dfeHoaNOUXwsEfgCcVsYvJz+gKIJvNVbMQ7o9DvFbdR7brM21ozifZOQ7iZNMOtWZY7S4QtSzR7SnSYx8PSE+9Nnmx+UcQMdYDPDRFrKMf1OZLkqYgQRjCh6bJahwjA6qG0N71lo52rTxHGa8+VXB1wvW+YFxYY9F6PH8Ahd37QVbTdoGmV3c45p7qtHc8Q1PbfChR8Zxxen6V0QfqqhA95LSCmNY/n61vIhTaIsIV/34sgzacAwY0+yE8YqHTw6myGKHRy/eoAcF+NjVf0dZ2GJb+xy6Sh1ytQZd6QzMIifvjv5R2jw03X8OIx7U9xuIYhQuO7ewgEwrWTPoXZO6W50ulrEL9uGp6SYsHl8PFWkxFpQQUcm70DqMXdw0V712mX8orAxKHX1oAFqU+16DsBxBh8eYxmwcqnTmRlPYAEcVoNzg3L4XF+Z8vYtSelBmBTXd0HhEue5R0eqCalK/JWpt6Zfv6B7ANHkA3app0Muv6YFPVyLHfGAfySM3U9TGUsyY3fbWUIp57MBVY8hmWSH3hadJ2IsFDVGNoa7EiRIu9PNoasCo1JII2GhZzdTE4k5WvyrNSzEaseo/Hm7Phn1HHG0F0Gu0WlNhTWumC39881s60QM0cAOZgMxtBqSzvbCGlNS8Iv3Js3emHTkNyiVdxrNRihlgyAq8O7WNxk0YKknRlFk3cbCyguGb8LdTaT0B1Iof2t6a6ilNKh1Xmnqz9/2QsK/gy4AeNOi6SvpgvMcqK46j2VlskRugmZR1jQntv3mGbu8AW7pSi2D2H/pT8WIALnOdnFr97auCBGxIR9Xno5r5hTSctHDt7OWXw==","layer_level":2},{"id":"4e47ee63-55b7-43ec-8f35-d64f81f1d70e","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"构建器模式","description":"builder-pattern","prompt":"详细阐述构建器模式在CymbolASTBuilder中的实现机制。分析如何通过递归下降解析逐步构建复杂的AST结构，解释构建器如何处理嵌套表达式和语句块。以BinaryExprNode和BlockStmtNode的构建过程为例，展示构建器如何维护节点层次关系和作用域信息。说明构建器模式如何简化复杂对象的创建过程，提高代码的可读性和可维护性。讨论构建器与ANTLR4解析器的协作方式，以及如何通过构建器实现语法错误的优雅处理。","parent_id":"2f45dbd6-0f1f-46c8-a5d3-3382ff22fd32","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/BlockStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:15.6127089+08:00","gmt_modified":"2025-09-16T13:49:03.2682994+08:00","raw_data":"WikiEncrypted:ucWFSzuy5xQ0tyNthgmlOtyD6lu3KBCIu2GNEK7VQTbB+wBH9ZxyQVXG77EI3SylmmTFu3ZUAU0xWxaT0pivYpUOTiNqeLFNmOKtP9+M5alTNkQHatNkupF/5ywJ/gY3jXcZAKLVlqevBzySJaWx/BGE3/A+fXZuwFMxzbV39rpGUI8huJTGH/xFqFz0HfkFbmAGsebUpZmefHMzPEmzXhLiqttzQ4PWj5LZJ6fFmqgnkvhlECTLRj/Ougo13llvp0CeT3FyytjXYuamfR72VB5Yl8mB80RsZmLUm5+/2p5jW+NbAHs6zcmsg3O64OVLpSz6t0SdFczyK3GPvuawZBrhTvA9J4DCJorsWangazdPdQqMGKNTdXdAECtBAzsUFNx/p3x9zxHjUPLo885tfSlwn09umhicOrkufhOPjlyrhLnSPxjuiegffIzjapLVaocrFzbGztl8Op3VAZyO+g1rGP1gIwDn7o4876/oRElfGowe2TcBqHOFar/w0+PSSHnUw5P4Z22wgWpWFLwnXYrVwaKAZL33cBu8r3ZdVd/TfO2zC4xHij2X0xm2tVaM2h1yhQsbusDhDoxh4Y8pNmX2DZN6XZXrfDnehdgOUzdWxgukczE2WmPlL0jXanji9cIzEhErWrQH7375nKVjn/+clRuyfyd58jsrNp2qAExaB9uq/8TRxJLZCwfHpD01MdyzDmnIgjDVVYE33ve0P6MsXAoDsKoNE4XHPrY+XzfaUFCR1iPkgXOnqxSldtcpElMzKEFKUSHREQE9/Mlo3Qkdf34uqX16fCZ4BMZvHqbsi53qN+014Oe8Y3puSf04Ib5uraLlM8x55SiBkJXftHo2p9dBxQI+hd35uzsNXfLHXPRZ8mvj4RbnO/o2wfacqKxCb+mrWxueHfA9TYuqpls2A7OISxgAeu+Xo4BQtsxSIfI6dcrCviGUNqUMyDyCA4xdgSQCDvZCCaZ8GA/9X3K6hfl5nsVqxVpaCgW1LPAK4OFvvIidKNYm+seUIshu8pALz3YsRw5Jt6bb8TtyKSmDS19naEgvjCd8Sg2WPhhpxNu3kTzTeixWG+wRTDBMnpvHOYLmXQ3aoNKLSKBeTzGxTK8TiaXSX1J3BU5zPYuGxuhl5m64zTd/t+pWPF/o/96GmpUlNtvqtT/RZixZPk0OCc24Fruux2U4dC5kFOeIyGlk8u37L4u+G4x43tBO3ZokFEwyaHR9VdAcjVRFsp3fwq8IpcuYT3vUJfAl163BEzR6b0+kCW9kjwxXCfAponMIKonaJVZIt+JXRRomwn+roviBmgJUb1jykv92XtizPrPgUEiFR+Jxojma/VT2f4JmgXnM7S3YuV1X8HE2JYSw2OfaKnLGspk2oni+5EQKr5Hy5avBbNOYJY5gHKKntbLfiSoxfPVZSTJjYQT2fQ==","layer_level":3},{"id":"32e999f5-1ac4-4c02-95e0-b39f06e2a22d","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"语法分析器职责","description":"parser-responsibility","prompt":"深入解析CymbolParser的职责与实现细节。说明其如何基于ANTLR4生成的解析器将Token流构建成解析树（Parse Tree），涵盖语法规则的定义、递归下降解析过程以及语法错误恢复机制。详细描述解析器与词法分析器的协作方式，展示关键语法结构（如函数声明、控制流语句）的解析流程。通过实际代码示例演示解析树的遍历方法，并解释解析树与抽象语法树（AST）的区别。提供语法冲突检测和解决策略的指导，以及调试语法分析过程的有效手段。","parent_id":"7d62c5d1-2817-4702-95fa-9504c6155b24","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:20.3111618+08:00","gmt_modified":"2025-09-16T13:49:30.3487351+08:00","raw_data":"WikiEncrypted:ZdM950mQYTpu8DmB7orTHvq3VlRNVc1PNMKg4KBfoWKzbeFPNCPCiBemXFZteBwL9WOYfXe10JTw3J8r26yIpvlcaZtgV8FNxygcKMAI/XsTOl0FaiwLaVE0jGzof1KFAjigiFchePlM3vSQBmHUyBhkjJG3qEXGVyQlHbxdJnf01wAyfj4juuPeZEegsDArGCBTj6Cp8haG1psh9RHuYnNry4UjyIA9fy3ffuZuuJ1LaadPPuhbb2uUo1u9iYvQB7opYfDGDPbP06kROg4V27GlRj/e7T0hv8uXftgidoceZdCWWeI79+00zZqpKHsh1SWEct5PakFkMHBT3yBc5gztEe69y18qC3gNPUYaCyItyhA2TN18cTpKayoMgAYlawM3CwtcyJgjK5EhRe2lyJx0lNdKF+Kp3q7aL0mYPm8yNs4VA4JM6zL72WfB8abb2ea3asWaUkfIDPPlyolwXvYsYQBGEQ7sMbTSfoVtw5fVnBSxsFq8XALs2l0Ux8GfvGA39/YBj1Zvr8CibJoLfQYiLABgW3qqq1qQxRLOy7ugOQh4MvtkSv1+9r7llKskl7Ktnnclied+pESDR5xJut/sOnrJj4oQg9E12TysvSPhf7PJyBO+vuFmXB9P29enA8+iuLsUL6ivd2A7ouXO+DKZHPeyvkV298n28giR0xsxU1ojGeadQkzIZdp9pT5zLiTSF7q1UJl7p0gATPKh233I61xc4WFJIFAz0OJNmd4Jv1cEIp0XSA1DLyL5FxRFrkZ4DdZLcPZqlqfSowwn6PAVl5Dms0D54nwIWwu7TDms085mX/lrdg7RiaPCQolTWSRpZaj4suZoMoK61YN8WIHDJJxH2ZhHB5n9F7l5YfmbTlD25pbiRf18SzJf6FlA00RAIEn+55TyRx8VR14Hwiom5IOjJkbZqHq1zxIEdYIHoQPYyePpd0lhBzkXzP/+0Xjm9QhoiJy4KlI/Wi0ZN0U0a9hSyNnkFgI3a8gY4wB4qzYzW7ySnliTu0D53c/cDUjBp/qGMLY8VXRhfXeZABhz/dKRcauZfWz7aR4hpVvaJRa7hM5GkYeLGpQN47BMrhPMK05dWgBZjTM3Vd+P989B0NIdTQ2N08nUY8mr7Yn0BNNpVhy1F3Ym4uXB3Hm2ZIe2X3+YRC3IKe8IfmwySyojy6Wb3QXe+nB9iRAgafc=","layer_level":3},{"id":"03028ef0-e84c-4056-9d75-0c23c41306a5","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"阶段管理","description":"phase-management","prompt":"详细阐述编译阶段的枚举设计和状态管理机制，解释Phase枚举如何定义编译器的各个生命周期阶段及其转换规则。分析阶段间的依赖关系和执行顺序约束，说明驱动器如何根据阶段状态协调模块间的交互。通过具体示例展示从解析到代码生成各阶段的激活条件和完成标准，包括错误恢复和调试信息生成的时机控制。","parent_id":"fd1402ba-850d-4495-abef-d9ddac4538de","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:27.0612+08:00","gmt_modified":"2025-09-16T13:49:53.0575947+08:00","raw_data":"WikiEncrypted:Sq+/p8Wa2iWvvgytzJ/V3+F2ljgXmxKVhQtKxtZOq/lhF5pJVwFQggosyTo6e4wi9k8WSZ5uy+0bMtG+xDWF/J9RgFxhsnMYMQKzQYBa49ZvVGFZctIUKzbwOV8QMdDuDCgXF74+jq0nXUwcX2vHd7niMCocXlP5Y7vSmY7Zw0BkwT7xukv2OlLYhBC7sHPxjQwYhNv484MSSOjQuZeXSMY9I5tJ+xUk8mJWV//fHS6vwBPGT9NmqD8LBvBY1oB6WmE6VtLWS8nNyuHUGuTWGAKT+DcyaGHG8Yktyb3GmAD5hNv1gWUZz/GtTNgJk4LwX8V9QEtWcQJ+8fh94lr1pl6mI3wR00V9xCDVqTM5D0Dx4s0E5qc8CXNJRSR30mu8VOhvTSglibeEEpvj65so+g1AenOmfjElFXLxjBmod3Dq6KAFQ3/pMU8aLVvxvCjq3mzQrYiGzELHq9rxKJbejRtwSXZMFAqR8JXvVw/9QcGAxFJY3txEbXKMme6TZoNixI+2exwQS8aJDtyH0BT8RMX09HCY0XwpurxQ7bDEOPFp+srRNqODi7VYjbtuae1ugmBkMoxmPBWW1g78P5WqACLzQc+tAeE5iyfza5ot51yIwMRscLcH2NAXhCg+hJcYTkHcjl7hS+u1T8HkoCXoDd8HOP9Yxnv3Ba7aGs4+DyPmE5+IBkDEPn8sn7/SmTEw8mlEjXEVP92GRvOXJcwLh6aYhx6Ws911tE7jt4CG6sR/0arjj1vOVDvhBQhgdDIQYPtlD9MTDxDlrYXgQhV5yXooUZC0jxNF9dLX8hoz7aWrf4EdD8fksHmqQOnNogZfwYpXp6Lfo4KysfcKN08me6zb/lRYhixYdfIHJ+dSE24tDDrmhpOTWs7GCqiGeMUUFWoOaFdBEKKwC432kjTH9WDuE26eeAs7XfSailnta7PfRwmgkuwdKhs4CZPihSZx","layer_level":3},{"id":"665dd28a-282c-4d78-934a-47773be5f23f","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"符号表数据流","description":"symbol-table-data-flow","prompt":"深入分析Cymbol编译器中符号表的数据流动机制。描述从源代码中识别标识符到创建Symbol对象的完整过程，包括VariableSymbol、MethodSymbol等具体符号类型的实例化规则。详细说明作用域层次结构(GlobalScope、LocalScope)的建立和符号解析的查找路径。通过实际案例展示变量声明的符号定义过程和函数调用时的符号解析过程，强调作用域嵌套和遮蔽规则的实现细节。解释符号表与AST之间的引用关系，以及如何保证符号表的一致性和完整性。","parent_id":"b84dbd21-6abd-4fbc-9be9-f13f8d0d5ba9","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/Symbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/GlobalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:31.0923097+08:00","gmt_modified":"2025-09-16T13:50:27.2294054+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO7324KgS2GqlFZwSD/1N8undleAjt47HoCXqrW0QJfezAMlzxkXRGCogc969cPR/43P3cwY4d2Orjnrf2hTsffhxSH8+PqHwyafdBX3YZAtZKVK6Gab1dpBuGYd/7yiyLSPO5PBhmxQbeGD83miXu3KjwSrIKdw/OIPLICUifr+6+QbFeChkUxG34zNiaavomEikME1DvHoWgsJD623oa1ot8t7FXb1VnEEzbKtcGBmnLpJYApDCHUG/5jJvheh/VjHmczTeXUjCN6jen9ClwaOx3fd2meSiHzX1hPnrNZQ0fo/f525Jugq3+GA8I30dvU1Lcm+vDkf1qMQQvApKNrIhb4SsYDwkV1mWUWx5vZbGb8I0RPJKs3PuMObe5i+8GUf2/S/52lOr5jWjUJMKgELW2hKo2t6WoN8dkyo2B5cNuVM3X+DWQZ8YKbIdHUjvVAhsbXLW7MMgspt7KduqRnlVgHRC3f4D6g/9RK62mFVEF/Zp28xMAjri+42TmT69L/Fyo5C3H2JkNsFh1HwV+SvhksV4g11Iv4k1HBgWCHY4m32CwmpnYuwPizB7l0zagrI7jup5q9LxCYP3pQXQltRKJcjMY+e7rLXz/Wx+0twqC6hDiKG9Tnnh3QLEY0QLz/VUTSSRwv0CkqBYxA/sHQcOkjwa5SyJ0PIJFounwJws7REFxDlGsXYer+gaA5klpsYVPY0qZoXmfue4jtFyAfbCM+UpXBbBOrsfs4bHx8opDdkZY/XVctoVsQGEaYX7LQzSoLdSppy9VcGCAa4M1mUYZdquC/7ZWH1jdrRTccRmQ70xThdgnU5v/WsQD2ASVmJGxydM2sm+9LJDz1f8TZMBL0vNF7e0YNl5e2sVv40QhOTrUd3MLjyORbmdBR/64nDerGGk7MkQ5T7IZXaTiEy5pRlatx8LW3Y8NAE2S/FbloFXblyQSz9tGUBC4De4MinIrvcOOeuyjK+qxX09HfLFqT4MkyH/4ijWcJ3tRzBEw5t5OBR1MS2ghF691QuuqlX5MgoIv9mgdRMcAulHUrAcKW0mREP6EkvIETN/9cNhQkJ6ZzS8EkvjrOHSHbFuU98oe9RjhTIkh23LerI9s4CmvRRJnwD6SgRbMMl9i3dVMjMSzbzCuf/mAdImy3a8hKbMTL5N72+1Ax4SvGuRso/DStAjOX1VDkqApBc/BtMImel5sT84tLp6h1dDlJOKjXaSqlczHnEWqh+3jWd7ow18Zral+xhPXJWNuyNMlimcW37fRepM2ZUP5zJzY1034Dpkgdjo1eCtN2Hac+WzJ/yVbV5+v9zzPQBPM4NEUu5renn2SWLq5uwJKJVe+BRnaqw==","layer_level":3},{"id":"289e740f-640d-49d2-b5a8-e166c2b6001a","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"IR数据流","description":"ir-dataflow","prompt":"深入解析IR生成阶段的数据流设计，重点剖析Prog作为中间表示数据契约的结构和功能。详细说明Prog如何组织由基本块构成的控制流图，展示其包含的全局变量、函数定义和类型信息等核心字段。通过CymbolIRBuilder的实现代码，阐述从AST到IR的转换逻辑，包括三地址码生成、虚拟寄存器分配和控制流重建过程。解释IRNode基类的设计原则及其表达式、语句子类的分类体系，分析指令级表示的数据依赖关系。提供实际代码示例展示IR遍历和优化的典型模式。","parent_id":"b71ebe8a-46f9-4d64-9f1a-b818a7fb554a","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Prog.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:35.5615368+08:00","gmt_modified":"2025-09-16T13:50:44.0704634+08:00","raw_data":"WikiEncrypted:VWl6sayjhDtcdpvWCty5YjGLGU6d3BSsU4S9hMKNqd8zgmSABzistAAfr4MaRm7Qn4IvnwxKwsniy/yA0fonv/t/uzL3GAivDXQ8pqq4DnNcvHvWqLGA3P81cFa6cjS1UHsIeyXeDGHGKrynkuSR4MG7X0ki6EeQ0NAuJu1Jyr90aaCUHP2tISukh01nqL6mZe8dH25N3p8Db8IX41GTGST+nsFS3pwoEt+yOgAFiQLWFgbUt1Zr3COSW/9grDjir58HN8QZlRMaNo98Qi2O0O3Qa1Xqgvz3z0MsTCD1mTMuTjfMuvGQuHMnvd0rRJ6o3NUMmhuQRn01qF9Ga0gK4G7nXZOoPxjdNS0Y2mS3qk1LR5lwvqFqgWVLWj6bEkYlUYI28h8LgFfDzU9ijJetS6SkzLEq8UaxZWz9y0v477DUdotBJfL32WX2OG4xVfJkCzjSOFPZtds5LcwxDqa69BrfslqNA3oj/qmxOJ3E38hmvLlhRrqmD0pwl30RzoevGy+SjScBSqtT1rXsuJzWQSlndzTMje2ZNjPGeB3HStxVDMmBUuIO0Vw0xzwcZfCv0Z9O6suTsD8rymkcftv+TuPIRRK/w3hlgsPD3Z1bpG+dIrtXDtQPckvyw2ueedaq5nHHSHxmKBgufMIiiXqxoYJI04qg4rHQsSrGk1DCd80TcSX+u5OV/lcI+xbubZmHFE/6bNaczPbC/6FnarjnyXGDiek+b9jRE1X1YNIq0IIGANyY/4SWaWBH5ucIzf2g3vIYxkW5jUlKpjo93p7mD7nEfHgsnQ7halTkWp5jUw8QQmAA/dWQyKF0wShLopvFbzjuVzC8tuRVjsukmdFaJxCsnq1slbq2orcCHjRrdi1E4ODQACkO2VGGZCVts/cS11z1H9b2pHqyYy+ynguxoOKNC6W1LCG8ibKx8wqfWsH1nDE1QSCD0lV37q5iAzWx0mDiZvkFoZJJ+/t80ZhNASac94Ab9wEsvgWRM1P8a5qD3h4uG1tb/Ne3pQFFYGJOeop92yGm4dHXG56EIKPUHLtzkSpTbvXgZ6vWbH1IM2xEJyKu8zgTALDLD2HyJhH41AW8GHvbcW/9BG0CNba/bdBz9cLnnAEpl4NHnTj4sa3FzUv0Yhjj5UYI9s5skfqkjPLWUX019vP7KZtNVjkO0iHW8cAoTe/vkJN/wKWv+Uuv/LD2raYsuEjUiE/DCAqBLxZi2FjqboM2Bfqal2yb9W/zcWVcvHZRiaJuinhJd4kfK7iSnsdWUPR7icQHGH5zlPc2p5HzmB6JNF1FG+8bFHcwgtvzWaqrv3Bm3PUa5ISSUt4Q8zweZ7hA7xvti+xc","layer_level":3},{"id":"6a440a43-4f65-44f6-b0a9-2cfb1e5c0c9f","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"编译器架构","description":"compiler-architecture","prompt":"创建关于编译器架构的全面内容，重点介绍Cymbol编译器的整体设计和模块化结构。描述分层架构模式，包括词法层、语法层、语义层、IR层、CFG层和代码生成层的数据流动。详细说明编译流水线（CompilerPipeline）的工作机制和责任链模式的实现。使用实际代码示例展示核心组件之间的交互关系，特别是CymbolLexer → CymbolParser → CymbolASTBuilder → LocalDefine → TypeChecker → CymbolIRBuilder → CFGBuilder → CymbolAssembler的数据流路径。解释访问者模式在AST和IR遍历中的应用，以及构建器模式在节点创建中的使用。为初学者提供系统上下文图，为高级开发者提供组件分解图，涵盖可扩展性和集成点。","parent_id":"","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/docs/project-architecture.md,ep20/docs/module-interaction.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9097991+08:00","gmt_modified":"2025-09-16T13:16:53.6476381+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0k1XYS9Abj7C7khUeZl2EQe+hN8G0OOy5YAJChxfjB3FFBbLCtupP0jrl2zNlBzlcz8n7ZsZGP4qKEFPmClCI5G5s+XtlqeaY/6db3eslACZDIMO2PpoE8U80c/Y02MZeqfVn7/z8Bwb9N1sruTX55v1Bbhgjonu9elmRVjx35VR8bTX+VpDXaqRi+3JSctLqqQzH6aItSGZ+xyOG4viTKmf+A6d65c3G2weHfvHG1l8r3a4Ws+uIKCHuBA8mvOGCUOF54aXRwt2w6KimIY6V25pJZHs5nFZJCuBLXkvKewWjY1zZOP5f90ToMWKkY0D2c31BIt0Mo+s9F5OfneruiKkgHZyTOyIrRPqQjtlSp6bun2kEol1lQNUrmXMMlzxMw4d93b0ZJLEBS4E+RbhbcbKc+MZo+6JmQPD1wNkP5peBZ3DlU66DWTHWik4IXWrHfD09+Ilon/QXG/1GjCWqGXQcpwmWn1hfxDRM1aQTbjU3sJAoGQpZph8Rsf7UVAtgjOvktGmyixEcBrzQKcHp4adTd5+4gt7RQGfCLRf8a54TFaoTzD5VYiVCe+gWNgFOF1cNQVQeSw0COoB5IDjkXNuDCaM93iwinBzxrgbgwqmc9MtbbQMoAhhNlriGMXr7h8vcOydjiToXPRcc39b/HCQhIF2pGTWKTZx2OaeVyVtssMd12Ta6DySwt4NRoFJ68/NPpx5aqSPwvqpBjGjpSjjr3JdRNM79PaddkTDCbl7dpFpeV4n4w0aibpc2yHOpqJeUwbNecaiGc/mi8c3ihQgLLLrBwyDM52hM2w5Km7PNqCWjwmHAwlKl6zgIHebDiw/KnTaigCYV81+C9GrBo0SIzIWssUfIIfKu2/DJsyOCTvEuzInpXocH5Bin64BsgIIH4tjGDcdSzQsyTmzWAwbj+jQncvsh+rDhxWjOgtPqA7M+R8IHXLNNzo3JGQnx1g+9TdJxK5EyTt3oThVceLYoYvrpAjsT5erA11vYQFSuOuxPsuqvWAa4s6UayBo3/ObmE6CmMwOQAgzep5DvaQheAY4sRUQfNNhrBPnewqJ5w6eqATFIzWv/qkiGPTw9pTAuqSoGYGs50DzBdd+AZAcc9y0Mu/d0kUMEmSHXQVapN9ZxA/4EvbjxrR93/0BqGM+Kt2fONlDVAE4a3rJDW3L8s4RM97ujsUUoFNW3vIl1b4qSOf5vibSeCaflqmn7G9pa7HMHi3jj/nUMdrwAhwdghnvZMLlg8Ej48S1mi0UXVc+BJwKvrAvzDADQDQ1LtUhf1SutM5e9t8M++F+2cw6cC7CHlP4IOs+s3ksvEVYOEmcH1Cg9szCupxo9j1o07LCSWrUDzWP//7hoEtqJJmxZVUp9to1MlT78cUbc9OvyThjzYxX8oQmOlg2iZMoydOAxPMzigI0dCGajlMr09gm13kUSDAr2lgtQ49LybfFk7inDlE0FNp9tejfKXYAJwoTkPg4wCj20C72i5nVd+u4hZCPNndMsRON4XXi77QWmN41GyUULInMqyXtkLWYw==","layer_level":0},{"id":"53669189-b6cf-4d63-b11c-3fa5fd06fb4f","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"模块交互","description":"module-interaction","prompt":"创建关于编译器各模块间交互关系的详细内容，重点分析核心组件的协作机制。详细说明CompilerPipeline如何协调AST构建、符号定义、类型检查、IR生成等模块的工作。使用实际代码示例展示模块间的数据传递格式和接口契约，特别是Prog、CompileUnit等中间数据结构的设计。解释依赖注入机制和模块解耦策略，以及如何通过标准化接口支持模块替换和扩展。提供序列图展示典型编译任务中各模块的调用时序，并说明模块间通信的错误处理和状态同步机制。","parent_id":"6a440a43-4f65-44f6-b0a9-2cfb1e5c0c9f","order":2,"progress_status":"completed","dependent_files":"ep20/docs/module-interaction.md,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/pipeline/CompilerPipeline.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Task.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:41.2200272+08:00","gmt_modified":"2025-09-16T13:36:17.4224703+08:00","raw_data":"WikiEncrypted:MaEDad3+dpW6rLlXdYaTGTHPaHlsh42e09C9rQPZ4xnPFiG8tj7mo/DfLjX8ibs8QhrwV4RjcBk2VAmq8FBbkEhmaDLby/AnYGpiWvz1jmMZiJiKMSgDjIqZ+yGJmKK4I5OGzP11WpHZ58qZpsoMGyQ9+3yriQB+ijU4JWyM2VJektSR3nm+lzJxONeylXfifuaDL2fnTpBGqsEUP7Oeg2VvIlhZL2eYy7E3gdqDQED+RufMqFKnO4/VjSpNOXUKYmMKUOCsXBHwW5BA/tcAfa6qXVqOq/epPEkdMkt3wHRNWz0pRYL1sNYFfkGOYgpYDsIxBkaYg3fnj+N7ZHF+snT1kiPuLEKK4+RXYyfb5lakDOl2HMh5DCaE5hh5Sa8VYqbyryg32znKYqMk3A7hsJDnB2AopOOK4U4G6TM0/KOP5d7OMxrCw8opALRWYPctyYodoMi4D9cnoGRqTvSDvPRztzzbHyBILJY6k9sYVYlUy2we1pQA/9LhXFU2AugAjeGrkulEWj3eQwUI5MC7asSfTd2R25dUepK1e2VKGAj+AzqgLGhfXNNE1bV0NcGatU2KC2PvN0jIoxT6JoJI9KKgvnBBdkS+lOwjc8FUs/AZ04FzlrKCeFdsTfbKO6/zVpP1xLEoV7ScUGGVH5Tk6jGm6fHqVX6aKdneCOzhJypGoKLVEZnszWoZ0wcf0PZm2U8ICntyyMa5/Kh8cuN9XhQjPU8ztkFfGm91WEtSvy7HyVrTsSpL1NVMzqeajwgYKpl2FednQgZbcVewUlpf1F/W9AQbKKHLEqtm5EC3Hg7K4riFnDDXOZQvUmjoDZjLkMWerpE3w5Kzi/LR5qljfo8/gRFlVDD/HsaaZfd2tnHR1b9AHigvkffhe60w+kmaFQnea4ZFs3QXaxGN8mpS6+FWSHdjDJEfyv/a4O7AF/MEMR9c+AEWUUDOvwTy5xGH5u0wueASLbsfY8tmxEN4hmhoBLdP77CM23xX0fg7IvBFYsQu27e2R6/Pvtz+IRkrNN5bk7EZ5y0w56DBzmLBAvFjFQ/ePLcxOF+TDtfr4y/GMi/yqlR/FN3/wKwLgtFTMQkxVXo9YLc1SmEan/iZdiKWs9Qb0Y6tn8SBu150aW8l0+/2Qj+4SrMmQd+NEgjX3aUVa0RFScyTRyd/vfV6rzMf4mYINj3WKwyw9P7VcKdK7N8bFVaLUUdUiT//xTsfW4l5okSa0GtX6jMJNPuLhR4ElHi4snux2u6iaeIJcNFWNJsNZZmUMSdtVPLwr9N9xExSmijsFzmSlP5IJtJRcmltCDJeuxBwCoCk9v1pbwNcqhuB0FGOmjeg8N2WZUKG9FuokIXXLllWZWFGuT6HjK+1cb2VvA4aX0Er5TV/wcpr83SmiFf/yowPbWhSOL/P","layer_level":1},{"id":"35cc2664-4e75-4845-b03f-2c4a7496446c","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"AST遍历","description":"ast-traversal","prompt":"开发关于AST遍历机制的详细内容，重点介绍访问者模式在AST遍历中的应用。详细说明ASTVisitor接口的定义和ASTBaseVisitor的默认实现。解释双重分派机制如何实现类型安全的节点访问。使用实际代码示例展示如何实现自定义遍历器来执行语义分析、代码检查或AST转换。为初学者提供访问者模式的基本概念解释，为高级用户详细介绍遍历优化技术和多遍遍历器的设计模式。","parent_id":"66345862-5842-4b9f-aea5-fef17844a70f","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/ASTBaseVisitor.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:49.4301237+08:00","gmt_modified":"2025-09-16T13:36:32.693492+08:00","raw_data":"WikiEncrypted:MwB+E2zPDLVQFlDazXcbVrmZt9R9D9vgaNl5rRFMR/5EQYxy1RxXw/6KOpIH/pnUFuSRaFZoIjp4IWP8Relqs/hyP5qANYTQpY035OkvQGNaijZIMeHB7O96WJGN06Q8liIqzWWNfG1h01pm93aeOLNl63ugjFop0FMqda+jJva1Yf70orlA0n1cH0W5xTmGuRhleNnHh4Gn45uyzFB16VVQ47lkZ2YkSQMAkGYZonjDAzIhvoUKMKPk5sZ5qNOcHfkZ/YUkQjhbu5+miLU0X+BJq94vlFjYIrxZsdOvpD4Kwx6dZC4ag7eRL/SQ+8lcBZxdEsCpFMskKgOJmZM+vIcTRclxGPXMtKvu0NZwmkq6ddDTgtHO0Z1mopro8wbLFwQXaNcnwxFLI2008iBNTg/gQObVC4mAmiF+6iHxq9j2+bXih3gwjotm95Gg4CcUwKbTBuhCZIOFIJynrawtQxsOlGFt4YSKr8lNEUM0hFmcdPvi4GqNW5kVi6xX3kd5VWEboXgYrUcWS2/3VK9gW1FUEz1VQGzru4qCdEByfXgll0dMOVfhoodxaqlDJEecXNIAEwhaOdSkQnYCTEPRXwxW0G3q4KaB1Yl1XuLFIkpovf0AcmgZubtPAX1Avz6GkEzkhclsG5Cpz0etmY64ck5aPpJSWs+ZM3msr40G4XjXrimDIVt5FOhJqX/lRjR4vQg3PXt4U/HDNaoG7XAXLzaXnwwBYBJbn1J1QQpzqDg+KcM3ms3ESNOkp/b2fMocw33wtD6osD82VgDqYB/+VVk+6uBvQQsegFDUNitTVyuQ1wUNa8grXkmBw5Mjt1R675+9z91lND5NO6cIwzxIF0k+zY8mcNjp6sepDOiGuNSDhIq/G9kzR8r+SkUUD6aewVTz6ENqhYRW8lQ0Vxr1S0kliOwoGQpvz5ttvb8R73IaJtwwWNMOsGeRmBFyT+f+bGNEeeuAGpx1zNXpvy2ONO/2+1rD0qXK7dcnO5zaLAxLnPxdD++0c4TUSyFPztu81QbAjTKMfO7Sn4zxWg0DymcFzETisadMs1Xk4+5V1Ds+Md3BOHDD3KWelJ18Q5wHRPf40fWiPmNvVaswJmTi6bIHgdSAIs6oxER4TWKuIseJlFIXMB3bmg0I3UbIgrMaS+fGSpy1waJpgOz4841PGR9V+oRuNcGzV5+Pjcd/pNXAoQK162cShMPyQxlbuqRCkCFuyKj4Pl+Bt/5eW2c4Yg==","layer_level":1},{"id":"771dbbd8-cc7f-46b6-a0eb-0fb2d9ec6c5a","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"符号解析","description":"symbol-resolution","prompt":"创建关于符号解析的详细内容，重点说明在语义分析阶段如何通过作用域链查找匹配标识符引用与其声明。解释从当前局部作用域逐级向上查找至全局作用域的解析过程，以及解析失败时的错误报告机制。使用实际代码示例展示IDExprNode如何触发符号查找，并与VariableSymbol建立关联。说明解析过程中对类型信息的获取和作用域边界的处理。为初学者提供符号引用与声明绑定的基本概念，为高级用户详细介绍解析性能优化、模糊查找和重载解析等高级特性。","parent_id":"59c404d9-484d-48e6-b14a-5bc14f06eaa5","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/GlobalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/LocalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/IDExprNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:54.8692581+08:00","gmt_modified":"2025-09-16T13:37:12.1746911+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO74C/A6VhPBNejIV1jZ2jmpfE/NIWbBdFW8jr1npPhGrAt6Mwd4/iM/2V5Y35kt5G3xig0OtxH5MSD4u1zs1jZl5tmfDabHME4otgv3ccZP1oOVbZGH/A9GkoxXmFic7W6jAfYqlYIGtL58XEIP173K6xCjdow70vq/Ew/guAOMH1sLQCJN5BXabzpfBudTeOre97by+XYNBhVwyzZZgqfkW7RGmLfwuKbEo57kKa6bbwBKPxn4XdS7o7YoHSJ+lBP6s3grvDS3QZ/zlhsztFToZV1qq2kRE8GWvay2ztE7eHRmYY4SRurL16LlVL8jBd27SiCyp5sykrP1ORGJQH18rA5gTTAqqtU+C9868+/kBVS7xm7n/LeWzT6rtF3jA2BCdvFwogFUhLaLEm7Kmxn7hos3rriDiOq2/q0sR2gX3pQZfSx18nBJxzCeDVum5+cE9UbWTBEiYmWUkE0+xCVXUkl2e5aFzwpIJZa3SgdmdLQT8kYJdZuktSZt+c3NHyeLQI65rRqQ9SB6VkD/C6CTSro1lejFY61TM0JUTZaEakP/5NOjdWejPSxMLXllrZLRrZ9bDn3cXgoO7KkgytBbcxxU+0zHqegbI+RqOiIadCvHYHbJlWsmkzLHk+7ahTRYCdkGmsHoVWYI+ljS34gHzgLmo5wfiWsw+qUPVXkUbL9EH/v6DW5pZnPYB1wUR/aSKI+3/ZU6Q9LpH3byepatsWtaBjecFpaeSS3hnunOgoM5ETKkYvvYt0fPr2oAlLI6Rm4oJD38CMQWvWlsiB9vL4NhxXLlzgKttZ8G2kQ0c4jzDMHEtVATPQEvi8ry0jJIVRL+QJaoVYoB/uNGt/dVUfhNWsSOASAz9LVWLY/9n26gxBa/O1f4JFMCAJOJnyNTDy28MXBTjSWs6CwkRgiq7hO3J68Co2oadrgQx3KxWMTS3gSicCsTrLKXWbjyNBjwDubPfCN78lXp+a0uHn6UyxACxRaO4k2XMO5A6S1bzMPj+nYdLVfMi/8mBpNIqyjIY2zrS0J80fwg7vWbNVX4JmjwIx/EJK5et4ISOHpGty+TAa+5gOjabfGLT4x4u/3oN9ij3FbbwrTo7Izjs+FklBeNfzyyU7W2vkcEY7vvCzQCJCejskaWkmziV0imIC20cWaIDZle++j1h6LCBsngczBoo6Hw8PPpjQM2pJxjlqzkDfNZDSHHW3M8F+VZ3Z5SmM05fflMU6Ti6KX5tqBSR6FfXl1ZKD3ST6yN6uYKqdwZ5o6Mv8Q+vwE9/H2rIlGxiydDm0drsfWSAH/n21cW+uV0V5EfLwPkUoa3jJ1qbyGCtQ4AT66QD9pzaiZM8hsQjiw2/dw78nRSEGwIyWB78kNgA9Qo0ZAsNsdwK2g7PKYK9WyW24BzLd36EzwnXnxxiEz3w8hQA8qNuC6gjYR94tyPh+/qAyYH0ZNUCnhXecBforWGaYlR3ZHZvQPVOwtc3p9OusN1fMpzsHdwY8u4Xirpa8Bdb3lLfjIn2+7Zr9pV/eBlJIx5wpUv09LeFomg==","layer_level":1},{"id":"2e5900f4-f328-4599-ae39-431f3491bb65","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"类型推导","description":"type-inference","prompt":"开发关于类型推导的详细内容，重点介绍表达式类型推导算法的实现。详细说明TypeChecker如何从AST叶子节点开始向上推导表达式类型，包括字面量类型确定、变量引用类型查找和复合表达式类型计算。解释二元运算符类型推导规则，涵盖算术运算、逻辑运算和比较运算的类型决策过程。描述类型推导过程中的隐式转换机制和精度提升规则。使用实际代码示例展示类型推导器如何处理复杂表达式和嵌套调用。为初学者提供类型推导流程的可视化解释，为高级用户详细介绍类型推导与类型检查的协同工作机制。","parent_id":"ac5bf875-9f29-42aa-a192-749af648a6ea","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:02.7194688+08:00","gmt_modified":"2025-09-16T13:37:32.7253606+08:00","raw_data":"WikiEncrypted:KudkUTkVK8fvhBgyghg+rjkaVPMetShi6LRFfhwFyB61/K/aDFtQDN+myBCHtAKs4ZPMxZc0Kc8hM84IxKe7yBKsk2osJDubVcV74sLQBGGA9STMQeFwtoWlVz61Mf+rQHBXE5WItwpVud8YUzwEznicrc0bmxv51j12plXG+YB+vO9Bu3Pylkmw49K4l3yWqM0x5TPTdaUinGNCMVfxasyI/+tBZKjaeI/PsAcTQRU/iSLDQzZn5SVX+jc9nx8V1eXrvJyt4V/2Xl26J+mxaNbrrwSYOsUX/fM61mNZqKSemFHaBV7ReIPYI4aKqO9vHEl0BhKOKlit8TwVJcaHgyL3+ljp15ceHG+fF2ZAmi7cZNKLKagfruwVT7oa7m1z/xpcI5SwIJjZsiBvro5D5GpF9TuakCOoU577FTV5WTpipBWVv3ZDSWQEaDVhgsAg8zkcJFXXxTtYZKFYftp6zyyZPlBZsWyAxkyZ4uPPaAmwJl2Anu0dFPeblJfAMnUYQ54eYNZMys1A2/gpVIgwmwjwoKpi6lj0vscQSFrD9LXW7RJxt70a3CetPHjpdu+SJKbPSkdcArCykyWzNUfnCGRfii9YVk30LqGc1JZRNYq7tU2pLBXHdjhyiSDoTGtwu4qVIO8YSRcHvBsIMXo3ptzt45ZFag4oragfZDleUCRgzwT3u55WAZuaMMOWwP2oJn6OsXLUpc+hA1Ybnxb8ivNhBRgbk1exkVf58XleD/Gsx1ZNl2sB9xw3BN7KTduGL+caDoQM77S9GimCDuyjdjCWDbCQAr44iSzJJLk6SdUxwLNWEo3+rooYpXLTXZzT3JNLtVNUGyI2Z8CVvCcHPev5qjeelDq9sT9xdBsJt9J8MdFOPWGnwMcd4bEED0KUnh4YnPTCyrFrJYuDoeGeJakaCcc59bsOt8opbiLuS2tnIKy//X95g1nLvxNlecq/0nrNi/zCZeTqYFYox0h+JlzBXBe78+fOCgXKxlvnAjZZPlQihTuddrLaW09VSZXJvF3911VVjmSXpPEHO/YRfAGIlb0BYZrkq4RFSEJqTevTELwz0Lp4ggERAYciS4SYC/SUFqYqRUGNePCNke9VDgRtpjgpjsOKetI0E5YqmvxdlyDja+RGopcRbGl45o64JhTMldPszG9j7cKXxqkL3NfYkKbWeF99pGOwnV+ru6qHtZzPzm8myG1IUV+d+yuKenWWekmw2506miMFIRLsBxD/IQi6eP12Y0JZ2NRzxenm/Ak5CHOci5BXEwIdd1VWTgPL2jo7KAc7Uv6m/PtB1tAqhupfXUvnVJtzLPipNOwXxaUjHuf18SB0oUx3wuj9VuoPozT4+ScMIsJltIJcuOBTrP35QfN9s/rfisEo6CnRDcEQw8XpavP9/DHm0gT6Vlbb1mJIdgqpop+XWX98PW4Ps+JXpPUQFKmryLz/emr1JS7bFKGYw1JHgvjKdR2nMm6E8fVpZ9GlyrbocIHwkYmVs80YSSsgSRavPtMGUeWhMzW+gnCLGB+qTOpHYzGI","layer_level":1},{"id":"5c659b96-a485-4c1b-b9a6-b504b24d7630","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"地址化表示","description":"addressing-representation","prompt":"创建关于地址化表示的详细内容，重点介绍OperandSlot、FrameSlot和ConstVal的设计与实现。详细说明虚拟寄存器分配机制和操作数槽位管理策略。解释如何将源代码中的变量引用转换为栈帧中的具体位置。描述常量折叠和立即数优化的实现方式。使用实际代码示例展示变量访问、函数参数传递和返回值处理的地址化过程。为初学者提供地址化表示的基本概念，为高级用户详细介绍如何优化槽位分配以提高代码执行效率。","parent_id":"5b067f09-3333-4799-9e1c-6c881ba1a4c3","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/addr/OperandSlot.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/addr/FrameSlot.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/val/ConstVal.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:06.3597182+08:00","gmt_modified":"2025-09-16T13:38:10.0068512+08:00","raw_data":"WikiEncrypted:9U7rFx3uloCX5PFuRZrXkUZNdmm3hcjEI02fu82m1FdvxXH7Skq8wHAgGNZJ9TlfOe0RdmYOv6w0FzAQc+41ptz/FPAKflfa1DSd/tRHAOmENIEjIMXKUwp3Jt0y93reftfnaufBAE3UgNFGygGvbXjSQHGcWZ4Z6g4qYuxit7yR/mnYjnvRD5Sm8gG8EpIuuczoAIr/MEFg7nM1idndV60BufW6x/9l/IxfKkcQTj3QeZnN3p74G+o+zXST7aboBVfyeH9/IyYu7NQLkmMuvdGhGJM80lhDG9TP7aRhaiJhtNE1najaZu0PyZua7KZWJOQPlbaSd3ebLAmN4h1R/iz9kEqZGa/BAJAkkw5U92a0d9Rk0R8CZtZS8G1mZCMLbVIuTXmk2/5mbNaVIcKYfEFoAcKpchSMeeysHul4oHgY+Bh4sxwQZY2yfbO6Yz/jmpTYS1vZoskSmnY7qJ2+x05CE91s7cExzTMJ5IXkWrkw53I0MUAgbo4Wd0/cylOFc1EupJqHzmwFLQlljIkFi04ELoBtoF5Mzj6fc8sUA7bRdpe06lEcivxoWJzfF/ZYU1E1nvfa2HfF5A+N1CV/ucs8U3T+B7AiT7aB1b/VEO8IccnQ2xhRWYONFAqrAnoyQllNQiixN/NdrWSBPVi9sHmUPBZDtAn2DebUrUSgkj6TaSVr7mQwjLNOI1fPLMEbMg1/y858hVcqtC23HPBcAtUwEvDhDCggc4QMiE3K5KzLg8R9drY8Bmlki//P2dKyyCgqJakj/NUbtILFi2/CbGrOEIchgVn7tOFkVCOMGBKZBSBtCCnMLDHYZi8ftJ7AlCIbIxKK38twxrThlr3GfK9B1H7JH7GGMHhV2OYBYf67eUpHciorTieU5Kkt1rNVS28uIMIISF+qhRHhRVhTN7Qi6oAvmwiAG+mrFFvNReaiEgOxwnDGoOGB4UIUr0vtbN1awMssQv+DORhkBn8Bj9aS4Ld5LnjwAOSNTsjlKWQPR5dZ/b0XAmtkHSFnGvjncntp4k//0EeeTWg0Fsws0aeY2J+K8tIQsIbR5FshyqE5kAInFw8Vp534X3lo9tXnOuttJ7Jw3GjVGHExYSlJRwYKsa+dDHJAsGwL/ilSfTxdY4eiEwzO1KVfCcszDoDxRwZqccBHQzNiwcwOhVYF9tZOrRQO0ZN2u7iPwQ4Rrjn5kfKvlvGZUzkhE1nYVZSyUclK743Kp5akPgRW2Hb1vqiUSA9wOSWJiFd371i4jE2HscbiofQvDZfwZNuwup9hf+qc2wpFTRc+4QMRDwcDSrnyVnldJobI/TNS+7SJeYhxZ9B7BoOnDt25rLCz+MqVmpsXs8blWCA09A66IuQZ8oGiVhTUe9OpexL43wZYs1+6SMZF/ylwm5iCKp0IxpMhVl27DvV24OXFz87+TYuIGw==","layer_level":1},{"id":"aaacd5cb-4601-4970-bb5a-eb2da90a0207","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"数据流分析","description":"data_flow_analysis","prompt":"开发关于数据流分析的详细内容，重点介绍活性分析等数据流分析技术的实现原理。详细说明LivenessAnalysis类如何基于控制流图进行变量活性信息的前向或后向传播计算，包括入口/出口活性集的迭代求解过程。解释ControlFlowAnalysis基类提供的通用数据流分析框架，以及如何应用此框架实现其他数据流分析（如常量传播、可达定义）。使用实际代码示例展示活性分析在寄存器分配中的应用，以及如何利用数据流信息进行代码优化。为初学者提供数据流分析基础概念的直观解释，为高级用户详细介绍数据流分析的收敛性保证、复杂度分析和高级应用场景。","parent_id":"78a90da4-0651-4383-a60b-d0fb3120f02c","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:14.8097045+08:00","gmt_modified":"2025-09-16T13:38:37.7770834+08:00","raw_data":"WikiEncrypted:TX5k7ifWltj209qdR7PsyV5Q3ld+QW9OiU/LfUTl0gfGeQo2ikYlWRBVaAaXNiiCYb155uWnTygwg7QyWGJlg44JVDgIE0hflmlIwjtmuVUxEsDg7cdefSLAH8HUkz07k62e6tOxZUrjpD8kD9ofb0jKdC0XOzWC3uyOSBNGrORX194GfRXme3VKCYka8SSqdJ0Jrr5UMb931TWmElvFGVNxIN3NYrx/fpF38qcMiVNEUNZW7yMs0Jv/Z8CLi9+8XHFnR+wyJeO3c9Nm7oR5GUlniJuUifV7IbYywFAuidAQ0zPNhMcFS2Bo6IyjPIbxUs3BOMevZkkJApqF/Ao7Dn3zhKLq1c0YmjH6KM7XN9JSVfVvKRFBp/Ts/nH+KcSiAuEYKPCWVs9VmFguD12Ga/92E0PFC6ymXAa7QLEPnyufmc1dSPb3maaBE1feEEoWFbZ51hKdglWiByAg3ldtrthmGUlStDx8Wkjym4O4NgQ9vc9nPx+j0IGnMsKLkr2zAJn87naNPD3u7H+RtBqE08EdiTCA+RtjBar8CtabgtOQestiAuWRunzeADHyPwUv6zd17hLAhnuAyGC+69R0qPTt18O5ZfYmfehGqZjB/drUEwnj7ws0SkOsjny9yqY5/JAD+bZtL6qtNaAka82Jgr1wrtUIzk7yrqtd54A+VBG/dglgGvOG/3Vw9VTDiG9Y2tWTr09GZfWMs5iGEEmX0jXtxBahK5ngtPmCqFHYNLXbIZXflIRiAPfTJeWRMSOvfwtvU9pXpcBCGLpptCFF5Q6dP3HlR6Y91IATTHxFZCoDmfjOFB6TZpb3WGxsp1Ct/IHrdWL5xw+TFE/OvLe4cKPtoPtORbHJN2R33PiOb9BiyHq/jT2nueMdO0bYsELPArRh/+t7ukVfa5SgJSFUmRGngN+jnLIoMkEGmLqDAf7n5LoVjwpZsbe0v3A9SVwakq94+FI9pMgcmpJYG2Q/4DN8xS22FthuQVaiMXX23QHMYlF8vN4kmkSFBldBrTbfAx2/Wwcyvj526R++BbRGhPOvLZsrdsScYrYSdWfTAUzDx5c0/DIv+Eha5vbCsdsAVSZ9xN3f7isOAWCUyWQyeyARoVXaFWpwhR1J1HyISZy/uzXv9iAiryY+bKBCXD3KkIC9APRtzjH6IOFHLpv6hs2hLAsUDXSaJjwn5mpqe+ccR6GsA23L8cs/DmkusosDibn17XmHxfWOkZgKzmSCA8tx8VC2E3LmrCcCHAitgjuX7M3aLtqO5zbae+01Bx4/Gtb/f8BpUK1tqsdrFEuvfvmqM7H0w0ReYKbizDil8akKlk6jk+YOVdw55qsciJK70q3UPEDoybwZCenLNXF0F8taI/kA1UB6PBHpmQ4zxNoSNG1Jg37Iq84eXq3U1k7syNCz06irbpwd81hqVg5uMrnVbmJrQqLfgrqL9U1mV5S5E3OgMSMhLp10I+AEfTeVzeWUvgjFy7M4S4F+wzcTsJ4rOx+743RUKcJWqVaS8BvghNnksnTRVPcQOCHsRQDK5pywY9HOBEkmK2uy2lfk7s8I0LKXZAaaENJoHhyU5zrX5LPDOOb9N7tJdpztKGdEALgtRZDnjpmXrT0nUffnw94AwfKJ2YhAdvuwt5nqlfI7rFRZ07k6h8EiqhqqzAsWkk3CyXJX/9KEDpdlWULoUg==","layer_level":1},{"id":"0a479f3c-aaa5-4335-997d-4eb1e83b090a","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"活性分析","description":"liveness-analysis","prompt":"创建关于活性分析的详细内容，重点介绍LivenessAnalysis实现的变量活性区间计算和寄存器分配优化技术。详细说明活性分析算法的工作原理、数据流方程和实现细节，包括如何计算每个变量的活性区间并应用于寄存器分配。使用实际代码示例展示活性分析前后的IR对比，说明内存使用效率的提升效果。解释活性分析在编译器优化中的核心作用及其与其他优化技术的协同关系。为初学者提供活性分析基本概念的解释，为高级用户详细介绍数据流分析框架的实现细节和性能优化策略。","parent_id":"50dac0db-cb65-44b7-8414-bdf4906d2e14","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:17.1598494+08:00","gmt_modified":"2025-09-16T13:39:35.6494792+08:00","raw_data":"WikiEncrypted:vp5iIehX8Bt9/0gaK3FLs62nTUEz1yBF+B32Tv5Zp6P25nTs+vfFcO4nWmfaT4om4EcYpSVtsDAEAihr/z775FGnMAte5ATIESgZ8kWYIoAEi4Xzp5lfccSbE/LYh0OsIFjukUKEwINYDmfKAL3sYWlrAqy+bfeyDK6JdKq/ObJTDmPcVnCdhAJ9pJLYGCSfARAUix/+qw7lpG41yXIME1DJJ3zWmzMffyZPw/asNJNkx++DrHqJF7k00RtKBWc3tdCF8xUq/02UEF0YOTsENK/T0MhG6HmrEHtkXYJtPS32XhPB7IkwRg2tGrEZb7NE0tllAvJQHGyu6q0w7FRwIjGLgtJh2ILYXP8WiTouAHLovylDNr2oW1PYp28YvLn/Mv2w1hQt7+6hmNj+qOtAtUy72cTx8wP0TPt42iVUMwyHroHKxTkDosLsqHgwCZknjN7o7nRuACMptUVML9KTo33AQ8AGjzmRUtGlUtdmQ7viMegazsUxG7O9PUVqpGU5C6wUF4Y5wgJVaLGY4D6oSKObHezwX9vwDaBOY2L6CxTu0PNnGsWN65kD1VoOkb1fmpsltGsflC65VbDL2VrzAi9goXLHWM3pdgDFDjiqpkiQX/5RFM3l9gsjl5lh2ck3vriafV1GWMzfCyNPA3TEgM+DgSYnufeXIz/cfVbkl5cFyQIKKY4Sb4XFEjebB+YUB5tExHZsg/DE3J7sfqtdq6AEK7v2Fw1+tSVeqgNFd89jvlgGt3gRN4DmPvMKK0A/jJ3IQtdlRa4f1spxG6aEyQmm7c+lBRf/UQCir5M2yJ3AMC+ppF7R53dGiloCp0lG5QYfdLa9O/CeFQ1+dINbcq0DE4S5jJf+me8i/lLq/bMpTJdmNL7iv627ZvlxxSEYa7led0zz3zMPtuLV4BH5DWrFd/rTAQ+hHJXYJp788ym9EMZFqR5wsyg3YBSK2TdrKztCcE3/ifCTrSD9dEe3IfkSiQzzo8jAxC5ZR4dZ66gtRoesDFIVMIz9BBh2LR4Bi83/IKWnbRW6ScJhK8gU/yt5+Gg4qUu5Fw50lCICKqIr5oRdtgKjZdCq9/GgE3GFGseDHgv3yOFncC+CJ9Bwu4298rziPn7S8SNinoJ9IFWUVr9pPta9F4sgLwuHynmCGWrN15rKcae2hzk+jtG4ryDt2/werGjQyjz/80chqEe/j+5ntGCoV5c/d94kDYZS2jcT07NM0XRbF8Znwrc40uvfuOOg/p7kdCRyuDxFfrlyt8Xqq/9wQDH14PV73ztsAAmNtE+fxmTmt6vgyAQ0/qrGBPjTfDf0aLvHT1/f32c=","layer_level":1},{"id":"2ab3d455-0fe8-4922-a4e4-ee11cedeaf6d","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"调试信息","description":"debug-info","prompt":"创建关于调试信息生成的详细文档，重点介绍如何在代码生成过程中嵌入源码级调试信息。详细说明CymbolAssembler如何利用Location对象将生成的字节码指令与源代码位置关联，解释调试信息的数据结构和存储格式。展示如何通过Dumper工具生成带有源码映射的AST和IR可视化输出。为初学者提供调试信息在开发过程中的实际应用示例，如断点设置和单步执行，为高级用户详细介绍调试信息的压缩优化、跨平台兼容性和与外部调试器集成的实现技术。涵盖调试信息对最终代码体积的影响评估和可选的调试级别配置。","parent_id":"3bbd7f64-8bfc-4aae-92e9-e662fa2ec09d","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/Location.java,ep20/src/main/java/org/teachfx/antlr4/ep20/debugger/ast/Dumper.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:27.9519298+08:00","gmt_modified":"2025-09-16T13:39:31.8583395+08:00","raw_data":"WikiEncrypted:eLqrgRpVcICDKOEA0n6udO7MxmfE5iDbhRArfAhNJrvFXr93/GD6TUw1RAKhCmBRJZvQ/J78PrPWoia8VsmbUdNFPC7HNAeJk37fush4XxKKESVdcZghQrrVv2rE5m+Ws5PukoGexOoBpejZaw1Y2At0V5YpZiGiRR/mj5fuRQiEMpp0XvbpJu7PPkIFFfsmAUZpld6RPw96clSSNldKSirZTeHsUqrIthjypOrLnI0B5Te8TeOnMQfbG3aTGCrpIsO1dC65t8C86UVgHFr9GAYbxBsf9azdwtbRxqRKXzYUszfg7696zDwZBSnOaF7Hq6mvv5nj4yO3CIBcLTxWUP5431g38o3CDz6a15pCAtIdYTSNiqRcfHyPnThVWTXPA7Ycz+DkZx/m9cGnGjoqMA0/KjiK1bLHtJrN3nIsJkjhOy5fyMTxH2h0d0Nl6jeq8MBZOTMb5bYfhgTdsh+fEykX/T7h0EsvZEtxpw6ws1Xw1dDvAhPiBV2fNffDddmRrBp7kTf61ivu3ijrLVpV30fa1ykyw8SKa/mFgmRwsTBNXagxO+VM75k/4aRIyzhPNk2W37qP3LjeSbHsqWhR048oae1WFhc/TLhKXa8Fl+0C4j/uLBvbEM1P1XG1xjmOy8MkSLbXkcyT9/SbX2VuEVJu1Ab7+EIQpysyLueD8OhB1BlmvOtWEYTjHM2deR28pE7uOp93+3t6E4VxUm9jnZcooSGiCNq2hdWWZlxIur42hq+mdZDsHYb5KfOy1KzwstIXJBfCgvz7YcfIkAgjx3edF164yZ85nGGU/59QXMnVj29lHC3N6Fyn+48dHfCygoWaw/DhxP6yvkaRstUGpklm2SAeqYedFlyjcb8Q1Xd1rRv1EVSF8OMNBSzbU2Y7PzznYsKyc7hKXsPjNHjfoRZDU2LUR14+vjgoMcPHly5yzkAMUF8Q5Xh9VYxzyRFFLb7wd662x20suGEvrsVWZSyXwMcFYuFylzE6BBh9oFnSbcv77p3VJJULLQjgtd3PErvsAzfsWQOC+f5GikPuoO+u36B1k4W9GCsBq1BY1S9813Ffh/mKW0XwTDs6HIO+I5VM8EaB6rDvfAQBGFb1bhtDCxhl8d2Z031GWe2mjqsQjgH/kpHbDnFipiJ81S/cFudu7V/2AtTB1d9DK1S03vcsPO5hMTEKtuz9m5GAa74heJKo8ZGCssH8ghZGH4cKtu47jYeSGKO8gwljW9GQipsbVu3X2vmRY3WvManld3RKYzDsSzaxYeoZ/fJXeO2kFxwSAXHUooYrhu0DZ2A4KPUQW4Y4jqiJdYCzTmEtMPa5em7pZo+gO0dNPAmI25JkxyB42KICdccouD4LGAiRhpaBgJR4cZqHej2DRQAng0rDwZ7zyphvlKbifmlDPBpwqdkUf6eAUikCXsl82QkLqHMfjehrBuTnvpr6T+82lec0gGBV1Lk92OwwcevktvuRP+CmL7AuXzIAqH3GTbylLAh0p23rtb+SuixcS6tb2aQ=","layer_level":1},{"id":"99459f82-f03f-491b-aa93-54ddb79d6331","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"端到端测试","description":"end-to-end-testing","prompt":"开发关于端到端测试的详细内容，重点介绍如何验证完整编译流程的正确性。详细解释EndToEndCompilationTest如何测试从源代码输入到虚拟机字节码输出的完整流程，包括词法分析、语法分析、语义分析和代码生成各阶段的正确性。分析ComprehensiveTest如何验证编译器对复杂程序的处理能力，包括函数调用、控制流结构和数据类型的综合测试。展示IntegrationTest中如何测试编译器与虚拟机的集成，确保生成的字节码能够正确执行。提供实际代码示例，说明如何设计端到端测试用例来验证编译器的整体功能，包括性能基准测试和错误恢复能力。为初学者提供端到端测试的基本概念，为高级用户详细介绍测试数据管理、测试环境配置和自动化测试流水线的搭建。","parent_id":"eb08f896-393d-441b-9c1c-d66e63a49069","order":2,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20/pass/codegen/EndToEndCompilationTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/ComprehensiveTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/IntegrationTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:30.4409165+08:00","gmt_modified":"2025-09-16T13:40:51.7425893+08:00","raw_data":"WikiEncrypted:8PoLi0fFbGrJfe5V6uXOMJtzr94hGMG/xWmOGNKC4gvw4rPF3OheCfHdt/xXuRVlE1/pYQG7F395vzVHf5q8GqMR7S8WWhsMhPCmI0epqpbIdkGtsc/of9zeZEE8iDEjr2U8Q1Qd/Yb0bbOHjX82aZTdN6TQJrA7CIu6fKzqXh2AgFnni+Q8kEkV+VfOQI6eXrwXbSOsLrPMnSbDczrGYmBQ4EaGmnl42HLrrnhPIkZlcO/8xavljVYNNPqSjG5T8jXvD3Uq+RNg5PMt8Shv0DXXqzL5CGmV2RmWheC0yFQyAMoL7eq2Ox+NMNI5YDgnIgYMxXr/7Ll/cg8Ph9g4m9SCTpAVXEKCBe7aChzIIM8uuiaquofuNxu0vWo15hZRcR8OVmsALwEi8HISj7srsSWXSaeHWucdxC09JahA67XtZxpDJydt+KiVUSln3e91LO5QVC2nSirKPwgeW7ZGvyAjveTptl6K0q7k6nKQIlHVs3kM9lNE8yVpWcnUKLuy4KOLrC9TIim+vwHuhlBQ4D78P9iVL4urWBYCDIR2ugcjVQB6jHNFFBFKLeIpf6MK/v8NNK80gcw2Qeng90Hrt+ba/yiqLK0bGi/0CHK0+ov1oe8FNME2bHvMZmnllYeJji/Ee0cRtAw2Uw9Wz2GumEl9Y/GOtdc5eFa6pXLThejarPPCsRW8XnDSO6qRRybE+VD8AH85u/qaVYmsmkSn8aNCPatkk8jUjV7Z2AG1UY1ySZeSuVSEylGM08fuTEUlyUp2NXb4UJMXRwfcyJmJskPG6AlFyC3tGiGBilYlJPje1Kjjd+Mu5kAuzl0H+0BIFcbvaoohdbl9qB5ZBC+LwAZue2vi0jEH85uCsoAdyOs647zofikezHwCW5v7nIcNfr1WS0wKbr5xZjCjtAd3fCf+7b36YJNOlBI6C4Y0XQnELmxHm3Og1lf5S04zsfS+E96VBcXmEflSs6IwHx2i7YvV66VgwAgFWX67JwxP88WUMNGxpWKDWIAOesQgSrHK9c+FR1OmlFVbTXdejq8MMYkCRzrYtFIG6BVx77sujrZ2mHli48HFF4jUS+O1umHcglijFW7MvNWf2EPDQEuV7oDtCI+RunA2HtDFY55HMvD6L4yH4gzNCl997lfDqoGYGoOoDhG7woirzkIrVFosyBSykQ5EVeM8ahX+yRvoCFq/qWpFZL2wHnLCmfwc4EYwEdsoWgC8lQXXRQSA3HT7Z2Dt4kUFg7bJR6hQ3r5XeTxp8Udj8fKuDA5uXGfbehgLqVn8oqtklRkH2/NdtJFnlVYCoIybHH5L+CSJTUWl4w3H4WNAk2SqfBr3bKvRwlgPgI4M2bMAJBLKN13/U41jDtCTaqOITxnuJ3nKJNcl7sSdXGVNuWeGOjuLedJWyX2iuti/Y3VyS3LcAqWvJ4UVWR+9qAkh8D8uBVdHV/ROiF/oD77bthUkOW/VxP9Q79Ag/UM5YRct/Pm4y+DBT2CA9doqQFBn87nL5p72evqGDJ7e99RB9iIJnECeJglW9esScZwCxw2P5bEuxqmwZU5nC4lT61M/TsHxjkQ75Je+sop2Be4hNp7lUe7BwvMh3x/BTsjclrmMdGKs4aJxfGkLpJ3A4HUHe6CPRBn9xrxmSqTe4xBTzVd3Ma7CEJbENbPv3hvc8d9/f5mnuZw0Z46SsY7gkwDcAr4M9cafB2/C/ucaVHhijK2ZhNOkmTv+Wnf65QQQ4QxPfRbY37c0eUf+SqKzX4JFqhkUy6xa1sBGnoKPLvzIRMcPtxsPLcuRjfNI","layer_level":1},{"id":"91152100-c94d-4725-b968-213ab7e3568c","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"CFG可视化","description":"cfg-visualization","prompt":"开发关于CFG可视化的详细内容，重点介绍控制流图在编译过程中的图形化表示。详细说明graph_0_origin.md和graph_0_optimized.md中基本块的布局、控制流边的连接方式以及跳转指令的可视化模式。通过实例展示原始CFG与优化后CFG的结构差异，解释空标签消除、冗余跳转优化等变换对控制流图的影响。描述如何利用CFG可视化进行程序流程分析、优化效果验证和教学演示。为开发者提供CFG解读指南，包括路径分析、循环结构识别和数据流分析技巧。","parent_id":"a9387ff2-2f30-4362-aa92-c7571e48427a","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/resources/graph_0_origin.md,ep20/src/main/resources/graph_0_optimized.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:38.5780979+08:00","gmt_modified":"2025-09-16T13:40:44.8822231+08:00","raw_data":"WikiEncrypted:GkBcVch96JGE2UiSjYTCbMTP7QFDyzPiAqI/4RxUMTkAYqktPjK5NugKxc8hfOUTVRavUYM3wHfhK5lSLEIOV+B7G7gAwwG6eTuyFf9yU97eoWji5D2V1qSJcoAWUXvd/VvvhRBPxc2cYz7guDn485e3n/hwHwJuDWLrEQNkFC3WCHSPHQQmAlUwCnQChQ6wf5JvM104eaHN/TjZccbapslbCMSBk8v5HmKmSP0lbu0P5tkoX85G99MbBzNuDB4CYEhuqD6P08NwRZDD5Tq2BPJlAEQp4HubMox18bI/t8vZISNvQ1dq8SrgDKoBK2RyA9j6usHBlkrKziDdpP2dnxLPyPB1HTGBBHWye2mtRxti5NiTZxFJll43fDeur/E/uRCEgAKWWK4NCAWSmidOo/JxLKrYmaNmsT2dxsTziEHauoNr9xlMPcgJWMse9VhDXdnq8jq9e1zXjXeNpILgT9G6S9ek1rvccuWX0tvFCvnqJbbkQmuJy7wB0oIu+9geIKP5A8W23cQP8zCzZZZYpuim3vLVQN9uqTddcd/q/JPiZ5a9mhZTaV5Gvh8EfeISZ61NatW+LuAB0GfalsW1rewqjfzFuxv72+Vzmzfwgksuz2IokAwPER9hSFPMjA45eTSyKxFGes+aUx64xPJo4Oi/VsWpz9dmxy8b3EfJdQZvNurD6jjg5gw9I/Qi0NK9oxtsZrqBzwN6RBVjCuWxLNVc2Vkn9PJjYr3CSafNLHA1Ipy2SzDUlHTkZMboJ8J288Ebcn2DW8jETqtvhmFNUOX66JWEDHP24a4KfNK532krCjGO6/ZEVehag46wYd1bx4Jc7lq2K2EFpva1AtZyL6E1LZ5ylBahuhfkJTskUoREMwezVCRUxIipljjyGSpzuS0P0jNm9vyZ4RRJSyxxLtHTTB1mW92oulxGwjIGyUX3VOXKC5eLWwht8FHweI6Wem6Iq04c2756Fi0ii6ER5AW3G7n1fpmKLMCSRi/GWEnlcMWBvrrBRJB1iL93VCR3mEKcSeOg/np9AHJuHp4saxRujjGS87ryC3F6X6NhAqVb2hH49b9DsdT73BSXsez25FFCoclCCszlF8yGILCdsRdcdKT3bkwE4nes5ndjTMoo7ek9ENvxKsrQx/BdATZvXJd5TJ9Xtedi4ULb3uBPAxg4L0JgnhNud0XhLPPI/4zdiwf4eXNATjpx57rla2aNjHcYcets6VNCxuO/h3IzynsDe5yHe+0M9HqFJ4H9kG8tpJ8RMH828SYNoPq27BRk","layer_level":1},{"id":"b84dbd21-6abd-4fbc-9be9-f13f8d0d5ba9","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"数据流","description":"data-flow","prompt":"全面描述Cymbol编译器中的数据流动路径，从源代码输入到虚拟机字节码输出的完整生命周期。详细说明数据在各个编译阶段的形态变化：源代码字符串 → 词法单元流 → 解析树 → AST → 符号表条目 → 类型信息 → 三地址码 → 控制流图 → 虚拟机指令。通过数据流图可视化展示关键数据结构的转换过程，解释ASTNode到IRNode的映射规则，Symbol和Type对象的创建与查询机制，以及BasicBlock中指令序列的组织方式。提供实际案例追踪一个简单函数的完整编译过程，展示各阶段数据状态的变化。","parent_id":"51290a87-693d-46e9-901e-7b67ed62e6c1","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/Symbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:45.0326649+08:00","gmt_modified":"2025-09-16T13:44:59.5199607+08:00","raw_data":"WikiEncrypted:PGdHQOrMWxh6s6galmzx6/AH6koaRsRZ2mPCIcD6cZN9NPB+xRWH4Dvi1mPNZcmnMf2vFq35sE1zvOv9yPiO+DvmBUisuBoOyjZi8ueR6aREmmSjqhXtBt3sNTCzuh+77Hh+Cq/okfafxXlDWGcNMetOUrAZnU9WsXcleodJkVVSwDsnlR8vaZJjiSl6c0MYk66jYVLTE8pavEfEYEjiGcDn2zMti6dATRJYZ62PK3G7uJA2xWF6pe4Z/XukWpA2cApgx825OxFCDKxQT/DU1/5TbgIDOUtTL8lG6wVe4xpKQVaYjwYsiK4k++ce+BgT31TeEfxhk3Pxz3BAFOXZnGlJ+/8vFvBsp6+h7l9tgEW/bbHlmvuMUWWTijzQuBC2It/AkjGb6nLCWqMw4O+2VBnSApSPU2p4uGKyel2vQUOq4NpaZuSWq+KLfOfVRvFhQFn1ZaE1NI+Mfkphd1VYg1fDF4cbqA+GHFE7vrhPP2AjzpA20kM+R0/pftIOP44T74luGRyIo6JpYCoOKfj5kMV8+AsWI9VrH521JxcXN1mmfHhGGafEsms8ppyF/gLe3zLjyQ6LFXNSqT/Sn1ag399zikzkCnfizyVkmTnQtofaHDFKek0s3M1cyPzcob8Zc/8O5PtjpMRe1PNUIrJZNaNYZzKsYni8R+suaFtx2OlbcwRr+kEEs8tJxGh5gxVZ3SoIF7yvbvbeWx2tk+QCajp3HYo5O14zVh1AN69VEF7lSdWuHFudOORqC3vfFJhiuB1QD/iZZiNLlyhNkHEV/VtJgIAaSbJ1wMPOw+k7YgZVnoc1w91Z8qSua7ndJ8DkNPjCmSASsVjQaBGW4JgI/U4QQ5QS3YOsqD0As9UtvRhlTbVUU0YWrgvE+DVNv58NXnZ1CvfohwhGEhww7jek6VDGM/Rx8iWBpW+47+zM1UaUrmhBACv8pYXZyHP6wNGu44h/UL1gUxWtUI4bNIvJxYjbSjTMB6qgc9uNphu/YdNACBtlcUpREOQnquCcVll4RR2rHD1AX6vNSIUuE7PJ59RH4ZBM06sQ7uqte8XGTtD8ZI/uWW+QD9NptSkM0tZViezW1BQeMUnFp1ywwSrhsKS6u2Z3WMRe4QGYPyzJDXLJBgJ6JL+RbapRmBXgYFs9qLPFsiAIvUT/XfSRBbL0b6vS3EOJofxqeire8omndQHy4uU0bqVM4fJUD/fgDoNxVXOUeZRtzDWeksO/7UgtAgP0NmG7K7dNVSX01bPE0yzWsDpI5PGpNxprI7Gz7hlZOcQClgaBEwinvmgFf9ydqpH4ljvEtBXS/YiiuYCA/B9i/VHV+/AfSkMd1ZRUxj+F/iqHGSLFPOeEWGlB1vpNwYKS0DuJBvusPLTA4h9LdacG/v/1nLJybYfWKCS55+8c0hmknyS7wbzKJ0dMlbE1SM1K8JuJGGvDcEWHAJ/xlDF1lSDIsCWYJiRpTyptd9tK3UB6fHpdjZ9aKbgDkTWeWOGzE5lZFACUFO1nVYD9oIYDwtf9fXtYiO4VopphAloIUs+EGcDqHTYpiPezBVsVyJ8C6ULoKMnMJQlVIcxkvEqSD0NSTHr6tu2KORKfn7uDfGrpLWRDDydSbMuxgyJi7jqvYMESJnN2GGJB6dmuRvQ8mwY1R0ZuPsdNzOqxfZ7AIvx+X3lbawUVJRjlpFUCgTzkwVrSlY6UvNufFd/kIY5sHLYY0g7TH2BNa+HyU+E9","layer_level":2},{"id":"187cca25-3ff2-457b-b068-e0ab3ab888da","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"错误处理","description":"error-handling","prompt":"开发关于Cymbol编译器错误处理机制的详细内容，重点阐述ErrorIssuer组件如何统一管理编译过程中的各类错误（词法、语法、语义错误）。解释错误信息的生成、传播和报告机制，包括错误码、位置信息和上下文提示的实现方式。结合代码示例说明编译器如何在各个阶段（词法分析、语法分析、类型检查等）检测并报告错误，以及如何实现错误恢复以支持多错误报告。为初学者提供错误处理流程图，为高级开发者提供自定义错误类型和国际化错误消息的扩展方法。","parent_id":"cfa29f6f-36e1-4ac9-b678-232e5fc8db68","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/driver/ErrorIssuer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/docs/module-interaction.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:13:59.5214536+08:00","gmt_modified":"2025-09-16T13:44:39.2786926+08:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX3N8YSBxdShIw/8QWs/GeiK64S693oVRqsw62APcAmmqVchRskZhSCNJubjeCRoIbvl6K7xEUKTUxrrhsI3plmOIOp6vT34+JS/OWAuBmGGCC6bLXYnZZTAPykDmqsIOMQS4k/iSzNrFvI4FLbiQGS81ZCH6b4B3CTPQGmfah2oFpABc2zGFbN/Ug1/wvNs+LQIny3o+b8s83qqs7GqjKKud0Uaip/vdA+nPXgxFVSlGqnButQwIofg2DHZED4QRgR9To6yA140tWIOlerLvWayRP1Q3OZVYCljEmdts/YTbFk99bzgQWgPpprIFxRrKzQ7aYQvXE5wfzM7fsygjZBYAV+oxTkmqYU+R6AbK++NN6dvU8X64FcbZ1LubzhWJyGGLnuyz+V6GY8HjbHpJ4+47jJD02m0CnnL8zg0BLPJJP1glxNP/Uf2LuNbKxjFv2sthj3eE/Apc3AqNQ+XWAPeVs1T2q0X/TBQilv+uAbGrnPKXQp/p+uiYN6GZp11G+G84t0KWlTskFbNtYXGxJGu7MWyzQqp8LgMe7g1h3dYgOGlr1ZeDgbyosedpP9PLueQU9GkXflr7yV0zXpRtXb9gpwo69Sd+9LnwOQFhczkDi0Sb2VBWcq2BSZJ2M3QW/A5c0EAcEBYHIaRhn40c9WV42hjbGqjxFdtXN731nL+fQdJtQzb3SIBEH6H6K2XWBrIASZHYdMwHnOp7T1Ene1saI/wo0oEr9vWAysP2i2k2+bmaa1RXN6vzxxR5Uwrru4wRLX40Efu+3PZT8KWBmJyCBw+6PSpdEtlKmUuS2ZkK4XimaJU85mZmUjc6m023w8iZYe3qJs/0xKEkSqIO9maLlklZQCZ/9tbJP73l177SmD7Ugn9L/00JF9l2FefYvFQNoM+qbBUPJCxVHALdCdcspuXDu5RcL7UjJ6952kwDOUh3JDJY3HxuUqTRK/qhgAYi4XdhIsYX4paXt1grbuXQg4hS2W1UClbnYZS12RnQ6lY8ShfZgU8DDQIAxafT4vYwAH0RNrLCAgxAL16DCKIt5z0QTIHG1DyagFTWIfDlaYFi8CguJcFJhUtmYwqlElr8tOU6mAMmJMtlrdW8RO4KNA827gWrS7IqVec/YqXcDV43MHJDd28Tov53+IyMco/1oosxdVs/4AxIJbMYdhY62ftRmFiI/JvpOAjJRcTmzlMi9/6H/1qKYVcZ0zCTgweaL/eggiR7dmPyW2dWOmeHN2NhzOJscrRlXO52EuLl8VRgR49zmmiMzsTbpO4u7RSwvJeZflnIZhl/Q0SfQhW8CY8K1XMTtOZeO/cnkrgXiSl4Ce5UoFeSwj0IK9emDkLTxVk+HzUJZJEc1q6/1sI=","layer_level":2},{"id":"893194e2-ea41-4532-a759-01c54aa6d5c2","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"扩展机制与模块解耦","description":"extension-mechanism","prompt":"创建关于编译器扩展机制的详细内容，重点分析基于访问者模式和接口抽象的模块解耦设计。详细说明CymbolASTBuilder如何实现ASTBaseVisitor接口以支持语法树遍历，以及TypeChecker如何通过标准化接口与符号表模块交互。使用实际代码示例展示如何通过实现特定接口来添加新的编译阶段或替换现有组件。解释依赖倒置原则在编译器架构中的应用，以及如何通过接口契约保证模块替换的兼容性。","parent_id":"53669189-b6cf-4d63-b11c-3fa5fd06fb4f","order":2,"progress_status":"completed","dependent_files":"ep20/docs/module-interaction.md,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:03.4566607+08:00","gmt_modified":"2025-09-16T13:45:52.5011895+08:00","raw_data":"WikiEncrypted:9tFZPEMPWdLFkkE2XbXYMldCmbkj2DYYpc6KKM9RxQsicsUxwrmkyNzLi1EG9qAQKyP1KytCKPc2yMiYJHrAYXbIFRE63Ot5Jlm7xRIQbd4wmroz//YgRN7XD0eGsIF0WwaKi63ohLIvAs1tjMf4CkDmIIaFE3hRRbw4kMkHil3ZMOEn2p4hnGkCOcQ8QUw5trrpCcNDsWFPHO7TrC2GNcHKkGJ9T28HBeM4TtuLPdDKrdMDz00bnn5exIpX2UMgZxSpSYP8DqjaIxKYUAhLhKx1qOgMexpBWmpw01yWXlni16P1MqYsfJs6CDdKmTyVqcrz7Q4gKT2S5xI+vc/jZzzn/2f/BK8sv6Mmwa7kzpydVTRu8U7GYqolDxLb6SLs31IqwMjYjg75ef2+3wkDFVW8NxKkuWEqNJ4bVVaCS/OJXcIUAp6Az9wcQfiRkdfQG0N3+k0/2OLUuDLlBRzZb6Hv5qtsIMjql/YLu5AJorgCiH7FKGjEsSJDsKbR0bZD88qnnXquNurJ0/kvxcNtaYGLVPwXiQwAedSQLFzJnipViS8tkGdpXX37j0Qm8QaowMV+PlEH4Iw9jGvVQ0A1VacOHkYWtjWuzlxmG6zo7lW8C2A2Vnl/sIBHcaP9EZVaQNxn3meFY60MXSdAMfH1yyZ5T3ILlYHdktbl+b+Q/pLS+DGkST9NEr33yCEiVs1YRKoAMcdX1Lg3/qMgHAnoCzK/tVtp4irOe++IBkQ1YjIBtrvLy1lPD3bbrlDj4Kl8C7YD+ohL12IaK4Fg8qD/LS9YU8YLFZM6mux5M4EeaXKwEIsXu7bk4sSUuQHI8FA3LPWBKA8xn0d0IGWRhZoBnEwrJp8ysd3MnVjLZmfO1zzvfamYEaGYQ0XETr14iTPzz/k+F/71gUEGMDQcxCcxYY5wPbvs8srYW2ZaYnP1L7vc6VSntFGQXqHXsBcSGUpgnLk8F+yDPInGNZyI5QoGojhWftVVUKsd9eWkBWkoUkGDxvOThIe2LPj9t81V84VUV0v0+5W9hCsHCXTo87Pn+6uboEcHDFijlb9qnDHjt9pEsCZXpLr9/JwTzxD62LvcofuxvbdVzVh+aBFUQIWHhSA3uOS/jzF3yfXLK69O8vVkm+ByHplwP8+zMzMAAFBO6j1CGejPbeOBz6EJKTDkr5SxQgngEW4KlxftFxT+sihei1Uv9qplJhDoXEDvptgdffiI2/J6rlvyImht+lwmCLlRf0+x3rK26OoYkPiCwVg=","layer_level":2},{"id":"39fcb073-2a53-4f82-b2dc-b099d2887329","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"责任链模式","description":"chain-of-responsibility-pattern","prompt":"深入解析责任链模式在CompilerPipeline中的实现，说明如何将编译过程分解为词法分析、语法分析、AST构建、符号定义、类型检查、IR生成、CFG构建和代码生成等有序阶段。详细解释Task和Phase的职责划分，展示编译器如何通过责任链确保各阶段的正确执行顺序。以类型检查阶段为例，说明前置条件验证机制。讨论责任链模式如何提高编译流程的可配置性和可扩展性，支持自定义编译阶段的插入，并分析其在错误处理和状态传递方面的优势。","parent_id":"2f45dbd6-0f1f-46c8-a5d3-3382ff22fd32","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/pipeline/CompilerPipeline.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Task.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java,ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:15.6137409+08:00","gmt_modified":"2025-09-16T13:51:17.9395912+08:00","raw_data":"WikiEncrypted:sNOp5Qk1lEyEezulpU8L+pPK9Ut1niyjEIfXZ9pTY1AoI0SjKFPPeh+v9yinYeDad4DbMOdxnx3Q1vrAL2zFaJftMVjszK3qb/JskHsolXePj67Ietb1M2FIRyUt2xLORrVhVDCeS1ZvrH1SEzeB5CUi27kh9RG/NmOeuBY+mksJE/TxO7rA3Az7FmpuucD9i7MQ3rILa5H3lcsa42V5PW37BIdOgdZe0/wYBES3y65fG24Nu6LnDwUTa/hW5losP+oPQhzTZOSV0AqxwiV98kGXLaj3kFhD+PiJm21jRGb5uM2J1aaMlUdkQp3aZbckGYWXnw48/nSB7uNkX61kLgahrpPknoQFRE80wIWHm2aEonRYGWpy4THqdQOxbeSrtSje8ZweUNKr3qX/66aoYPoZGs4GyrAAsit0T+kYtuzw/V1dGtGv6ovLSOG3FeDkpyoBKpFJh7WWgcqwLwj7FcWeTgFZFryAKhADUxS0EgKspWrtTAyM1c66uJDOnKaaHCckEcqUqVufBcBzJrokVljlP4BvCd5MWMFz/a560GkdWU/Ae39Cogrg9bQhjGbfvtHx7uvOk79HcjmZx8p+kCT6fgsv+AGK9YNpH/1uO9VBUedC2yjBy+iTO26Cs0k1qDg2WAMaY1Idx0hft8V+ISYUVyU7eS7LLB3ALeIignKpBS8yQivi/bY5sJ2RKfnnVVZjH+SFdZYtSY3kDiXzxl3GXDC95eGjuNF7+HdBvqsnFlLxCGz9PJuZGNBcUyT+GloXMWjCe3OVn8eMUMw0ZppCk4sLvlAKcBwM8Ky4LRGdHeGLQrz9CMObRcyL06XZiG4zGCg4v+J7uBvbMiJbeVHdMZ48LLLSQr5UYszwyoSHhLCO3bXdKvz4KOupDP8PJGwN72QblmMKsVO1tu/6SDSjpD082z++VqBw3VC8QVsRez0b7UfKgFmx6bEAB04sm9UFM4NRpLklHS6rQBVxu+9q3s1LSrTOvp7N1rLCMMETlgt+swmirfRlS7DClHvHktNTF83tLQs/LNKqIk2oRdizWM4eAblKfguJOOKQjIDG59FqQ8HHPXeyO9qEW6dd3RXClq3GQ0IgiUG8QGylLpT8z8h+K7n7zIbuNcG5Mt34QLb5mAzCc0UQ9CT+fPJ2Ezr6RpB3i1O0KpdQ5zsf96+OFY6KLzLah5Da84YnFhXVzXfS8ey3Iu3QIEayeS8TGEBnNzOFbwiBSagIgEBUKNXl8GLx9+vy4BN7eggmdO5k9ZE1EqltavZ8wO1ixdNBSY7+wMa5qsRVg81ZOT9Xk/UFLhOVOUh40W733ik0w4KSaLh5mLZyauI2JXelB0/MgD8ucF60R5QtKCVTNbZIO60ZIcqJmjUQ1RTG6gkCZ2yi0mqWVm+lwEA+3/Bj8z3VvqRWrAvKojsZfoFqRkST9I+jDrTHr46zflDhDqosSjV8CcvGgOVqfw576Vz+FWtL","layer_level":3},{"id":"15190b87-903f-40bd-8f13-c2a7e78ca857","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"AST构建器职责","description":"ast-builder-responsibility","prompt":"全面阐述CymbolASTBuilder的职责与实现原理。说明其如何通过访问者模式将ANTLR4生成的解析树转换为轻量化的抽象语法树（AST），强调AST相比解析树的简化优势。详细描述AST节点类型体系（如表达式节点、语句节点、声明节点）的设计原则和继承关系，展示关键节点的构建过程。通过代码示例说明AST构建过程中的上下文信息传递机制，以及如何处理语法糖和隐式转换。分析AST结构对后续语义分析和代码生成的支撑作用，并提供验证AST正确性的调试方法。","parent_id":"7d62c5d1-2817-4702-95fa-9504c6155b24","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:20.312723+08:00","gmt_modified":"2025-09-16T13:51:49.1220849+08:00","raw_data":"WikiEncrypted:p+8HMnxIgmacoUzP4iv4UdNZBMDktx+7DVnGTEHqA2fjbapkeHGE8sah92wf9/ON0t5PDJyHPJrDqFMcv9piIVqmEvih4JzOlzUF8gnmB9t2wofP8Jbeckj3I37NL21S6ZlFcdZpJBGW5DrgpoBl+wJpSMCMtj3d9WJXohh0MPzqQUch8Jv6Bbogxd+d9X8Wx5ciOvFDOjl7n3M3Ked0LvaHXiJRYD7eLgHh82staiRB7UIfsZnPRX8S6/vui3ufLhKIpA65rMz0hAklZd7/HjV5c51mZpaNvF98IoUWdakcoFsf1kOSxygyH8wchxYrRCXZtgqIs4s/xMoEVdy+MA3kL+Ro27k7IzAJq9RFBiS2hjIDMLoSq8TypxEIJcN7qglJYJF+XwXbRCsR14bBTS2ySKmdM+uDnD3JKGrmXkBg88XfUSQcqaGaywzHSqj9GqLgCWrbh2ZKqBC7MBTMZmI7Vcx7YC+J90SwqIxEhZV9duSIlDw1NwWMMxvG+K7sIc5nvizUoevPRMlpO2NYfJudWWYeR3XlQAwyETZx1ex2kRcG+S4q0ezImJ3cTNlRHmn7tjQIkDqcooybc134WQfou4MMmeIG10D4NrSkumeqrQl8oR+vhJBrnQfw4LE9Gi8zzaKzc+HyNia7EJ9U+nJTL+83TejCt6AF3hg7uV32dfusIIuUNolIl18B3tjCbYXwJ4R/78pX9+WdhyB+yqwlVoX44wL1aWdy3fK8s5oL5Caxd3IrOhDde1ygAexgOzZhoP2D/Snzzdfhw2qbaXhtIduoASZJPQVMP7qxejaEXrC5K56UqFdW2fZgm5ANc/FUUhp+wY2o3u8vvQ7HVI0RcWmIDMM4DchEH28iQlt9uLJFJeYZPsBwjzUQjWxdw/EeqTdjHpekbbQn3yu8LmWzNiKbdDef01tRZzILs7b4qQjFW3IJV7D7NNFCruY/dmAO/oZO9X0WL8ivdEVhsgTqLkGGiICEZmGMOgnTDdx8iyYEwLyGb8GQYhNo0vGRtX2zKiyKmObvsnOtFFqK25kLZxyEyqJNtgIc5IluNqxr9mse/jQg+IY5nyxT4nFGP2yf6kEJdFjG794NXM2vFv41RqjUJgAHAMHE2r7otxfIPb9NpNU+W3G/Ao/brsxxecs80jUCZw71lxYknaUBGGwGykVxODPUfIAGS9+fzseA4bpHpl03NxcYiYa6mmelTWo/5Tgm+UQHjwFBneFGPpRJcysHFLWt+OVFvj1mUP+c3UC4PMEVLSGbLqvdvhY6JyIlX6PWM1eTne+L2YSNGQ==","layer_level":3},{"id":"2aa50a84-14f4-41d4-af9f-68d96f989d26","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"IR数据流","description":"ir-data-flow","prompt":"全面解析Cymbol编译器中间表示(IR)的数据流动过程。描述CymbolIRBuilder如何将经过类型检查的AST转换为三地址码形式的IRNode序列，包括表达式求值、控制流语句和函数调用的IR生成规则。重点说明虚拟寄存器分配策略、临时变量管理以及类型信息在IR层的保留方式。通过具体示例展示一个复杂表达式从AST到IR的转换过程，解释如何处理嵌套表达式和副作用。分析IR生成过程中与TypeChecker的交互，确保类型安全的IR代码生成。","parent_id":"b84dbd21-6abd-4fbc-9be9-f13f8d0d5ba9","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:31.0933448+08:00","gmt_modified":"2025-09-16T13:52:18.2826527+08:00","raw_data":"WikiEncrypted:VWl6sayjhDtcdpvWCty5YkfIaSN7TSWdTP2e9l6QV3IlBK+PUTV/YrLBboBiYZHpmJPeCL6Fg1EFkClEo2vJAknFCSg+AWpCUouBKeDTgCI/VMqQMnkPXiA6A0s35o+yYpQy051e1ShJogMMZn4/ON6X85fUDnnstYa1EAINMOidsubcPu6MQv+gV7ykdB29RAhtgu5oUPjEIXchM2YTmpm9HVigIQQrwMwfwQNOXiLica6eQ4K8tB4uHW6bQlsgzWdSUUd7R6MqkMZ3jlNPv/WbonRC3c7X0YMJM490xnAw+yE/DX0D1AA2YP+x9df9J3uqlDF7zjQ0mpyOlRkb8JJoaHiBrKkPaDPd0P/vnp7cKNsfxMW7RKSx+WzF9zT1DdvA+XydFlYoviTryqOZjS3TN1gYhK/nX3W6HOHpEW5wbh+79YNl5KdxBp41msKULbu5Csxeixfr5SoLlhAzNiqPALnKQqj7HaP1SPC4HCWV+7IJQ8YtvWGdMJpR8eTDhzjsF3y3VeCcqdJBAWFKFZDfcyPMnGHJL1PcztBrFajGeprGJ0xUsR2lIYbhYKk+EVjzfY3Cz3fVHZSgi6nV5fmghGJdKPUJaHxOlYUDJOLtc0QuNz5Yv2kRiL4iJGF3rQ/qwRvq5m5ms8hAHtJzbhXTVOSZWb1bA6p+NMwvewKgxtmhZVYJA4VlgjGRhGrPIZg/Fd6R/Z7yKoxVXrd+NUPMYUNJwGWfSkOsbE5nK/iwXYS+CxXHQCL/7OUD6/DbDkD48dQLWiQO6aZtC0geFblhvLVa/04VzskMsfpm3THCkMVpAriRhMLXJooNBJJcDBsLsp4D+MkZ9+w0DmdW2ImlV6DJoiI78ceYnl9yYwQs5N0D52LxtoE0k1yUK2fasOhGFq1ryetRoCWF/Vk0sMiKXOeHPKEQIF6ea/mWymhjsqU9+lHyRHvKsiiEFjaCJHgs7YL00R4HOKVfDuo0mit0qZwsGvzl8A1z9l/uVDVmuZG0wNN4xqM7Aywywx5jGN/vRTsHLiPjPXBOLr6i/fYTK1ZGLn1xgsuhI6wPvKGtuY3paukpmuIYCvxFwMWis9NXc10gxWjZf2zmIn0CF3n/+Uuh2PEtMc+i2Y31L/YW40aY8hNsC0ulAd05kcIfBHuXejJCTHK3XIun3ukFYLxEYElNW6/SLfHWosa7JvOufGFFTcvo7CWlDBEsFWJmXVvBvV4i18w4xfiZYXL/XV761he5vicXOf3ERBCftFQMaFyU2cQpHfPS5xq84m5RIbJwHPpDSZYkZjPiyXA2/x2cMY1H3ltYGEzO1GAdrc4=","layer_level":3},{"id":"147dc076-17ca-4415-a1f9-5c4891d6950b","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"词法分析","description":"lexical-analysis","prompt":"开发关于词法分析的详细内容，重点介绍Cymbol语言的词法单元识别机制。详细说明CymbolLexer.java的实现细节，包括正则表达式模式匹配、关键字识别、标识符处理和字面量解析。解释词法分析器如何将源代码字符流转换为标记流（Token Stream），并处理词法错误。使用实际代码示例展示关键词法规则的实现，如数字、字符串、布尔值和运算符的识别。描述位置信息（Location）跟踪机制，用于错误报告和调试。为初学者提供词法分析基本概念的解释，为高级用户详细介绍ANTLR4词法分析器的定制化配置和性能优化策略。","parent_id":"","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/Location.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9108342+08:00","gmt_modified":"2025-09-16T13:17:01.9583702+08:00","raw_data":"WikiEncrypted:Wi43YXAVUi3EFGFBo7WSiCsSxPLvKRSEsEUt8hNWdFfpphuJI0lr1coPJQFcqyfEYz8Bw4mby8j2/PTAurVrV+WnduuQp13WwZg6dwQH654Gr/daR8RUl68XOrktEn14wqwNpf+//QVb5TrFAKyAR4u3g5v+TsrZRBjDFc7hoSAsIdXO9z55to+TdsyyIAgqMhzxg8d6B81O/tHiVq8cNohcV0S+og8P4et0M4G3rxR8bg4umxx/ryA9/pgHUyjMJhcXKTfq+BFwXtvOdI07dGgw+m9oTXToLiKUu62copBIPccXv50wyHDQ0GYref6mCDghC+3Sglz8ArFAHGrzn7OJTFSIbzcIqsMEU8zqG4Dst69iajDvwLzR+8kSph1ZrO7i8ijTTKNik97hfq89CTEWULUjHPiLjB2p8p8acFNg1Hk7OyN5OddlZhakK9Ju29y/rUAGXWiTF/BCNH8pVtpGVLvs4XcselZhkGKSWjPRrEFEq0vRr3YfuwzXMVoPcAk5N0yxDl7R3WJ7ROC6IxgZT54UkPlk5BU3UMEHW7urils23mdpZACoQQdHofPw2OyaPA+7DU01GoEfw+e2kYrteChkvXPZmI1oWpkR5UCJoKDesYeVPQ7OTqrUnO90gcncMTEE53145gwjoqwhxdW8xcfOSFwcjtGdw6NthO/1MGq4jU5oCCOVQZDdtkleI2tImyUF40DHjOzRC65tlAfzboqQP0PEZzac0oQXD6ULLEyNDXmUPZl4zVEfcFMH1xxDA9mH/rxhEB2ypUWIIqNbluLeQ1NrLnR8Mshzt1Z46GuIishgS8JVskLA4mYXR3YGnjBQxEsSiR+o7Cjs3KXvjwpT4kMwmp9eSCGYcvUPl7AjHGNJkS0KFhfaoNxFniAs+aLbXQSznYZcXDkp6+LINL+nj3TTxpSni5zNSoc+mtUZHQay0kAvwcHjFASn61llAc+KUz8y6FD5TelaZBOa0y/zh1qti4uJ+x4IC7+inunRLaBJ1iUckVksfOhr8aiwLPhJibo6Uq3o1/MljTcydzGmgY/6G8+KX7q4j7Z5PWzt+b7guuYcSdI2LGighLbBzcSG5MT3Rctd/kZRZpZ11MLLPdBh4O92BQdKfSgTJDM1M2+Rwnhu4SdapPuaG26lrCGxl3K1B3xog26T+Xr8yt6ZgXsPIJn6b37xsnhGrulgKVm927JP3MqRHHf2m7KRO0JovV0KOS5ZeinhyChzdZOq9VGUHnIN4LBBDAbfPKlieGp+gFp8lzVIMjnt+G01UTxB3YMzL8YEQgN5JlkZtN4cZBP3elBWPwrrsM8em/AkSula9yVTVRBp3Jfalj/eTNU4u7D4EmtGd1ctSfpDzig5IZPMW4zmo7KnzMy5f4ePtMFN5Bxl11LznnjKEstsqTdOjVhHFMMtG1myUoVjpSagxEBYnAk9sVCtNJU=","layer_level":0},{"id":"3d3edf61-e4f9-4b5c-b7bc-963ec77c30ad","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"工厂模式","description":"factory-pattern","prompt":"详细分析工厂模式在AST节点和类型系统中的应用。解释ASTNode及其子类的创建过程，说明如何通过静态工厂方法封装节点创建逻辑。以ExprNode和StmtNode的实例化为例，展示工厂模式如何隐藏复杂对象的创建细节。深入探讨TypeTable作为类型工厂的角色，说明其如何管理和创建内建类型和用户定义类型。讨论工厂模式如何实现对象创建的集中管理，支持类型单例化和缓存，提高内存效率，并分析其在支持新节点类型扩展方面的优势。","parent_id":"2f45dbd6-0f1f-46c8-a5d3-3382ff22fd32","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/StmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:15.6152855+08:00","gmt_modified":"2025-09-16T13:52:56.5118492+08:00","raw_data":"WikiEncrypted:II23QBWTpkjRSSqO+0e32Bdn+3JeykEw6GAV0YhpQ5kE7jc5AuGpE2YQSnWOmFLyA1Ms5GKMYfaQ+shV6DURDVoZU5ocz9ZOd643bz8xFFkYeIFkCFqE0693eAtj5ug6nOmOauiS+1sv8Fd0W4QCa2BTTv7ijv3CtalWS+ua168t/cDMWdtesaAmRyP6JvLik4+wYOq5Fi0/xttGFSaffIVQaTX6FlfMElO9i6dy4nq3sNsUyEEucAG1zHeidIn09gincUgSyPnM7gFfxilXg0kbSrl9LiAkrlDfT1dVgpx/BzFcc3x/S1XjTQux3qc+6Vs/3bJzHowJnlUtxPrLUtPqPZ12wAfPerFWaDXE6j0651PUnRuGWZrjlKMbVRykNAQDYX2WiJ/it1nO1N18i/96QcN+ce2VD28Wno6SWVRmgpM9j4Yo8lTgrYXrdWH931zIfeygaOA04HWiM3ErfOuq89IdcHE/xOIenyiBDNyi1bc14B1Tk9VMy6E1XB6hIMQLKhBQ6R34/5NOzTr/5txRzMRUPpTOCNzXGvnc7TFd6hAHcbF2158O6jZ4EpkyzCOk6rGg1uwirSNnWSq+zprT4qkoa2i3Zj6xIJPLHtI9HccjBMojnLaIQLK7Ih7eVusyWHCcxf2nLEktHG1rklLjVEBQ+VgLJCXTT/ANygVApH5wh7BfOQmGAf0XYM58kw8JWeaaNPuZW1bzP2Do/HKUwwPzJQ0NSRBVZerY7A4EfAPjIYyn1Aec2pJT0PBV4kiSZvXVf3WlRJWY5iCQOiwE5IgksqkbndFMLDjOulGRYujYeNSSUPiYGELJux5vRLYU6P0hmVVcYBdh429OtaRqlwAxpC9DgnxiQ/r/QOV2L7gsjBqwq858e5SR5ciFAo0bbi0Ti2TzK7i3IbgC8hPK4pF8E80QKqPfu+sQOcAglOb7w/Y3XfUBZ9j/DqM7JidTFUFCnp5eZeKQpyZEhSeFHF5PYiGU7qgxCa7iQbNbK9CW7OdrUWnFafG53xSgUGQYT1YeGzEy9bILsgjuCM4FJo6W+M9IAtEWBhipsdHkIllQ+RKbDmO9SRU3MYqxdhtYMoXrd6tUdkD7f9OwMV5ByjWB/8SYAar9gyQGbgT1Rx1Xew8egJam3D5+rcG97bCuCedbuEDFpPxLBYq4PyhYqMuSh0clVTWmWUtlkiavxsgSQMZ9FexufJmNV5GWJXPeFO5unvTLaJWK4f3DnbFIIwKHh+mBTqZ345Fy+F95l0uedb69v3JS+3+H33KUdMM4loyEBfASiaAhUsorer0rUbHlnKpMu+34YwT78iMmh/99LvQECgm8uUk7OSq9mNQDKk9Z7FoIJOXJi3FCh4bpAQFyUJwkRglW+m1t9+pVvyArqKSjSEMMTnu+GYwrpKEEBzrNIPaMGLiRzgVAgtFCA4bTf3DAxABKVZRTpr7PoYdbxuNLAV3zCGEAcaKSELE1D4mxH+4+YMym5L8WdlWK5EfVS5mbi+6I02yfoXyJ7au/wDCxZyljA92NSNNG","layer_level":3},{"id":"226f4e89-3f84-464b-a210-b4ef46874277","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"IR生成器职责","description":"ir-builder-responsibility","prompt":"系统性地阐述CymbolIRBuilder的职责与技术实现。说明其如何将抽象语法树（AST）转换为线性化的中间表示（IR），重点描述三地址码的生成规则和虚拟寄存器分配策略。详细解析IR节点类型体系（如算术表达式、控制流指令、函数调用）的设计逻辑，展示从高级语言结构到低级IR指令的映射过程。通过具体示例说明表达式求值、控制流转换和函数调用的IR生成算法。分析IR表示对优化和代码生成的便利性，并提供IR正确性验证和调试的技术方案。","parent_id":"7d62c5d1-2817-4702-95fa-9504c6155b24","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:20.3138422+08:00","gmt_modified":"2025-09-16T13:53:17.2555491+08:00","raw_data":"WikiEncrypted:7Bo/g9v2SkUsUwquWFaUG8/VY2eXi3U77+KZijBMoDZAhuzLGLdOi3TQI4gb4VHc8jlJKDQFc4pyINQEwYrTfhPxRhEeH7AbkEFWcGMpghL/kFRGcbmF94t1S/V1hReCKB9o5fHnl5A6Ed+FpqAhh4x4nsSallfFsYWZcqYsP9oVSICZVu8AxyJNTOxaZWrucKMPvddO0Wq8Rh80RXkUGjPVxG42A1GugcIHzcLva/v84D3tI9G0LErQK7xOAvOFG0OhWQeUi3UCDfrvaJr0nEjUluoegdkiYUQQUeGObP0LKAPZPvXWImBMpBA7rZevq776IxCdgTWq3XR2q9gz+fEQG567sQ6PHJC6V7FmAsqXGrPdACUL03scqjmBMKAMPXgOj3GXbT7uAR7Y40+VK5l6u9S51MZEk4jg7B+FlhjLJpIVKLhD1far5XxCDQlal7I9JEJo5BdOcm2U/C6uY+Pmn8jlrdXxlz3mmZWkyQNoN3V9mgkpCAZ8p9eB1qczzx15Ps6KQ/qmUJ/wMp5LuAeYoYgAwVji3WNyOEg4GIf/6xZ6YkknkX7uiBZ6M7fQK9xjdi9vzv1eMwHVA/E6vWjovNF5BDkpkhV7I9izMrBFXruqMIysC/SVrJhJES7vozH1/mZU6T18vOaJ1UUN4VBnEho1t4RIBVwDVIc4kyivwRxXlfmlAIgd9ZP+aovAw8RZ29/9Xh1dnOD3Ou60P4miqgfKngUg0yMLxOJNUBM5BOP/GOmWZCcsWsB21H5WLbIn5xxdtNXjCM2/f8dGciR/nz+cbcPijPuqzfujHSXSYB28ehI5Xn9NMGAW33kFWaaNjd224ba3g6oHCY4zLpploxy7+HJ8t138pnVBZFqmNMv4cXGQ5b+CjnMJ6z6w9K0NrfemJch8IurEoVLeu8Cq8x+093h7w8i3u0e6WUdJPuNqIW1kC8cbTEkRubyYAss+A8QF7xJIW1nigZ3Ah7K3n1sY0sce/kP9Efku+METiLZXhVdAG7a137nAt/L6DU8J2nj1OB7ceoLyiIFh8i3DP3t7TT1mKW00N3OqWWUw8lc9R4d8hqmbSluDJoIy7eh+O6Ias+E8okcvhLW6QVRMDamDMb2OCOp2sqc44GcOUGfSQ7KkqNRFYCdfkGt28xxsv/N9pBxCNzb+sZ5PYwtfEPFB6ENeu9j9hfBdFq+O9x4JQbCwvETnzDRqSGrLNfhtak0zLtNo3reqNCleWo12lW5Lt546Lqo27fu4kkDiNWGS6Ujt2qTdJJWThEkJKzrb+w0ivJCbpFEw3Cfv+w==","layer_level":3},{"id":"0dac3d59-a8c2-42e4-acb7-2f8914e5efdc","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"CFG数据流","description":"cfg-data-flow","prompt":"详细描述Cymbol编译器中控制流图(CFG)的数据流动过程。从线性IR指令序列开始，阐述CFGBuilder如何识别基本块边界并构建BasicBlock对象集合。说明控制流边(条件跳转、无条件跳转、函数调用)的建立规则，以及如何处理循环、条件语句和异常处理的CFG结构。通过实际案例展示一个函数的IR到CFG的转换过程，包括入口块、出口块的确定和支配关系的建立。解释CFG数据结构在后续优化阶段(如活性分析)中的应用方式。","parent_id":"b84dbd21-6abd-4fbc-9be9-f13f8d0d5ba9","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:31.0949055+08:00","gmt_modified":"2025-09-16T13:54:14.4745663+08:00","raw_data":"WikiEncrypted:jhZL/mss3v5PnjOUc67yztY2Qhoyk0EELTOf/AhCYlKvNXQSM1tqJZ+Pr0Uj/G76w1U+r1HpxRkD6Iwo5StHgu73+uWs6Ga0V6hqGbnuz172/L0RWgFRm2qzPM1IKTioAP24d+V5ZzTzn45+6Bpnx9c9J/rki/js89PP5oKIm1rLIRWpFBbg7OUk+1Ip1f8KDU7swadY6RznVIwzeQUy8vY+q/A1HHcblKAxq2k5fNRqIOdaBN09rh6zRR+TycPkA5cQ0jk6E4h63NVlVWvCJRSVWoeZHPwGEw+b932J/f1bLG3j5E1VnRXYvnAmvyXOLAKpJsTXFWrIpDjaoZzilxcjkG7w9d5tHNM6QhMPIRLB56D1nzMyB0mUIiDZltPQfW/OqIcMmrUOpWZ0YseyGb5k11sA+LGQoYkk09vO0HfrrHh8F3qgWuwg2hjJS5K8crey2/FiiufQ5gt9GxRmhiUzyXGV3GiMUQa6yH4XjE/cOvGuX6HCB76Bh2p0BZ2oXVnVVg1tzlqAQjsdkS2CN/oRHO0FSbDlThtKNQ13PKHV4b6ko2WOYVMRmuxOmZ+KY+pNnHRb9BiX0QW435+pb4zuRUDLubHmcdALp9jNhUo6WnvL0+LPB/6kshJv82vFjnxK4ncC/5qeOHqrHOtWZNCZPSzAQ0nY91UkX3lvdCJh2Dt++OJRNS+T74+zjsp98KU505vVoksuX7cziPwie9wpHa/2ui51xHdnp/P0BPeB7ogwEM9GgsGUdAWGd2Y0YikdQfUed7UQE8meQTgmux6OCNVc/eJiX7iSMJildcvPL3abYtavWey9Zo12dT5YV7Lz48MJbxWV19ncUt0GWI/hm0V933+C7R+o8QPUaEoODj4Yx0/IUfJf3x3Le3r/FQ4ni6eKOFiH0ua5+vJKAoCc5hA1F5sSIzCCEnVtCwZWaKE9fT2WUrV+2lcphU5n7tcBvOCSB4heqHvAPJWpYfvEEyi1GnzdfzqFsmYhwPomO+qZm8rg0yKf6n9UaKwNmivj9h5t+40i+ovCogyMbzu7oMVWFiws5a7I2Lh+YI5av7w349L0SKQmU14mfsZYxq4ojvtpdwZV7+8FkXuTQ8/oNx6/c9GaRIjmFP5ElValozBh8HubHynWWUNzjbWKpl7nK7qno4e7D5JBXx+rmdIa9f39nPxBxd1JVvlPzewROK0c6kHT63Q8+1RCdPYtbbu6ttoAg+GQb53WHA/+4l+50sZ10S/ChgJhvzNns444LiR33JoCZb5whcmLWzKA","layer_level":3},{"id":"4347657a-a722-4c91-b857-41410d0a46e4","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"语法分析","description":"syntax-analysis","prompt":"创建关于语法分析的全面内容，重点介绍Cymbol语言的语法规则和解析机制。详细说明CymbolParser.java中定义的语法规则，包括表达式、语句、声明和程序结构的BNF范式。解释递归下降解析算法的工作原理和ANTLR4自动生成解析器的过程。描述解析树（Parse Tree）的构建过程，以及如何通过监听器模式（Listener）和访问者模式（Visitor）进行树遍历。使用实际代码示例展示关键语法结构的实现，如if语句、while循环和函数定义的解析。为初学者提供语法分析基础概念的解释，为高级用户详细介绍语法错误恢复机制和解析性能优化技巧。","parent_id":"","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolBaseListener.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolListener.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9118539+08:00","gmt_modified":"2025-09-16T13:17:48.8910772+08:00","raw_data":"WikiEncrypted:F7IuOFBoY+w1jkMgJ5QawxwceXNFZNlnolFOXJx0H8Jcyj79XukezjifG7ud6CQJjcUiFz4wXiRUzLHLkYW4ZZ02SLgPItBWSQAbpCcwKDstTxycSWruEauHJ5DIHru7MivzAmeVj9J7yCwP97VduRoWgphk9+A9ecoJ7pEEyYpiS2tAVcr/3ZT3KrhREFfphhn3j1cmJZ5qKrBkQDPmW+xxtL8C9YImCEEiPG7x+0QlrWP5k+ckvhLFJIB9945R0qAtf2cHR9jTl5NNkJLs7EKEsNHvAUMTKJCE6qKSVyVcftAUcz/xn4gJiPwQ+zAMqj+ofXyGBNnhUsAaiOgm0su/ygd2vqfdfZ833ccA7cMOG2O/P/9ABAPK7NiIxWzfwPS6w7GBskazvAduXr9fa3rS/MDs/pPJsJqpigvmLiYc80ESbL0pKiaAanWhhrO2bNAA1k5WpYYtNQtHiWobm4vO9fYz+61qlhNzpwZTGxh3uzl3GFLMz24/wf/P6uezs5n4LZnzV6lCYeB9MxaoK6M8fBY3qN2IZVJ95QFRgjqSHYexwz4sXhMjMPgAJt3whiGHyFO4t/AplQHOeA5eEY3cb1E+MeA2CB8FAkHuZjI1oSrMOLCvRasBqzE8XbGq7UN+J8KE2Lr+Do0TjL1uprcVqJy+cqBOgZgZZAY9Vw0TBMmRkWOIUP4SRBIG68walj+/T7P6hgDEFTUyoQBgNkGfzQYhSOyW1CdMxivb07oA+Xz0wusL1sfym2m3VsmrSrkvMhEUNQwhuzXUE7CLtkp3MCXjIWBHBg6+RuGN4L32kpjZvhivGaHwd4+27xOhVV7GiAHM6SCu1D9WWiFwyFkgVj0YNiHAZZFAtf+4guw5qMhyo7jksOZDGWP/rt4q2sgM/7dSfeJWciAULGx1fTJTnWpV8a+Py5I6+WG+YxC9wI1dsRV1152zR3sSq/dU5C8xNRa/o6aXWzV745Td2Fi4mQe5WbM5pMSogDTumVsoXNlm2KE2NJvEZSo9YrJGOvu7lbxsg7Ob+ndaLJd6DOd7wKPr5vW+xLzt4vKd/DqtIK66V5xz1PTLgnaTIAEbUZsyQ1FLuYm+Qm+HdhZUE2u8QKLB93ZtWsje12i45WP+b3lfuseF+Ht9At1Esd0VN0lxSCz5MRN1ORwP0sdXGoG4K5uPakibfBGPDqdvUhqgZnpe5WoiZ3qkCUntjTLJTwKcdAo3xSaRxCV2fFcae4e5nrIMQS84KjfE4iHcLUp8xmTDfbevyzZGg2iIVxC1KS/Iq/kKUszDqddqGuRvhIcPUFsQhazm9pKqTKSS5xCX8IAHhQTXxg89qAcC/dGBhu5Bf+8edIyjR6fRMUu42Pk9hYiVyi3GwAuRAT6a36PPakcthDAL8H0lBKZJbLjHmsEbsnurPd3+fmjIR28eHTWZ97D+NLE2JB+guC4Pe0Q6mP29VWazoBGZ/FuT2L+AF0klxzKlz1zuJm8TbcXuNJ0+/wQATkzV5TaeKknCwPoUJgHBQIgyOLih6UqTQN7ydnNhf41ik+1XuDk8d31seEJ7TEFmsLPIa0vbCicAQtBKP9TeJtpQY1oxlo0XBJ7O","layer_level":0},{"id":"4bf868aa-6baf-467a-ab9a-7388bb3ced50","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"代码生成器职责","description":"code-assembler-responsibility","prompt":"深入剖析CymbolAssembler的职责与实现机制。说明其如何将中间表示（IR）转换为目标虚拟机的字节码指令，涵盖指令选择、操作数编码和程序结构布局等核心任务。详细描述虚拟机指令集架构（ISA）的设计原则，包括算术逻辑指令、控制流指令、函数调用协议和内存访问模式。通过代码示例展示从IR到字节码的映射过程，特别是复杂表达式和嵌套控制结构的处理策略。分析代码生成器的优化策略，如常量折叠和死代码消除，并提供生成代码的验证和调试方法。","parent_id":"7d62c5d1-2817-4702-95fa-9504c6155b24","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:14:20.3153973+08:00","gmt_modified":"2025-09-16T13:54:20.6280135+08:00","raw_data":"WikiEncrypted:Ux5Ub3OP0MtzohTlWbMlC+1ue81Hqxhm1rx5IlGAusg3wwTp0IQmnHm9z2/HRjkY+MemMGyGuf3DpdHg3hXGPnCOIZozCeO3v+wsjV0+U6bPp3mtBZYxXJS30fmKzVSQ4lqbMC2/QbgheDJyA4vcQXAdauKI+1Xtt5S0TUJijSJnBl/qdlABJEmQNti2+ZUaGWMNJrWODiJf7ackLyC+mVjFD5s6W4O775IBU3AihRAYyFBHGZjj5cTuZFZ/x586fnFY58uVVap0xeKTSg1+NZQj/U/leth/CLNsqMjx8rP3mbopNFkGWuCT0ZbYpghO3kqycAsZtRYJN75MYu+YUC64BzdT0HF8z3GPhsW/hDlvcj8vCQIPoL8A/a0mY1wG2TSAnqhqegSAHZUe9mKnj35XI4Pw3NLEbisSSR9XzV+8uZrfou8CYj26BMEmoxk063Hre6AQvA8UfCTzLKeTrpv2D3WkDzaWdFvYejLESy7bNKUXvxgGXQcmozIv4nr7s0oP4/nhCo1Atr42kDa1S59e4dHEM9OjKuszl11OVQy8VUqWB7XjxjaR7htj5Lq3kPiqkT9KXPp9waxyg1Mw609XPQy0SDtV3NymzkLat6WTwS32h2cDpVZ2ikxOb9Ma2G/926XL0uDpXMucKuh0sMqyjeH+eIqHjNtLwRon28CJk5fBC1LbzpHvkkRIMGNv2NpKp0yxs9vwIo9Gn2lWDyrh9GOqe0ShltlHhNKgl5Xxjmm9f9daFmMivADVKc+NMzLM0iTWSx4bN4CZGgBwE5ZiCBDgSIVVTN8QhnXBQKi5o6OuVMqAUo/BnOpAJUBxg4Mk+Fm9wFMxEQc4M3INzCUtHQGjl7M2cPHU/z9Sv/HoCBh6kDvQCJXG62Y2jkBOt12S16R48MrRNRMQTKWSg7rfAG0+nGLaOdW74qq4n+SbV1EkSLx07Ix7l3GeL3ZVIqNlmOVefMVf8FMcKcTM4b5LWqQEhuEp6k/4pOlHzq+rxpV7iou7r3QzOqDMMvBHmC9z+KWZgo8Vdqx2uRei9uZc06QN9D/5et/cfBs6AgC8ivXe7IoySDA/q4Q4b3puqPffUWElMB+HzRGvaNc7jzg1Cy1XILCMWZR1klyuJ8LIgKbdTBCEmffEdd1n9cgx7gcQU4evJhHI0NdKgJF24KMwaXs6aaCdT1XOeYS7/dCBcQHNh1S42uAhYj3Rki8b8Gdtk4DfdduXpz+0MhoyEz3C4AcgQxDKQibpXFqLG6A=","layer_level":3},{"id":"66345862-5842-4b9f-aea5-fef17844a70f","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"抽象语法树(AST)","description":"ast","prompt":"开发关于抽象语法树(AST)的详细内容，重点介绍AST节点类型、构建过程和遍历机制。详细说明ASTNode基类的设计和继承体系，包括表达式节点、语句节点和声明节点的具体实现。解释CymbolASTBuilder如何将ANTLR4生成的解析树转换为更简洁的AST表示。描述访问者模式在AST遍历中的应用，包括ASTBaseVisitor的实现细节。使用实际代码示例展示不同类型AST节点的创建过程，如二元表达式、函数调用和控制流语句。为初学者提供AST与解析树的区别解释，为高级用户详细介绍AST优化技术和自定义遍历器的开发方法。","parent_id":"","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9128735+08:00","gmt_modified":"2025-09-16T13:18:07.7825961+08:00","raw_data":"WikiEncrypted:+s31Jz3+aJ0Ek8iXZTmnosiKavL4DJ81i05dO8FjYb5hIltg8KtDstMlmYZcQ6IhCc9i+1C2nJ+D2WqS31jl7/yXO7lwwJHfBQsVhvayS5jngAyCCv82PSnZWcSTrZBdEnrG/pGio419rcMdWFrPgRrbxih5BVVFtpygPguYpEHEffmXuPWiY14BcO7q6RU/C/pk4AT6HofvHVeVvmgZvA7QeOLKiWBiCpLAKZ+1MhUZAXmQaKIu+52h3Nhzq6QDLbC2Ydecg8L44Wp/Xv+WQeTRmYWwkga4/hxe9tcu1xxZSqh2hWCJ0Na9U0qxzr/+VESgn2amHVNZHHcZyRfF3WFs6RAkQ7HcGlAfvNKtgSd9hWemMYwwiNK0JMSgLWLHFd4SBTrxCkk+gkToD5WLGzqbTirJ5fAQ/HGYIHTOvkZPWu0hGr5lNvthalA1hvzM+Cllg7ITUOV/fPMx5d6/agokyIg6iGp7WUgHOfZH8LZFyDMCQgCkvuPl7SbZiRHQj8SR7quhtO22Nj1kkgbaw5YtqzzTf1cshkEAzQapxCK7iUTaCeE99DTA6/YzOWvSaRJP8DXv5VpK3Qc8Q+BW/gUUnhnxJEBhMhG8Mokov9oCramk4bAWljkxT02E22U+lFaDz6Y8YLsGqlgdWCA55Yj1zwdRtgl7q59e+oSmk+CmY60WHX7DxCbYGCF49RSu+9GuoV/p+/+dEc/+jOoLtzrwMplVrsCpdb6NcJpZgeq1jStoYTjOssSZnsMdxluyEw3MfViRJWcS8J8Fs+qrKDTk4IZuMSp9RNk7jVYQEZUc0Z8W56K2xmnVS0SY9tCG+CNQAeuPtQ4yZ78z5Bu/62Wvzu0nwU3C51476cX1iqUmNBHf6SYUH9WoemJC7XNRhbpB1sceJRZDd7aoOdfyvIzedmZ1PWWMnaXUW2Sm+Aghoh2+rOOWjeKO9Fl004r7Mgyc5XXJ7vnRkbtYhuz/jFsZglsoyIB8tPdqGtW0m7gAAfT3y2nbzmV7O4v+zYXcl2i7CP0HnxiKxnUL0qTIBHm3HU5jESzI/i0SBHKhAqMkNZJpgXFVKH744KE/+HVUeBEcg/FbJwB8fH4wc+grNmfBfKWXG518GxSKMSub7QlwwS4Nlu1PiXHW+GGDu//D2Zc2Ur2X6D/y69PGEPw0twAw4WCa9IKa91UGpuZDNVzzoY7mc6ewNn6dE59nlKx1upAsH6OL9JktcQQnQQPH1HHmmObsU1VFIws76h5Q3LPcyiD2QeIDP1PCJrxr2eR35nqLOY5zdfknBQee5xA6HKQi4ER2jQC22dssPjGXHjI6TKnCXHLkBgh9RBHxjTNp7T37jKtK8fLXblkFWz4zS7r3IWxUEEsZnzBhkZgTreY7AmKYTRkykNnzbxq6OlWLDMB/kYrQZmb34GhZOu8rgBwMqwDTbymYYOyh24Jd2pDgFWF7G90zY8RwMD+DWGQ/d5ZM5l/qbhdv9TP4o59eOFOQ2EJmH8SqgC0qy/zgyUxafrELnDlh7tx2xOrgKz0b","layer_level":0},{"id":"59c404d9-484d-48e6-b14a-5bc14f06eaa5","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"符号表管理","description":"symbol-table","prompt":"创建关于符号表管理的全面内容，重点介绍作用域系统、符号定义和符号解析机制。详细说明GlobalScope和LocalScope的层次结构设计，以及作用域链的查找过程。解释VariableSymbol、MethodSymbol等符号类型的具体实现和属性定义。描述LocalDefine如何在AST遍历过程中收集符号信息并建立作用域关系。使用实际代码示例展示变量声明、函数定义和符号查找的完整流程。为初学者提供作用域和生命周期的基本概念，为高级用户详细介绍符号表的性能优化策略和复杂作用域场景的处理方法。","parent_id":"","order":6,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/GlobalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/LocalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9139057+08:00","gmt_modified":"2025-09-16T13:19:10.5909528+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO74fCEa+tYNp9fTrBJnIBMHeJNqchmpp5rky1T+EsNtHSALdjgjl7tEME0UfFiCTJtmt6jKJIIpKM8Zt+9TCT8GUMv6laSbN08+lskqo0IuAo+Tb4v0S6oTVcIr3xTnA/DKx5GWnD2DHJRZok1IrF3bhug3utzby1CYZGNa8AZmdw7y7mlj86SzrjhY9qeNgd4hb38MgSW+iLEReAk+mVQETNaIK7I455Qd5RZPqH+cdwjVL6F5XS+Vn8fHbftsryN2V6yQQy7vDEYw9cLFrEYlNLNGjLY6oFbwZfbVxlhiNNHWxy37qBlomTtjEfxd1YSzObJUh0XXtqqG9hwt+Eh8Do6xSkepkewkoHvuLWXMYEz7C2lw/IxXbtaOx0Kgc/Q68HZxvuzsip4LkWkZJ7ZRLLYBKbpxiLaD/avv6Gm6IkBZFH/B5r3aamB34y7Dp+2lD9I473DumgNl0uVBb4FAzK85FCcrX/WnI3iSsJCUQ8YRaV4l1x1fWlWEn+/5BdEQnDX1Pf0i2O3WFVVV5mhNDvRpwfubKqWxVvPYalLEep7YnEtytltEItb+Nqpm7/nrdZFZq2vgiQ4uH00nHpHCLcn3PFmQxk9fuq4OoeCPlhqeHbuOIlMu0J+5m1bw2anb+ff6KZdO9/i47Y5Or8tbd7fzcnhRpEWf3Ezh3F87PvgdplhUHTu0VdhRJqXOSWDQrpeuAtnIx+HBwfinsxuahGe6tM3PRNns2zt4QpGAFLPyekQmjYWWeCEpLXSfgCFTF7rUbA7+GjezxVU7/1MPuiS6/zGEYUyChgE+AlyU1EdZEL8T+C9VXI/5+NETtliaAfuKTMl+9b0NEEhHgUQcsFq4j58lxGXbEGc2evHDeRubEX4shKBnuO3Kd4kd0K52LgKqZ0r4GHVWfxkO/blhFlLyEtGRXzqXJjoRs6oG70+6ZOVwre0y/w+rqIPx8hR/oN+gPQlRc5uM6465zgP1sEnNW7m0rqwUT3Kgc5FtWho1Ol4jMY2o9/2SmCBFZyCvmihp3VhD/A36FGqgfm0g3e2ojYYRzzLInZIRKdEs0QwS8tW7reAuVn3T48HfXvGZq9NvoN50NIAlil97xVY8SIr/p7J/UF2t3tfpvd3wvoP3aQBxuoespVtRtM2dYiIPTefwrtLgCf603K88eX8Ix4M0KiuNLmnLb12FMfJcwrPKd0N+hkIcBrewgw98Ulo6gJJMCid1reyseXEKXzvizStlxXHnLfW2i0AOsTPOXclM7qb3lwZsEu7CWuBUkD/9Q91J588dgD+rpbrAfzfkaFAUFyxYFX8oWWDQQbaAYr2RxKnSuYu/Ucd24wj+/wDjRzypt80lENwbJbB/Vx7atFBFvVeBkBZLlsMVTqrdPLgm6oPf0/eRVUAYHAZkhRcTLn4Nnm3QkM6lWjCH87UZN0LzQvMvsq3KQ/ZGSvcBBF1UQAWv/UFaeJ0sQaiOmEjyjByrd3Nj+xtcFsPNXpPSY5Yi6QNET2FPUkOz90uY2cRWDGXPUznHgdsyr2c0OzPM96MaBFf9M0SkP5AkiJqtfO6T38EXznMzNtD67gWh7xzODFXzpvaYslr3IInVEExtJwIAoKssIj3vfyiierYSg9kYT1Z5hKHyHllQGVJe42","layer_level":0},{"id":"ac5bf875-9f29-42aa-a192-749af648a6ea","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"类型系统","description":"type-system","prompt":"开发关于类型系统的详细内容，重点介绍类型定义、类型检查和类型推导机制。详细说明BuiltInTypeSymbol中预定义类型（如int、float、bool）的实现，以及TypeTable类型注册表的设计。解释TypeChecker如何执行静态类型检查，包括类型兼容性判断、运算符重载解析和函数调用类型匹配。描述类型推导算法的工作原理和实现细节。使用实际代码示例展示常见类型错误的检测过程，如类型不匹配、未声明变量使用等。为初学者提供类型系统基础概念的解释，为高级用户详细介绍复杂类型（如数组、结构体）的处理机制和类型系统的扩展方法。","parent_id":"","order":7,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/BuiltInTypeSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.914933+08:00","gmt_modified":"2025-09-16T13:19:25.9753045+08:00","raw_data":"WikiEncrypted:vKr6dgGvp0y08i+7u+cDRNoU9X+dcXKCD4e8yn9sTCw0p4Pd3T+PbZ8RbIbknZVo8GuyaTCuy70MaehH7Ig/D3J39zTNq/+1CweQBPE/gjxuk0rTFbzAI2wpLx/m2gxzxqge5OGfBEmRqiP9caZkA7skzP+IFOtGxl+OBq9lXP2CVLr1snB36ypkW9zZyl0M4VynPQE/WKBMOHCa8JLrzzOpFiHAewEhOEcepBhg0zEW2hDv8ATk1p1s/MgLuC1ij3jVQwU9fl4Kb8uwpAMVLPUmd9HE9K2HqU7dsN85nk8qDms4RHt9oISq/VFd6r2LAJEnB9SVpfXvou3p4EV2NTQsRQ3HeSsWCkYjKNzZBy6p+gJg4JiN/ZK3BNj52ax5/hKdAp1JYkjc/UBeEvoSw0YJVLo/34YieBWqv6L9YZNY3fI/dgPxot0wfXqqg8dzqG0Eo2pDehaJdhoRUh0NI3SqnyyIntyjV7cNPI3+z0o6uCH+juqyJ66hrL6/t9ZEKbd8YHyOcuTICLtcDkvIZ3FxnKd7e+c9tBkxjGVe18MctQv1WpzehgqA8mNQlSIINVG+r8qHux74ufUqdNn9rOh7MWIs2e+h3Lf668vIK8w0FF6Ke5ho6h9n7HAuPEQSSnMhVRePW4mpNQziwpGpB2RDdPrce+ZnOK2Whk0lcZU8v5olQe7iTwDHoQETWXX0Ij3W347LYRb9C2OBXvKmVdB3Bd1GP74LeV9+I22VExj118J1RqLsECwBoI7AA8vna8vUOhABG8g3KgNlZqhxBT/rNYzo/OFLTCkk55qaogcR14zOGVDjITXXx5TCohKLX9GzY0CuykvvTdh9jE0Op4ckDKr93255wgzmJknEJl8Zi8ZmIZFzeEJZYLR1QLsPCfJNIB3egJ8QgZzkscJTXWikZT0nYE1mRVDhEjpkhaKxbkO4it5MjDxB6VRvQFUIuLAIl0DxNfpPDbYojmUXuPI3bxsNspIGA7OmjKMdldYdF2PITL19gHYs+6VXlmhSd20ceoAq72RfR39mInW4X1zDE3pfJ3fDoGShAnq+um45igWTkS4gXuxWi7EYQq0ctBI34ioOasIfR0JpKNkAvfmJRNlYG+mFWWOucVMczVF1YVZyNaYAQGVqHMK9yjzB8sMXrHlH9fUPxFEWIdMQ+UiwUXHGb9nMPFJhp2OwdfWVZGOX//v6OFEvlIb6fq6KasrOsP3QVL4yd76bfDs9psUf3nYwrlIdSxyXGuSfL+NSdpZm+QIl6fiSH2X+2IbPJcgs3vVlOL5bhrUGIM0PX+de6/GoLlbcvND/tzHOGhZah0GTpFL41jZ/h/UJV1jbLAsNwMF9Vgm2LRTg3IxQDKEhQ0WqiXhyaC/1v+LxCVcPiwy9rgmjBX00U79mVpgX2CzkYhlCk1APKWbaDkcA1pd5048xxDOoSdFQ4PCIxxJOdpfm562j63PWyFaRnjSW6147BVuifVryk0X7zCNtYfxSjRChfFveA431eSC1P5yu3PD2Zn7AHpUyf4yKPToYKkCOFV7+ymLIgF9lvN+7Ac83zN3A2lNLfEzR/7xXopAcGecrhIqRXgBUcmHro8T+gFBDt/O7YQ9tSToJKC+9y8owql8ruQEvyrFhwUZ6hTM=","layer_level":0},{"id":"5b067f09-3333-4799-9e1c-6c881ba1a4c3","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"中间表示(IR)","description":"ir","prompt":"创建关于中间表示(IR)的全面内容，重点介绍IR设计、生成过程和地址化表示。详细说明IRNode基类的设计和继承体系，包括表达式节点（如BinExpr、UnaryExpr）和语句节点（如Assign、JMP）的具体实现。解释CymbolIRBuilder如何将AST转换为三地址码形式的线性IR表示。描述虚拟寄存器分配和操作数槽位（OperandSlot）管理机制。使用实际代码示例展示常见编程结构（如算术表达式、条件语句）的IR生成过程。为初学者提供中间表示的基本概念和优势，为高级用户详细介绍IR优化技术和自定义IR节点的扩展方法。","parent_id":"","order":8,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/BinExpr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.915959+08:00","gmt_modified":"2025-09-16T13:20:28.3144279+08:00","raw_data":"WikiEncrypted:DUAWfIL8pgKOw4IBRLFn1ybjzZ5piLESsSsruUIXsSoPhDHeV+EnZk4Q1/jXN/j+b6rdZyJw5xDtPvX7oUQV6XyeZXKYS5lfV1Ce+NTBVLSFhxLKW510Dq3vKOBC3N8V4sFTnTUWrLtg8UGwkFTY8UwaspNahvPGY1EP1VjnEG734oVYADiT0B8Z1Wbx+E+44ExKMliYgArK0lejAJjnMh6/4bZkq3wqyTVv1uEqOF/oEkugS7ZfrDFyakotr+CbVqJk5sKMq/x8cZaEH268HMsTYYI0Ak/ImrKjPwoB1SuODKXzT1pBgQMTdgmW+LWB1lQKASSQ8/0WKSbve9iS0rHtmVk32U7nDsjiIqp7CGiFbbN6e2Lc3s5zJmFeBbXXzSllExU3xh2tAlfVBZCMPP3CLrWNP6ZBjE+OIsU93pC3h4FGTUx8N3Wk9Bxn/HxpAbe7i1zNezbqFAxpcHe+4zUOj+JT1jkwfliLwk7Y9/msNxazA7gNDNGXUlpiADBleWotiCP7V+7mXBJfmA0cAhIqxWwKfJThtH+jvH8o77LYU7epMzFweQkiUk2/XISfudMmHKzKtHrB8j4IVrXKhg6WJPF3TVcSBZfIRIpF9nQRtYBMykOc7UcDgE0YRGFbe0vlZ4Gq3ciTBLP22nd+GKVW4bA0vIcwAAT7NlSldxMd510VKAvql23HZODlzfz/J63Rh2/nj/D0/3Qm2/Fg0xY9Wk5/K8Xlon+cXlO1LWuBltX6FLFL0/vK0ohpF6VguF4o6Bd+I0Tf7i/jOuQmhHrmlmmM7S1UEvusFycGkBVFHGR94XeEHDl4bq9OMCTXeWTvE4yRZiY+1mNmlCE67L3lUuBkJzvvDJYcs2SrKODm5EFy5nkURWcLhLAo4fD7cU/g3+DNkFro/PxZ+hQ2CoIvN/g84zGSycFVxS2tM2eIYoYAto4vtw+GATxJeUJH25qJViX0kPxK4upqcZzFVcppcBn9xsOXGBnWG99NwSp0+YO7hKktSUd3x5QT0AzwjLM/PrSje3c6iVplmjrQkg9v2MtrxPxRJzYxatbJB8kEvObk74wmM5Ytr1M9DWXcFDbM5KPxceq1HD/smVYaL2kaBvPt6wy1G5ioZJ1Jb8JeBKDlQ8CEHSAOChi9Ccp1VEZujzhfvk86rRQGxOKlIdjfLpfZmVFDCfHYMlnl+BIMJa9xF2PudfQId33jMnm7misgpBamXHdIs6GC62OzxezXtV5zfGIfw4MfA2mmWd8bRRS/ZrE6o3oD8M2zjcTl13ODLybWh6gudVxwufN5+a6ugHwgR0qYNE9Tyw2yK2pidpgpDI3MzXHVmynQNtebkCQZG9uFAUBAJ+Qv/v8nmI05OM8fc6yGR8dPu286IC5wsPi2lLpeJsbSwxzNqrqTKbIx8lxit1Oy6GtwKz0XTkPwHSvKFExnBVTHWn5uS7SJ2jqaNMrUny993hICCk/kOudOurgUrX6px8t7vi8BuBmWgMEglUuxf6cge0nQ5iI=","layer_level":0},{"id":"78a90da4-0651-4383-a60b-d0fb3120f02c","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"控制流图(CFG)","description":"cfg","prompt":"开发关于控制流图(CFG)的详细内容，重点介绍基本块划分、控制流边构建和数据流分析机制。详细说明BasicBlock类的设计和基本块划分算法，包括入口/出口节点识别和跳转指令处理。解释CFG类如何组织基本块集合和控制流边关系。描述CFGBuilder从线性IR生成控制流图的过程。使用实际代码示例展示if-else、while循环等控制结构的CFG构建过程。为初学者提供控制流图基础概念的解释，为高级用户详细介绍复杂控制流（如异常处理、多路分支）的处理方法和CFG优化技术。","parent_id":"","order":9,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9169855+08:00","gmt_modified":"2025-09-16T13:20:48.5257678+08:00","raw_data":"WikiEncrypted:WC9FW3k+VPelBYi2sojzvlImYk8oUaOKu7scm1WEDQ3zCPsxD5T3buas9zt3/ediNlJuvXRtCyTpWhQ5rSWOtTtIzKBdYPW2IGqvlvI7V6EKEmygRqvuaCksCJZMXI527LDYHSEbnG4uJuhMmfKwh1J8H9tZ45w+B954PrP7M85RuN6wa38j+X+hNh+tM4l0ZqGcr/bp2sSC0hlNWxAwny4LEMSh2vPTb2xxqRjOCv10bi8VeOWL3HnkNcGcyBPs20hV8cVAZ7T4tThJY2w+sx7Or9M6IYlssu9GzuVKPJnMTOWIQb9UnCQ0ppZi8FxmnMMPdbH7zPPZv7WG+/TADWq37p7jWgrQa1zdH+izuNV5ssjWS0UCPzR08hx/HRtDNOYJSmr1AwL3hI53eZIF+EPLoXGcA/iqo0joDKGhvvZKYIo1fkpGjUQO3DvfnrmSiFJuVO0WCMzM6YHjjbdZ3OjlSUA9LdMaZQ3j6ef9VCMgjFCjeJ1G/5WZGbq08IOBH6xepQbg9DBh7GP6RvubvyL4HSST5rX5OCXKpfcvTqWrm3MGAHDD8fZDvOWC75YD6S5GAaYr2YV4oqb5Ru+XJOP1bhnFTqQUwi/WoCO2N2C2Lh83IvYHpNNiRIKwYHf932hmNgACS23EylQgojXAMA3XvV8wKqI6of2Xe+wG7Bt0yKtpP8Va2KiR7l17vmTd/5N0+EKeMsrAUDtTPtlElNvBUtnbzlAuBOgbnFuHp3yOaJ2rtir4lVi5g4emy3wfuHky7iIf1SHJUNqhu26J7Z1KJF9eAX9Kvs/qxHCShNX6/Z8NpUufhkieGnrnPdkEwKKImPRqEh+lTJQ4cbYQhzGAl8p6eOF+NbjFG0jQ7CNIN4UTv09FQF2rNBhy16yhf1WYmrLZj31HUlR+HAtgPOyD+iriYlH3x4MaiT7tKXKOAWEXimWFvaUvIydhnAMcLDzbuc5Aea8tHa+rsCwLMwWPMp271CD6W8VgxzZW3CP+QYwes2thMLUeLukJS/MYWk/My/1Pf87lK/qgPT1WTV2fRMYDkxZryyyqvhVsT0uMlQWsTa7oJa+ZLnOAXl/Crg6yQKBQLIumT8OwLFV7FfR7ozoTHbsvyyKRV0M4//iqoiAiTGIMhuEbOhMaoVKqPR2AksQy3l4OypzL9sdHrGHgesW58MWednZekYa2uSD9ISLPgqAMDrbwMra+bSX5jtL98vcE/h+i/lHdz10t2TC6h/srJQOknIm2UYi6rU15akKkuZQOEzUxUhnhGjeO0I8j3FZnW4l3+ww/Vurjo6XGHsdOlgswrDwUctKHKoHQ1kYGeCtK4brP4qXQ2USVQ9yZsdCAw5ftkA7XsPdycAwRuk2mj+FeeX/jIoYEKmvIL3SY1kcxqD+ZoEO5hbHneBBz45A60VuNt/Y7M8klkuy6ce1a1a8V2V1LsG3Lz3bJvqF+ADBfL3skM3tPBXfWSWRGfe0fxOVLeTSS75o4DA==","layer_level":0},{"id":"50dac0db-cb65-44b7-8414-bdf4906d2e14","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"代码优化","description":"code-optimization","prompt":"创建关于代码优化的全面内容，重点介绍优化框架、跳转优化和活性分析机制。详细说明ControlFlowAnalysis如何执行基本的控制流优化，如空标签消除和冗余跳转优化。解释LivenessAnalysis活性分析算法的工作原理和实现细节，包括变量活性区间计算和寄存器分配优化。描述IFlowOptimizer接口定义的优化器扩展机制。使用实际代码示例展示优化前后的IR对比，说明性能提升效果。为初学者提供代码优化基本概念的解释，为高级用户详细介绍数据流分析框架和自定义优化算法的实现方法。","parent_id":"","order":10,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9180191+08:00","gmt_modified":"2025-09-16T13:21:26.4456733+08:00","raw_data":"WikiEncrypted:fWEzcaPxgqIgzhDdfLuBU1zoDX1UeUmrqd6h+0yRN5iLpa0onwh31pIPANDoLbzE4sfp2mUdrS94xZYbePARzA/mx7vBkkpiIdpfIg7/qFoJ0SsvdQvOewTP3GyZh0K5WDaKR/F5Gv6u8GazCFFwK2/gUCpl5y64de6sxPUJKanNp4xAps0GC0/n2MnjEWxfTTkADVrBAd7PJQkm20VkkBypmovslJCe7fcbsASuKnwRQUyDNvEaduX3tY9moiKwfbYsIpEr66phyPAI6ZNxnFmIFp6TZLQuKHpWqA9waxG4YQJmWYBUmSurEED7CO+arjH0BdwwMiXUKUI20pm5LbZpC1gQn/e/S0Hqea4RBNV8J8gzsINQhJzI/LM+vftCHkSBv1fssxllatfjL5YYfvBHTckYnjRDJriMSCoTaFnagLXH3xwxOJsNiakKSzaO/Q6i+nDkVl+k4BdeyjVSO+Sqc8PM/LNexJCIoz9b+X9mdtrzsDosdYuTGXftFTHH6K7305KPuKN8LAQ6eQwAhGMtbE2k8e4vh0C6sFC2fD+4WAYEqrMYn7NMhGikfBUw4+1FbZUeQJA+QI7qMHEZIA+4YbmAaIgpOKJGbbXSAodqYa73WpBP72xVzGHIr76TcR6jYPOkNV42O+TxBrUJoKnJgkH+mNm4yp/SWP9HQUxDdf1LMZ8e/nFk+diuCs0v/iC36En7nyyG+QpglArQKdthJI+e+2iuxczYQCfWSVutThv//7YpwSE/RGs8dgC2hBEneJMpjcD7A8yBXmIWYmMCPtPafzGQrMGZIYZS3rqPgaTm9HXqSAhuoeS6JJCzAvKIchgZPwyl8zuLXSqjZevr1ThEJTLajPy2u9OGAPrpsamYwS+d6r0jrU9lJT1qcw7gIAP2x4HfoGgz2eg6ryJ7Ytj15JWDYdYSVEtVmhd5FsGXOv+sbQ+RVCDTeqOeTI++ExAgeTeIK9pTZBUwSRbCuwT6iFv9x9CA7WQkhsk51/p1nPW5T2wHQegA4CJQ5N+HCHXuKPVw2YOuVn6m21qyBcvoP0yG/GXhUKb8+whO0PQY45tSvRStcuXHkS3TdbBmIakWSFTB5BO7KUvLTmO+T/Vr8gzq6+PLMh99rtUukJqGZtB+8WQyBWceKdRPNacUItxCz8fYVMT+QsdSxeriDs2JbYEzFKioKcM5d1G5IoVX7lHElWTNeHkmew4EinlVI7YozKwvqi3edQIrJ2oVbRw9PRqkh1FNNgPnCOJ/il7zODT1bpu8sNat1vvPxFOf/iPGvNlvR91D5pyq/dY/KCQBYaX73CLQUDSPdnhYvHDQ3sm9Uwf8l6pvVQCzNcoFPMmcK8tyuBJP795Et/XHNFtogPg1B2ZmgPB2hH+kcilgJV0i8T6bmZPO7PsFxn0A4doILnQaV21w1EqaJUTomI58s221QUM0S4wqIeq4KGV1V15Q4id9ZX7UK8IzmLN0Ofxoo7ATHk6IsS8TI2pd1WDY7Ql+/JsRfB2JINkd1W5UY0e9FaWwIRM7Gochtp+Fhvicfj3FwUsziR9HYQ==","layer_level":0},{"id":"3bbd7f64-8bfc-4aae-92e9-e662fa2ec09d","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"代码生成","description":"code-generation","prompt":"开发关于代码生成的详细内容，重点介绍虚拟机指令、代码生成器和调试信息生成机制。详细说明CymbolAssembler如何将优化后的IR转换为栈式虚拟机的字节码指令。解释IOperatorEmitter接口定义的指令发射器扩展机制。描述BytecodeDefinition中定义的虚拟机指令集架构，包括算术运算、控制转移和函数调用指令。使用实际代码示例展示常见编程结构的代码生成过程。为初学者提供栈式虚拟机工作原理的解释，为高级用户详细介绍指令选择、寄存器分配和调试信息嵌入的实现技术。","parent_id":"","order":11,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/BytecodeDefinition.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9191305+08:00","gmt_modified":"2025-09-16T13:22:04.5374384+08:00","raw_data":"WikiEncrypted:l0OSRLb3jX0WYjxj0Qo/H7RHhqitOnOdiuDaGCmhl1sbcPL321IQd4Qxit7yQtz5kq+iOlPD1Sh0rumguN1+/tI3XmIISGbeybDvsBoJjta3U2vI0N0pzqzTt4SmEk0KOTiszLscgfgylUlI/S2hwvTUIz2TDUJMw9a+Ll/AWtZqg3oBIc+SCiFbCzacrKDUStSa08AYjNk9OIVxmXBx3B6+gwqonFH07stT6vhs7bWDBEgRVrLFrqDkunFGNnYjQPXuZTjy9jGxbSthfgO1XhVzY/ARQOa1mh76De6V+ptDglf+E1ch09eE7lvKBRz+4l/HsqLDapM6edk2ZO7kVVykCnKkgyrRWTPCgcJy0cD8doDt36QeK0lQ/NauucStUfZlQV1MXYb3YDgcEckh5JJLA7b5cXArXXxHxktokStr1Q41VfTQe/wZQZEJNKZmCkJaNj+62xJ97kkCQXOo8rOh2aQtbtQepwS9Nb34fBgNewZTBavuO10kR1zNRvlb810HTC1Gy6noAI3sqBBtoJ1rjHApXOuhYrGdLfrTLcC+ekE9to1DDezTLFcB4/lBjtUYGkK0Wm/OPkrv1EQRtHqDv3LSiWfiSNXPfNr78e1M6upPSyXYyXvFJGHy0ajUan0Vdv5l+Dw6fP/abCG3wUUe2c28Rhk2j6KvzxV5Pac9Z7F3DTHzIQU4gulnlhDxGYMAT8YnXp/ghJ9JyMXqhVnyffRKnPvlKzUIStKR0yCVe7r3SBCtAYrdyU1iUpf5MCaLoDUoXUFG+TZSJaCxrheehYstZe8Mk4kG1rqZ4nFf1+8GwegP+CBXuVqyfws2SSpWC3al5VXkaCnLojbS/Pb5YdHiASXPOfEp6qg2hgwxF+0SbcEvpSDqAbWrREIHdsK5UbGWJ5d2Zsd6Hi2nFJeFDN3sVPa7sj8+Wxe445n3zx8qH9J2xv43rM8AB1w4Y+DPVG4MaYf2BZjOo+NXGLSFlWpYzn0AHtITi3XF2eY/dE6esF0KZwN56eOuwmfRcHmOK8R6NAP1/2rDBywesu853HEPituYS8FDDAiFhK/K6zT6aZY2l4pwe+N5wlxdEOLkzNR1a97u9Wtkm7o5NXX59WRsdzJjbrZwjuGNM6uO9vGonfImDLyg6VdUF3GrbBkJVQK9P91Awt9+SKYPj+wODXmxIDaYvITCsg5TBAIuaMrCE6sBvyyHbpWDAkKPsvQAhYNBg99Bv3JccJD66bLA0hh9l7gCWmChXxCKZ+3rDrwlWEfiYBLhI60FKwvOjvcCa9ttmUune5bS8VaRXVZDAp40TmXoMRAk41Xwdhgf0CZBARWVY3e/y24gZEeIh6eaLvamzutmb6vGKrFCSMKKRDrFDnz1EKIsbJ7BIDWy7UfdH9yjK3wfLQ7jB9Wy4MTy69wMo9awm8BTRCyVkUZ4eIf08+bAZyEpNLpK6CnB6fubCLd5VuQ61YN5MCA4eqII2eMafSgdTkariqbtpb0RRAc+zgZLN0TqH6gMTGagBFWR1Ax8c1N9jw5WgmvoiZVpZ3FQVNOW634At8/6iP6+/qm0GKoAw+I1koiknNY=","layer_level":0},{"id":"eb08f896-393d-441b-9c1c-d66e63a49069","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"测试策略","description":"testing-strategy","prompt":"创建关于测试策略的全面内容，重点介绍单元测试、集成测试和端到端测试的实现方法。详细说明TypeCheckerTest等单元测试如何验证单个组件的功能正确性，包括边界条件和错误处理场景。解释CymbolAssemblerTest等集成测试如何验证多个组件的协同工作。描述EndToEndCompilationTest等端到端测试如何验证完整编译流程的正确性。使用实际代码示例展示测试用例的设计模式，如参数化测试、异常测试和性能基准测试。为初学者提供测试驱动开发的基本概念，为高级用户详细介绍测试覆盖率分析、持续集成配置和测试自动化最佳实践。","parent_id":"","order":12,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20/pass/sematic/TypeCheckerTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssemblerTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysisTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.920171+08:00","gmt_modified":"2025-09-16T13:22:19.3975575+08:00","raw_data":"WikiEncrypted:a51tw9+B5Xez88YuZqi4cPV0J1CJauHTZselAZQ9sG7l4kxIBXkREciZA7/pohakdE3sC1hkisnzN73PhaoUxWweg8qdhN+svaJr6ViwImkmDTmBIFmGGAsMriLFY/noIWhOtvrkb51pvXmao4qCbf7IsMYQli9YNyn4P236HZbGaA5rfA04pqFol0q6kJnmSque9bIjnXqF2qQ5/aDhLW7+02IbV1F3OWFqbHgNJuUCrysh238KhT8IHWPObKiP7xDyQeZOxVVWCkPILly9X34f+4dsce+hdt+lcYbAr7x4upfB8L5bXp5X1lSiBXou+PagN3PCn85kOGgUvE1XmkMhtIrA6sPj8xgKK5TnYfvfhHLjW/VbgB5U35AivG5vCwQoxlRo/3IAbN9eVUIjKkLRqez5rWMndF9xPQFCbHZYPzRpBFcGZBQtE/IlDOksVigRglqZsvLw8fjr8vE9s/o8eAhML2w7pvmxzCuSHF2N5blj6/OUUcIbc9LcDFbUS5MHPvwuHQmBJOEJTvgOzlXtvjYuWpwq+SDlr7e2lDOjsZ0xlTZtY4tkq7IPyTRxPbeKFVGA3oiPEOsny4wVF9y/Z6/ySd1W8T9gTK7hyvchPfQhxuv1zPuFwX6TOK5vje67HlgC1++aAMldZcXYu4hnDmn7fFG0dFmjN/jcP6+uWUj4jHAfvLFeOgoIBocr/UtRvPf0a9LfQk2J4RHnM0DFikqR0vTrdvLQlfFMnW4e2OpReFQSvteVKHVPAjEM6Uvg5y9mPhztufH3QI0z4rlQlf3NCMfitqx1tn18r6FFDZwsaimwfs3EuT6SPe8AgTkFzOgRjbZ4U3VJroc1uj77qxp2oDGqrl2WrDXQSL5QXeqr3fkz9drmarW3RRSQFYWpYO5CTqMefgGcndEz12T6xVC5zWDf72gT/e5ZIWTdJfBR10vicgROzMPuvj3/TnXTJU2N1kzdGYtcFt/0epLntRFAwzySqkA4H+X6WmZuAH8GEiUhMQ5mgYPPEb/rMDW3fKZeNT0JoAN/TzKqLwY5Y6JPjW/AufbJ8TM+PW984oKM5v6j/ix9R79eUGvLbgw2iZhSmy/Wy/X8TJNps1x+RvigWDWtVVF3WFn3DxLv8TvXA0a94IZwynL3Q8Ris6t/Hu3sFYSKP0cU27M2EVZ43A+5sy5vwP3lRX8uXLMWEp/0CTUsm366CqHbfLb+mlCvruq7aVEOtU/LBwPGoObhzFbKTTJk+ZMrNN5sURmNOKhm6EAoTOxJKxNosZuoduyH692ofQewWMjB2KZzx6BrUYzdXdxvKehkna7xxt/oWTnDNX7tzlrF2427TnGgOXvN0So6SUwXuSRyk2Kv5M2K43W/3CdemXbDxkCBwkf241lbcYVU0URVcSw2FAhGdz7X6gkD5u+1FexFwf1l6vLUq4g63O996uCUjt0MlLQPK9NO8DpBOawH59EiJ+8pwcaony9pEQgjnScM7+9X75N1hbcS7Vq2K6wpEu+43snERXuZeeuS+lg1ApxL5hzjvw8xwwNPCpoXl4znG8WaPs+eg+GoHoqSDebB9QDDFCa4FfekmrtN5ApyeMVmrAz9mih1hehZ8LYSruVGNEWE9OxvZoqZWXO1zuUoqKxDQSo=","layer_level":0},{"id":"a9387ff2-2f30-4362-aa92-c7571e48427a","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"调试与可视化","description":"debugging-visualization","prompt":"开发关于调试与可视化的详细内容，重点介绍AST可视化、IR可视化和CFG可视化工具。详细说明Dumper类如何递归遍历AST节点并生成可读的文本表示。解释图形化输出文件（如graph_0_origin.md）的生成机制和可视化格式。描述如何使用这些工具进行编译器调试和教学演示。使用实际代码示例展示不同阶段（原始、优化后）的IR和CFG对比分析。为初学者提供调试基本技巧，为高级用户详细介绍自定义可视化格式扩展和调试信息增强的方法。","parent_id":"","order":13,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/debugger/ast/Dumper.java,ep20/src/main/resources/graph_0_origin.md,ep20/src/main/resources/graph_0_optimized.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9217192+08:00","gmt_modified":"2025-09-16T13:23:12.6609195+08:00","raw_data":"WikiEncrypted:IGJnZREY6KPscHFIFvSUZKbD/IVyaSStzN7HskDQZHH2j3aa8n23CyGKpkr39Og1M7PwvWKEF0vuPhNFU/sbeASUEqPueEbs8ih7v53CmDTHuRfDs10rbTHJB9vQ2iU/GICStZWtWlTQJvPcDYukjR586v9bxihsq0MZ81LsRTpJfsMaj16qYjpzXJZB9zkqZmyFCsRF77QJPk951tBtMrzEkKDz0x52o6C1upBppTXuMS3xx1fcTIhwfa63HoHdRbaYAsyizhGk0Dn4wephfjXtJIHDTGQabNB9H8k2xmnvOaFCg2qaXP1NH13AH022h7UAv9GKLzQQta87Mh9Ajf5uVWymvy5mEqtKDUH7N4WjIr3H/TMI625p7kuKGy+SoKMq6/r9ukVJps/B6SVo9WvAMcZTUeNtfuv+vnjWgfryPwORZV2ax+i6qDSvMDrRLXcCiXyMNfpusHbURJu24GYbYG+Sq9+V4yYuOxi5z2EjuDizClSPLI8Wsg0PdGmR3k/bZpKM0D3NJgery8B9AldAoZQ1VWLe5MrccJhNQVO3gUGy7yGSFnWYpZFWDFtWv/iRX/xkEMLmpnut/rWgDFdJdJHp+3T7USKY/GBERrU4MzoXvv/o9BCBq/+rCxRuOIEHhAUJt/1dbjV3wWWUHl4DO1p+iyZpbZbzKA+jU/doNx8ND2wfEenMgMicaqfTuRojSmCa9QswfSIS1DIgNGJ9ksKhCF4ZmmEgIGiokFCxfIWzD9HvCFjq2xsN4tLLF2jIf2XKMP6FnZng+4dw/dwkR+2YimJKMHTAA5yGjf18rFLcAsFNhrRL2snSv+08X1ZSGEHwQ9/s1causfInGCqOWPa1rkT2Z/jC9vDIVo1ZqFU5dmZMUaBz1ymywwjOObxO50fQb3EmTh/m8IcgrZzwscSywoKzFqkA/nRJxo4MXwst+svxaI2l4cfmDt/sX5yfWnW8ATJmhCOECdxI9aSvd45n9hg0etpPnlaNHQjRyF0CzD/utNesyHdzwdhWmzHyziSm2byUvX7hNiNy8yXVMzZn1TSuci/JW4AZQLKf5eBlxtxH1AL718XjQyApA9vbJAaA9m/9nfeNHPB6oe1wJgSgZBU0AKnBgo9Oj7Oxf62/HLMS7gwyKrUTC0BwpJw6jvAP/CDrvuneu29EUhoov9NomPvELvewv3iKnTXbbFljte4anI7Lak9jVAbv4f4sUgRaloz8iub1begUS/fWwnIZVG39mEMOzePmg7Fw6fkkxKO+cSlHMsZoiqGUaiqWZ7XR5uMoE+4RVtH4qyil7XqUqSQYZxZDw83sA9dMU3RC4s4LUT68q/oiIOawUPqKp7r55Z4SKkRkp9VihCI//UWSUNy+e3u25jyF5a4=","layer_level":0},{"id":"01238a85-f139-4cf7-a249-09778cbc4fe8","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"快速入门","description":"getting-started","prompt":"创建关于快速入门的全面内容，重点介绍环境搭建、构建与运行的完整流程。详细说明如何安装Java开发环境、Maven构建工具和ANTLR4运行时库。解释使用scripts/run.py脚本执行编译器的步骤，包括参数配置和输入文件准备。描述Maven构建命令（如mvn compile、mvn test）的使用方法。提供简单的Cymbol程序示例，演示从源代码到执行的完整流程。为初学者提供分步指导，包括常见问题的解决方案（如环境变量配置、依赖下载失败等）。包含基础使用示例，帮助用户快速体验编译器的核心功能。","parent_id":"","order":14,"progress_status":"completed","dependent_files":"scripts/run.py,README.md,ep20/README.md,ep20/pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9227679+08:00","gmt_modified":"2025-09-16T13:23:12.0695473+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWjuiNN7p/9UiziFtG8VxSN3lDZPQFx0/QJ3DnzLYLtDRB0PjE9cisLlGJo+Wzf4iGGcL960qlFJP0Z0NOXr60M2bSsNhkawjXfjgYVRp/0biJx4p6D8bVxuQhbLNTxvHNXR7l7SZcd20FWoHJnMg05QHSqLRT3DUFWe8FiUbDzF1PkrJpDrEY9WSDuyBujve1bMp3dGP7zE5haIE8bNOvEVZyVw2BvPCGUwgIUfEdZAOwalOHWWUzTiamxRCN9NEWc41GDkAm4cF/dNGh8MtyEysSykPkYjICVZvetRnkKJVgwbw+7+2isfBXLmzE/cLRwSR4F2rjsChlgJZLReUKur28Ymo05FFbT+g290T0e0Bjz6YQBD9fwkDdRIxuq7obky0KWR9psyR4yxwJde0iz30/bdbWCeax8WKss+3JsUS9l1tV+xIUGcyOU4g0pVIM6BhTmRuEzEsPEQW9JLOxLr0gLifVVL9Si0eKSLqlRqAdvMxERALzrXLHwtwAXwkrIuf0/ODYH31i3SAKt00ndzSslivNa8yZwnJ13ps8rIxKUjlDDVjYKqPedUEC2p2NlhQHGH+0+N+FGj0nCfWDbNGLCOLMnhhxqjf4b6l+O2MpHvvgjiY+PTDkrAOhy3bQkjWmuvUuC5a+WBQoPe8YIuJ7mNIs6p3xbfrd77HfAAUVz29SjHSkIyCil1Ct3AmieZk0AirdDw9X4i0HQarU6NE+R3mgMpUpt2uZvrpnktE1ertIXihpxWTd3mvkCWIihRAUYur0iKBxC+S/qLQS9EpjWfIZt3unz4n5NcnDq9YTRd6yzSDEq4aA3rh8uN2NOQkWg2ZAHMuuT+m2C/fk/dq0sPCNVp6GHh9QhbX97C5D+5I33nXBR1+o3hm+aqJ8vESeulxTeZpMV3ANuHWSGmhMYu8aBn72OQL5mX81sMvQ9Y8bKhEuca9fk5wIFMuW6DnPsX+j9VWFWabTig6rMX4gLfvLOTDy+a9LyAMPZ+1JafsGYc2QP0sJx+oN5seMnEkp+OgSN+vXjQQcz/pvAcvPkrccHZ/PWEB5hcwpNR0ZV0C8IT9Qo0XYNxh8OOeXFuXlNrhKY6xVYNEG5v8kHIt1AHQhSpcg5PuAjoqQgeAqxgPn12uPXOGonUiveDPod0jbfnnv4Ue1MhUtuqiL8Uu/0dtiAeGl5rgBSikg1tqMwOioqP77xP4PdyvYGmyOqXqIG0TbjjyvdEacW+Cf5J701qhIT1J1p1Tcm3mlfj7+j+G7oJwT0VntRZk+kEGgCU=","layer_level":0},{"id":"33511800-4285-4b33-ab8b-84fdf011692f","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","name":"开发指南","description":"development-guide","prompt":"开发关于开发指南的详细内容，重点介绍贡献流程、代码规范和开发工作流。详细说明如何设置开发环境，包括IDE配置和调试设置。解释项目的代码提交规范和Pull Request流程。描述TDD（测试驱动开发）实践在项目中的应用，包括tdd_driven_todo_cases.md中定义的任务驱动开发方法。提供代码重构和新功能添加的最佳实践。使用实际示例说明如何扩展语法、添加新优化算法或实现新的代码生成目标。为新贡献者提供清晰的入门路径，为资深开发者提供架构决策和设计模式的指导。","parent_id":"","order":15,"progress_status":"completed","dependent_files":"CONTRIBUTING.md,ep20/README.md,ep20/TODO.md,ep19/tdd_driven_todo_cases.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:12:28.9232816+08:00","gmt_modified":"2025-09-16T13:24:14.2618085+08:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C/ucQxiwh0okVA48AmODs5RKNS8ZgNngqmnHSFcG/1UaJxx+3dUn+EkMTpYUsOg40q4cKBT+y7760k5UbCmM3rHN+1AaR55W/fYHBlkgkJXNZo3TbYOEgjqLDrYhg3loiUXKsVKRlMswO/Bxpp3A/vergooVwcgmWdVndX0xdLOFukU7k8SuDjInHO6TaHpCSzoplF0fXj1a9nolcWQVCDAZWl52YK2TDhziuggqdzZWdpOJC42pRbSve1UJNrNn9MHZQQKm3+l21fmGG9374C1wwkAaBH0bmac3tcABifvtLcJq9ke2Zf2T5H/c3NtUcBRqE9/dQ5RmCPRcXrDhGD5MG5BKHex9G/8FWCZlhVyAD08u1LmaBO1KxZSm1GWu3qg/qiRfBpaMG7Mc7k2P0RRkxfyN1WFxCUo71gF1rREJ+jev5qS+UKktKB0PgdtVMBLwQlGJPxTKRiEcue/aHPmsdobdap9owIbOPa6/g3bKqdVbOTRCJtA6A6rDc3sydO0ymxZMDnV16QBdCikZnM4iUF1f/dHWiDz0EszDyoG1tz+H2gnfX1CDTcHTdZkw7FwHip6+e/kY/Y1OvbfU2e0DWpD7SRf9RJEDsuiqHiGXHQ0w1X0R9w3wOo4ng23GOm0ZgZxU7TT45S/939IFSOt+KknEgcL4wigqVmZbjoSmw6IwFLSsNMFYYdDByYyli1D8Y9R7pQ+d2cj7QexovU782AuCuKFbiJCPssQck/HDlc9+ZofJ2EcmMVJsCm5dnNpttbivizYWqJlcuTdcfNYY/O1by43Waiz9O0wFctnNDPOq+9TtBav9yvDbm4sj7O1AJvYUiFcYEeEGkrN3A7jdEEcu0Qsc8tXIJ5uEVkAIcf7VQZP7d/ZrajGKPjx8QiqZGoyxWbBeJPIKHVIt2ZKKO0Sfrcb/biSWrKslJlA0dkh93NnhQCsRfzTkhnfZsjGlUKiJk/WVvht+4hUob1E6x6Ij0Mke8w226mOfNTZ+y8A8pUZyWnzeU8e7hsTD0TTo9yvEowuIc+U7NOwwJWqHdcgruczWkHEs5TUHq4U3PMyGNJrgNzbOe1j9gu7SWd4iDv5Kg8HZ673Msc7AqJGEPENqBjxeSkOGRgnuXy01SLsOvpNRWR9JsS19APo9F8oTkYeI7/bk2uXZJBwoQUmLGqcAV60tf18OxJIN7pG1DPmlfi45s+PycwYbZwj+Yup2qfY3Xv1bfmPn8WIzLuaRZ8iwpiACwOioLx+iVZPdBrCvrvyEDH+MY+tMDdXNmdwIBqW745hz3WMFjoDr4wnTNCgIxKGzR7Ytg8Q13Zvf","layer_level":0}],"wiki_items":[{"catalog_id":"2a4e3b5e-d8a7-47a0-a81a-f622873bd448","content":"","title":"项目概述","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"5cc28859-8b3e-46d9-b720-fa04f94449ce","gmt_create":"2025-09-16T13:15:53.1343507+08:00","gmt_modified":"2025-09-16T13:15:53.1369237+08:00"},{"catalog_id":"8ea2be50-6153-4fd3-8013-629d980a3bd9","content":"","title":"技术栈与依赖","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"e3ee9286-c528-46d6-b00b-eed7a34bde48","gmt_create":"2025-09-16T13:15:56.8145629+08:00","gmt_modified":"2025-09-16T13:15:56.8171373+08:00"},{"catalog_id":"6a440a43-4f65-44f6-b0a9-2cfb1e5c0c9f","content":"","title":"编译器架构","description":"compiler-architecture","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"795c56cf-a97b-46da-880c-f65be872dd7f","gmt_create":"2025-09-16T13:16:53.6455815+08:00","gmt_modified":"2025-09-16T13:16:53.6481473+08:00"},{"catalog_id":"147dc076-17ca-4415-a1f9-5c4891d6950b","content":"","title":"词法分析","description":"lexical-analysis","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"a231e434-981b-4ddb-b67f-f5bb4886d93f","gmt_create":"2025-09-16T13:17:01.9568038+08:00","gmt_modified":"2025-09-16T13:17:01.9588911+08:00"},{"catalog_id":"4347657a-a722-4c91-b857-41410d0a46e4","content":"","title":"语法分析","description":"syntax-analysis","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"dc66196b-20f6-41f0-b00d-85548615ff5c","gmt_create":"2025-09-16T13:17:48.8890082+08:00","gmt_modified":"2025-09-16T13:17:48.8916104+08:00"},{"catalog_id":"66345862-5842-4b9f-aea5-fef17844a70f","content":"","title":"抽象语法树(AST)","description":"ast","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"667a6eb3-f07e-45ef-a4a5-04dd2bf420bd","gmt_create":"2025-09-16T13:18:07.7805317+08:00","gmt_modified":"2025-09-16T13:18:07.7831116+08:00"},{"catalog_id":"59c404d9-484d-48e6-b14a-5bc14f06eaa5","content":"","title":"符号表管理","description":"symbol-table","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"fa10b49c-9b59-47d3-952f-7674a43777b0","gmt_create":"2025-09-16T13:19:10.5888805+08:00","gmt_modified":"2025-09-16T13:19:10.5914632+08:00"},{"catalog_id":"ac5bf875-9f29-42aa-a192-749af648a6ea","content":"","title":"类型系统","description":"type-system","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"730ba96c-8597-4fea-88e6-433d6c836cef","gmt_create":"2025-09-16T13:19:25.9727262+08:00","gmt_modified":"2025-09-16T13:19:25.9753045+08:00"},{"catalog_id":"5b067f09-3333-4799-9e1c-6c881ba1a4c3","content":"","title":"中间表示(IR)","description":"ir","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"a96fc791-1c67-49ca-a62a-83e4eadf0029","gmt_create":"2025-09-16T13:20:28.3123629+08:00","gmt_modified":"2025-09-16T13:20:28.3144279+08:00"},{"catalog_id":"78a90da4-0651-4383-a60b-d0fb3120f02c","content":"","title":"控制流图(CFG)","description":"cfg","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"f52a9807-89ed-4490-9a07-ebf205d5034f","gmt_create":"2025-09-16T13:20:48.5237132+08:00","gmt_modified":"2025-09-16T13:20:48.5262926+08:00"},{"catalog_id":"50dac0db-cb65-44b7-8414-bdf4906d2e14","content":"","title":"代码优化","description":"code-optimization","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"d4f5f11a-f0ab-4a55-816d-3765f1ee56cb","gmt_create":"2025-09-16T13:21:26.4436142+08:00","gmt_modified":"2025-09-16T13:21:26.4456733+08:00"},{"catalog_id":"3bbd7f64-8bfc-4aae-92e9-e662fa2ec09d","content":"","title":"代码生成","description":"code-generation","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"dce232e9-ab96-4e4e-be52-52d307170a31","gmt_create":"2025-09-16T13:22:04.5358952+08:00","gmt_modified":"2025-09-16T13:22:04.5379501+08:00"},{"catalog_id":"eb08f896-393d-441b-9c1c-d66e63a49069","content":"","title":"测试策略","description":"testing-strategy","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"90f68016-234a-4c72-8e77-e5b8d7982937","gmt_create":"2025-09-16T13:22:19.3954995+08:00","gmt_modified":"2025-09-16T13:22:19.3980733+08:00"},{"catalog_id":"01238a85-f139-4cf7-a249-09778cbc4fe8","content":"","title":"快速入门","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"147c23c1-070a-489c-98d1-36cc78a7d9b8","gmt_create":"2025-09-16T13:23:12.0669044+08:00","gmt_modified":"2025-09-16T13:23:12.070066+08:00"},{"catalog_id":"a9387ff2-2f30-4362-aa92-c7571e48427a","content":"","title":"调试与可视化","description":"debugging-visualization","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"10d58bca-29f5-414d-aefb-ad8429e391f8","gmt_create":"2025-09-16T13:23:12.6583222+08:00","gmt_modified":"2025-09-16T13:23:12.6614368+08:00"},{"catalog_id":"c12e4963-9d9f-4385-b97b-255b098564c0","content":"","title":"语法规则","description":"syntax-rules","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"14bf6a6a-ebbd-4fb5-900f-b492ab57db9b","gmt_create":"2025-09-16T13:24:05.7878312+08:00","gmt_modified":"2025-09-16T13:24:05.7904063+08:00"},{"catalog_id":"33511800-4285-4b33-ab8b-84fdf011692f","content":"","title":"开发指南","description":"development-guide","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"4737980a-1c71-4ee2-9aa5-8d64038c91bf","gmt_create":"2025-09-16T13:24:14.2592237+08:00","gmt_modified":"2025-09-16T13:24:14.2623254+08:00"},{"catalog_id":"51290a87-693d-46e9-901e-7b67ed62e6c1","content":"","title":"整体架构","description":"overall-architecture","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"75b314c6-c95b-4fbb-a7d1-7ef581d1a885","gmt_create":"2025-09-16T13:25:03.2111914+08:00","gmt_modified":"2025-09-16T13:25:03.2132449+08:00"},{"catalog_id":"1c4861fe-48d7-422e-9b1a-92b8b7a019b0","content":"","title":"AST节点类型","description":"ast-nodes","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"a14ecfff-0da8-4865-83be-e3d601219b37","gmt_create":"2025-09-16T13:25:37.6291825+08:00","gmt_modified":"2025-09-16T13:25:37.6312653+08:00"},{"catalog_id":"decb1068-797d-4d49-9f80-b76dc1f30098","content":"","title":"作用域系统","description":"scope-system","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"9e97427e-0b54-468c-ad02-8f435ef7e210","gmt_create":"2025-09-16T13:26:02.1222122+08:00","gmt_modified":"2025-09-16T13:26:02.124274+08:00"},{"catalog_id":"245938e2-8d56-4e24-a319-c2c3f96b5410","content":"","title":"类型定义","description":"type-definition","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"1b8b0b2b-caf0-4927-9fd5-44510c51b31b","gmt_create":"2025-09-16T13:26:22.5222159+08:00","gmt_modified":"2025-09-16T13:26:22.5242848+08:00"},{"catalog_id":"5e526e42-ebba-4f93-b071-2051aaf9d5e7","content":"","title":"IR设计","description":"ir-design","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"c0e6e186-d609-447a-8f92-3c7b86f28cb3","gmt_create":"2025-09-16T13:27:02.4845551+08:00","gmt_modified":"2025-09-16T13:27:02.4871291+08:00"},{"catalog_id":"c807c379-1092-48fb-a3f1-05595b9fda18","content":"","title":"基本块","description":"basic_block","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"e913c1ff-1cba-4ac0-84f4-28279b53c549","gmt_create":"2025-09-16T13:27:29.7296576+08:00","gmt_modified":"2025-09-16T13:27:29.7317338+08:00"},{"catalog_id":"8e7b9f8a-e4d2-420c-8a73-a7231a135567","content":"","title":"优化框架","description":"optimization-framework","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"007a9ad3-7d7f-487f-846e-a20cd204d168","gmt_create":"2025-09-16T13:27:58.5970869+08:00","gmt_modified":"2025-09-16T13:27:58.5996636+08:00"},{"catalog_id":"ad8424c1-b4ea-487a-a8e2-393a2bec58ec","content":"","title":"虚拟机指令","description":"vm-instructions","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"670b6d2e-0176-4dc9-9a15-469770d36c50","gmt_create":"2025-09-16T13:28:35.5497835+08:00","gmt_modified":"2025-09-16T13:28:35.5523678+08:00"},{"catalog_id":"9c017d00-905b-4e0f-bee6-e238384fac60","content":"","title":"单元测试","description":"unit-testing","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"e6e4aaf4-b364-402f-92f4-1007f08b03f8","gmt_create":"2025-09-16T13:29:01.5660184+08:00","gmt_modified":"2025-09-16T13:29:01.5680941+08:00"},{"catalog_id":"2502eb39-8ea0-4e6e-a412-61b8b06c9942","content":"","title":"AST可视化","description":"ast-visualization","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"54dd14b5-009c-4b9f-80f5-cbc3c1550028","gmt_create":"2025-09-16T13:29:40.4790058+08:00","gmt_modified":"2025-09-16T13:29:40.4811611+08:00"},{"catalog_id":"952b7aa9-263a-4a18-9c25-43aba1d99f7a","content":"","title":"语法分析器实现","description":"parser-implementation","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"a7322450-3c74-4099-b09f-35dc9aee976c","gmt_create":"2025-09-16T13:29:48.528455+08:00","gmt_modified":"2025-09-16T13:29:48.5310434+08:00"},{"catalog_id":"cfa29f6f-36e1-4ac9-b678-232e5fc8db68","content":"","title":"编译流程","description":"compilation-process","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"83344851-1330-4bad-bc79-a04242a0d419","gmt_create":"2025-09-16T13:30:31.3607165+08:00","gmt_modified":"2025-09-16T13:30:31.3627804+08:00"},{"catalog_id":"af52659c-1424-4bfa-a252-049c2dc3bef7","content":"","title":"AST构建","description":"ast-building","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"707b3232-cc1d-49e6-bcf4-52a0f739a1b5","gmt_create":"2025-09-16T13:30:50.9732214+08:00","gmt_modified":"2025-09-16T13:30:50.9752731+08:00"},{"catalog_id":"67400259-7b47-46ff-8e44-9d3840045e65","content":"","title":"符号定义","description":"symbol-definition","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"6bf4ef4b-29bd-4d6e-944b-8fd2c429dc0f","gmt_create":"2025-09-16T13:32:10.146474+08:00","gmt_modified":"2025-09-16T13:32:10.148541+08:00"},{"catalog_id":"541c2ec8-8988-419a-ae47-92bf0c831eb9","content":"","title":"类型检查","description":"type-checking","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"0c90a731-f352-43cf-bbeb-d941231c67f4","gmt_create":"2025-09-16T13:32:14.8965202+08:00","gmt_modified":"2025-09-16T13:32:14.899092+08:00"},{"catalog_id":"4f644029-4767-4307-af06-0a9198f6c53d","content":"","title":"控制流边","description":"control_flow_edge","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"fc11593f-0f15-4ab9-85d1-a517fe9d8785","gmt_create":"2025-09-16T13:33:18.925645+08:00","gmt_modified":"2025-09-16T13:33:18.9282942+08:00"},{"catalog_id":"83b3756c-f4b3-4565-ac42-f327499b3747","content":"","title":"IR生成","description":"ir-generation","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"e8e0d3f8-36ad-41d8-b7a4-af910152fe9d","gmt_create":"2025-09-16T13:33:23.847083+08:00","gmt_modified":"2025-09-16T13:33:23.8491483+08:00"},{"catalog_id":"9db0f9e1-cb55-4c77-8a56-e0dee6afeac5","content":"","title":"跳转优化","description":"jump-optimization","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"3ce4481f-b791-4e7d-9af3-083899644d77","gmt_create":"2025-09-16T13:34:24.7186521+08:00","gmt_modified":"2025-09-16T13:34:24.7217252+08:00"},{"catalog_id":"c4d3b681-f7e5-414f-8a29-1d5eb3d73d8a","content":"","title":"代码生成器","description":"code-generator","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"031faf2b-7974-480e-aa4e-f89f552ff223","gmt_create":"2025-09-16T13:34:33.5868986+08:00","gmt_modified":"2025-09-16T13:34:33.589454+08:00"},{"catalog_id":"620d98e2-85a4-4079-8dac-3109be919d5b","content":"","title":"IR可视化","description":"ir-visualization","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"157f7eb6-ec5e-4c0f-815a-4568d5d62b84","gmt_create":"2025-09-16T13:35:25.9493163+08:00","gmt_modified":"2025-09-16T13:35:25.9514125+08:00"},{"catalog_id":"3ad8f373-67c2-4879-a98f-14f9f14e5634","content":"","title":"集成测试","description":"integration-testing","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"cb5b69b7-c5f3-4112-b4d0-efd2a565347d","gmt_create":"2025-09-16T13:35:42.6907391+08:00","gmt_modified":"2025-09-16T13:35:42.6933066+08:00"},{"catalog_id":"53669189-b6cf-4d63-b11c-3fa5fd06fb4f","content":"","title":"模块交互","description":"module-interaction","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"0934d747-2410-4c3a-a776-e5c2269ac287","gmt_create":"2025-09-16T13:36:17.4203992+08:00","gmt_modified":"2025-09-16T13:36:17.4229852+08:00"},{"catalog_id":"35cc2664-4e75-4845-b03f-2c4a7496446c","content":"","title":"AST遍历","description":"ast-traversal","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"0a6f3451-ce95-4c33-af7c-862af29510fd","gmt_create":"2025-09-16T13:36:32.6914106+08:00","gmt_modified":"2025-09-16T13:36:32.693492+08:00"},{"catalog_id":"771dbbd8-cc7f-46b6-a0eb-0fb2d9ec6c5a","content":"","title":"符号解析","description":"symbol-resolution","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"180284ea-753d-4819-a4c8-23b12ac4ee56","gmt_create":"2025-09-16T13:37:12.1726176+08:00","gmt_modified":"2025-09-16T13:37:12.1746911+08:00"},{"catalog_id":"2e5900f4-f328-4599-ae39-431f3491bb65","content":"","title":"类型推导","description":"type-inference","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"0ed8b65c-96b1-4833-9e07-441708a5a759","gmt_create":"2025-09-16T13:37:32.7238083+08:00","gmt_modified":"2025-09-16T13:37:32.7258753+08:00"},{"catalog_id":"5c659b96-a485-4c1b-b9a6-b504b24d7630","content":"","title":"地址化表示","description":"addressing-representation","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"0708206c-7924-4328-bc82-c8324b9aac60","gmt_create":"2025-09-16T13:38:10.0047749+08:00","gmt_modified":"2025-09-16T13:38:10.0068512+08:00"},{"catalog_id":"aaacd5cb-4601-4970-bb5a-eb2da90a0207","content":"","title":"数据流分析","description":"data_flow_analysis","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"070d8856-a43a-48a8-9f8a-cc84bc3f3fdf","gmt_create":"2025-09-16T13:38:37.77501+08:00","gmt_modified":"2025-09-16T13:38:37.7776051+08:00"},{"catalog_id":"2ab3d455-0fe8-4922-a4e4-ee11cedeaf6d","content":"","title":"调试信息","description":"debug-info","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"3b3580bb-2813-4170-b9a1-b631ba1c7954","gmt_create":"2025-09-16T13:39:31.856278+08:00","gmt_modified":"2025-09-16T13:39:31.8583395+08:00"},{"catalog_id":"0a479f3c-aaa5-4335-997d-4eb1e83b090a","content":"","title":"活性分析","description":"liveness-analysis","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"8bf82b3a-6152-4edb-9c56-0020584fd858","gmt_create":"2025-09-16T13:39:35.6474143+08:00","gmt_modified":"2025-09-16T13:39:35.6500468+08:00"},{"catalog_id":"91152100-c94d-4725-b968-213ab7e3568c","content":"","title":"CFG可视化","description":"cfg-visualization","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"e8846eb7-0e4f-4406-bf45-d3a4c04e9a6e","gmt_create":"2025-09-16T13:40:44.8796263+08:00","gmt_modified":"2025-09-16T13:40:44.882743+08:00"},{"catalog_id":"99459f82-f03f-491b-aa93-54ddb79d6331","content":"","title":"端到端测试","description":"end-to-end-testing","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"4577d85e-f93b-40ac-93f1-9cbfe071e5c1","gmt_create":"2025-09-16T13:40:51.740647+08:00","gmt_modified":"2025-09-16T13:40:51.7431052+08:00"},{"catalog_id":"2f45dbd6-0f1f-46c8-a5d3-3382ff22fd32","content":"","title":"架构模式","description":"architectural-patterns","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"63c6805c-4268-4815-862a-d378829da22b","gmt_create":"2025-09-16T13:41:57.802462+08:00","gmt_modified":"2025-09-16T13:41:57.8045305+08:00"},{"catalog_id":"99ebfac5-23cc-4f41-903d-c0a8ad91b68c","content":"","title":"流水线机制","description":"pipeline-mechanism","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"840ad2e5-5bf0-44ae-a055-912cc67833c9","gmt_create":"2025-09-16T13:42:00.272738+08:00","gmt_modified":"2025-09-16T13:42:00.275822+08:00"},{"catalog_id":"fd1402ba-850d-4495-abef-d9ddac4538de","content":"","title":"核心交互机制","description":"core-interaction","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"c6854a7c-27d1-4af2-9d35-0de6c1aa3c25","gmt_create":"2025-09-16T13:42:52.7288652+08:00","gmt_modified":"2025-09-16T13:42:52.7314366+08:00"},{"catalog_id":"7d62c5d1-2817-4702-95fa-9504c6155b24","content":"","title":"组件职责","description":"component-responsibilities","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"47abccb3-4324-4952-ac06-36d2c5a6eaae","gmt_create":"2025-09-16T13:42:59.7630301+08:00","gmt_modified":"2025-09-16T13:42:59.765605+08:00"},{"catalog_id":"b71ebe8a-46f9-4d64-9f1a-b818a7fb554a","content":"","title":"数据契约与中间表示","description":"data-contract","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"85cb299b-7195-4f04-9212-fb1b2ac4aeef","gmt_create":"2025-09-16T13:43:53.1459992+08:00","gmt_modified":"2025-09-16T13:43:53.148077+08:00"},{"catalog_id":"02aea45d-d804-4ccb-ac81-c478ffe8b376","content":"","title":"阶段执行","description":"phase-execution","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"4ffcbbb6-f974-4a61-bc41-b3ca0439f7ea","gmt_create":"2025-09-16T13:43:53.2943057+08:00","gmt_modified":"2025-09-16T13:43:53.2973098+08:00"},{"catalog_id":"187cca25-3ff2-457b-b068-e0ab3ab888da","content":"","title":"错误处理","description":"error-handling","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"32565744-a7a1-41cc-a7a7-96ca39d05e63","gmt_create":"2025-09-16T13:44:39.2766338+08:00","gmt_modified":"2025-09-16T13:44:39.2792077+08:00"},{"catalog_id":"b84dbd21-6abd-4fbc-9be9-f13f8d0d5ba9","content":"","title":"数据流","description":"data-flow","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"009a3aa3-b953-4843-8629-7ce6306ccd94","gmt_create":"2025-09-16T13:44:59.5178928+08:00","gmt_modified":"2025-09-16T13:44:59.5204738+08:00"},{"catalog_id":"893194e2-ea41-4532-a759-01c54aa6d5c2","content":"","title":"扩展机制与模块解耦","description":"extension-mechanism","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"964499dd-121a-4708-9ddc-6269d2b2a1f4","gmt_create":"2025-09-16T13:45:52.4991206+08:00","gmt_modified":"2025-09-16T13:45:52.5011895+08:00"},{"catalog_id":"dd3c4253-87cd-4ce0-b4f0-7806e8df4858","content":"","title":"访问者模式","description":"visitor-pattern","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"6066851c-736d-4121-8c7a-26351a8ae6c8","gmt_create":"2025-09-16T13:46:05.2033885+08:00","gmt_modified":"2025-09-16T13:46:05.2059708+08:00"},{"catalog_id":"00146cc3-4e82-4d4e-9198-f0cc865d3b50","content":"","title":"任务组合机制","description":"task-composition","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"d643764e-0348-493d-b67f-2c5ab50baddf","gmt_create":"2025-09-16T13:46:59.2951337+08:00","gmt_modified":"2025-09-16T13:46:59.2972512+08:00"},{"catalog_id":"6a39bdb8-c2e6-4956-a0e7-61c8c5e040d5","content":"","title":"词法分析器职责","description":"lexer-responsibility","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"c7332e39-63b1-4e15-ba35-47d1da5b8313","gmt_create":"2025-09-16T13:47:12.7218563+08:00","gmt_modified":"2025-09-16T13:47:12.7244222+08:00"},{"catalog_id":"8a908783-f1ec-45ed-b156-328f82688ce1","content":"","title":"AST数据流","description":"ast-data-flow","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"66b6bf31-b092-4468-81dc-b60890654443","gmt_create":"2025-09-16T13:48:02.8862506+08:00","gmt_modified":"2025-09-16T13:48:02.8883589+08:00"},{"catalog_id":"b265b40d-f55f-43d2-a8e0-520063c64ede","content":"","title":"AST数据流","description":"ast-dataflow","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"9a83b894-902c-4fe8-912d-bbb94372d0a5","gmt_create":"2025-09-16T13:48:16.2337298+08:00","gmt_modified":"2025-09-16T13:48:16.2363142+08:00"},{"catalog_id":"4e47ee63-55b7-43ec-8f35-d64f81f1d70e","content":"","title":"构建器模式","description":"builder-pattern","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"d89c25ce-817c-4d53-a89e-cb29757f0ba6","gmt_create":"2025-09-16T13:49:03.2662296+08:00","gmt_modified":"2025-09-16T13:49:03.2682994+08:00"},{"catalog_id":"32e999f5-1ac4-4c02-95e0-b39f06e2a22d","content":"","title":"语法分析器职责","description":"parser-responsibility","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"88b1d962-619b-4d66-8378-e654bd3a1685","gmt_create":"2025-09-16T13:49:30.3466761+08:00","gmt_modified":"2025-09-16T13:49:30.3492501+08:00"},{"catalog_id":"03028ef0-e84c-4056-9d75-0c23c41306a5","content":"","title":"阶段管理","description":"phase-management","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"7bb9e36d-503f-4d61-ad24-867e469506d9","gmt_create":"2025-09-16T13:49:53.0555351+08:00","gmt_modified":"2025-09-16T13:49:53.0575947+08:00"},{"catalog_id":"665dd28a-282c-4d78-934a-47773be5f23f","content":"","title":"符号表数据流","description":"symbol-table-data-flow","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"fa47af0e-c92c-4c76-bff8-be72d35156f2","gmt_create":"2025-09-16T13:50:27.2273367+08:00","gmt_modified":"2025-09-16T13:50:27.2299195+08:00"},{"catalog_id":"289e740f-640d-49d2-b5a8-e166c2b6001a","content":"","title":"IR数据流","description":"ir-dataflow","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"b4f39f61-9229-4caa-8685-c3ad073239cd","gmt_create":"2025-09-16T13:50:44.0684049+08:00","gmt_modified":"2025-09-16T13:50:44.0709735+08:00"},{"catalog_id":"39fcb073-2a53-4f82-b2dc-b099d2887329","content":"","title":"责任链模式","description":"chain-of-responsibility-pattern","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"3470038f-6aef-4070-81fa-a1191cfee6bb","gmt_create":"2025-09-16T13:51:17.9380414+08:00","gmt_modified":"2025-09-16T13:51:17.9401058+08:00"},{"catalog_id":"15190b87-903f-40bd-8f13-c2a7e78ca857","content":"","title":"AST构建器职责","description":"ast-builder-responsibility","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"0d688f76-c9a8-4a5e-8672-35d79f338beb","gmt_create":"2025-09-16T13:51:49.1200401+08:00","gmt_modified":"2025-09-16T13:51:49.1220849+08:00"},{"catalog_id":"2aa50a84-14f4-41d4-af9f-68d96f989d26","content":"","title":"IR数据流","description":"ir-data-flow","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"0dfea513-03c5-4a90-a5e5-408db405d150","gmt_create":"2025-09-16T13:52:18.281111+08:00","gmt_modified":"2025-09-16T13:52:18.2831649+08:00"},{"catalog_id":"3d3edf61-e4f9-4b5c-b7bc-963ec77c30ad","content":"","title":"工厂模式","description":"factory-pattern","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"186ab6ae-dc48-44eb-8964-089009aa7b58","gmt_create":"2025-09-16T13:52:56.50974+08:00","gmt_modified":"2025-09-16T13:52:56.5118492+08:00"},{"catalog_id":"226f4e89-3f84-464b-a210-b4ef46874277","content":"","title":"IR生成器职责","description":"ir-builder-responsibility","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"dde080c3-013c-4d73-99ca-230651caab12","gmt_create":"2025-09-16T13:53:17.2534913+08:00","gmt_modified":"2025-09-16T13:53:17.2555491+08:00"},{"catalog_id":"0dac3d59-a8c2-42e4-acb7-2f8914e5efdc","content":"","title":"CFG数据流","description":"cfg-data-flow","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"0d81b742-dd25-407e-8c71-2aea26d626fe","gmt_create":"2025-09-16T13:54:14.4719571+08:00","gmt_modified":"2025-09-16T13:54:14.4745663+08:00"},{"catalog_id":"4bf868aa-6baf-467a-ab9a-7388bb3ced50","content":"","title":"代码生成器职责","description":"code-assembler-responsibility","extend":"{}","progress_status":"completed","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","id":"eaf70ee4-2bbd-41ee-b9be-dcd297c29587","gmt_create":"2025-09-16T13:54:20.6259449+08:00","gmt_modified":"2025-09-16T13:54:20.6285297+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Cymbol编译器项目综合分析\n\n## 1. 项目介绍\n\n### 项目目的\nCymbol编译器是一个基于ANTLR4的教学级编译器实现，通过21个演进阶段（EP1-EP21）从简单的词法分析器逐步发展为完整的JIT编译器。项目旨在为编译原理学习者和开发者提供一个清晰、完整的编译器实现示例。\n\n### 核心目标\n- 展示现代编译器的核心概念和技术\n- 实现从源代码到可执行字节码的完整编译流程\n- 提供测试驱动开发的完整实践案例\n- 构建完善的调试和可视化工具\n\n### 目标受众\n- 编译原理学习者\n- 编译器开发者\n- ANTLR4使用者\n- 编程语言设计者\n\n## 2. 技术架构\n\n### 组件分解\n项目采用模块化设计，主要包含以下核心组件：\n- **词法分析与语法分析**：基于ANTLR4实现\n- **抽象语法树(AST)**：树形结构表示源代码\n- **符号表管理**：作用域和变量解析\n- **类型系统**：静态类型检查\n- **中间表示(IR)**：三地址码生成\n- **控制流图(CFG)**：基本块构建和优化\n- **代码生成**：栈式虚拟机字节码生成\n\n### 设计模式\n- **访问者模式**：用于AST遍历和IR生成\n- **构建器模式**：AST构建\n- **责任链模式**：编译流水线处理\n- **工厂模式**：节点创建\n\n### 系统关系\n```mermaid\nflowchart TD\n    A[源代码] --\u003e B[词法分析]\n    B --\u003e C[语法分析]\n    C --\u003e D[AST构建]\n    D --\u003e E[符号解析]\n    E --\u003e F[类型检查]\n    F --\u003e G[IR生成]\n    G --\u003e H[CFG构建]\n    H --\u003e I[优化]\n    I --\u003e J[代码生成]\n    J --\u003e K[VM字节码]\n```\n\n## 3. 关键实现\n\n### 主要入口点\n- `ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java`\n\n### 核心模块\n- `ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java`\n- `ep20/src/main/antlr4/org/teachfx/antlr4/ep20/parser/Cymbol.g4`\n- `ep20/src/main/java/org/teachfx/antlr4/ep20/symtab`\n\n### 配置方法\n- `ep20/pom.xml`\n\n### 外部依赖\n- `ep20/pom.xml`\n\n### 集成点\n- `ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java`\n\n### 组件关系图\n```mermaid\ngraph LR\n    A[词法分析] --\u003e B[语法分析]\n    B --\u003e C[AST构建]\n    C --\u003e D[符号表]\n    C --\u003e E[类型检查]\n    C --\u003e F[IR生成]\n    F --\u003e G[CFG构建]\n    G --\u003e H[代码生成]\n    D --\u003e E\n    E --\u003e F\n    H --\u003e I[VM字节码]\n```\n\n## 4. 关键特性\n\n### 功能概述\n- 完整的编译器架构\n- 测试驱动开发\n- 调试和可视化工具\n- 丰富的文档支持\n\n### 实现亮点\n- **完整的编译流水线**：从源代码到可执行字节码的完整流程\n- **先进的优化技术**：跳转优化、空标签消除、冗余跳转移除\n- **详细的错误信息**：源代码位置跟踪和定位\n- **可视化工具**：AST/IR/CFG可视化\n\n### 特性架构图\n```mermaid\nstateDiagram-v2\n    [*] --\u003e 源代码\n    源代码 --\u003e 词法分析: 词法解析\n    词法分析 --\u003e 语法分析: 生成解析树\n    语法分析 --\u003e AST构建: 构建抽象语法树\n    AST构建 --\u003e 符号解析: 变量绑定\n    符号解析 --\u003e 类型检查: 静态类型验证\n    类型检查 --\u003e IR生成: 三地址码\n    IR生成 --\u003e CFG构建: 控制流图\n    CFG构建 --\u003e 优化: 代码优化\n    优化 --\u003e 代码生成: 字节码生成\n    代码生成 --\u003e VM字节码: 可执行文件\n    VM字节码 --\u003e [*]\n```\n\nSources:\n- [README.md](README.md)\n- [ep20/README.md](ep20/README.md)\n- [ep20/pom.xml](ep20/pom.xml)\n- [ep20/src/main/antlr4/org/teachfx/antlr4/ep20/parser/Cymbol.g4](ep20/src/main/antlr4/org/teachfx/antlr4/ep20/parser/Cymbol.g4)\n- [ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java](ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java)\n- [ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java](ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java)\n\u003c/blog\u003e","gmt_create":"2025-09-16T13:10:34.9226958+08:00","gmt_modified":"2025-09-16T13:10:34.9226958+08:00","id":"0690824f-9df7-459b-8ce5-68b02b7b4c8d","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":""},"wiki_readme":{"content":"No readme file","gmt_create":"2025-09-16T13:09:53.2442267+08:00","gmt_modified":"2025-09-16T13:09:53.2442267+08:00","id":"f6a31b26-cac4-4902-ae32-d16186a88559","repo_id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":""},"wiki_repo":{"id":"ac5d110b-9ffb-47d5-b373-09e64ff9da93","workspace_path":"","name":"How_to_implment_PL_in_Antlr4","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── ep1\\n│   └── pom.xml\\n├── ep10\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── CSVLexer.java\\n│   │   ├── CSVParser.java\\n│   │   ├── Calc.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep11\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ASTVisitor.java\\n│   │   ├── AdditionNode.java\\n│   │   ├── BuildAstVisitor.java\\n│   │   ├── Calc.java\\n│   │   ├── DivisionNode.java\\n│   │   ├── EvalExprVisitor.java\\n│   │   ├── ExpressionNode.java\\n│   │   ├── InfixExpressionNode.java\\n│   │   ├── MathBaseVisitor.java\\n│   │   ├── MathLexer.java\\n│   │   ├── MathParser.java\\n│   │   ├── MathVisitor.java\\n│   │   ├── MultiplicationNode.java\\n│   │   ├── NegateNode.java\\n│   │   ├── NumberNode.java\\n│   │   ├── SubtractionNode.java\\n│   │   ├── build.xml\\n│   │   └── file.py\\n│   └── pom.xml\\n├── ep12\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep12\\n│   │   ├── ast\\n│   │   │   ├── AdditionNode.java\\n│   │   │   ├── AssignNode.java\\n│   │   │   ├── DivisionNode.java\\n│   │   │   ├── ExpressionNode.java\\n│   │   │   ├── InfixExpressionNode.java\\n│   │   │   ├── MultiplicationNode.java\\n│   │   │   ├── NegateNode.java\\n│   │   │   ├── NumberNode.java\\n│   │   │   ├── SubtractionNode.java\\n│   │   │   └── VarNode.java\\n│   │   ├── parser\\n│   │   │   ├── MathBaseVisitor.java\\n│   │   │   ├── MathLexer.java\\n│   │   │   ├── MathParser.java\\n│   │   │   └── MathVisitor.java\\n│   │   ├── visitor\\n│   │   │   ├── ASTVisitor.java\\n│   │   │   ├── BuildAstVisitor.java\\n│   │   │   └── EvalExprVisitor.java\\n│   │   └── Calc.java\\n│   └── pom.xml\\n├── ep13\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ep12\\\\ast\\n│   │   │   ├── AdditionNode.java\\n│   │   │   ├── AssignNode.java\\n│   │   │   ├── DivisionNode.java\\n│   │   │   ├── ExpressionNode.java\\n│   │   │   ├── InfixExpressionNode.java\\n│   │   │   ├── MultiplicationNode.java\\n│   │   │   ├── NegateNode.java\\n│   │   │   ├── NumberNode.java\\n│   │   │   ├── SubtractionNode.java\\n│   │   │   └── VarNode.java\\n│   │   ├── ASTVisitor.java\\n│   │   ├── BuildAstVisitor.java\\n│   │   ├── Calc.java\\n│   │   ├── EvalExprVisitor.java\\n│   │   ├── MathBaseVisitor.java\\n│   │   ├── MathLexer.java\\n│   │   ├── MathParser.java\\n│   │   ├── MathVisitor.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep14\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep14\\n│   │   ├── compiler\\n│   │   │   ├── MathExprBaseListener.java\\n│   │   │   ├── MathExprBaseVisitor.java\\n│   │   │   ├── MathExprLexer.java\\n│   │   │   ├── MathExprListener.java\\n│   │   │   ├── MathExprParser.java\\n│   │   │   └── MathExprVisitor.java\\n│   │   ├── symtab\\n│   │   │   ├── BaseScope.java\\n│   │   │   ├── BuiltIntTypeSymbol.java\\n│   │   │   ├── Scope.java\\n│   │   │   ├── ScopedSymbol.java\\n│   │   │   ├── Symbol.java\\n│   │   │   ├── SymbolCollector.java\\n│   │   │   ├── SymbolTable.java\\n│   │   │   ├── Type.java\\n│   │   │   └── VariableSymbol.java\\n│   │   └── Compiler.java\\n│   └── pom.xml\\n├── ep15\\n│   └── pom.xml\\n├── ep16\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep16\\n│   │   ├── misc\\n│   │   │   ├── CompilerLogger.java\\n│   │   │   ├── FunctionSpace.java\\n│   │   │   ├── MemorySpace.java\\n│   │   │   ├── ScopeUtil.java\\n│   │   │   └── Util.java\\n│   │   ├── parser\\n│   │   │   ├── CymbolBaseListener.java\\n│   │   │   ├── CymbolBaseVisitor.java\\n│   │   │   ├── CymbolLexer.java\\n│   │   │   ├── CymbolListener.java\\n│   │   │   ├── CymbolParser.java\\n│   │   │   └── CymbolVisitor.java\\n│   │   ├── symtab\\n│   │   │   ├── BaseScope.java\\n│   │   │   ├── BuiltInTypeSymbol.java\\n│   │   │   ├── GlobalScope.java\\n│   │   │   ├── LocalScope.java\\n│   │   │   ├── MethodSymbol.java\\n│   │   │   ├── ReturnValue.java\\n│   │   │   ├── Scope.java\\n│   │   │   ├── ScopedSymbol.java\\n│   │   │   ├── Symbol.java\\n│   │   │   ├── Type.java\\n│   │   │   ├── TypeTable.java\\n│   │   │   └── VariableSymbol.java\\n│   │   ├── visitor\\n│   │   │   ├── CymbolASTVisitor.java\\n│   │   │   ├── Interpreter.java\\n│   │   │   ├── LocalDefine.java\\n│   │   │   └── LocalResolver.java\\n│   │   └── Compiler.java\\n│   ├── pom.xml\\n│   └── tutorial.md\\n├── ep17\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ep14\\\\symtab\\n│   │   │   ├── BaseScope.java\\n│   │   │   ├── BuiltInTypeSymbol.java\\n│   │   │   ├── GlobalScope.java\\n│   │   │   ├── LocalScope.java\\n│   │   │   ├── MethodSymbol.java\\n│   │   │   ├── ReturnValue.java\\n│   │   │   ├── Scope.java\\n│   │   │   ├── ScopedSymbol.java\\n│   │   │   ├── Symbol.java\\n│   │   │   ├── Type.java\\n│   │   │   ├── TypeTable.java\\n│   │   │   └── VariableSymbol.java\\n│   │   └── ep17\\n│   │       ├── misc\\n│   │       │   ├── CompilerLogger.java\\n│   │       │   ├── FunctionSpace.java\\n│   │       │   ├── Graph.java\\n│   │       │   ├── MemorySpace.java\\n│   │       │   ├── ScopeUtil.java\\n│   │       │   └── Util.java\\n│   │       ├── parser\\n│   │       │   ├── CymbolBaseListener.java\\n│   │       │   ├── CymbolBaseVisitor.java\\n│   │       │   ├── CymbolLexer.java\\n│   │       │   ├── CymbolListener.java\\n│   │       │   ├── CymbolParser.java\\n│   │       │   └── CymbolVisitor.java\\n│   │       ├── visitor\\n│   │       │   └── CallGraphVisitor.java\\n│   │       └── Compiler.java\\n│   ├── TODO.md\\n│   └── pom.xml\\n├── ep18\\n│   ├── src\\\\main\\n│   │   ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep18\\n│   │   │   ├── parser\\n│   │   │   │   ├── VMAssemblerBaseListener.java\\n│   │   │   │   ├── VMAssemblerBaseVisitor.java\\n│   │   │   │   ├── VMAssemblerLexer.java\\n│   │   │   │   ├── VMAssemblerListener.java\\n│   │   │   │   ├── VMAssemblerParser.java\\n│   │   │   │   └── VMAssemblerVisitor.java\\n│   │   │   ├── stackvm\\n│   │   │   │   ├── ByteCodeAssembler.java\\n│   │   │   │   ├── BytecodeDefinition.java\\n│   │   │   │   ├── CymbolStackVM.java\\n│   │   │   │   ├── DisAssembler.java\\n│   │   │   │   ├── FunctionSymbol.java\\n│   │   │   │   ├── LabelSymbol.java\\n│   │   │   │   ├── StackFrame.java\\n│   │   │   │   └── StructSpace.java\\n│   │   │   ├── VMInterpreter.java\\n│   │   │   └── VMRunner.java\\n│   │   └── resources\\n│   │       ├── c.vm\\n│   │       └── t.vm\\n│   ├── TODO.md\\n│   ├── Update.md\\n│   ├── VM_Design.md\\n│   └── pom.xml\\n├── ep19\\n│   ├── docs\\n│   │   ├── ep19-improvements-summary.md\\n│   │   └── tasks.md\\n│   ├── src\\n│   │   ├── main\\n│   │   │   ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep19\\n│   │   │   │   ├── misc\\n│   │   │   │   │   ├── CompilerLogger.java\\n│   │   │   │   │   ├── ScopeUtil.java\\n│   │   │   │   │   └── Util.java\\n│   │   │   │   ├── pass\\n│   │   │   │   │   ├── CymbolASTVisitor.java\\n│   │   │   │   │   ├── CymbolAssembler.java\\n│   │   │   │   │   ├── Interpreter.java\\n│   │   │   │   │   ├── LocalDefine.java\\n│   │   │   │   │   ├── LocalResolver.java\\n│   │   │   │   │   └── TypeCheckVisitor.java\\n│   │   │   │   ├── pipeline\\n│   │   │   │   │   ├── CompilationResult.java\\n│   │   │   │   │   ├── CompilerPipeline.java\\n│   │   │   │   │   ├── ConfigurableCompilerPipeline.java\\n│   │   │   │   │   └── DefaultCompilerPipeline.java\\n│   │   │   │   ├── runtime\\n│   │   │   │   │   ├── FunctionSpace.java\\n│   │   │   │   │   ├── MemorySpace.java\\n│   │   │   │   │   └── StructInstance.java\\n│   │   │   │   ├── symtab\\n│   │   │   │   │   ├── scope\\n│   │   │   │   │   │   ├── BaseScope.java\\n│   │   │   │   │   │   ├── GlobalScope.java\\n│   │   │   │   │   │   ├── LocalScope.java\\n│   │   │   │   │   │   ├── Scope.java\\n│   │   │   │   │   │   └── ScopedSymbol.java\\n│   │   │   │   │   ├── symbol\\n│   │   │   │   │   │   ├── BuiltInTypeSymbol.java\\n│   │   │   │   │   │   ├── MethodSymbol.java\\n│   │   │   │   │   │   ├── PrimitiveType.java\\n│   │   │   │   │   │   ├── StructSymbol.java\\n│   │   │   │   │   │   ├── Symbol.java\\n│   │   │   │   │   │   ├── TypedefSymbol.java\\n│   │   │   │   │   │   └── VariableSymbol.java\\n│   │   │   │   │   ├── type\\n│   │   │   │   │   │   └── ArrayType.java\\n│   │   │   │   │   ├── ReturnValue.java\\n│   │   │   │   │   ├── Type.java\\n│   │   │   │   │   ├── TypeChecker.java\\n│   │   │   │   │   └── TypeTable.java\\n│   │   │   │   └── Compiler.java\\n│   │   │   └── resources\\n│   │   │       └── log4j2.xml\\n│   │   └── test\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep19\\n│   │       ├── CompilerTestUtil.java\\n│   │       ├── ComprehensiveTest.java\\n│   │       ├── ErrorRecoveryTest.java\\n│   │       ├── FunctionAndMethodTest.java\\n│   │       ├── IntegrationTest.java\\n│   │       ├── PerformanceBenchmarkTest.java\\n│   │       ├── StructAndTypedefTest.java\\n│   │       └── TypeSystemTest.java\\n│   ├── Design.md\\n│   ├── Plan.md\\n│   ├── README.md\\n│   ├── pom.xml\\n│   └── tdd_driven_todo_cases.md\\n├── ep2\\n│   ├── src\\\\main\\\\java\\n│   │   ├── org\\\\teachfx\\\\antlr4\\n│   │   │   ├── ShortToUnicodeString.java\\n│   │   │   ├── Test.java\\n│   │   │   ├── Translate.java\\n│   │   │   └── build.xml\\n│   │   ├── ArrayInitBaseListener.java\\n│   │   ├── ArrayInitBaseVisitor.java\\n│   │   ├── ArrayInitLexer.java\\n│   │   ├── ArrayInitListener.java\\n│   │   ├── ArrayInitParser.java\\n│   │   └── ArrayInitVisitor.java\\n│   └── pom.xml\\n├── ep20\\n│   ├── docs\\n│   │   ├── design\\n│   │   │   ├── register-allocation-algorithm-details.md\\n│   │   │   ├── register-allocation-api-design.md\\n│   │   │   ├── register-allocation-design.md\\n│   │   │   ├── register-allocation-integration.md\\n│   │   │   ├── register-allocation-test-strategy.md\\n│   │   │   └── technical-design.md\\n│   │   ├── migration\\n│   │   │   ├── final-project-report.md\\n│   │   │   ├── grammar-diff-analysis.md\\n│   │   │   ├── phase1-operators-completion.md\\n│   │   │   ├── phase2-arrays-completion.md\\n│   │   │   ├── phase2-arrays-summary.md\\n│   │   │   ├── project-completion-summary.md\\n│   │   │   └── tdd-migration-plan.md\\n│   │   ├── compilation-sequence.md\\n│   │   ├── ep20-improvements-summary.md\\n│   │   ├── module-interaction.md\\n│   │   ├── project-architecture.md\\n│   │   ├── tdd_implementation_steps.md\\n│   │   ├── tdd_improvement_tasks.md\\n│   │   └── tdd_test_case_guide.md\\n│   ├── src\\n│   │   ├── main\\n│   │   │   ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep20\\n│   │   │   │   ├── ast\\n│   │   │   │   │   ├── decl\\n│   │   │   │   │   │   ├── DeclNode.java\\n│   │   │   │   │   │   ├── FuncDeclNode.java\\n│   │   │   │   │   │   ├── StructDeclNode.java\\n│   │   │   │   │   │   ├── StructMemberNode.java\\n│   │   │   │   │   │   ├── TypedefDeclNode.java\\n│   │   │   │   │   │   ├── VarDeclListNode.java\\n│   │   │   │   │   │   └── VarDeclNode.java\\n│   │   │   │   │   ├── expr\\n│   │   │   │   │   │   ├── ArrayAccessNode.java\\n│   │   │   │   │   │   ├── ArrayLiteralNode.java\\n│   │   │   │   │   │   ├── BinaryExprNode.java\\n│   │   │   │   │   │   ├── BoolExprNode.java\\n│   │   │   │   │   │   ├── CallFuncNode.java\\n│   │   │   │   │   │   ├── CastExprNode.java\\n│   │   │   │   │   │   ├── ExprNode.java\\n│   │   │   │   │   │   ├── FieldAccessNode.java\\n│   │   │   │   │   │   ├── FloatExprNode.java\\n│   │   │   │   │   │   ├── IDExprNode.java\\n│   │   │   │   │   │   ├── IntExprNode.java\\n│   │   │   │   │   │   ├── LiteralNode.java\\n│   │   │   │   │   │   ├── NullExprNode.java\\n│   │   │   │   │   │   ├── StringExprNode.java\\n│   │   │   │   │   │   └── UnaryExprNode.java\\n│   │   │   │   │   ├── stmt\\n│   │   │   │   │   │   ├── AssignStmtNode.java\\n│   │   │   │   │   │   ├── BlockStmtNode.java\\n│   │   │   │   │   │   ├── BreakStmtNode.java\\n│   │   │   │   │   │   ├── ContinueStmtNode.java\\n│   │   │   │   │   │   ├── ExprStmtNode.java\\n│   │   │   │   │   │   ├── IfStmtNode.java\\n│   │   │   │   │   │   ├── ReturnStmtNode.java\\n│   │   │   │   │   │   ├── ScopeType.java\\n│   │   │   │   │   │   ├── StmtNode.java\\n│   │   │   │   │   │   ├── VarDeclStmtNode.java\\n│   │   │   │   │   │   └── WhileStmtNode.java\\n│   │   │   │   │   ├── type\\n│   │   │   │   │   │   └── TypeNode.java\\n│   │   │   │   │   ├── ASTNode.java\\n│   │   │   │   │   ├── ASTVisitor.java\\n│   │   │   │   │   └── CompileUnit.java\\n│   │   │   │   ├── debugger\\\\ast\\n│   │   │   │   │   ├── Dumpable.java\\n│   │   │   │   │   └── Dumper.java\\n│   │   │   │   ├── driver\\n│   │   │   │   │   ├── ErrorIssuer.java\\n│   │   │   │   │   ├── Phase.java\\n│   │   │   │   │   └── Task.java\\n│   │   │   │   ├── error\\n│   │   │   │   │   └── CymbalError.java\\n│   │   │   │   ├── ir\\n│   │   │   │   │   ├── expr\\n│   │   │   │   │   │   ├── addr\\n│   │   │   │   │   │   ├── arith\\n│   │   │   │   │   │   ├── val\\n│   │   │   │   │   │   ├── CallFunc.java\\n│   │   │   │   │   │   ├── Expr.java\\n│   │   │   │   │   │   ├── ImmValue.java\\n│   │   │   │   │   │   ├── Operand.java\\n│   │   │   │   │   │   └── VarSlot.java\\n│   │   │   │   │   ├── stmt\\n│   │   │   │   │   │   ├── Assign.java\\n│   │   │   │   │   │   ├── CJMP.java\\n│   │   │   │   │   │   ├── ExprStmt.java\\n│   │   │   │   │   │   ├── FuncEntryLabel.java\\n│   │   │   │   │   │   ├── JMP.java\\n│   │   │   │   │   │   ├── Label.java\\n│   │   │   │   │   │   ├── ReturnVal.java\\n│   │   │   │   │   │   └── Stmt.java\\n│   │   │   │   │   ├── IRNode.java\\n│   │   │   │   │   ├── IRVisitor.java\\n│   │   │   │   │   ├── JMPInstr.java\\n│   │   │   │   │   └── Prog.java\\n│   │   │   │   ├── parser\\n│   │   │   │   │   └── Location.java\\n│   │   │   │   ├── pass\\n│   │   │   │   │   ├── ast\\n│   │   │   │   │   │   ├── ASTBaseVisitor.java\\n│   │   │   │   │   │   └── CymbolASTBuilder.java\\n│   │   │   │   │   ├── cfg\\n│   │   │   │   │   │   ├── BasicBlock.java\\n│   │   │   │   │   │   ├── CFG.java\\n│   │   │   │   │   │   ├── CFGBuilder.java\\n│   │   │   │   │   │   ├── ControlFlowAnalysis.java\\n│   │   │   │   │   │   ├── IFlowOptimizer.java\\n│   │   │   │   │   │   ├── IOrdIdentity.java\\n│   │   │   │   │   │   ├── LinearIRBlock.java\\n│   │   │   │   │   │   ├── LivenessAnalysis.java\\n│   │   │   │   │   │   └── Loc.java\\n│   │   │   │   │   ├── codegen\\n│   │   │   │   │   │   ├── CymbolAssembler.java\\n│   │   │   │   │   │   ├── CymbolVMIOperatorEmitter.java\\n│   │   │   │   │   │   └── IOperatorEmitter.java\\n│   │   │   │   │   ├── ir\\n│   │   │   │   │   │   └── CymbolIRBuilder.java\\n│   │   │   │   │   ├── sematic\\n│   │   │   │   │   │   └── TypeChecker.java\\n│   │   │   │   │   └── symtab\\n│   │   │   │   │       └── LocalDefine.java\\n│   │   │   │   ├── symtab\\n│   │   │   │   │   ├── scope\\n│   │   │   │   │   │   ├── BaseScope.java\\n│   │   │   │   │   │   ├── GlobalScope.java\\n│   │   │   │   │   │   ├── LocalScope.java\\n│   │   │   │   │   │   └── Scope.java\\n│   │   │   │   │   ├── symbol\\n│   │   │   │   │   │   ├── MethodSymbol.java\\n│   │   │   │   │   │   ├── ScopedSymbol.java\\n│   │   │   │   │   │   ├── StructSymbol.java\\n│   │   │   │   │   │   ├── Symbol.java\\n│   │   │   │   │   │   ├── TypedefSymbol.java\\n│   │   │   │   │   │   └── VariableSymbol.java\\n│   │   │   │   │   └── type\\n│   │   │   │   │       ├── ArrayType.java\\n│   │   │   │   │       ├── BuiltInTypeSymbol.java\\n│   │   │   │   │       ├── OperatorType.java\\n│   │   │   │   │       ├── StructType.java\\n│   │   │   │   │       ├── Type.java\\n│   │   │   │   │       └── TypeTable.java\\n│   │   │   │   ├── utils\\n│   │   │   │   │   ├── Kind.java\\n│   │   │   │   │   └── StreamUtils.java\\n│   │   │   │   └── Compiler.java\\n│   │   │   └── resources\\n│   │   │       ├── graph_0_optimized.md\\n│   │   │       ├── graph_0_origin.md\\n│   │   │       ├── graph_1_optimized.md\\n│   │   │       ├── graph_1_origin.md\\n│   │   │       └── log4j2.xml\\n│   │   └── test\\n│   │       ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep20\\n│   │       │   ├── ast\\n│   │       │   │   ├── expr\\n│   │       │   │   │   ├── BinaryExprNodeTest.java\\n│   │       │   │   │   ├── BoolExprNodeTest.java\\n│   │       │   │   │   ├── CallFuncNodeTest.java\\n│   │       │   │   │   ├── LiteralExprNodeTest.java\\n│   │       │   │   │   └── UnaryExprNodeTest.java\\n│   │       │   │   └── stmt\\n│   │       │   │       ├── AssignStmtNodeTest.java\\n│   │       │   │       ├── IfStmtNodeTest.java\\n│   │       │   │       ├── ReturnStmtNodeTest.java\\n│   │       │   │       └── WhileStmtNodeTest.java\\n│   │       │   ├── ir\\n│   │       │   │   ├── expr\\\\addr\\n│   │       │   │   │   └── AddressingTest.java\\n│   │       │   │   └── ThreeAddressCodeTest.java\\n│   │       │   ├── pass\\n│   │       │   │   ├── cfg\\n│   │       │   │   │   ├── BasicBlockOptimizationTest.java\\n│   │       │   │   │   ├── BasicBlockTest.java\\n│   │       │   │   │   ├── CFGBuilderTest.java\\n│   │       │   │   │   ├── ControlFlowGraphTest.java\\n│   │       │   │   │   ├── DataFlowAnalysisTest.java\\n│   │       │   │   │   └── LivenessAnalysisTest.java\\n│   │       │   │   ├── codegen\\n│   │       │   │   │   ├── CymbolAssemblerTest.java\\n│   │       │   │   │   ├── DebugOutputTest.java\\n│   │       │   │   │   ├── DebugTest.java\\n│   │       │   │   │   ├── EndToEndCompilationTest.java\\n│   │       │   │   │   ├── FunctionCallTest.java\\n│   │       │   │   │   └── VMInstructionTest.java\\n│   │       │   │   ├── sematic\\n│   │       │   │   │   └── TypeCheckerTest.java\\n│   │       │   │   └── symtab\\n│   │       │   │       └── LocalDefineTest.java\\n│   │       │   ├── ArraysTest.java\\n│   │       │   ├── NewSyntaxTest.java\\n│   │       │   └── OperatorsTest.java\\n│   │       └── resources\\n│   │           ├── ast\\n│   │           │   ├── expressions\\n│   │           │   │   └── sample.txt\\n│   │           │   └── statements\\n│   │           │       └── sample.txt\\n│   │           ├── cfg\\\\graphs\\n│   │           │   └── sample.txt\\n│   │           ├── codegen\\\\instructions\\n│   │           │   └── sample.txt\\n│   │           └── ir\\\\expected\\n│   │               └── sample.txt\\n│   ├── README.md\\n│   ├── README_ZH.md\\n│   └── pom.xml\\n├── ep21\\n│   ├── src\\n│   │   ├── main\\n│   │   │   ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep21\\n│   │   │   │   ├── ast\\n│   │   │   │   │   ├── decl\\n│   │   │   │   │   │   ├── DeclNode.java\\n│   │   │   │   │   │   ├── FuncDeclNode.java\\n│   │   │   │   │   │   ├── VarDeclListNode.java\\n│   │   │   │   │   │   └── VarDeclNode.java\\n│   │   │   │   │   ├── expr\\n│   │   │   │   │   │   ├── BinaryExprNode.java\\n│   │   │   │   │   │   ├── BoolExprNode.java\\n│   │   │   │   │   │   ├── CallFuncNode.java\\n│   │   │   │   │   │   ├── ExprNode.java\\n│   │   │   │   │   │   ├── FloatExprNode.java\\n│   │   │   │   │   │   ├── IDExprNode.java\\n│   │   │   │   │   │   ├── IntExprNode.java\\n│   │   │   │   │   │   ├── LiteralNode.java\\n│   │   │   │   │   │   ├── NullExprNode.java\\n│   │   │   │   │   │   ├── StringExprNode.java\\n│   │   │   │   │   │   └── UnaryExprNode.java\\n│   │   │   │   │   ├── stmt\\n│   │   │   │   │   │   └── ... 5 files, 0 dirs not shown\\n│   │   │   │   │   ├── type\\n│   │   │   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   │   │   ├── ASTNode.java\\n│   │   │   │   │   ├── ASTVisitor.java\\n│   │   │   │   │   └── CompileUnit.java\\n│   │   │   │   ├── debugger\\\\ast\\n│   │   │   │   │   ├── Dumpable.java\\n│   │   │   │   │   └── Dumper.java\\n│   │   │   │   ├── driver\\n│   │   │   │   │   ├── ErrorIssuer.java\\n│   │   │   │   │   ├── Phase.java\\n│   │   │   │   │   └── Task.java\\n│   │   │   │   ├── error\\n│   │   │   │   │   └── CymbalError.java\\n│   │   │   │   ├── ir\\n│   │   │   │   │   ├── expr\\n│   │   │   │   │   │   └── ... 5 files, 3 dirs not shown\\n│   │   │   │   │   ├── stmt\\n│   │   │   │   │   │   └── ... 8 files, 0 dirs not shown\\n│   │   │   │   │   ├── IRNode.java\\n│   │   │   │   │   ├── IRVisitor.java\\n│   │   │   │   │   ├── JMPInstr.java\\n│   │   │   │   │   └── Prog.java\\n│   │   │   │   ├── parser\\n│   │   │   │   │   ├── CymbolBaseListener.java\\n│   │   │   │   │   ├── CymbolBaseVisitor.java\\n│   │   │   │   │   ├── CymbolLexer.java\\n│   │   │   │   │   ├── CymbolListener.java\\n│   │   │   │   │   ├── CymbolParser.java\\n│   │   │   │   │   ├── CymbolVisitor.java\\n│   │   │   │   │   └── Location.java\\n│   │   │   │   ├── pass\\n│   │   │   │   │   ├── ast\\n│   │   │   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   │   │   ├── cfg\\n│   │   │   │   │   │   └── ... 9 files, 0 dirs not shown\\n│   │   │   │   │   ├── codegen\\n│   │   │   │   │   │   └── ... 3 files, 0 dirs not shown\\n│   │   │   │   │   ├── ir\\n│   │   │   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   │   │   ├── sematic\\n│   │   │   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   │   │   └── symtab\\n│   │   │   │   │       └── ... 1 files, 0 dirs not shown\\n│   │   │   │   ├── symtab\\n│   │   │   │   │   ├── scope\\n│   │   │   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   │   │   ├── symbol\\n│   │   │   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   │   │   └── type\\n│   │   │   │   │       └── ... 4 files, 0 dirs not shown\\n│   │   │   │   ├── utils\\n│   │   │   │   │   ├── Kind.java\\n│   │   │   │   │   └── StreamUtils.java\\n│   │   │   │   └── Compiler.java\\n│   │   │   └── resources\\n│   │   │       ├── graph_0_optimized.md\\n│   │   │       ├── graph_0_origin.md\\n│   │   │       ├── graph_1_optimized.md\\n│   │   │       ├── graph_1_origin.md\\n│   │   │       └── log4j2.xml\\n│   │   └── test\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep21\\n│   │       ├── ast\\\\expr\\n│   │       │   └── BoolExprNodeTest.java\\n│   │       └── pass\\n│   │           ├── cfg\\n│   │           │   └── BasicBlockTest.java\\n│   │           ├── codegen\\n│   │           │   └── CymbolAssemblerTest.java\\n│   │           ├── sematic\\n│   │           │   └── TypeCheckerTest.java\\n│   │           └── symtab\\n│   │               └── LocalDefineTest.java\\n│   ├── README.md\\n│   ├── TODO.md\\n│   └── pom.xml\\n├── ep3\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ep20\\\\parser\\\\src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   │   ├── CommonLexRules.java\\n│   │   │   ├── LibExprBaseListener.java\\n│   │   │   ├── LibExprBaseVisitor.java\\n│   │   │   ├── LibExprLexer.java\\n│   │   │   ├── LibExprListener.java\\n│   │   │   ├── LibExprParser.java\\n│   │   │   └── LibExprVisitor.java\\n│   │   ├── gen\\n│   │   │   └── CommonLexRules.java\\n│   │   ├── ExprJoyRide.java\\n│   │   ├── LibExprBaseListener.java\\n│   │   ├── LibExprLexer.java\\n│   │   ├── LibExprListener.java\\n│   │   ├── LibExprParser.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep4\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ep20\\\\parser\\\\src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   │   ├── LabeledExprBaseListener.java\\n│   │   │   ├── LabeledExprBaseVisitor.java\\n│   │   │   ├── LabeledExprLexer.java\\n│   │   │   ├── LabeledExprListener.java\\n│   │   │   ├── LabeledExprParser.java\\n│   │   │   └── LabeledExprVisitor.java\\n│   │   ├── Calc.java\\n│   │   ├── EvalVisitor.java\\n│   │   ├── LabeledExprBaseVisitor.java\\n│   │   ├── LabeledExprLexer.java\\n│   │   ├── LabeledExprParser.java\\n│   │   ├── LabeledExprVisitor.java\\n│   │   ├── ReadMe.md\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep5\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── Demo.java\\n│   │   ├── ExtractInterfaceListener.java\\n│   │   ├── ExtractInterfaceTool.java\\n│   │   ├── JavaBaseListener.java\\n│   │   ├── JavaLexer.java\\n│   │   ├── JavaListener.java\\n│   │   ├── JavaParser.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep6\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── CSVBaseListener.java\\n│   │   ├── CSVExplor.java\\n│   │   ├── CSVLexer.java\\n│   │   ├── CSVListener.java\\n│   │   ├── CSVParser.java\\n│   │   ├── CSVReader.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep7\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── JSONBaseListener.java\\n│   │   ├── JSONLexer.java\\n│   │   ├── JSONListener.java\\n│   │   ├── JSONParser.java\\n│   │   ├── build.xml\\n│   │   └── t.json\\n│   └── pom.xml\\n├── ep8\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ASTNode.java\\n│   │   ├── AddNode.java\\n│   │   ├── BinArithNode.java\\n│   │   ├── ExprNode.java\\n│   │   ├── ExprVisitor.java\\n│   │   ├── IntNode.java\\n│   │   ├── OPType.java\\n│   │   ├── RawValueNode.java\\n│   │   ├── StatNode.java\\n│   │   ├── StatsNode.java\\n│   │   ├── VarNode.java\\n│   │   ├── VecMathBaseVisitor.java\\n│   │   ├── VecMathLexer.java\\n│   │   ├── VecMathParser.java\\n│   │   ├── VecMathVisitor.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep9\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── Calc.java\\n│   │   ├── ExprLexer.java\\n│   │   ├── ExprParser.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── scripts\\n│   ├── check_utf8.py\\n│   ├── cp_prototype.py\\n│   ├── cpfromtemplate.sh\\n│   ├── run.bat\\n│   ├── run.ps1\\n│   ├── run.py\\n│   └── run.sh\\n├── README.md\\n├── README_EN.md\\n└── pom.xml\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"b88727dab4c94d14ec154c8aaad9060070c0f57b","last_commit_update":"2025-08-28T15:06:20+08:00","gmt_create":"2025-09-16T13:09:49.5850133+08:00","gmt_modified":"2025-09-16T13:54:20.7352368+08:00","extend_info":"{\"language\":\"zh\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}