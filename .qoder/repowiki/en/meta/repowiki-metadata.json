{"knowledge_relations":[{"id":59,"source_id":"3b7c42c2-6c97-46b1-ba23-128a97dcc86c","target_id":"64f8b48c-252c-4cb6-9e91-1296e7f53ce7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3b7c42c2-6c97-46b1-ba23-128a97dcc86c -\u003e 64f8b48c-252c-4cb6-9e91-1296e7f53ce7","gmt_create":"2025-09-16T15:40:27.8788834+08:00","gmt_modified":"2025-09-16T15:40:27.8788834+08:00"},{"id":60,"source_id":"3b7c42c2-6c97-46b1-ba23-128a97dcc86c","target_id":"98ab0cde-c9e8-443f-9373-e7304cddaa30","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3b7c42c2-6c97-46b1-ba23-128a97dcc86c -\u003e 98ab0cde-c9e8-443f-9373-e7304cddaa30","gmt_create":"2025-09-16T15:40:27.8804467+08:00","gmt_modified":"2025-09-16T15:40:27.8804467+08:00"},{"id":61,"source_id":"3b7c42c2-6c97-46b1-ba23-128a97dcc86c","target_id":"ef0fed8b-4c7a-4553-a087-b95072bbe00a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3b7c42c2-6c97-46b1-ba23-128a97dcc86c -\u003e ef0fed8b-4c7a-4553-a087-b95072bbe00a","gmt_create":"2025-09-16T15:40:27.8820041+08:00","gmt_modified":"2025-09-16T15:40:27.8820041+08:00"},{"id":62,"source_id":"3b7c42c2-6c97-46b1-ba23-128a97dcc86c","target_id":"9b09cd9e-4a89-4bf5-ba3b-1976d95aca98","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3b7c42c2-6c97-46b1-ba23-128a97dcc86c -\u003e 9b09cd9e-4a89-4bf5-ba3b-1976d95aca98","gmt_create":"2025-09-16T15:40:27.8835617+08:00","gmt_modified":"2025-09-16T15:40:27.8835617+08:00"},{"id":63,"source_id":"3b7c42c2-6c97-46b1-ba23-128a97dcc86c","target_id":"7b6a5663-07b0-4a4a-bb93-8bbea555595e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 3b7c42c2-6c97-46b1-ba23-128a97dcc86c -\u003e 7b6a5663-07b0-4a4a-bb93-8bbea555595e","gmt_create":"2025-09-16T15:40:27.8851438+08:00","gmt_modified":"2025-09-16T15:40:27.8851438+08:00"},{"id":64,"source_id":"41682475-b624-4387-8a98-71757d90358e","target_id":"386b036e-ce65-49cd-8d89-a8d4943c372b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 41682475-b624-4387-8a98-71757d90358e -\u003e 386b036e-ce65-49cd-8d89-a8d4943c372b","gmt_create":"2025-09-16T15:40:27.8861824+08:00","gmt_modified":"2025-09-16T15:40:27.8861824+08:00"},{"id":65,"source_id":"41682475-b624-4387-8a98-71757d90358e","target_id":"e79ca8f0-3611-424d-9929-1f4777145bb4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 41682475-b624-4387-8a98-71757d90358e -\u003e e79ca8f0-3611-424d-9929-1f4777145bb4","gmt_create":"2025-09-16T15:40:27.8877976+08:00","gmt_modified":"2025-09-16T15:40:27.8877976+08:00"},{"id":66,"source_id":"41682475-b624-4387-8a98-71757d90358e","target_id":"4f022f49-7730-4dbe-9fb6-211d373351f2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 41682475-b624-4387-8a98-71757d90358e -\u003e 4f022f49-7730-4dbe-9fb6-211d373351f2","gmt_create":"2025-09-16T15:40:27.8893612+08:00","gmt_modified":"2025-09-16T15:40:27.8893612+08:00"},{"id":67,"source_id":"41682475-b624-4387-8a98-71757d90358e","target_id":"81d59589-534e-4ec8-afbf-a9269de7d44f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 41682475-b624-4387-8a98-71757d90358e -\u003e 81d59589-534e-4ec8-afbf-a9269de7d44f","gmt_create":"2025-09-16T15:40:27.8904358+08:00","gmt_modified":"2025-09-16T15:40:27.8904358+08:00"},{"id":68,"source_id":"41682475-b624-4387-8a98-71757d90358e","target_id":"9cfe2f41-f502-434d-a974-3a368a52b11f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 41682475-b624-4387-8a98-71757d90358e -\u003e 9cfe2f41-f502-434d-a974-3a368a52b11f","gmt_create":"2025-09-16T15:40:27.8919937+08:00","gmt_modified":"2025-09-16T15:40:27.8919937+08:00"},{"id":69,"source_id":"41682475-b624-4387-8a98-71757d90358e","target_id":"f3e94080-c639-466f-8a42-f9f93d9634cd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 41682475-b624-4387-8a98-71757d90358e -\u003e f3e94080-c639-466f-8a42-f9f93d9634cd","gmt_create":"2025-09-16T15:40:27.8935439+08:00","gmt_modified":"2025-09-16T15:40:27.8935439+08:00"},{"id":70,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"69a5f7d2-fbba-48df-898f-30326a939c70","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 69a5f7d2-fbba-48df-898f-30326a939c70","gmt_create":"2025-09-16T15:40:27.8951257+08:00","gmt_modified":"2025-09-16T15:40:27.8951257+08:00"},{"id":71,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"e536e41e-3935-4ff2-9e0b-5bde9a04822e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e e536e41e-3935-4ff2-9e0b-5bde9a04822e","gmt_create":"2025-09-16T15:40:27.8967062+08:00","gmt_modified":"2025-09-16T15:40:27.8967062+08:00"},{"id":72,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"55e304d5-d031-4539-b74e-372731fbd6e6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 55e304d5-d031-4539-b74e-372731fbd6e6","gmt_create":"2025-09-16T15:40:27.89775+08:00","gmt_modified":"2025-09-16T15:40:27.89775+08:00"},{"id":73,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"9d7542cf-d3fd-4bec-bc3d-fe8ab0d541e2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 9d7542cf-d3fd-4bec-bc3d-fe8ab0d541e2","gmt_create":"2025-09-16T15:40:27.8992721+08:00","gmt_modified":"2025-09-16T15:40:27.8992721+08:00"},{"id":74,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"5600e1f5-ca06-4a9a-93ad-99d6775e0b0a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 5600e1f5-ca06-4a9a-93ad-99d6775e0b0a","gmt_create":"2025-09-16T15:40:27.9007787+08:00","gmt_modified":"2025-09-16T15:40:27.9007787+08:00"},{"id":75,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"29c85cfc-ca24-4a18-97a5-5dc9eb8bbe21","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 29c85cfc-ca24-4a18-97a5-5dc9eb8bbe21","gmt_create":"2025-09-16T15:40:27.9017824+08:00","gmt_modified":"2025-09-16T15:40:27.9017824+08:00"},{"id":76,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"41532df7-eaa0-46b5-a7e3-e49af7279c5e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 41532df7-eaa0-46b5-a7e3-e49af7279c5e","gmt_create":"2025-09-16T15:40:27.9037825+08:00","gmt_modified":"2025-09-16T15:40:27.9037825+08:00"},{"id":77,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"7b37d09b-943e-4f3b-8a6b-a2f7633e8d82","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 7b37d09b-943e-4f3b-8a6b-a2f7633e8d82","gmt_create":"2025-09-16T15:40:27.9042862+08:00","gmt_modified":"2025-09-16T15:40:27.9042862+08:00"},{"id":78,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"5721eea7-78ef-48ea-ac37-2ffdcaf9a71a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 5721eea7-78ef-48ea-ac37-2ffdcaf9a71a","gmt_create":"2025-09-16T15:40:27.9062882+08:00","gmt_modified":"2025-09-16T15:40:27.9062882+08:00"},{"id":79,"source_id":"667bbe66-ba59-4589-ae68-4cd6550f1068","target_id":"92509907-e1af-42cf-9f94-b29d421f621a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 667bbe66-ba59-4589-ae68-4cd6550f1068 -\u003e 92509907-e1af-42cf-9f94-b29d421f621a","gmt_create":"2025-09-16T15:40:27.9072878+08:00","gmt_modified":"2025-09-16T15:40:27.9072878+08:00"},{"id":80,"source_id":"c3f45b09-5eef-426a-ab92-42a27d20185d","target_id":"d74310c5-fd05-4be5-b630-24fd6f1c2b44","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3f45b09-5eef-426a-ab92-42a27d20185d -\u003e d74310c5-fd05-4be5-b630-24fd6f1c2b44","gmt_create":"2025-09-16T15:40:27.9092879+08:00","gmt_modified":"2025-09-16T15:40:27.9092879+08:00"},{"id":81,"source_id":"c3f45b09-5eef-426a-ab92-42a27d20185d","target_id":"a4f0a60b-cb68-48d3-b3ea-45b2356ab234","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3f45b09-5eef-426a-ab92-42a27d20185d -\u003e a4f0a60b-cb68-48d3-b3ea-45b2356ab234","gmt_create":"2025-09-16T15:40:27.909792+08:00","gmt_modified":"2025-09-16T15:40:27.909792+08:00"},{"id":82,"source_id":"c3f45b09-5eef-426a-ab92-42a27d20185d","target_id":"16c10ba6-cba9-48a1-9a96-e2caad541b4f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3f45b09-5eef-426a-ab92-42a27d20185d -\u003e 16c10ba6-cba9-48a1-9a96-e2caad541b4f","gmt_create":"2025-09-16T15:40:27.9117939+08:00","gmt_modified":"2025-09-16T15:40:27.9117939+08:00"},{"id":83,"source_id":"c3f45b09-5eef-426a-ab92-42a27d20185d","target_id":"05548912-6b93-45f9-abd4-7fe0613d3ddb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3f45b09-5eef-426a-ab92-42a27d20185d -\u003e 05548912-6b93-45f9-abd4-7fe0613d3ddb","gmt_create":"2025-09-16T15:40:27.9127937+08:00","gmt_modified":"2025-09-16T15:40:27.9127937+08:00"},{"id":84,"source_id":"c3f45b09-5eef-426a-ab92-42a27d20185d","target_id":"20f7df4d-efc6-4250-a3e6-0ffc6906fe26","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3f45b09-5eef-426a-ab92-42a27d20185d -\u003e 20f7df4d-efc6-4250-a3e6-0ffc6906fe26","gmt_create":"2025-09-16T15:40:27.9147938+08:00","gmt_modified":"2025-09-16T15:40:27.9147938+08:00"},{"id":85,"source_id":"c3f45b09-5eef-426a-ab92-42a27d20185d","target_id":"4c07f46e-d7df-4a12-9942-2c1ea97c2e58","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: c3f45b09-5eef-426a-ab92-42a27d20185d -\u003e 4c07f46e-d7df-4a12-9942-2c1ea97c2e58","gmt_create":"2025-09-16T15:40:27.9157937+08:00","gmt_modified":"2025-09-16T15:40:27.9157937+08:00"},{"id":86,"source_id":"ce95d0b7-2432-4610-b3f8-55cf188f1a9a","target_id":"5aec84ac-4fe2-4f7c-93bb-9a2c847ba235","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce95d0b7-2432-4610-b3f8-55cf188f1a9a -\u003e 5aec84ac-4fe2-4f7c-93bb-9a2c847ba235","gmt_create":"2025-09-16T15:40:27.9177936+08:00","gmt_modified":"2025-09-16T15:40:27.9177936+08:00"},{"id":87,"source_id":"ce95d0b7-2432-4610-b3f8-55cf188f1a9a","target_id":"5ebe70f3-25bf-4ca1-bade-727dd2991a28","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce95d0b7-2432-4610-b3f8-55cf188f1a9a -\u003e 5ebe70f3-25bf-4ca1-bade-727dd2991a28","gmt_create":"2025-09-16T15:40:27.9197935+08:00","gmt_modified":"2025-09-16T15:40:27.9197935+08:00"},{"id":88,"source_id":"ce95d0b7-2432-4610-b3f8-55cf188f1a9a","target_id":"28b4b6f4-aa93-465f-acf4-775dfdf19579","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce95d0b7-2432-4610-b3f8-55cf188f1a9a -\u003e 28b4b6f4-aa93-465f-acf4-775dfdf19579","gmt_create":"2025-09-16T15:40:27.9213324+08:00","gmt_modified":"2025-09-16T15:40:27.9213324+08:00"},{"id":89,"source_id":"ce95d0b7-2432-4610-b3f8-55cf188f1a9a","target_id":"1d6ed4ff-b835-4f9d-a560-8287e45dcfde","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ce95d0b7-2432-4610-b3f8-55cf188f1a9a -\u003e 1d6ed4ff-b835-4f9d-a560-8287e45dcfde","gmt_create":"2025-09-16T15:40:27.9228856+08:00","gmt_modified":"2025-09-16T15:40:27.9228856+08:00"},{"id":90,"source_id":"71b1ca0a-d0bd-4175-b9de-e40ec498d78d","target_id":"f986a7b9-46f5-4971-9d5c-d7d3d78b932c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71b1ca0a-d0bd-4175-b9de-e40ec498d78d -\u003e f986a7b9-46f5-4971-9d5c-d7d3d78b932c","gmt_create":"2025-09-16T15:40:27.9244444+08:00","gmt_modified":"2025-09-16T15:40:27.9244444+08:00"},{"id":91,"source_id":"71b1ca0a-d0bd-4175-b9de-e40ec498d78d","target_id":"4b2e4193-781d-4614-83de-600584308b8a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71b1ca0a-d0bd-4175-b9de-e40ec498d78d -\u003e 4b2e4193-781d-4614-83de-600584308b8a","gmt_create":"2025-09-16T15:40:27.9265289+08:00","gmt_modified":"2025-09-16T15:40:27.9265289+08:00"},{"id":92,"source_id":"71b1ca0a-d0bd-4175-b9de-e40ec498d78d","target_id":"05c92537-d099-45c3-ad2b-f1a0cebc6f0d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71b1ca0a-d0bd-4175-b9de-e40ec498d78d -\u003e 05c92537-d099-45c3-ad2b-f1a0cebc6f0d","gmt_create":"2025-09-16T15:40:27.9280843+08:00","gmt_modified":"2025-09-16T15:40:27.9280843+08:00"},{"id":93,"source_id":"71b1ca0a-d0bd-4175-b9de-e40ec498d78d","target_id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71b1ca0a-d0bd-4175-b9de-e40ec498d78d -\u003e 56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","gmt_create":"2025-09-16T15:40:27.9296405+08:00","gmt_modified":"2025-09-16T15:40:27.9296405+08:00"},{"id":94,"source_id":"71b1ca0a-d0bd-4175-b9de-e40ec498d78d","target_id":"fb94e4ab-ae91-4f0e-a955-10a3b859ce33","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71b1ca0a-d0bd-4175-b9de-e40ec498d78d -\u003e fb94e4ab-ae91-4f0e-a955-10a3b859ce33","gmt_create":"2025-09-16T15:40:27.9312321+08:00","gmt_modified":"2025-09-16T15:40:27.9312321+08:00"},{"id":95,"source_id":"10da5c7f-fdaa-41cb-9bb1-3a1d8412d5bf","target_id":"7d22f823-be30-4bbc-97b2-02641d042c23","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 10da5c7f-fdaa-41cb-9bb1-3a1d8412d5bf -\u003e 7d22f823-be30-4bbc-97b2-02641d042c23","gmt_create":"2025-09-16T15:40:27.9328628+08:00","gmt_modified":"2025-09-16T15:40:27.9328628+08:00"},{"id":96,"source_id":"10da5c7f-fdaa-41cb-9bb1-3a1d8412d5bf","target_id":"1ced48ef-5445-40e4-94dc-afe624a99008","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 10da5c7f-fdaa-41cb-9bb1-3a1d8412d5bf -\u003e 1ced48ef-5445-40e4-94dc-afe624a99008","gmt_create":"2025-09-16T15:40:27.9344258+08:00","gmt_modified":"2025-09-16T15:40:27.9344258+08:00"},{"id":97,"source_id":"10da5c7f-fdaa-41cb-9bb1-3a1d8412d5bf","target_id":"af493f68-b1a6-44a6-abbe-65b733d28c5f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 10da5c7f-fdaa-41cb-9bb1-3a1d8412d5bf -\u003e af493f68-b1a6-44a6-abbe-65b733d28c5f","gmt_create":"2025-09-16T15:40:27.9359824+08:00","gmt_modified":"2025-09-16T15:40:27.9359824+08:00"},{"id":98,"source_id":"0694f3c4-3eba-4d38-aa68-6880544957af","target_id":"8b645609-6081-4e4d-8823-1444f1a00fc2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0694f3c4-3eba-4d38-aa68-6880544957af -\u003e 8b645609-6081-4e4d-8823-1444f1a00fc2","gmt_create":"2025-09-16T15:40:27.9375325+08:00","gmt_modified":"2025-09-16T15:40:27.9375325+08:00"},{"id":99,"source_id":"0694f3c4-3eba-4d38-aa68-6880544957af","target_id":"e8fb0d5c-29f4-40cb-b7b8-276c2d13a949","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0694f3c4-3eba-4d38-aa68-6880544957af -\u003e e8fb0d5c-29f4-40cb-b7b8-276c2d13a949","gmt_create":"2025-09-16T15:40:27.9385647+08:00","gmt_modified":"2025-09-16T15:40:27.9385647+08:00"},{"id":100,"source_id":"0694f3c4-3eba-4d38-aa68-6880544957af","target_id":"bd2ee6c4-441c-427a-b9a9-2ab21c784f54","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0694f3c4-3eba-4d38-aa68-6880544957af -\u003e bd2ee6c4-441c-427a-b9a9-2ab21c784f54","gmt_create":"2025-09-16T15:40:27.9406746+08:00","gmt_modified":"2025-09-16T15:40:27.9406746+08:00"},{"id":101,"source_id":"0694f3c4-3eba-4d38-aa68-6880544957af","target_id":"74bcfdcb-1e60-43f1-869d-c68c76d790e4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0694f3c4-3eba-4d38-aa68-6880544957af -\u003e 74bcfdcb-1e60-43f1-869d-c68c76d790e4","gmt_create":"2025-09-16T15:40:27.9423125+08:00","gmt_modified":"2025-09-16T15:40:27.9423125+08:00"},{"id":102,"source_id":"0694f3c4-3eba-4d38-aa68-6880544957af","target_id":"3a173de5-e03b-443f-a0ee-a10a970ad782","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0694f3c4-3eba-4d38-aa68-6880544957af -\u003e 3a173de5-e03b-443f-a0ee-a10a970ad782","gmt_create":"2025-09-16T15:40:27.9438701+08:00","gmt_modified":"2025-09-16T15:40:27.9438701+08:00"},{"id":103,"source_id":"0694f3c4-3eba-4d38-aa68-6880544957af","target_id":"7729d29e-aa87-4cb9-a0a1-21630a6bf1b6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 0694f3c4-3eba-4d38-aa68-6880544957af -\u003e 7729d29e-aa87-4cb9-a0a1-21630a6bf1b6","gmt_create":"2025-09-16T15:40:27.945439+08:00","gmt_modified":"2025-09-16T15:40:27.945439+08:00"},{"id":104,"source_id":"77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd","target_id":"515e0ec5-5924-4210-9b20-777e71f11e44","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd -\u003e 515e0ec5-5924-4210-9b20-777e71f11e44","gmt_create":"2025-09-16T15:40:27.9470137+08:00","gmt_modified":"2025-09-16T15:40:27.9470137+08:00"},{"id":105,"source_id":"77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd","target_id":"082c7ebb-da4a-4a55-8eba-ebc7fb6b4c5e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd -\u003e 082c7ebb-da4a-4a55-8eba-ebc7fb6b4c5e","gmt_create":"2025-09-16T15:40:27.9481085+08:00","gmt_modified":"2025-09-16T15:40:27.9481085+08:00"},{"id":106,"source_id":"77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd","target_id":"cdb060d7-8175-4c33-9343-39c0fd988cd0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd -\u003e cdb060d7-8175-4c33-9343-39c0fd988cd0","gmt_create":"2025-09-16T15:40:27.9496727+08:00","gmt_modified":"2025-09-16T15:40:27.9496727+08:00"},{"id":107,"source_id":"77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd","target_id":"948c1f99-3cfd-4c78-90f3-1bf1e60a5b9e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd -\u003e 948c1f99-3cfd-4c78-90f3-1bf1e60a5b9e","gmt_create":"2025-09-16T15:40:27.9512289+08:00","gmt_modified":"2025-09-16T15:40:27.9512289+08:00"},{"id":108,"source_id":"f6bb5ee9-c902-4ba0-9c9c-9491de85989c","target_id":"5ded5d75-20d5-45f5-8dba-768338979b94","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f6bb5ee9-c902-4ba0-9c9c-9491de85989c -\u003e 5ded5d75-20d5-45f5-8dba-768338979b94","gmt_create":"2025-09-16T15:40:27.9528116+08:00","gmt_modified":"2025-09-16T15:40:27.9528116+08:00"},{"id":109,"source_id":"f6bb5ee9-c902-4ba0-9c9c-9491de85989c","target_id":"7dec2b1c-90f7-4bee-a3c7-f18bd80266ee","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f6bb5ee9-c902-4ba0-9c9c-9491de85989c -\u003e 7dec2b1c-90f7-4bee-a3c7-f18bd80266ee","gmt_create":"2025-09-16T15:40:27.9538455+08:00","gmt_modified":"2025-09-16T15:40:27.9538455+08:00"},{"id":110,"source_id":"f6bb5ee9-c902-4ba0-9c9c-9491de85989c","target_id":"f97eec75-0214-4915-9ccb-bc9eebfd4002","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: f6bb5ee9-c902-4ba0-9c9c-9491de85989c -\u003e f97eec75-0214-4915-9ccb-bc9eebfd4002","gmt_create":"2025-09-16T15:40:27.9553527+08:00","gmt_modified":"2025-09-16T15:40:27.9553527+08:00"},{"id":111,"source_id":"750ff60a-29a2-4408-b7e5-9c29e1d91333","target_id":"7cdfe161-e54b-4add-822e-183552349eea","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 750ff60a-29a2-4408-b7e5-9c29e1d91333 -\u003e 7cdfe161-e54b-4add-822e-183552349eea","gmt_create":"2025-09-16T15:40:27.9573584+08:00","gmt_modified":"2025-09-16T15:40:27.9573584+08:00"},{"id":112,"source_id":"750ff60a-29a2-4408-b7e5-9c29e1d91333","target_id":"68fd8a97-9548-439a-90e6-1e6843d3a627","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 750ff60a-29a2-4408-b7e5-9c29e1d91333 -\u003e 68fd8a97-9548-439a-90e6-1e6843d3a627","gmt_create":"2025-09-16T15:40:27.958361+08:00","gmt_modified":"2025-09-16T15:40:27.958361+08:00"},{"id":113,"source_id":"750ff60a-29a2-4408-b7e5-9c29e1d91333","target_id":"0aa81012-72ae-420f-8dcc-ca7f86739fea","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 750ff60a-29a2-4408-b7e5-9c29e1d91333 -\u003e 0aa81012-72ae-420f-8dcc-ca7f86739fea","gmt_create":"2025-09-16T15:40:27.9603853+08:00","gmt_modified":"2025-09-16T15:40:27.9603853+08:00"},{"id":114,"source_id":"750ff60a-29a2-4408-b7e5-9c29e1d91333","target_id":"19ac0a58-72d7-476b-88d8-b9cf3fb26df1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 750ff60a-29a2-4408-b7e5-9c29e1d91333 -\u003e 19ac0a58-72d7-476b-88d8-b9cf3fb26df1","gmt_create":"2025-09-16T15:40:27.9619484+08:00","gmt_modified":"2025-09-16T15:40:27.9619484+08:00"},{"id":115,"source_id":"750ff60a-29a2-4408-b7e5-9c29e1d91333","target_id":"1bc31256-c161-4da8-8a37-613ab875eec5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 750ff60a-29a2-4408-b7e5-9c29e1d91333 -\u003e 1bc31256-c161-4da8-8a37-613ab875eec5","gmt_create":"2025-09-16T15:40:27.9636267+08:00","gmt_modified":"2025-09-16T15:40:27.9636267+08:00"},{"id":116,"source_id":"750ff60a-29a2-4408-b7e5-9c29e1d91333","target_id":"1aeb0af8-dd7c-4510-99f3-420f8420bc29","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 750ff60a-29a2-4408-b7e5-9c29e1d91333 -\u003e 1aeb0af8-dd7c-4510-99f3-420f8420bc29","gmt_create":"2025-09-16T15:40:27.9651831+08:00","gmt_modified":"2025-09-16T15:40:27.9651831+08:00"},{"id":117,"source_id":"00447f15-66eb-4b25-91cf-070dbdacdb0b","target_id":"dfb38ed6-221a-46ba-bbf3-047eff1661e0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 00447f15-66eb-4b25-91cf-070dbdacdb0b -\u003e dfb38ed6-221a-46ba-bbf3-047eff1661e0","gmt_create":"2025-09-16T15:40:27.9667399+08:00","gmt_modified":"2025-09-16T15:40:27.9667399+08:00"},{"id":118,"source_id":"00447f15-66eb-4b25-91cf-070dbdacdb0b","target_id":"837d5124-29fe-4da4-83b8-e8b674ea658e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 00447f15-66eb-4b25-91cf-070dbdacdb0b -\u003e 837d5124-29fe-4da4-83b8-e8b674ea658e","gmt_create":"2025-09-16T15:40:27.9677766+08:00","gmt_modified":"2025-09-16T15:40:27.9677766+08:00"},{"id":119,"source_id":"00447f15-66eb-4b25-91cf-070dbdacdb0b","target_id":"227dc7d9-6d71-4588-bc20-8112ce025681","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 00447f15-66eb-4b25-91cf-070dbdacdb0b -\u003e 227dc7d9-6d71-4588-bc20-8112ce025681","gmt_create":"2025-09-16T15:40:27.9693311+08:00","gmt_modified":"2025-09-16T15:40:27.9693311+08:00"},{"id":120,"source_id":"00447f15-66eb-4b25-91cf-070dbdacdb0b","target_id":"3dc0d795-ab57-4d56-b25b-b61a5bd2768c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 00447f15-66eb-4b25-91cf-070dbdacdb0b -\u003e 3dc0d795-ab57-4d56-b25b-b61a5bd2768c","gmt_create":"2025-09-16T15:40:27.970886+08:00","gmt_modified":"2025-09-16T15:40:27.970886+08:00"},{"id":121,"source_id":"7a54de68-f0d8-494a-9500-644a979a8e8a","target_id":"ebeb04bb-9c31-44b6-8fa9-dca0db911f7c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a54de68-f0d8-494a-9500-644a979a8e8a -\u003e ebeb04bb-9c31-44b6-8fa9-dca0db911f7c","gmt_create":"2025-09-16T15:40:27.9724371+08:00","gmt_modified":"2025-09-16T15:40:27.9724371+08:00"},{"id":122,"source_id":"7a54de68-f0d8-494a-9500-644a979a8e8a","target_id":"2e258770-747f-48cc-a025-d162bac5c0fd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a54de68-f0d8-494a-9500-644a979a8e8a -\u003e 2e258770-747f-48cc-a025-d162bac5c0fd","gmt_create":"2025-09-16T15:40:27.973483+08:00","gmt_modified":"2025-09-16T15:40:27.973483+08:00"},{"id":123,"source_id":"7a54de68-f0d8-494a-9500-644a979a8e8a","target_id":"ca452e21-faf2-42c1-be63-b4bc97629455","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a54de68-f0d8-494a-9500-644a979a8e8a -\u003e ca452e21-faf2-42c1-be63-b4bc97629455","gmt_create":"2025-09-16T15:40:27.9750736+08:00","gmt_modified":"2025-09-16T15:40:27.9750736+08:00"},{"id":124,"source_id":"7a54de68-f0d8-494a-9500-644a979a8e8a","target_id":"d7519541-c841-416e-ab69-ae74fa1422d3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a54de68-f0d8-494a-9500-644a979a8e8a -\u003e d7519541-c841-416e-ab69-ae74fa1422d3","gmt_create":"2025-09-16T15:40:27.977189+08:00","gmt_modified":"2025-09-16T15:40:27.977189+08:00"},{"id":125,"source_id":"7a54de68-f0d8-494a-9500-644a979a8e8a","target_id":"0b92e763-c5c0-4c16-a8ae-50fdb34b5347","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 7a54de68-f0d8-494a-9500-644a979a8e8a -\u003e 0b92e763-c5c0-4c16-a8ae-50fdb34b5347","gmt_create":"2025-09-16T15:40:27.9793423+08:00","gmt_modified":"2025-09-16T15:40:27.9793423+08:00"},{"id":126,"source_id":"fc9eeaff-ea14-4985-84c7-0685a3cba799","target_id":"2d3aff8e-980d-458e-ad25-ccfa0b34e5e5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fc9eeaff-ea14-4985-84c7-0685a3cba799 -\u003e 2d3aff8e-980d-458e-ad25-ccfa0b34e5e5","gmt_create":"2025-09-16T15:40:27.9803808+08:00","gmt_modified":"2025-09-16T15:40:27.9803808+08:00"},{"id":127,"source_id":"fc9eeaff-ea14-4985-84c7-0685a3cba799","target_id":"62b72ff5-50bd-4c75-9278-3fcf2f53eb15","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fc9eeaff-ea14-4985-84c7-0685a3cba799 -\u003e 62b72ff5-50bd-4c75-9278-3fcf2f53eb15","gmt_create":"2025-09-16T15:40:27.9819463+08:00","gmt_modified":"2025-09-16T15:40:27.9819463+08:00"},{"id":128,"source_id":"fc9eeaff-ea14-4985-84c7-0685a3cba799","target_id":"e376605e-9ffd-468b-b025-277d7f3187d1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fc9eeaff-ea14-4985-84c7-0685a3cba799 -\u003e e376605e-9ffd-468b-b025-277d7f3187d1","gmt_create":"2025-09-16T15:40:27.9834989+08:00","gmt_modified":"2025-09-16T15:40:27.9834989+08:00"},{"id":129,"source_id":"fc9eeaff-ea14-4985-84c7-0685a3cba799","target_id":"ca33161c-333f-495b-9859-f51ad23f4ebe","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fc9eeaff-ea14-4985-84c7-0685a3cba799 -\u003e ca33161c-333f-495b-9859-f51ad23f4ebe","gmt_create":"2025-09-16T15:40:27.9850842+08:00","gmt_modified":"2025-09-16T15:40:27.9850842+08:00"},{"id":130,"source_id":"fc9eeaff-ea14-4985-84c7-0685a3cba799","target_id":"67f5bc3f-158c-4cfd-b3b2-6d15a43f119e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fc9eeaff-ea14-4985-84c7-0685a3cba799 -\u003e 67f5bc3f-158c-4cfd-b3b2-6d15a43f119e","gmt_create":"2025-09-16T15:40:27.9866435+08:00","gmt_modified":"2025-09-16T15:40:27.9866435+08:00"},{"id":131,"source_id":"fc9eeaff-ea14-4985-84c7-0685a3cba799","target_id":"4d6b9be2-327a-451d-9a96-763283abcad5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fc9eeaff-ea14-4985-84c7-0685a3cba799 -\u003e 4d6b9be2-327a-451d-9a96-763283abcad5","gmt_create":"2025-09-16T15:40:27.9876851+08:00","gmt_modified":"2025-09-16T15:40:27.9876851+08:00"},{"id":132,"source_id":"fc9eeaff-ea14-4985-84c7-0685a3cba799","target_id":"6997972d-f527-4e9a-b01f-2da363139fbb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fc9eeaff-ea14-4985-84c7-0685a3cba799 -\u003e 6997972d-f527-4e9a-b01f-2da363139fbb","gmt_create":"2025-09-16T15:40:27.9892408+08:00","gmt_modified":"2025-09-16T15:40:27.9892408+08:00"},{"id":133,"source_id":"64f8b48c-252c-4cb6-9e91-1296e7f53ce7","target_id":"4dd4d5b7-f47f-4995-bc33-7baa9ac81814","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 64f8b48c-252c-4cb6-9e91-1296e7f53ce7 -\u003e 4dd4d5b7-f47f-4995-bc33-7baa9ac81814","gmt_create":"2025-09-16T15:40:27.990805+08:00","gmt_modified":"2025-09-16T15:40:27.990805+08:00"},{"id":134,"source_id":"64f8b48c-252c-4cb6-9e91-1296e7f53ce7","target_id":"2f4fe9fc-e5f9-4098-9621-d813f6bfa1a1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 64f8b48c-252c-4cb6-9e91-1296e7f53ce7 -\u003e 2f4fe9fc-e5f9-4098-9621-d813f6bfa1a1","gmt_create":"2025-09-16T15:40:27.9923689+08:00","gmt_modified":"2025-09-16T15:40:27.9923689+08:00"},{"id":135,"source_id":"64f8b48c-252c-4cb6-9e91-1296e7f53ce7","target_id":"4a6db506-d097-481c-81df-1f236e187fea","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 64f8b48c-252c-4cb6-9e91-1296e7f53ce7 -\u003e 4a6db506-d097-481c-81df-1f236e187fea","gmt_create":"2025-09-16T15:40:27.9939783+08:00","gmt_modified":"2025-09-16T15:40:27.9939783+08:00"},{"id":136,"source_id":"64f8b48c-252c-4cb6-9e91-1296e7f53ce7","target_id":"8d523bbf-7189-4fbd-a9e9-ad98bbb718dd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 64f8b48c-252c-4cb6-9e91-1296e7f53ce7 -\u003e 8d523bbf-7189-4fbd-a9e9-ad98bbb718dd","gmt_create":"2025-09-16T15:40:27.9955876+08:00","gmt_modified":"2025-09-16T15:40:27.9955876+08:00"},{"id":137,"source_id":"64f8b48c-252c-4cb6-9e91-1296e7f53ce7","target_id":"979eb5af-59de-4aea-bcc5-1d29570354fb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 64f8b48c-252c-4cb6-9e91-1296e7f53ce7 -\u003e 979eb5af-59de-4aea-bcc5-1d29570354fb","gmt_create":"2025-09-16T15:40:27.9971704+08:00","gmt_modified":"2025-09-16T15:40:27.9971704+08:00"},{"id":138,"source_id":"d74310c5-fd05-4be5-b630-24fd6f1c2b44","target_id":"dcc7e908-ff0a-435a-a1e6-580a85f2eb22","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d74310c5-fd05-4be5-b630-24fd6f1c2b44 -\u003e dcc7e908-ff0a-435a-a1e6-580a85f2eb22","gmt_create":"2025-09-16T15:40:27.9987253+08:00","gmt_modified":"2025-09-16T15:40:27.9987253+08:00"},{"id":139,"source_id":"d74310c5-fd05-4be5-b630-24fd6f1c2b44","target_id":"632c0632-c17e-4aef-8c4e-ca261d18f664","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d74310c5-fd05-4be5-b630-24fd6f1c2b44 -\u003e 632c0632-c17e-4aef-8c4e-ca261d18f664","gmt_create":"2025-09-16T15:40:28.0007993+08:00","gmt_modified":"2025-09-16T15:40:28.0007993+08:00"},{"id":140,"source_id":"d74310c5-fd05-4be5-b630-24fd6f1c2b44","target_id":"4807f4c8-5604-43f5-b96c-29a188e9365b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d74310c5-fd05-4be5-b630-24fd6f1c2b44 -\u003e 4807f4c8-5604-43f5-b96c-29a188e9365b","gmt_create":"2025-09-16T15:40:28.0028742+08:00","gmt_modified":"2025-09-16T15:40:28.0028742+08:00"},{"id":141,"source_id":"d74310c5-fd05-4be5-b630-24fd6f1c2b44","target_id":"67397c95-cdcc-4a80-9ff4-a17e8b737fca","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: d74310c5-fd05-4be5-b630-24fd6f1c2b44 -\u003e 67397c95-cdcc-4a80-9ff4-a17e8b737fca","gmt_create":"2025-09-16T15:40:28.0044292+08:00","gmt_modified":"2025-09-16T15:40:28.0044292+08:00"},{"id":142,"source_id":"98ab0cde-c9e8-443f-9373-e7304cddaa30","target_id":"382541a9-5470-462f-a29e-e32c8ad1f01c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98ab0cde-c9e8-443f-9373-e7304cddaa30 -\u003e 382541a9-5470-462f-a29e-e32c8ad1f01c","gmt_create":"2025-09-16T15:40:28.0064536+08:00","gmt_modified":"2025-09-16T15:40:28.0064536+08:00"},{"id":143,"source_id":"98ab0cde-c9e8-443f-9373-e7304cddaa30","target_id":"cabc8204-6976-4c10-a40f-d600cf436a1a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98ab0cde-c9e8-443f-9373-e7304cddaa30 -\u003e cabc8204-6976-4c10-a40f-d600cf436a1a","gmt_create":"2025-09-16T15:40:28.00846+08:00","gmt_modified":"2025-09-16T15:40:28.00846+08:00"},{"id":144,"source_id":"98ab0cde-c9e8-443f-9373-e7304cddaa30","target_id":"c4790833-6199-466e-8260-b118685f5728","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98ab0cde-c9e8-443f-9373-e7304cddaa30 -\u003e c4790833-6199-466e-8260-b118685f5728","gmt_create":"2025-09-16T15:40:28.0094599+08:00","gmt_modified":"2025-09-16T15:40:28.0094599+08:00"},{"id":145,"source_id":"98ab0cde-c9e8-443f-9373-e7304cddaa30","target_id":"7ff35bd1-153a-48ca-b53a-e75f8b03ab7d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98ab0cde-c9e8-443f-9373-e7304cddaa30 -\u003e 7ff35bd1-153a-48ca-b53a-e75f8b03ab7d","gmt_create":"2025-09-16T15:40:28.0109649+08:00","gmt_modified":"2025-09-16T15:40:28.0109649+08:00"},{"id":146,"source_id":"98ab0cde-c9e8-443f-9373-e7304cddaa30","target_id":"cc581887-9642-468f-8485-8003a4ef29f9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 98ab0cde-c9e8-443f-9373-e7304cddaa30 -\u003e cc581887-9642-468f-8485-8003a4ef29f9","gmt_create":"2025-09-16T15:40:28.0129666+08:00","gmt_modified":"2025-09-16T15:40:28.0129666+08:00"},{"id":147,"source_id":"4b2e4193-781d-4614-83de-600584308b8a","target_id":"60fa350e-daaa-4daf-a2eb-d9272d28f8a2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4b2e4193-781d-4614-83de-600584308b8a -\u003e 60fa350e-daaa-4daf-a2eb-d9272d28f8a2","gmt_create":"2025-09-16T15:40:28.0149665+08:00","gmt_modified":"2025-09-16T15:40:28.0149665+08:00"},{"id":148,"source_id":"4b2e4193-781d-4614-83de-600584308b8a","target_id":"ebdf8bcd-4b4a-4755-91a3-f22233e8939f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4b2e4193-781d-4614-83de-600584308b8a -\u003e ebdf8bcd-4b4a-4755-91a3-f22233e8939f","gmt_create":"2025-09-16T15:40:28.016471+08:00","gmt_modified":"2025-09-16T15:40:28.016471+08:00"},{"id":149,"source_id":"4b2e4193-781d-4614-83de-600584308b8a","target_id":"85da14a1-95fa-41cc-a9d9-b886bc608dbb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4b2e4193-781d-4614-83de-600584308b8a -\u003e 85da14a1-95fa-41cc-a9d9-b886bc608dbb","gmt_create":"2025-09-16T15:40:28.0174732+08:00","gmt_modified":"2025-09-16T15:40:28.0174732+08:00"},{"id":150,"source_id":"4b2e4193-781d-4614-83de-600584308b8a","target_id":"6e579750-e653-4359-907b-8ec9c48e1508","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 4b2e4193-781d-4614-83de-600584308b8a -\u003e 6e579750-e653-4359-907b-8ec9c48e1508","gmt_create":"2025-09-16T15:40:28.019473+08:00","gmt_modified":"2025-09-16T15:40:28.019473+08:00"},{"id":151,"source_id":"ef0fed8b-4c7a-4553-a087-b95072bbe00a","target_id":"8558fb2d-6335-48be-9ed9-4371380314e5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ef0fed8b-4c7a-4553-a087-b95072bbe00a -\u003e 8558fb2d-6335-48be-9ed9-4371380314e5","gmt_create":"2025-09-16T15:40:28.0214728+08:00","gmt_modified":"2025-09-16T15:40:28.0214728+08:00"},{"id":152,"source_id":"ef0fed8b-4c7a-4553-a087-b95072bbe00a","target_id":"147e8406-7ea4-44f9-865e-3157b1a68dde","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ef0fed8b-4c7a-4553-a087-b95072bbe00a -\u003e 147e8406-7ea4-44f9-865e-3157b1a68dde","gmt_create":"2025-09-16T15:40:28.022473+08:00","gmt_modified":"2025-09-16T15:40:28.022473+08:00"},{"id":153,"source_id":"ef0fed8b-4c7a-4553-a087-b95072bbe00a","target_id":"a8345ac6-c44b-4036-ac3a-c23be4960dd8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ef0fed8b-4c7a-4553-a087-b95072bbe00a -\u003e a8345ac6-c44b-4036-ac3a-c23be4960dd8","gmt_create":"2025-09-16T15:40:28.0244727+08:00","gmt_modified":"2025-09-16T15:40:28.0244727+08:00"},{"id":154,"source_id":"ef0fed8b-4c7a-4553-a087-b95072bbe00a","target_id":"a59d87c1-005e-40c1-8b2e-ca31d39ac44a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ef0fed8b-4c7a-4553-a087-b95072bbe00a -\u003e a59d87c1-005e-40c1-8b2e-ca31d39ac44a","gmt_create":"2025-09-16T15:40:28.0269758+08:00","gmt_modified":"2025-09-16T15:40:28.0269758+08:00"},{"id":155,"source_id":"ef0fed8b-4c7a-4553-a087-b95072bbe00a","target_id":"439abb40-ebc7-459d-92b6-9207f594bb20","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ef0fed8b-4c7a-4553-a087-b95072bbe00a -\u003e 439abb40-ebc7-459d-92b6-9207f594bb20","gmt_create":"2025-09-16T15:40:28.0290459+08:00","gmt_modified":"2025-09-16T15:40:28.0290459+08:00"},{"id":156,"source_id":"9b09cd9e-4a89-4bf5-ba3b-1976d95aca98","target_id":"73f22dcb-0e5d-4e34-a610-e4b340b79a29","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9b09cd9e-4a89-4bf5-ba3b-1976d95aca98 -\u003e 73f22dcb-0e5d-4e34-a610-e4b340b79a29","gmt_create":"2025-09-16T15:40:28.0317011+08:00","gmt_modified":"2025-09-16T15:40:28.0317011+08:00"},{"id":157,"source_id":"9b09cd9e-4a89-4bf5-ba3b-1976d95aca98","target_id":"54cb3f56-6ea5-431e-a7bf-849913b1fe96","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9b09cd9e-4a89-4bf5-ba3b-1976d95aca98 -\u003e 54cb3f56-6ea5-431e-a7bf-849913b1fe96","gmt_create":"2025-09-16T15:40:28.0332594+08:00","gmt_modified":"2025-09-16T15:40:28.0332594+08:00"},{"id":158,"source_id":"9b09cd9e-4a89-4bf5-ba3b-1976d95aca98","target_id":"3dff9aa4-df7c-46b9-8b13-74d7859b4aa9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9b09cd9e-4a89-4bf5-ba3b-1976d95aca98 -\u003e 3dff9aa4-df7c-46b9-8b13-74d7859b4aa9","gmt_create":"2025-09-16T15:40:28.0348139+08:00","gmt_modified":"2025-09-16T15:40:28.0348139+08:00"},{"id":159,"source_id":"9b09cd9e-4a89-4bf5-ba3b-1976d95aca98","target_id":"dec2a193-f5bf-4d5b-8cd1-801cdc174720","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9b09cd9e-4a89-4bf5-ba3b-1976d95aca98 -\u003e dec2a193-f5bf-4d5b-8cd1-801cdc174720","gmt_create":"2025-09-16T15:40:28.0363715+08:00","gmt_modified":"2025-09-16T15:40:28.0363715+08:00"},{"id":160,"source_id":"9b09cd9e-4a89-4bf5-ba3b-1976d95aca98","target_id":"6ac58b0b-d8ef-42ab-8c02-7f74633c6cca","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9b09cd9e-4a89-4bf5-ba3b-1976d95aca98 -\u003e 6ac58b0b-d8ef-42ab-8c02-7f74633c6cca","gmt_create":"2025-09-16T15:40:28.0379516+08:00","gmt_modified":"2025-09-16T15:40:28.0379516+08:00"},{"id":161,"source_id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","target_id":"32698302-84ca-4ed0-83da-0d0e7a75abb7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529 -\u003e 32698302-84ca-4ed0-83da-0d0e7a75abb7","gmt_create":"2025-09-16T15:40:28.0395128+08:00","gmt_modified":"2025-09-16T15:40:28.0395128+08:00"},{"id":162,"source_id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","target_id":"7a3b8059-64cc-4822-9fdc-c585cbb492d8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529 -\u003e 7a3b8059-64cc-4822-9fdc-c585cbb492d8","gmt_create":"2025-09-16T15:40:28.0416698+08:00","gmt_modified":"2025-09-16T15:40:28.0416698+08:00"},{"id":163,"source_id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","target_id":"355ca7b4-6a3f-41b2-98dc-5e1ba31c2b90","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529 -\u003e 355ca7b4-6a3f-41b2-98dc-5e1ba31c2b90","gmt_create":"2025-09-16T15:40:28.0432255+08:00","gmt_modified":"2025-09-16T15:40:28.0432255+08:00"},{"id":164,"source_id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","target_id":"01293e18-2b98-4b55-877b-08c247251bee","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529 -\u003e 01293e18-2b98-4b55-877b-08c247251bee","gmt_create":"2025-09-16T15:40:28.0447805+08:00","gmt_modified":"2025-09-16T15:40:28.0447805+08:00"},{"id":165,"source_id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","target_id":"e563b95e-c2ac-4de3-8c5d-e513e2762c8e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529 -\u003e e563b95e-c2ac-4de3-8c5d-e513e2762c8e","gmt_create":"2025-09-16T15:40:28.0463451+08:00","gmt_modified":"2025-09-16T15:40:28.0463451+08:00"},{"id":166,"source_id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","target_id":"4df4f2cf-0227-45bf-aa62-8dc5fbd86f5e","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529 -\u003e 4df4f2cf-0227-45bf-aa62-8dc5fbd86f5e","gmt_create":"2025-09-16T15:40:28.0478968+08:00","gmt_modified":"2025-09-16T15:40:28.0478968+08:00"},{"id":167,"source_id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","target_id":"0d1088f4-bbf8-428c-b990-a77ddb88c506","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529 -\u003e 0d1088f4-bbf8-428c-b990-a77ddb88c506","gmt_create":"2025-09-16T15:40:28.0494776+08:00","gmt_modified":"2025-09-16T15:40:28.0494776+08:00"},{"id":168,"source_id":"8558fb2d-6335-48be-9ed9-4371380314e5","target_id":"fca12049-eac9-4f9a-b8dd-6360a21b622b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8558fb2d-6335-48be-9ed9-4371380314e5 -\u003e fca12049-eac9-4f9a-b8dd-6360a21b622b","gmt_create":"2025-09-16T15:40:28.0531384+08:00","gmt_modified":"2025-09-16T15:40:28.0531384+08:00"},{"id":169,"source_id":"8558fb2d-6335-48be-9ed9-4371380314e5","target_id":"0c183862-96d9-4144-be1a-de154a99551f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8558fb2d-6335-48be-9ed9-4371380314e5 -\u003e 0c183862-96d9-4144-be1a-de154a99551f","gmt_create":"2025-09-16T15:40:28.0546957+08:00","gmt_modified":"2025-09-16T15:40:28.0546957+08:00"},{"id":170,"source_id":"8558fb2d-6335-48be-9ed9-4371380314e5","target_id":"5f595969-6c74-49a7-8a02-27acfa87edcf","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8558fb2d-6335-48be-9ed9-4371380314e5 -\u003e 5f595969-6c74-49a7-8a02-27acfa87edcf","gmt_create":"2025-09-16T15:40:28.0563131+08:00","gmt_modified":"2025-09-16T15:40:28.0563131+08:00"},{"id":171,"source_id":"8558fb2d-6335-48be-9ed9-4371380314e5","target_id":"8ac437e9-80ff-421b-beca-c1e9d1fe21cd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8558fb2d-6335-48be-9ed9-4371380314e5 -\u003e 8ac437e9-80ff-421b-beca-c1e9d1fe21cd","gmt_create":"2025-09-16T15:40:28.0583813+08:00","gmt_modified":"2025-09-16T15:40:28.0583813+08:00"},{"id":172,"source_id":"8558fb2d-6335-48be-9ed9-4371380314e5","target_id":"37562bba-713f-45ee-8a11-eec6d97cf602","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8558fb2d-6335-48be-9ed9-4371380314e5 -\u003e 37562bba-713f-45ee-8a11-eec6d97cf602","gmt_create":"2025-09-16T15:40:28.0598875+08:00","gmt_modified":"2025-09-16T15:40:28.0598875+08:00"},{"id":173,"source_id":"8558fb2d-6335-48be-9ed9-4371380314e5","target_id":"4c4a1cbc-a62c-42c8-8109-23863f5580d0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8558fb2d-6335-48be-9ed9-4371380314e5 -\u003e 4c4a1cbc-a62c-42c8-8109-23863f5580d0","gmt_create":"2025-09-16T15:40:28.0609459+08:00","gmt_modified":"2025-09-16T15:40:28.0609459+08:00"},{"id":174,"source_id":"8558fb2d-6335-48be-9ed9-4371380314e5","target_id":"fd664f64-4b30-4601-92b2-da26c135562a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8558fb2d-6335-48be-9ed9-4371380314e5 -\u003e fd664f64-4b30-4601-92b2-da26c135562a","gmt_create":"2025-09-16T15:40:28.0625147+08:00","gmt_modified":"2025-09-16T15:40:28.0625147+08:00"},{"id":175,"source_id":"8558fb2d-6335-48be-9ed9-4371380314e5","target_id":"2bfdccbe-92cc-4cf4-ac4e-e6c40c9bd47c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 8558fb2d-6335-48be-9ed9-4371380314e5 -\u003e 2bfdccbe-92cc-4cf4-ac4e-e6c40c9bd47c","gmt_create":"2025-09-16T15:40:28.0640697+08:00","gmt_modified":"2025-09-16T15:40:28.0640697+08:00"},{"id":176,"source_id":"ebdf8bcd-4b4a-4755-91a3-f22233e8939f","target_id":"4af4f32a-879b-4db2-9fe8-80be0f3aca19","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ebdf8bcd-4b4a-4755-91a3-f22233e8939f -\u003e 4af4f32a-879b-4db2-9fe8-80be0f3aca19","gmt_create":"2025-09-16T15:40:28.065644+08:00","gmt_modified":"2025-09-16T15:40:28.065644+08:00"},{"id":177,"source_id":"ebdf8bcd-4b4a-4755-91a3-f22233e8939f","target_id":"7f56f799-34ff-4924-95e6-b652ad5ef384","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: ebdf8bcd-4b4a-4755-91a3-f22233e8939f -\u003e 7f56f799-34ff-4924-95e6-b652ad5ef384","gmt_create":"2025-09-16T15:40:28.0672176+08:00","gmt_modified":"2025-09-16T15:40:28.0672176+08:00"},{"id":178,"source_id":"147e8406-7ea4-44f9-865e-3157b1a68dde","target_id":"b485a9a7-81f0-4466-a6ff-ef88bcc8f59c","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 147e8406-7ea4-44f9-865e-3157b1a68dde -\u003e b485a9a7-81f0-4466-a6ff-ef88bcc8f59c","gmt_create":"2025-09-16T15:40:28.0687742+08:00","gmt_modified":"2025-09-16T15:40:28.0687742+08:00"},{"id":179,"source_id":"147e8406-7ea4-44f9-865e-3157b1a68dde","target_id":"813c2494-e830-49eb-b484-f405e2f81218","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 147e8406-7ea4-44f9-865e-3157b1a68dde -\u003e 813c2494-e830-49eb-b484-f405e2f81218","gmt_create":"2025-09-16T15:40:28.0703281+08:00","gmt_modified":"2025-09-16T15:40:28.0703281+08:00"},{"id":180,"source_id":"147e8406-7ea4-44f9-865e-3157b1a68dde","target_id":"bf43d59a-19a5-472d-ba52-f0fe41558ef5","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 147e8406-7ea4-44f9-865e-3157b1a68dde -\u003e bf43d59a-19a5-472d-ba52-f0fe41558ef5","gmt_create":"2025-09-16T15:40:28.0719661+08:00","gmt_modified":"2025-09-16T15:40:28.0719661+08:00"},{"id":181,"source_id":"147e8406-7ea4-44f9-865e-3157b1a68dde","target_id":"79b2d337-c9e9-4150-a52a-a5c0715026e1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 147e8406-7ea4-44f9-865e-3157b1a68dde -\u003e 79b2d337-c9e9-4150-a52a-a5c0715026e1","gmt_create":"2025-09-16T15:40:28.0735258+08:00","gmt_modified":"2025-09-16T15:40:28.0735258+08:00"},{"id":182,"source_id":"a8345ac6-c44b-4036-ac3a-c23be4960dd8","target_id":"5cf9a50a-05e5-46b5-b08d-72ed6724c2e8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a8345ac6-c44b-4036-ac3a-c23be4960dd8 -\u003e 5cf9a50a-05e5-46b5-b08d-72ed6724c2e8","gmt_create":"2025-09-16T15:40:28.0756156+08:00","gmt_modified":"2025-09-16T15:40:28.0756156+08:00"},{"id":183,"source_id":"a8345ac6-c44b-4036-ac3a-c23be4960dd8","target_id":"c0d540e1-a582-4082-8d0b-62f4c4348e92","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a8345ac6-c44b-4036-ac3a-c23be4960dd8 -\u003e c0d540e1-a582-4082-8d0b-62f4c4348e92","gmt_create":"2025-09-16T15:40:28.0771819+08:00","gmt_modified":"2025-09-16T15:40:28.0771819+08:00"},{"id":184,"source_id":"a8345ac6-c44b-4036-ac3a-c23be4960dd8","target_id":"eaeefa3a-ada9-4d92-9eaf-3f3b882aa214","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a8345ac6-c44b-4036-ac3a-c23be4960dd8 -\u003e eaeefa3a-ada9-4d92-9eaf-3f3b882aa214","gmt_create":"2025-09-16T15:40:28.0787442+08:00","gmt_modified":"2025-09-16T15:40:28.0787442+08:00"},{"id":185,"source_id":"a8345ac6-c44b-4036-ac3a-c23be4960dd8","target_id":"9e1ee075-114d-4b3b-9938-bcee0c109611","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a8345ac6-c44b-4036-ac3a-c23be4960dd8 -\u003e 9e1ee075-114d-4b3b-9938-bcee0c109611","gmt_create":"2025-09-16T15:40:28.0802941+08:00","gmt_modified":"2025-09-16T15:40:28.0802941+08:00"},{"id":186,"source_id":"6e579750-e653-4359-907b-8ec9c48e1508","target_id":"006b4e0d-4282-4ad7-ac3f-61c1b4244c20","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6e579750-e653-4359-907b-8ec9c48e1508 -\u003e 006b4e0d-4282-4ad7-ac3f-61c1b4244c20","gmt_create":"2025-09-16T15:40:28.0823896+08:00","gmt_modified":"2025-09-16T15:40:28.0823896+08:00"},{"id":187,"source_id":"6e579750-e653-4359-907b-8ec9c48e1508","target_id":"9b54db5e-eb77-4629-a0ba-8fb54452d1e9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6e579750-e653-4359-907b-8ec9c48e1508 -\u003e 9b54db5e-eb77-4629-a0ba-8fb54452d1e9","gmt_create":"2025-09-16T15:40:28.0839764+08:00","gmt_modified":"2025-09-16T15:40:28.0839764+08:00"},{"id":188,"source_id":"6e579750-e653-4359-907b-8ec9c48e1508","target_id":"03b68741-a9a7-4061-8e33-98aa84432cd3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6e579750-e653-4359-907b-8ec9c48e1508 -\u003e 03b68741-a9a7-4061-8e33-98aa84432cd3","gmt_create":"2025-09-16T15:40:28.0850093+08:00","gmt_modified":"2025-09-16T15:40:28.0850093+08:00"},{"id":189,"source_id":"6e579750-e653-4359-907b-8ec9c48e1508","target_id":"411eefc4-66bd-49d6-b27b-4b97139149d3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 6e579750-e653-4359-907b-8ec9c48e1508 -\u003e 411eefc4-66bd-49d6-b27b-4b97139149d3","gmt_create":"2025-09-16T15:40:28.0866232+08:00","gmt_modified":"2025-09-16T15:40:28.0866232+08:00"},{"id":190,"source_id":"a59d87c1-005e-40c1-8b2e-ca31d39ac44a","target_id":"adae2e3d-1496-4388-aaba-b6ac49fe36c7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a59d87c1-005e-40c1-8b2e-ca31d39ac44a -\u003e adae2e3d-1496-4388-aaba-b6ac49fe36c7","gmt_create":"2025-09-16T15:40:28.0881836+08:00","gmt_modified":"2025-09-16T15:40:28.0881836+08:00"},{"id":191,"source_id":"a59d87c1-005e-40c1-8b2e-ca31d39ac44a","target_id":"602de67d-dfc0-4059-b3ed-8d98df92af6a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a59d87c1-005e-40c1-8b2e-ca31d39ac44a -\u003e 602de67d-dfc0-4059-b3ed-8d98df92af6a","gmt_create":"2025-09-16T15:40:28.0896909+08:00","gmt_modified":"2025-09-16T15:40:28.0896909+08:00"},{"id":192,"source_id":"a59d87c1-005e-40c1-8b2e-ca31d39ac44a","target_id":"e661a2cf-5180-43b3-b3df-e0afaeed8ab8","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a59d87c1-005e-40c1-8b2e-ca31d39ac44a -\u003e e661a2cf-5180-43b3-b3df-e0afaeed8ab8","gmt_create":"2025-09-16T15:40:28.0906937+08:00","gmt_modified":"2025-09-16T15:40:28.0906937+08:00"},{"id":193,"source_id":"a59d87c1-005e-40c1-8b2e-ca31d39ac44a","target_id":"9d62209b-c1a3-40bb-89dd-51c7fe02a0ed","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: a59d87c1-005e-40c1-8b2e-ca31d39ac44a -\u003e 9d62209b-c1a3-40bb-89dd-51c7fe02a0ed","gmt_create":"2025-09-16T15:40:28.0926967+08:00","gmt_modified":"2025-09-16T15:40:28.0926967+08:00"},{"id":194,"source_id":"439abb40-ebc7-459d-92b6-9207f594bb20","target_id":"df5f44e6-37cf-4a64-921d-c9cdd5477f15","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 439abb40-ebc7-459d-92b6-9207f594bb20 -\u003e df5f44e6-37cf-4a64-921d-c9cdd5477f15","gmt_create":"2025-09-16T15:40:28.0947485+08:00","gmt_modified":"2025-09-16T15:40:28.0947485+08:00"},{"id":195,"source_id":"439abb40-ebc7-459d-92b6-9207f594bb20","target_id":"9e0b23ac-0fb3-44da-8b73-4a7e958b76e3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 439abb40-ebc7-459d-92b6-9207f594bb20 -\u003e 9e0b23ac-0fb3-44da-8b73-4a7e958b76e3","gmt_create":"2025-09-16T15:40:28.0957515+08:00","gmt_modified":"2025-09-16T15:40:28.0957515+08:00"},{"id":196,"source_id":"439abb40-ebc7-459d-92b6-9207f594bb20","target_id":"3e4af601-d154-4d3a-a6b4-a05aaa2b97b4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 439abb40-ebc7-459d-92b6-9207f594bb20 -\u003e 3e4af601-d154-4d3a-a6b4-a05aaa2b97b4","gmt_create":"2025-09-16T15:40:28.0977493+08:00","gmt_modified":"2025-09-16T15:40:28.0977493+08:00"}],"wiki_catalogs":[{"id":"028064f0-4617-43b8-98fa-7f5a4c031eb8","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Project Overview","description":"project-overview","prompt":"Create comprehensive content for this section focused on the overall project. Explain the purpose of the How_to_implment_PL_in_Antlr4 repository as an educational compiler framework built with ANTLR4 and Java. Detail its progressive learning structure through 21 episodes (ep1-ep21), each representing a stage in compiler development. Describe the evolution from basic lexical analysis to advanced code generation and optimization. Highlight the educational goals, target audience (students and developers learning compiler design), and key architectural principles. Include an overview of the Cymbol language being implemented, the compilation pipeline stages, and how the project demonstrates best practices in compiler construction. Use terminology consistent with the codebase such as AST, IR, CFG, and symbol table. Provide diagrams illustrating the high-level architecture and data flow across compilation phases.","parent_id":"","order":0,"progress_status":"completed","dependent_files":"README.md,README_EN.md,pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2843421+08:00","gmt_modified":"2025-09-16T14:02:53.2727276+08:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02dqzTho5arqNtbUziutSzUZOqm7yOpCxfwhmmzZqG/lBD3pMVXunyKmPUgiOnGRUOAevPJ65tefwZHK7E0497D/j2wULuq8xZtZzJG/oE4VdU+DKs6R659A+5lizdO7oMlagmQpCESaqpuv67m5YIFSKx9SJ6dEsQthZmT1YmdyFbJkTT7ZjWZ5Z4C1kgGA4yqAf2mmdyXOcEN5eAUnDPpgYpMRNwoKnP2RNbiV0yP2CMjJDlXJfQcOVg1CkwLUL6pNvrYOb1hMbYVtDauni97NIuejw5LczvcxvWdvfSwWf/3Zz40ru5am23rJN3c5AvYqs1xbQtxX54WSJpn/mvKV4yWicrwak+SAD3uQnU3biD8iuMR+rnDtx4Tp8oevfOuFeKgjJ4auIWHAQuR/hDxAcQ7I6Rlpom6ok/zI4cOddgUW/rvblGOlyEdNLdNXLrBPc7mEtiAoQ4tYJlPfdi8x2HA1kqfeDyobDnJwnHF5dpnP8T71c+lq+WiCoSRbo/W2nWcOimKqdP1EveNu6MSm+7mZm8ZYLm5OJfzYixBKE41euX3NL2mvpKio8WEqHENLX5zwn0R/eKE7UcmFQeSiMT77Rc1bxV+Ku5MbtNRII7vpn3uiCCFAiYbqztQlEDBkUluK3MPzMKaxDmnVS62+GfwhqVi6/VCMBvKF+6lomMG9demeDl9fkr+/hNUGvhNICGfmnrdvp5QCkXi8wlf9LuGXq7jlcmW3ImMPprrYrwE6pX1Xe+aFskw/U9fM6dU+4k4Fy/ObTpNA0QzcmAiHnpt6NlZboTXt7CeVIJcoKPW/Rwsyf7SIloyMPbx22L5D71/rGdpb0hxrgmNsB7FOUo1GCKyxv8KzgIeVBGWwS2lxhY9wFDL4FPQdIT4X3buYgczUbR5d7sc0HwvTT7nZKRKnohgklXM36vo8Oc0IS+XORXmS6VSq1K6lhbU4K7TkQTczDaLckq2P/w6JRV1ulvuU2py+b6rxNZC+33u0+U4nwElj+lpXycYfSZzvXnNqVwzJQEjugD/2Mn9aNmRZEXw8Sw3x6khWNN8nIlXB8zC+X4mnprZgL7TFKRyuJ2aW2t+oZPRHEq/5lyOhkEzqxWZ1Fylk7W9TXQfDqNjddqYM8qu9Nmm8tpt83ikLliErZwJDCqVRNIWHY5hYParA7PsSoAXuxEZiA2q6D3H8dng8hnhChK5UOhG1FqTald/ABtSqyAqIKTtqYNJ+JpM1J6sm14q20z2N16pYe9dwoL1h0BMIJuO0i20AWR4ht+kD5333a7zr2/tybLVxUouuiTgFdioJRbKe9aLGEv0p9CfWyaE1ySDOTulqah4D0tZ7DTKIvtseKiB+AJl0gqYq79xpNcgYPBqxf43nOIpuGi9PCXFPY1RX+hfziiVELlLPCgiLe0sGvEuhVcNDBH/im3mXcVcTj/XPaoat0NlmKmyUARTt5xIlni/Hm5XxZAyX5v8/zpz53IHmC0V0J0Z27WctFlGriZVnh+liNzsYbJOHsIkN+n/MwEF6AWSfKi3+aaSLiTRldN3jv4RDsds1oUSsbuIqxnyREkiVTiTr+RZvw5RFZoXKcssHXA1DIQ2Aqoz1xDIz0ZOjj2vX9TyXxdn0PDA1me6pABG3959C3g==","layer_level":0},{"id":"f44e27c1-6dd9-4ae0-b131-7a0381989c6d","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Educational Structure and Progression","description":"educational-structure","prompt":"Create comprehensive content for this section focused on the educational progression across episodes (ep1-ep21). Explain how each episode builds upon the previous one, starting from basic lexer/parser generation in ep1-ep2, moving through AST construction in ep8-ep11, symbol table implementation in ep14-ep16, and culminating in full code generation and optimization in ep18-ep21. Detail the learning objectives of each phase, such as understanding ANTLR4's listener/visitor patterns, implementing recursive descent evaluation, building abstract syntax trees, managing variable scoping, and generating three-address code. Use concrete examples from Calc.java, CSVReader.java, and VecMathParser.java to illustrate incremental complexity. Include diagrams showing the evolution of the compilation pipeline across episodes. Address common learning challenges and provide guidance on how to approach each episode systematically.","parent_id":"028064f0-4617-43b8-98fa-7f5a4c031eb8","order":0,"progress_status":"completed","dependent_files":"ep1/pom.xml,ep2/src/main/java/org/teachfx/antlr4/ArrayInitParser.java,ep4/src/main/java/org/teachfx/antlr4/Calc.java,ep6/src/main/java/org/teachfx/antlr4/CSVReader.java,ep8/src/main/java/org/teachfx/antlr4/VecMathParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:06.4344573+08:00","gmt_modified":"2025-09-16T14:14:17.025262+08:00","raw_data":"WikiEncrypted:q7abRpAdX8fyYSeTg2z6zqDWhuuEjJibgeBrcF4JM0gOEKi5ggWyGhSzM8Lg+CYKe5XgmmtAwVGG/IXmzReCzaF6qpAPZDEXm5NxLJgwtpWKBA7FglfIIAJt1NWOAok0VdpcQl4IWmGSYg79ACbQ5Yps090gu5Nwq9MPNxbuJuovS6B13MdeiJMlbajbSg8mZDL/8xKscqECarhksJ0x8MbcA1hUN9TFmfeqGlBgcmgCtRMCoCVixFxiZBWGSF5KIiwXitVC3SUAK8NaVxuoxwIn5bgQzj8QyP5/0lSX3YVQ/HQwOjDiqAu0WQkrcs6ty+/iWz87dvsKOOpH+o1uskCQKZi/ofTmfklTI41z7G87BpVD0huHCe2tcPD3uWPgUVyKqLNFMTx4XoxaRIIgbeMpkD5ITftHvrM+cHNFIbLeBsG5MEYoFiJtItKtfGJnKPUFZkFEA+MSv7k3lhNLJ0tK8o5jbX3JBprsJql32HO1S+Qnw/z7VqGOQP0G/Fo6ZPP4iSZFr5dtR+6uk3q1sY4G3Mrph06EKhodcU2crIUlRtF9DWUWo4nvpCn7bx/EJVAK02kPCbLmF6Tm03pyA2NznNCVW+z5D+G5ANIpPgyp7lb2oJqgfo96XtKfudrqN3AOEXVkmVY/aUmOHLJowKksSIoaf4DDgbwCg4qixNuItq/aU4tTxBJ73DKL7RprrFtBy1XPqD5b897u8OPSODl5rm0HjwRDy6LmW/oa1QNCcbiHkxzOw0EBQ7JYmIvI0UGPaToGXjzS8lAb/tAb81ZBdQIBfC94cdvbR+0vZn77on9oWkbqMzaqDATokC1qLWlD9Cq01ksKs9vbCj5MkF9FPbtOciq60yLAKFIAVm6pmPZkZPHsTZP/WyeWOT2BmikbWGvev7xRDDLXxMoOBv5OtmAc7yUfHNRdG35Y/IWcHMtjbvri/FOnxXbJVrcb9PAJLqK2lrCwMWno2WrWX/sc8wLfhW5l2x+sVdcZV7XfSF5b6Nf0rkAi3k5PrFeC8JKsBMdsdAaAMcCzsDSq5goZyPXAW1m4OCFdFVNItvcZb6IuKrMTjKIWlurKPLx+D6hD/4Tgmc5TfGB+WZ3SrdOBXki3rRbWBrxIuL91UnjtnNkMIB9tL7Zamw2A/N6IIttF09PXGOA3nRPBuTVK668ydrnDCeysaRjYjUQnbWCdMN5h6Vuov9nCKth4u1AQJH7i1xkHT4TEddXshxOhaYSwbfTufucj4lrKQp2QF9fXuD6LivbDtFPxOy2Xwn+5U3ZJIZ9imCdyffpPxE4tRqpu3Y1RZkQZOx6QrhHG70zrMdsAqNe0SGqcdY1ByAMLM7ypZK1am99i3d5/2dTJuRBYIxtb22576B3uJaB4wmdWWv4x99Xp1Exa4kS+H5tOD+dqlWIRsy7izUyyIlEjddVi0weGDeHS2zXL2xydjsBnvfM71Ou9UfgRsKnd/A/u3/AOy+9aNBK6+dygprn1mOJ62pHcRITdTlfLH1VqSiscRyb8GdW63z0gf39A4QGVKM++k4dfBpnZfUBh1rVI8FFS6bw3aOxWZ9VOOaS/zYviu5L6HSM2Zt7lpPAf8xSBKzh49KuTUPLARkmS6kysXfZVQrKrRh6Mt+XzGpB/DVMR/O//y43GDvYMk1/nrT46TL8gZ2PVjVTcxHkCd9P/6TqHHHBhFwei2hrFvuD6Q2gkSsWZTGwTjbq3hh3aQk35HJX3quHdD67nAygct57I919zWpLMicHAyXXQ5PHHEzUvHMtCjF8psEa94kJXnqHHj3OurWux2DRidM7kRm7vd8xcdKOOnizOaOOglXOdZEn0kSGexACXCL+TwqIjFdC3bKmR9hOKVu+3lSJM/u1+jMl7AGjgLnTkya+MXOE2TtEKaQriITjTxfhXqgeJXchubzXSohXSQYv6I9i6ntuguPYnA5xUU/NguKVxV1e7l6trn6EH1Qlw8w9kQuquRvHAoHzV69aejzgBsFLWspCxtg==","layer_level":1},{"id":"60f83f8a-c470-466a-b1c6-cadf689da583","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Syntax Overview","description":"cymbol-syntax-overview","prompt":"Create comprehensive content for this section focused on the syntactic structure of the Cymbol language. Document the formal grammar rules as defined in the ANTLR4 lexer and parser specifications, including lexical structure (keywords, identifiers, literals, operators) and syntactic constructs (program structure, declarations, statements, expressions). Explain the role of the CompileUnit as the root AST node representing a complete program. Provide EBNF-style grammar excerpts with explanations for key production rules. Include examples of valid Cymbol programs at different complexity levels. Describe how the grammar evolves from earlier episodes to support advanced features like structs and arrays. Highlight any non-standard syntactic choices compared to C-like languages and their rationale.","parent_id":"e2f12f88-f04c-46db-9f1a-c69036de314a","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/CompileUnit.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:50.5856449+08:00","gmt_modified":"2025-09-16T14:15:17.836391+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo0zTUDpQnXoR5CAulpPJV+WTgVh7vi0ZR+DVOAvq8NbZ/iRUdBJMe22uhAw3JmzaUhv+ZZgyEg8oeE1HYccahQCI6rbz7IPkr/I7dhX2To5FaW5o87R2irhMEY0Jn+XFoYYCFLaQW46FqY1z6kDqjijsY1KTDBXduFLXQQO98fZ0STn1YqRcO03rEV2gbBh/ZEByKTDnvBJxVJGNYW49ZAF9h7OyDZEQT/Z5R75NqEPGlK/8toXqcud1XtRYX238cCAadRhnRowznl29wev9S0YjyLqZpKvJwlUn+XMcby6aUulAqNG9EElxc646gJcem+JmjjJtbm58sxnSpJM9sRGnsFbaCRH25H5jksr483pvD+3eHx6BiQWe2VSm/G2JXYaohoSMK9Xcis/r5dDCj1LDedjxA6I/ODPxjumBBFkDpVaNivTAip/dQdwAPJJuDPYcCscwsTc16omLjyceX9wcZpd8N2mj5C5zZYxlXRyKyZnQ/PhRBmQmOJJY1CH6qIB8k67vxikSe5VpGc+PtxEPRgRVt9oNXfzl/vqvL+vM0eOlTDjHNspjFzh4S5mDn2dbjgTjGh4+kNmGgm6v4EWhSJlR5LmRZsLf4YVegKdOxd8NUoYft67oaeW+NXUPyZLCZUVckLg/FAlhkfKQ4w6Tn3vLxaCmO7tYhQMeao7JqtNNl3X5fwbeHcjRvwDyDzf9N7r3Yzyp1LkD8VnoUqRNQQWOYbQJoyjS5Nylm+o5InEu4bZOTP3EcV86LGpV3RkMeWA3mKw9uJy7cV7buNo2dKIoT8eTQpcnMa7XkBUrrRigkU1eB7gq2wREHWM/JnD5/97gsNc9u9H394p6UPovV8cyKBObLLCCU5qGVsISkBOrcQUHY42cMCSf1AS0XavBxuiJYlL9DyAYoUYQrGSPy2o8WK4an8FGK+LTkCK3BNmrXnm1HanSJNzvbtPLkaMhNuNCNvawzx7g2Y9yPFa1qwXPmh21HVCTnPTlzQOqLHvTyby5SEY9hMyLbaKDRkUHLilBVymzJZ70o4xSK8JeQ+SvqOSw0ugNsPbFLTo/wNrS8ikjjuaGlIJzyxZEptyr0ctU4dMKvAebYT+70LLYla87h24KnaRQOgW1IJo/qhZU2SD3PfrXvmX9e2kn+uROMBSbcWqRQQKuyLXXcdE4FSxHzBeeI4Fkn+hNBYI4wtmi4Yj4eTQkL2P43gJoTqaTiPOVq56P8orH0uzPFyRllz7psDL8p9UzPrZDLi7xhKZpXuD4R0K2Eyao8Me1gRnvYeItxbg0MPNmSi93IAw7zTXdxNszzB/4kGlfkxLgaPW/eZqriOn9fq/QdwmZj/mu/EfjYfXtQH1Q8/zt5Z8jJkFpGUtjB4nnnExe26p0g3UaGNY+QgsoDzJCyysdngngkpg8FzGYCmoVECOSxyOpwFvme0g3ZZzw0jf1VRcTRLxY+6kU/cS0NNxSFvo8Qt4p50JrggmtuHBJDvj1xw25hhEJ1WYbwEuQsPUjDt/1xCcUYrZmF4hyJlJy1tc1UAg==","layer_level":1},{"id":"cd847beb-9c64-4a3e-ab37-5a8bd8002795","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Lexical Analysis","description":"lexical-analysis","prompt":"Create architectural documentation for the lexical analysis component of the compiler. Describe how the CymbolLexer.java processes source code character streams into meaningful tokens using ANTLR4's lexer infrastructure. Explain the role of token types, lexer rules, and error handling during scanning. Detail the integration between the lexer and the parser, including how tokens are passed through the TokenStream. Document the implementation of source location tracking via the Location class to support error reporting with file, line, and column information. Include examples of lexer rule definitions from the grammar and explain how they map to token types used in subsequent phases. Address performance considerations in lexical analysis and how whitespace, comments, and literals are handled.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/Location.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.1678491+08:00","gmt_modified":"2025-09-16T14:15:22.7679931+08:00","raw_data":"WikiEncrypted:Wi43YXAVUi3EFGFBo7WSiCsSxPLvKRSEsEUt8hNWdFdBd3RDuPQgULQwnRGaUk7ZyJJ2ZyYgz3dc7chFG1Fa9N+LxlRoCxSigNRTkxnRoIrxSRSUydPBHZ2rA6akLPhN3k4VSlKF+YXmo79fXrTU6+7ddRRRtuiTUjZqlxzOLJ63edg/o/wgvIAKKIO2WjaY2Dp8Gy4qlSDrAYMMEZg89OLiVwej2VbT9EGiiOwvD2xTKpxV7ZDC1w68alwgT1Yzab0qelhjON63mF/DeFpD86QaqTTuFgKmIGYiV/H3KtBKAkkkhpzpT1g1cNWbCdJHeTczMmKSNlcMN3t4YHKv9sKhCGRXXWCp9s2RnLxldGzugQJh10JaJ9q0KXDkLqF/GRmH05UmzRG+VtTnw9yJkrW0GNLdboCGSC+mJxNLJnlhmTjsbJXXk+QQACmFwLdSH332g0G3+odqJWWOH+LhwpgHNWFKfiWuz+uFe5zZ0zRGxTvbPmPcq9MzPMlyXIIFD97MU6k6FUPEx8xyqTZpdh0mytkrMKiBwKE3CzpigLDr9TkMIadzFv0aCDL/5vjeK70/wS7nP7IR6IvTjbLsKjlZusN3apzSq5sT0o7V4nbzLZCZDGEtGBvV5eRHUwtRh+vk+ODL/O4aIevnUMgdAFwMiLjPRIyPOfTV1jrCrXQCM7ithVwOU0F8yIleEC50pPoh/lGeNHDuc0sd5Ma1AyCiPqZ3n+iz9ZvfJIs/mwXfwwmKOOZs0L6IXggyOjF6Fcj1y9Y0v63w+ZG2VAuw5uqRiOm7Kdo7KMWIqtJV6aqVFx/iZsehqA916FmbjlAUczZKmzA0C/n58/hKS8T1rjzRN2moWfIVIDFonRgALIX5wAuDB5hv804+Cotvw4UdlYQppIlowd+pnwiIcM0nI8OqYLjt1dawhDZ8DDu4JbSsyCiQil/OJfNJnllVRW2Q65Ux2KfNP+zZdn9CBF3RIfKX0mUqV80Zez9GpYpm+9H3gWyf3+rMdrH7uha5XGhwQolg1it+w4gSI0Uww5Q1/7I0+t+wcKSs+yWsZaT5iAQWf6v1FJKHBGLccdsRB9DD2rBmdmryqtzb+6tpF9UagWzel/GewLBbIh0b8/elPfX/JFhECzSYXxUZ1J3H8D9p/E9ebyzZ+QIvW8HamJMyGTmyPtxuXGoz2gXAyyQlYAHqF0+VisrlxSYUhFlBvuF5mAp+IP2Ib5JQz9nNPjSYi1TtmTgUjvaa8NlyvBG6rwhn/Ce++I2KRyG4I/lxvOMQE7VQX+5/Z0hL1po10Nd6xs4hgaMoJmlD3cHypDSDjaV8oBhQu4D0KtMmhxNc1sfPpqxJRygLKjoJ2lzg/BvQb4DVmI1v05f1xnXCVPTnu8gcGFp4bNwsLkcjcMQC5kkEsJTXIWzZ20J6GcVe0tx8cBq+cTGKHFy6qcPTf4qFCGzbXsRiAefA5PspuX9jPDIB","layer_level":1},{"id":"32f48f4b-a49f-4d52-a28e-81c006fe2406","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"AST Node Hierarchy","description":"ast-node-hierarchy","prompt":"Develop detailed content for the AST node hierarchy. Explain how ASTNode.java serves as the abstract base class for all AST nodes, defining common properties like source location and tree traversal methods. Detail the four primary sub-hierarchies: expressions (ExprNode), statements (StmtNode), declarations (DeclNode), and types (TypeNode). Describe the role of each base node type in representing different syntactic categories. Provide examples of inheritance relationships and demonstrate how specific node types extend these bases. Illustrate with code snippets from the implementation showing method overrides and property usage. Explain how this hierarchy supports type-safe tree manipulation and enables pattern matching during semantic analysis.","parent_id":"991e5381-362e-445e-8f05-5e5c818d750f","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/StmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/DeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/type/TypeNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:18.0682435+08:00","gmt_modified":"2025-09-16T14:16:18.2992089+08:00","raw_data":"WikiEncrypted:9HSH6+Sj3YRj3ks5Bpq6ioD1llLFtg+6JdN38VHP506BhR1mX8Y6Q/gbbhZq1NiQB6Y98GLxCC+NmOiMfxjWxF9bkTKyUYdZlYEC9az7XyLWBuWPLoe0XeyQ3EWK8PZrREG98B3tjw0647XlF6cY2bpkKGCqW7WtMB6s3S0PZMUVbmYSxaz+GAwfRnvSyjCYA/s7B2BsbHwcdq32Q3zZu4oGu63AOINYIC687GUzdhhaJQojm05Kcn/su0WYYycf5kYwT9vjHDCu5ajPLKuB7Qb9WKg5vF86w8lbGF6A2l2T67m/w4bAyfdxqAiV6+hI1C5BxJUnTlbikEM990OwIp9rhZZmd9tisNcFH4hkXaPBbYyXrQmMXeINzD9b1wL1Jb4UPoS50K7xW0MIurjCj/U7BMYq+9y06y5k3WJkDu9KPexHZ7mHgCguDBPRQf9gY8wSCcUyCDp0yIPAolx8hOfV2Hb79I2Ctpa7YcPYqKre+526QNJSyQA2ZyEYjn71KZupK0xYJtgm2xadVWlIL5jLaMsuJxyAdJZwOHBebl16SFwMOHUhnI1w482HmHaL/D5sboIZ4yYzZB2P346A3jbcDlWVu/jAFWiWqt/FLjLP9FEKcMApfAYa/HVeO8EICKi8LjqFQwnqTI0T9Efh7Ux3NChuSzi4ALJ9FG8SAogKYLaHeP4M5gW4DHlycZNY4ikP2h2wnskq6z2cNuF9Q5Nb1bI37KDXNejQgGFxpe+FD4igvK46rJnONgy20j5GD9yGSTvRAIU+zWevJ8/X1E4UjBzyolugtw8ZbhUTI6Sby058RPKpAmbtQDUQYUw/hhytLMDgL3zEWtKeRkb3Xaf4vnWsSY3cz87jdO+ZHwlLmbIUOUjPxSM2IadI2+LQ26BvBXi3fsTvPmctLSWWk1nTS78xDA0CyskU6bvg6ZxpnBK+bn2KefeWm5HG/XcqJ3fwZ00CsYKNaH9Dm8rPpHX1RgBV4WZplLtN67h6GrlYb7oCXQN7Ce1y8D2/Y/cwa0K/1ba5pIKBrVVqn+gJHI8N6Mew2Qkh1I4QidvRds98clTai1dUQNWgT4yJ8xohLZQg3/DuP1uoE3dJVrudAQzRxuafKfE3Zf/L58IVxRW4AdivWadaWEyDiV4pf3Pq7tm+XKZNCzTOQc93RroALVaGkPu/41k3HMWQ0VHh+VAHsmXoUaRFSMwBDyYH9TFvgvJcmNGqBmo34cbCFRwDKuU0ZUz83oZFmAjEmE4EsfsE2XfE30zkDjfqRoZ3sIrDrdnOp1VR7fQyn/fguaCoIcBAUEanKj8G/DF5ELF3bLPY+mpSuhEWlcGox5n5XWbstOCdECpC4mz6eAgE+/CtU0L2hypxbKYFbJkflJ6LCZcGBG+0dVLRZo5gwbZyguLpB/Q72AztTXubPuL95dbLbROuUQYosO5982zWqGhxxx/L9unzdFTvFqCABGkW3cxN60lWkfI+14r6HAuxSatWJ9x9WrZ/MGl7Z1GYlGxxUhxQH4NyFKCKluMQLJxtodr5nHZJw/wrBbIvpjz9bDAiXUzlFSdby1OyUrejeMPZMvalhmljr4DuRjwy5LvqxQ8wYilgOTFsVVVgiZomUcU00jDHf90XJ104Y2mZkQbRWeItXKrpf14Ayfd//4pwZCde8/MNhSEm8JE7Ct66Ad4532+82m50d20bdGsQKJ3G8hPhNOb3gDSfC4/mz+BSIVs7IExVHLhN2wVgoCRQ1vF4J0wO26NZdSHg06Y25NbbBeUyWlxp5gVzRDpCZ6bXIBYP+xwYsYmdXtaSYTfInCGyysnI4OzU3iULESdixCSx3CgSiJAbGtg2u6Z3HWglSpoTVd/UPB9hUxUer8YCMUqSZA==","layer_level":1},{"id":"e5a64b7f-3741-471f-9704-71e221208f20","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Scope Hierarchy and Management","description":"scope-hierarchy","prompt":"Develop detailed content for the scope hierarchy system. Explain the role of the Scope.java interface and BaseScope.java abstract class in defining common scope behavior. Document the implementation and use cases of GlobalScope for program-wide symbols and LocalScope for function and block-level symbols. Describe how scopes are nested to support lexical scoping, including parent-child relationships and symbol resolution across scope levels. Provide examples of scope creation during AST traversal and illustrate how scope enters and exits during compilation. Include diagrams showing scope nesting in functions, conditionals, and loops. Address how shadowing is handled and how name resolution traverses the scope chain.","parent_id":"07048b64-60ab-4f22-a6bc-52300115700d","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/Scope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/BaseScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/GlobalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/LocalScope.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:43.5896869+08:00","gmt_modified":"2025-09-16T14:16:43.1257576+08:00","raw_data":"WikiEncrypted:b3pOzyHke+SxsoLN8IqcY4dJEG6Q62sz26jAxZJtcLNINdCaS+VWMbu9e5/3iKBi6Q8//q23/dn4nlT3QY/B2km/aCgVwO7dwkAHiygyKUEkx7hgR+SCbMxvwSjzFcNQ+WE87wY5fNfG6QUzNVWIG/EiPuqhRboR7bJsBRURU6y5Ji/svgFivAN88f6135MiA8QUuer502ftWlB6xRKdeZmI4VbQML/0EkIoyXRN1MU9y74pk5R0Fm8lCQ/mAfh9H/SBCVC8sj9WT1E9ENn78/AIE1y5Z+Xnow5+P6bFml8dEmhEA8nfIWofablML2mzHKsCuiedHeWcXS3P0IHqlMrrqfo1WLN/c9NyTCh6mDPaGOP6HolmTBcuOUPWGOcWiazoNCNiyrzlQTnZiF8zFNgIKckq7xqWyNiGWwZjm7iOBu+lvjHgVZ/Dv6dM5K1MT/sUHqfxNNRDjql5YbBM3wmPU2tOuWOWephxWT1NvsG2/2oNU2DYcZxxTAkraF1NqxMg24wx264N+ipMZcGRXTX+EVJ3r8fxteZYoTgfrbb5EhLdqx9+BxPO43zitBle5gJsUdgXTJWQIPn9soo6N2RCIMrg6SP90I1N9RwA+As1iD2yi0wuAl7KiuGMuRCM3zf88CFqA3QWcJwfSiVxWhByxhyv5PV+GU0wXpkqDmK3UCI+p1nQLMezDry+sdlK9IukYQfW1EfxjTIOo1CrchbqP/m4bcLRW9PkEFd7v6MAPAnBaHldff7GI1nrnG1PZNYAEhKtevTBEQmVDfwvsmt7IQ7YM/z7HNHHFy3A+/IRNFrPE7DmKYCR/ClJ18+MqAVr8Xug9EPh7HCqpMzacQ0rji0Ft5PHrYv988jn4qhnW2vJ6+EByDDTzJN4+dymS1M7WXaW6qUbeWUs/n6GRpoAjMKNJNh4uRnFaHZGXekQ8FsWEpQukP/KpRlEyN+KislQWyajgTTIyOQfqjWY0kRUwCoCL2Qf7gTQqYFMgWqdVGTfcZ2DeJ5/Rab6znPo0UBpKB7U7tt1KQJB/jjAKY8NdP8oHa3CG8Alq43O3M8TjVdSxHyVS9prueZTL2cW22m5EtAgGCkSEnZq1dlbP5W4OjqmouLDvectkZ2LDXEoYxTjPDemttFy/2ETqfyInz1tmWMaLtbJ6jhvFuiobTILLEundksDCFAE5rPS3Vjk7cnmw2/UyS4fW43/20QPTK/Vcr+uUkaoG+OjgDJTY/AZJe91oDMQ/s3tYp3QeWBUuhlwZkQo1dMQs6WU7OhlX+my+K/OJ51LkFn6zg/DsH4WXwKc21Dli7Hj0LX0s58T17FYYISQZunx6gR4bWad/icfoF4b89cS7/MpQmyg789sycTCKbEf6UVhjlp39ZLF6mispIkiETJ8liNtbEgyXZOPC5N+oj5Y/0+KaiH6jrVRv7MfShEVUhxXmXwQvT1vSBGkXb8CXs6MjzO1noWxYH8cqDwJLPF6rzeDnb4tMq3Cs6GsAP38UE4kuxTAjHhDIxyr1oYn5WcniuFMFqbTxkwqhMFmhYyCUXjWfFotERuQsKGZwhDBTOQDBHESIV6KMDI2TXS58PDvQDkOKovg5Xmqdd4obtJCo00Aj1MG0Q5tfiHqEeiRGV8qAR5LkAY=","layer_level":1},{"id":"735267a7-d7c9-43a8-b387-fd74a43b22aa","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Type Hierarchy","description":"type-hierarchy","prompt":"Develop detailed content for the type hierarchy in the Cymbol compiler. Explain the base Type.java class and its role in representing all types within the system. Document the implementation of BuiltInTypeSymbol.java for primitive types (int, float, bool, string, void). Detail how ArrayType.java extends the type system to support array types with dimension and element type tracking. Describe StructType.java for user-defined composite types, including field layout and member access. Illustrate the inheritance and composition relationships between these classes. Provide code examples showing how types are instantiated and compared. Explain how type equality and subtyping are determined. Include diagrams of the class hierarchy and demonstrate how new types can be added to the system.","parent_id":"24f0102f-a33f-4f5c-ab6a-11870fa7d7e1","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/BuiltInTypeSymbol.java,ep19/src/main/java/org/teachfx/antlr4/ep19/symtab/type/ArrayType.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/StructType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:04:06.7198315+08:00","gmt_modified":"2025-09-16T14:17:26.1719109+08:00","raw_data":"WikiEncrypted:KC5+8pBVXnTC4aLEjgWCePt/SHKd5BG7Lb+kD1feo87rM0+LNWbmA26LnEE5+3BTaMiOmIgGSTfC2oBwgAbdXaq0ioHhaqdr5ctbib4gKsiY2rwczFoq7GgfensBn2jOTa2cOaMUD4rI3NYLZ/rl+UIFSTtTPldc8IVGiGjLRHReqMIRlv2jVJ5UK2g5AYHl34prN3q9n553mTOBLoS4qvS8mhNytnKoYrbMfqLQeBOlxmwTTGe91FDzLBed7unTPcMGPR+Uxl1a/k1VwMjOC5AcoBT1R8sQ5uO2y6f5mTt1BemQGBL9ctcCrhWSxyqgiTtL2s6+JeFvW4f6NEqMXitZ6Ds0kyWlBuQQBErRmXwVOqLP3+Ig38z0hlgiJx6n+tkFi6lfuz4ct32+IX0A4JPM0W47Fqgnn/t30/8qvP2r0z+i/I/tTOCdqFEeODE6JzgLNlvOPY+g66DqtaIJ+cA4Zto3tgGDS7JL4siYSy6+Ul2dwWwF+iZ4LDpcLwYWcBpcl2ubGRHNtylQBF1e3rM+Mgb8I6ohF8zZLJ4SaBzP1UGq+ySNDpul37povc8N9X24Ir+UFQQ1yUB82Uye/1AAZlYLm+lC5/kqLcpmr4TmmLzmNqmQwspNJWCSgcrO/615PESSNKS85/ustspHryTtoH4RxVu7L9VZfLdfetuKhI7gZh3ArI33IOjpA6WpcQ582t5ADaZNmQccfBOY/QeAKBesN81Ga3v8diI30noV43UGyzY0iH4KQRE58KZzuJbkKl3P018KdJ97j65JCUUxs/19Z3D2Vbp1kKt62yoc41t60S50JWxQwXvtQOl44fYS7vaO/mEjr/X9i8PAtjlLsUHC/Q4BCZ9tg1yzDjqS/1XNnvqtN8ghw06UfdzENni5lpqKytyrdwXzgqAiBkTCTL9ugkZEfyKP9IXCu3JgnfxdAxh0faG7s6FJXmD/WTaXHs/tOTHi9yzCT1qM1WXfLuEdYHuLe64dSyDNTSyKftwi8BfcjAcNxBXdCsgHJp/JjWwBylquIz6I2mUpln7Iq5DahftwuB8KAmsJqrKzalK6Ot1S7h1c+6Jw/R5PzbaW9JegrbWLjVcy1kh4GBmAH6Q/bsFfqpgJ6CnfD70E1uArbzZj28ED1pXkHdKSdTz7bOJzwAY4K671Ws4NLfresCgfGbZQL37xMeJ1RHzLbWkNNzUgJCQyGlT1oxSV0rrW4rM+xgArsTQlMe/K/cHPeqPSRaDsm5hiVGGa/Bn5bf25Sn6DvbPnZveynTBWgrRY8ANBxopD4AYkoNTX1jxXx++UuuHeBvCR6a6qhOsgwxhrXLr4GDwpCq1rnQc0c4JeDBa+Ic80Mj4vO+4EXl1Y19Acp7NAYk1VSYj0DFNyZTzXryn0Ek9D6vp+Sa29SSv9s8Q5mXs4T8RN8RQ7ZSMJfaNilbuaL2A5kgVM3wN7bNjVuJtTSmAmAZlYyRyjWSK7cVQZWx0QHMhyJ1R0uVNpdrVri0SChpyQMinqxzZJgVq74e/3c4KH0kx2kiJVOwudB8R0Nv8/KA2qbLHaV+96ymRwQGkaEH5qPpJRdKjQXHlAKBljDCvvnPjQ6lm2iZyOczsLgxEvG0sXAv3DUs3hu8rOzPREvQqLnf4FzFVRbjhmkq04wlQ+JzBAYCNJPU/qguDy3+hSTvYain3mjTEvEHwtbLB0bzLKRZp9xc54EOD38viNC3QlqNnxU/a8pan8T2AaKR9GZNmZdY8NcQ==","layer_level":1},{"id":"e9ff7f84-653c-49a5-b676-fc3d4a0d9f4b","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"IR Node Hierarchy and Base Classes","description":"ir-node-hierarchy","prompt":"Develop detailed content for the core IR node hierarchy. Explain the role of IRNode as the abstract base class for all intermediate representation nodes, including its methods for type information, operand access, and visitor pattern implementation. Document the IRVisitor interface and its use in traversing and transforming the IR. Describe the Prog class as the root container of the entire IR program, including its management of global functions and metadata. Provide examples of how different IR components inherit from IRNode and implement the visitor pattern. Include guidance on extending the IR with custom node types and integrating them with the existing visitor infrastructure.","parent_id":"e2398669-3afe-4bd3-9bcc-aaba5dbfed6b","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Prog.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:04:39.1708439+08:00","gmt_modified":"2025-09-16T14:17:43.8123791+08:00","raw_data":"WikiEncrypted:SnEjZwhvarhD3q4enk3eSOldwfObtDv/nafCVKXcqzlSl4LmfoBZFQ+CWrrrzgnkOoHZV2etQU80qoKIyHnChtvhHeJJ8Elqru4J3mUsXRZeVYXiQMaCi6pFilXYz9uKS8ahcajpIF36uS4ClV3WtuWOhsyKkQBBrpwDyP8wQbKwGCQF3LD6P1SdKVdVcyYa1E9Z0qxY7gPMJPcL/iS2umJDpSY+v7aZGR7O5gebkCQ3DtVm4wGw5uLA5RyVUtGS7T0g6Aex7XB8WP03FENeUt04avv6jhH2YEingGVGWaUQ3ZsrQ9tI7guE5B4ByPWtjI4tdUJh2Cda8HJWU6c4VeVLdY3XUtYOTK5L/egVJvbQaIEF3IpE/F1XzAFoi794yZpLWNHNrY9Ib/n5g6h/7EpyzKJwPPobZo875uCiEKPGzO7bxtMmz0Yc7s+axqvB92YcgvAwaGtKVUC6FOKDNfMZ2JHIZWeEKuo1T4f0P17YG0MukA9gf/p6R0zEqz23eBpCMR577CaVviPW+d3Y5qZsazZbwh7wOeO9r2yvkctDC98Y95xzRqwG4R7A/14Z+x6lDU1dPt+TluY5vfmgBJ3JPxy6W/P0HceRfUOUnRlxIzSZrY6aVdsy3gcOUM6IwH4V/Xe1LJzNgUAN6dFK6GtWSAP3hPm7HAShLQh3ZybRcHxeoLj/t2UZxaRZ8k7CCcSzkzc9ZjJOWABiXLc1dTsnbW9K/l8Lb1MKrE5BSc16BoWFA+mjzIe3YOwWbXgK11Q7rpQBaO4rVh/IpXPwl/+ZLEeQ9A25/KlTblEBaWdFQu3irni7DDYUyUi5cDRv92dRpm50b466JsQ0wHKGTu6a2nHofW/XW60kb+KxttikNkT7XuNEVW+bSRB3qqIeDtRcb8WPjOLSOb4IUhrAye9dwCqy/jIbeUwXEYJQJBr5wq48pI+6CmmglmUmHth53gv/AKb5+764WGUyDV93HS38gSIOQEggBXEvvWA5f8CBfMy0PNVfF9pU6PSaMHyBsAz3PteFwUsNXVO7sQ7hjUoma2/3OcJO5cJvK7rSiG+LmyLNcGor/v1z4hmPWYQC8WHA6HOFpEI851JCriFGG7Wjyt9ShGTgGkartDeoA3wvb9gLvNs+MwIYx8pzpx4wKf6m3/YATxDuGzSVokfc6SRLIGnC/dxx21aS3FN2pNIfgpxdHuhCqjWTZ9hJLxX6Q51VkFhURDTBNSvWa2UutxAW3rIZKznJBydvdyB37WjgH6iyEd14vaL8sm3mCbTIhP2HZBsCGrg8RpiPxzN2kiOKU+CG3B9wEpHgZuVvb8wrjHqp+WYMPaj2HrWo3rVThjuEKBv3TxZQ9u5vI+vqOPxVJ+s1O8vjohlLBHGHc/9aykT8g21TSDiXzssmp01VB3NiD68BKQOcJnfeR4+hvJbJyzjQoePdiWYFhMtiX3OCagEd6QYGJSVttkAXT+JXwEXWVJ0DvcivC6kowduTTRsQ8tF1XWIk0aShTeNWV4s=","layer_level":1},{"id":"4a0e6fb4-52cf-4c8d-a0d4-bed1b9842d25","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"CFG Representation","description":"cfg-representation","prompt":"Develop detailed content for the CFG.java class that defines the structure of the Control Flow Graph. Explain how the CFG models program control flow using nodes (basic blocks) and directed edges representing possible execution paths. Document the internal data structures used to store predecessors and successors, and methods for graph traversal and manipulation. Illustrate with code examples how CFGs are constructed and queried during compilation. Describe the relationship between IR statements and CFG structure. Include diagrams showing CFG representations for common control structures like if-else, while loops, and nested conditionals. Address how fall-through and jump edges are represented and managed.","parent_id":"b3926619-907e-47b9-8b5f-2fd3a6d8325e","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:08.0517605+08:00","gmt_modified":"2025-09-16T14:19:06.9678529+08:00","raw_data":"WikiEncrypted:zxb5eNlLFItDInlvRBDNH7KTCG5NhYUV7vj3R5lwTdzbLS93TtI195f3bvtlXARh27l6RM5xN01xoul4SmZc1JnffPdiWTKypsiARV0Cp57VGQ4FDrf69zBkpWy/rU29CphrXdr8lQDIYava74eAqCjdVuYyX0BV/et4QIC0gbY7m5yANBG2taoHGGcY0mQ4lRf/lV9Z6MyaxR4e/lMVV806YTqcWwqZAow7APL7WQNV2jupc65kHS1AvzoQzNAk9y92psCabvh/MJrS8TriknK/l8nVI2GFgh+qM9TGmSYnpqn9UsFtRAH5ytQUkfqI7lBttBQKLl0Tn/YiaWge3vhuLINOjqylm3X6Lb6l4w6rgZXPndSNLYSk/tysrPbxFlogeOvsAhnch9HlnG9bJ0Qk0+r83kBiMINAMb3/kZ4lkSkbN/hsq79HGZlO59788PH65r1NvFfaauhlWHcNWapv8ps7XJqzNYhrr72BJyXdktCbCJRv38R2FThWv0KqEfX3B9cV5uZwwxLWt0347uHasIUYVe6NoegXgnVvC/kefruLfy+mDN2Wn4YnSWNidq62Us0Xcz63825VL5iHsMKJLtf0BoeYL4wjW5yRZIRHv7lGeHPc5UU72qGTvQyC5QUyMeh7VGH82B9bRACFFF7ovywqI0qzsdCCr9IiSfjANa0UJQoEtDHO0xKXZhx0vjbaUe/Ktyz2yt5O7fwXpiR0cuxoEhCtf92/uaX8mhpnGMRRdU4o1nuGUfPELNVdHv243Z1AvjrEFSAhBcjoxtHvhjMpSGH+/2Z2Reujqaj5wwZKsPOG4BWa75DJLyM2YHpbtEeAmN6d+euOSPN33mclNhOfuZB1/kuAt5QwANy9UKNjUuVbBZ0/oP5Vf9BrcUzwhxUMafYeCpuEG5sCbaINVBKCv6cm3VdW0qypyLHlNh25zC8tZmxh3KzOGqv2XF6zVXD1by14Jbiad8u5vfJEdh+FX7t56WC3abmmGV7jYSmL14bXzhuEAQ4ElzJadGv39j1Z16IKSAJU2oO2yQ2Nw/0tXFrBz1ixFprn+gkQjOjC2dhU3xW0KhgATb5fHYnS4GE9t1PFaPq77XEiWj84XUQ+WSO/prRZkK/cQWHtAjKmgYdQuzfU0cG24X+s8xtN8kL/pYFlzERo+GWrdlAeBMYvaGcZSm4eiwqwkAOK7HWe2Y7QUxkq//5ok1kFwZ8+cpQb5fWZyicapWpn99FUccj4+GPc0bLtff/d2AsoJM4O0nsU+mUebQOQv/yK0WTT32mbR3pKVL4or+0k8BugzHNkIsbsG6L23Jl3YtTiz5TOSeC1Brjiq7paOrj2xPcswJWbOlPfNKEmZANEJQ==","layer_level":1},{"id":"0aa7f589-1d51-4698-bd19-4170ee70cd18","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Flow Analysis","description":"control-flow-analysis","prompt":"Develop detailed content for ControlFlowAnalysis.java, focusing on its role in identifying optimization opportunities within the Control Flow Graph (CFG). Explain how it analyzes basic block relationships, detects unreachable code, and identifies redundant jumps. Document the integration between ControlFlowAnalysis and CFGBuilder in constructing the CFG from IR. Provide concrete examples of how conditional and unconditional jumps are analyzed. Describe the data structures used to represent control flow edges and dominance relationships. Include usage patterns in the compilation pipeline and demonstrate how this analysis enables downstream optimizations like jump threading and dead code elimination. Address common issues such as handling complex loop structures and conditional branching.","parent_id":"80dffe0f-be9c-4f29-8527-ad9414ed7db8","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:33.6725183+08:00","gmt_modified":"2025-09-16T14:18:54.8855366+08:00","raw_data":"WikiEncrypted:QIBzkuXysBzMSQmkzf4c6+fAoyvQlKispF9LpJ0UyUk2dMlUkNH6njCQrqej0hNd2u3pP9VoaUzQ7vv3JBQeQztuxOYq6jNtMPxdooTO5zFZWI0dGo/9QX4GBsKCqFx3BEE9Z/E0gZk5GjedHWYEkSiQlNfSyY2XZ5v2bHIJtVLvRKo+FdQ7uyP65XCLYLwCzaYC8JCs6cmdCHw8di/30/aZ6BQvC+KEHFeCvH34AUctfwP7/bdFCE8hBN8FfBCsbRNHd/ZJqnwdPt21SUSEpK9ODbvjCnSmjj4V0I9qt67SrKgW3WUAZ2ilR/qwOhG4yTbu/aBGdwPRFXgCy3jDm3sal4u2Pvis3KEJ0OPETUTQFEe8TRu/vtlH6yNunjCUq9itoZ9CO0Ux0nqSla3Fe1RQQLliuDs31LpOmTZyi72HZ/6wtOs0aY4eFuIkWGtSBZK4Be+S3J8g5UPYKfoIV5xKNhtFwd8GYgMwwinLdxTVNcKo2u6K6JiBJUfq33zt8hf6kEQJOfpkSfrZFvf7bkP5285d9yaVDivhF676FzeYgfHaVBVF/7EA0Sdny875hhztqwe4IHEeuJtKSq9ZXZBYRWolLyBD+yVI1W+QFUEM0fK3YBVgMTXVzdO/9C6yjegWQ5Cci0GS+8fVSaWefoGbC255QYekuB9mMU7tr8ua8CmgyogYO/2OHebPByZLUVZ2ubLZsQHIsKNVL/YIzlImLHNkMTzdQ9xsNIuygJh0mCuFDUHwth/61YXwTG8/zN/1LQuFETvxrLCzeS397gKuiPnA2+9/6BZm7y6uiUYChrkhCvGn8IUwY2h9FQmHJ3E/wO0iDIcJt2Mj3YmAtCgD4jHcOIJ4SjwtFpdo2NWWL8EkTD/9v4iEEQpStYAZGAFqYBUkjHrwAlKVX1fbUMIzfilajaKjBvFiWFUqzufEidn24JN77PqjSTJ66tMkTSAue8UNl5lDYxDZyghA0ij4/Fh4x6T3k3WePuFJIsOnd0ayEKVq0Jk/+du76r+Mo7n00p9G53+HArah8Yno2m7c3Ops5+KiM2ZeGrWO+PaXuUs0dvQ3HznVdhtRLtd9vq356E+32O/GUV8mA/1G0Ap/Lxz/4iael6IZzNO49O1mV4f1OUIXQYRSBiO7fQKV0iSXak8VAnEYNzRz1loM72V+/giilgiId9VcI8neGEO4igaHvtIcZ9e/xMJg/ICTPwMBktVHACjRWxrBwiJtcvZWxylr0b+JluSpsrE/gceFGx6N+eT9luVzn2EN7lVcCbDI0hvgVfoLO9LnKUjICuDggesWMC0wPtC0TG1v7lxGBfmALlI64Yy7J/JBovHlG4vJXnaTTfJnnFwVSatrbfC9kNbgcDTPMEvXsTaMQBVF9eu+LYYAyhpr5iXDTACoiILzmKN/VrHgBThqoZkuxadjtBlFAfqKAd86QQC1+qzsAdpUGx+3S1yBz7U6V7KyKX0ArTJwc4wZQpAER24kItXWJByNnfPCv1lgRalj/4PUNXPSgmQEpcJjWsY4L/AfyJOCNg8PtwZQ6QCfB11BJxavzMWFxT5UVQSeOJulucA=","layer_level":1},{"id":"b4f32d89-d03e-4891-96fc-942c302f2851","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Instruction Emission","description":"instruction-emission","prompt":"Develop detailed content for the instruction emission mechanism. Explain the IOperatorEmitter.java interface contract and its role in decoupling instruction generation from the assembler logic. Document how CymbolVMIOperatorEmitter.java implements this interface to emit stack-based VM opcodes for arithmetic, logical, control flow, and function call operations. Detail the mapping between IR expressions and bytecode instructions. Include examples of opcode generation for binary operations, jumps, and function invocations. Explain how operands are pushed and popped from the stack during emission. Address error handling for unsupported operations and extensibility for new instruction types.","parent_id":"f65967b8-0d58-4d3c-b53d-ecf1430b3dd4","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolVMIOperatorEmitter.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:52.6328461+08:00","gmt_modified":"2025-09-16T14:20:06.2860924+08:00","raw_data":"WikiEncrypted:mdacEBQdcnabvKfhMtamRCpcHquqQDH8TT4DjGJdXvK+pZ7Snqs54AkpYY0FliarIF0JwGxE57B9lBG1XBLRfBg4W7kWY/EtGKcL5LFphxzas9OVmg5kJnB1yTHFz3dZpfGiP1KYe7bO0QH9TkHNXlXr6nIkxxXJx/tEMds5/fZKvLTq2W+di6NhI9RIXOlcLujAVZRJQahKqly3mzYRG0xQcN4/SY1CX+y35CvSu9gx42ryGURHbBP/bEqNp5VgD3EJ93p8WT7wPWOg/iMGUnVUb9X/QmTW02zEC12hbvABYbwi2EIp8I5zKs3AZQdXOu3bH4MavYcUE5RJKHbzFlQ/OlJTRVkLrrLnBydNq2b+Klsb5ELXR8wvhMCFazsRFRUX15jqaLszpRF65v730n+lhOXB47hzm7YWnzXKBdSvh6cs+QAoBbUgRfJCKw12vgSvwOj+J3o+RnaGELwViAW9iMupWKXPARw7OAxssB92pFWYj3N7Vc9uVMczVNOMKnpp1Qh7pCxWNz3OdEAJVK3xK8IbNQHbH9S69Zrn74RhIbche/Oi7WeQrSGJyBvPkLw6pDEy5Ow00qC5PNwyV/btzbr8XQf9HNGdraqmqr+IOGy93GS4rKMn2+fKye4ORMUpSBYm9row2mhLH9djKQNWMfpURTpRtWORjZmBHJHNw8qYhX+RN5ifLdL+bcHvEVeb+gyCvpBLJstvoIDjtRbXketE98lCBNud3Ki/o4xM8n0C/Z08wESOw0hcUNrdezuw5kr6RN2Ltd+0k9WqmX9aeNOizph4QyW93CGc234jKoCVSMVKVH2a0G9ZfoY9/Ws5O3Bv/Yb9CgO3itDi2EGSh5oxIZVswRzivNGCabqIbYL5Oi43m5ZHFq/bYrQlWSBDPhZYGPyAJBBGofTwJGFr6Ez7MBhaDsRF5/73tKIiz729h0i47k4r2prNJJtXgtGiSkKVC/Btq8zLHG4VA5VfmAxjgrxjoFvCE4SltmyUOKyt4AZtbARN7oH51CnrRREEtiNc5AcnClj+TJK7iOOneB8tVADd0RHGfAqHta1g5PE9zXqEJhuETngshELrTgWGG+LhvEbo0teC1GiIijiGCrZQP383PC7w80jntJhs++97JXjc8FZ/DQ+A3agQ4Cu2lrT0nyXl7YhjKP4SrYurIIJCZYfPdGywnwUvHRbsM6mWnydo5YgidBRekQfHzZ7bvlLlwUFUSR/SLMcgFKVf4KmXc5ajdZSFgH00gptb+qqynCGv8jbFAjASqQCpQij9u9HQ/6RJy/wvjA5Q2qKrToKIE4rtEBeKLulKU6F2haP3fxhuwlaRY29ucfh/V6JxelllsyXW0wofMnkPfSdAHXWNJRAtYcLRHmoWk4/rxiE+0nmM/3vPnA1OMxw+T3Uf/PV7T4Sj4M5eOL3n+XNSD4mML7hxy8XgoDYfbwFvhUqpnV7XkBEX3kjxllUL","layer_level":1},{"id":"56ae2815-4760-4627-aba4-00ed00b27f52","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"VM Architecture","description":"vm-architecture","prompt":"Develop detailed content for the virtual machine's high-level architecture. Explain the role of CymbolStackVM as the core execution engine and its relationship with VMInterpreter and VMRunner. Document the component interactions during program loading, bytecode execution, and termination. Describe the design principles behind the stack-based execution model and how it supports the Cymbol language features. Include system context diagrams showing data flow between components. Address initialization sequence, error handling, and shutdown procedures. Provide examples of how high-level language constructs map to VM operations.","parent_id":"786cad12-f31d-426e-9be4-322905970e5c","order":0,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/CymbolStackVM.java,ep18/src/main/java/org/teachfx/antlr4/ep18/VMInterpreter.java,ep18/src/main/java/org/teachfx/antlr4/ep18/VMRunner.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:20.8839451+08:00","gmt_modified":"2025-09-16T14:20:14.5865915+08:00","raw_data":"WikiEncrypted:pvBeicjrbFt1PVx45D4cuoxDivw1Q+Bm/5/ticGMaEWSNB0wBduzLEhcQ9W2sb55UmnZiKLEYfbBiN34pwpR2huBZuiXFp8vge0Gnkb/UACBKinvnaMrIyKk9IPzJi8fNrGBJU1UVRQsQ8X9R8dJ4fCKbkoHIQbrj7/1FnWDxZtMxDgYGHTHTUlCVAoL7tKsM6CG2GKnwsVRJ2eQ8nEdi/KKBKjIBwMjIIvgoSljt1wX8jgROglIDKmCUTZe0pebzocTashhoea7Rp12i608GOkV1hSFq+SaoOZeipn3G3LMsU52sDuD/rqI/dz+tRoa3e6TZPHLdv8q9ak/s5jaWEcsRG3VsykgEVDOjq8srYhZ4hNZaZ5GcvKVCbY+jOd+1vzt1Ggyo4/MllEXsdzLzBVI7gsm2zaltXW3R0n82t1gstNB8IgXwfH2BrQ7wzWnMu+Wc6Jgq8tkXQi7us7sXDsWLLs7fLlkNa/DLp/aRnS7W1AH9j9bWyOG4Voguhb6SGTY/WdOpR7hN/jijTyiH0NWUxGYEm+RQqv0WqoPdjgQ7FWZ+vksBL3WOjY+iUqzZENCgJvne6DrVHyS5iQdjvrem5PxeKU2uP8etcBioScJrgArSyw5sTcm3p+xg4z6ECWHgrAqwVVk66A5InYlU3lO1pY7OfaqEcdDwa/lPtW8LILJrIbpnjGimL9ntyN10cvcNuTSJ6owM8p91OwBNAAfqCUQTb2LoE70XCkColOcDZ3px+/Q9APcKk1f+jOg1OKdye06CSRz9PwjlU1+y+51rlEUnEbQ3G4YmrenAQY6krRdjH/c/xiCntW2aGaZ3Ur8kJsIFWEz+ZwepBoX5OE9Yj+SHHQ5+FWv9VQfz8MHxK0j14JwTYB3WXEdeDTLBeGnfe3aDmXLM0I7iRlcRf7q5KvhNz/z8ZqqgC4xFYecs2vYQS1d2OPmDQKjESxWvBvAIa1VlVeWFEczN7NbDEfdHm3IahzKOp3QNKB2Wt2lyW+bzpRucM+gT3h8pq0/v4vtjGmVYuNw+ZjtiqcKiEux8ZHdNNFwRuUuyXYyAv2zzd5WvZ5F2PR+RSMNTKXGZAHP23UOnRRcSDbAO2HAbhaJkjIXm6RhHB2HgAzByZgCF8uZ3nrd7M0BTBmrCI0xN5hcusyj3PI64PY30UND5VTJ993uf6fyF9AUuiAZrRSuUU+8zFRD2hkUo1sPjbk2I9pR41guQ3K7NQxj2D9RwjOBvBIbvHoXWhDMcJ76+OYAOtv7c+rWF3hWdj3dAUvgy2P+fafm6+u0a5wc3oV1INfpZzctZlziwMzsGlUFJ+w=","layer_level":1},{"id":"d3be53f8-78e1-4c0a-9987-f17b176152df","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Unit Testing","description":"unit-testing","prompt":"Develop detailed content for unit testing in the compiler framework. Explain how JUnit is used to test individual components such as AST nodes, IR expressions, symbol table operations, and type checking logic. Document the structure of test classes, including setup methods, assertion patterns, and expected exception handling. Provide concrete examples from BinaryExprNodeTest.java and TypeCheckerTest.java to illustrate test case design. Describe how edge cases like invalid type assignments or malformed expressions are validated. Include guidance on writing new unit tests when adding language features or compiler passes. Address mocking strategies, test isolation, and performance considerations for fast feedback during development.","parent_id":"d2c2667c-8d88-4098-b1c1-29a9a9a3bed9","order":0,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNodeTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/ast/stmt/IfStmtNodeTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefineTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/sematic/TypeCheckerTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/ir/ThreeAddressCodeTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:46.2545769+08:00","gmt_modified":"2025-09-16T14:21:02.7049556+08:00","raw_data":"WikiEncrypted:oQ7VNoYBl3ApU4O5/TGa/YEO9ObmRNw6knddpSF6M+pRguDSJvLGU1zFuX1cyrsqOoLWuALaX5qZd9muAmZeBr147hAH8aHkCgP5laYNgJrjk7/sHI8tQ5C2l6fg0ndWE/XK8KdPDdI56A37OVhQB+7oR8NJXSJL8KfX0njoePEfgV3H7ZwhuOtp+yYWnGozJ0V4sts1YndehWZ1dBKhd0KfZbGlsO5duUm8M3dK5eLxJwUFBttTmlraLCQLFlO2dxLYI6f7YFJLDsh4cPq7fxt5LlRFl44EhCsEA2oKQn5Xi6VMsSK3F2/SIVgmwOSbPFZXtKE6LAN0ukBHfef632n66/JPh//lrTQg2YSql1eBRAe+WguNkzd/cp1FQl2+7WS3nIMYT6oUWjtxJzErxGv7jImHAl4xK9R3d/fccL1NSQ2XhmwS3WtK4sdCBqMHy7sovNbLnwn/iJaLJwIGlhwk9IuGvrH1eZX2NLGqDpLVlusGdCI7Wt6wXReyejXmbvkpaKrI53kcApXmWSlaAqT8/sAkZBiEOqjx4JH/oFEv1klcG3vKQF84v0c18rF5xh+X6IcHxFItM+8n5AtPlcxq/DZqkH6A6JxTkKapzj4tR1vINfgNKcuLRxgifwlT/n1Gxu+1+HXc5Cc2yTuYKJnQxQugXjAtltlByC69zjBxRJ1m/ZN2KAyvSGgttO2ZUZIZPa5EF/zEzdFSoiDmluGrU3CsMNTgZYe5D5DkrVjF9DeJPmszs2bzlecRXMy/tSSWlVtRVzIoVacw54EzF8I4bXadjjJLDVCcQDJk4pMNZncz7dLyIFGSQhk3sdJTask6OwNC9LAufhOe2SxyEVXwXRaubF0PIwdHa76J1LSdeauPXtLVp+XRTiSaGsC4bYom0K77JPcBkbGPuO4Fz9WHlTW3PS1IJqYXq12A+ndIvB8Wrd77BncvNxynzbEWzY0Bw1zj7ftaBqkp8U2lbNen+nINtoIsnantxDzZA6ohy8DUsraEpKT0SbMMye47qU/qgG9IxNY9+c+790KCLmnSsbqQFRDtaVZlgcaVTZegrYoVsZrPpljVH9fQpl21Tms9iDx/FyZaj62Lwy/8t2fohOaNCAk8IDvOWSgQRFdQRdkXm8xSKS0vPU5hk8sqQxg2q4Pi9gPzwEfgplvEFiGYTHgsaFAsFle7oBcZyuInasjid5ojx4YFgrpK82AIPK7hMPHGkdzB/CqVGya/rz4Q/GFpT/juwMjxYKdqtj1rFBnj/eRIGOEFQaRpZcVzxHcZS+C4muOI2sqn+7gi37sWs37MB94SlJnuGQaVXbM5pgVcVnP1R/vRYtq1h4g2ctXdpN4e1aIMVKh3F6OuI7o11BtPYGtiRvncJHdcM4R5VmPXoroCt2hSiyFEmWlXO6OsttmKbbz0rx3cI7emBaiINy+vMzK1zKdH8uIMfp2XNverPo6C7Q4qw8wxWAdjS5F96KjQpxIU9xgrEZdMZob0MNwamZbqMP1qIOL9FsEL5AITObDFuPaYhUI0VF3RV6TjptUz7GDP02gAp6+JhOkwM8WV3vdmITgXbjFHO48qoNl57D1OBtFLJFlanne1BsqbF4pp4LjZB6A1xtIAUfpgRhbepN0xQ6acuH99nZZYAQSqtzH3EhOFyzNJB3ZFjTMBdX6Wz8CgOyr0ikmqK1B/qxzfSSUX39TD8pyPFWBYRyA0bXVlai7eCuYIyktQsJp0909TvwaruFl/pJvuDm+vQOpz7grLKGC8XP/LyphCxYzz5zRMzlAk5LoV5AKR1c7H9icD43cuHKTSO2imuQ==","layer_level":1},{"id":"cd733f7f-5343-444f-be4b-aa82fbda82db","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"JIT Compilation","description":"jit-compilation","prompt":"Develop detailed content for JIT compilation implementation in EP21. Explain how the CymbolAssembler integrates with the compilation pipeline to enable just-in-time code generation. Document the interaction between IR generation and immediate assembly emission. Describe the role of IOperatorEmitter in dynamic instruction selection and emission. Provide concrete examples from the codebase showing how AST nodes are translated to executable instructions at runtime. Explain the performance implications and trade-offs of JIT vs AOT compilation in this context. Address memory management considerations and execution efficiency. Include troubleshooting guidance for common JIT-related issues such as instruction emission errors and runtime type mismatches.","parent_id":"1b2548b7-74c2-4e17-b45f-ed8bb24967fb","order":0,"progress_status":"completed","dependent_files":"ep21/src/main/java/org/teachfx/antlr4/ep21/pass/codegen/CymbolAssembler.java,ep21/src/main/java/org/teachfx/antlr4/ep21/Compiler.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/codegen/IOperatorEmitter.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:18.1156101+08:00","gmt_modified":"2025-09-16T14:21:31.4692482+08:00","raw_data":"WikiEncrypted:dbd/T8Hf1cYdOzppereFdfr3nPKBvQt1CurfRW6elwLJnJcFNfR34xvrSiNz9GGDCC0r8EURUIfHpDjWbnIAS34BPVDypl0nF65F9uf4TsW7PbJ/65bhsC33Fccj7ss/BIgYC0Bp72p0RzV5QmGg1ceQ38rbrETEW/WXH5/w8cZNnvHvnu//jd2A7TpFDBSqvHuSXjqm9U3O9fjBqmW7vhOcAIzwz4kA/5/ZyNgfsCU8YVfZcwdViZpCFfG/jRXvA+w2PyOQ5tDOOGmdXOZQfmuXEzp0Kpp4Tr7kATDwcPe05HuiVHbK69VTg2w5g0P54lx3x4fQBXVT5jRkkvWP6fgB3MIkgOXU+dPIkXxci+ppDnfZ+IaiiBimReOGic2BBInuH1MTqrLTanobIsbAs6Z3iF4Y5WlYRpTBeMwyJPfy0+GDCdwvTUmddkrEXLNdw4VdEHmJdQWKdT4L/cCfDJI6SZGUlHTBAsLfx9dyxj4eA+Pb5gY4Zg6f6O+EUIQp9vk1xLs3WFJ9XS4y2T2fEUUuTI86iszKJSNlEPQJDWPh/+u/PlVVoXyUpAriDrktPs/RthB2Y/KegLJCi3ez/kcW2xp5fGtw7MsG5oJhHfqz2WECwsrNhDcwBYO/JqhASJjoKLrsKmXxnwwlvmkhR7izJ56YH4GHwqlILnALqQDEoWNkcTRE/CnRY006wRcKbpBkjIdqhZH6nRH8lqs7vDCp9zzjtDH4+1H2sz8An8S5VNu2mTCy5IWYI4wecnQNTV//eZs42eN8D1kvbm/8mjiPVckPvjS4siCaYi+eZh0Y0iIz1V8uUYJn4f+DPjkaDUivRCjStqjvAkIVn8vS9XX3KVP6+Yx/e8zAZfUS9/isx0nwqIefJNSKlR4aFL7c1+zan6lpbEsq4RMup3VdcWbgxLVCewdxwCOnk+zxi95gdv5yM+40JtRKvG4RmLp2MnJn4V50O+gJ6PnFNnrs/wRj3KXInkFiOTZ0CEbYdIMRAcQ1Yhat1BZeHm/pjoqa3ZtrEImfdn7ZIbkWtbX6ed6VVp5+ZcLhWQJFGBhAS3HvgGQh6dcXfWykmvWC/z8x6QCulxKS8xaA1pDdWEhtnrUHATXOQt03pSP7m5MIR4+UGmll//MXqK0wDsxwBAa1ywk9uxGio6XJtEDqJWk1e71wVmLn+KcEg/YCoMih3WGXNkUcy/LOy8jQdACfK8etDw+bP0fvNJrJzkgMebQ41g0IkpX7WAAy8Ry90leCUSZWEqjTfACjWGFPjN8e5bnzQACm8d7rxQgTeGZgjynI6YENLXG4TpjvT8r7koM395Y/On/KVmulMUAlPrKP0NBrB1TTMmEnYDPxGaGj+1vaFTKrj8gxBJn7QnTjdL33y5gNetPJxUFbV9lSjICY1qQQy/60L0EFgwgkTQiXFTGFMSLng7Y7v6VeFlazjsblkDILx5d9Uz8KDSOax7BWI0p5OSvkadz9jyOYRqpqFe0eVaEkKIhPaAENuXXzSYCW0HvFAmabOF2pkpqEnWwGUyRvA3JPDEYZ7w3cRepF5alA1y/xN+6zU8B1rLBKIfnFWikXhs6L6DchgBMeqsGnW56NmrjoM5MvswoCy9h6d4varQ==","layer_level":1},{"id":"cf946cad-ae18-4c34-a765-ba479cf63554","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Compiler Class API","description":"compiler-api","prompt":"Create comprehensive API documentation for the Compiler.java class, which serves as the main entry point for the compilation process. Document all public methods including their signatures, parameters, return types, and exceptions. Explain the compilation workflow orchestration through the Compiler class, detailing how it coordinates different compilation phases. Provide code examples demonstrating programmatic usage of the compiler for file compilation, error handling, and configuration. Include information on thread safety, lifecycle management, and integration patterns for embedding the compiler in other applications. Document the command-line interface and how it maps to internal API calls.","parent_id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:50.9571776+08:00","gmt_modified":"2025-09-16T14:22:09.5288862+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U1uuA6u4BxNWV6uxvt35SA/AAvU0bnxh5uZiPlDDgr1acgrZR2UjHoHhchtlX0p6KjWAGtbFVSY2fzkMdxU7CPBgWGC9oiwRRYLXo52JEsK1NICEgwqnNlfrBT4gjtwqkC7eJROp865NrJDtWAVR3Oh7qyIBQSamHGtY89kotIRBqNBGT8I0PQY6DUymRLhuqd9NKRFVtGLYM/P5QqjL0SfF2mkEFnU6lmxxVbFf8pG+6dgag78Un/2u1BptWCLBUxjbz8qAATV7giTWo7bXVgr4nDuzer3lEoeRrfxmO0AyCg8FXvipt7Ja7J+SnaZtlvxO3iysopXAvGSuG6Bhbft+p0+quk8tJ5bogkF8ibB7YIg+5yEQALJGCvvKaDTG4YuZH7IQ1Zo1TAxFbZnMg1WBnyCW2iIHujk7h6fuwu2JrAj3FIUEE5rh9bG9V/uebq0LqGPmm+Qs05JcnjNsHiH8PyefPFlFcrELUMeC1yIgjLQLolKm5CaJNbwh0chruv7zkz6nMj9dzgzHvoVavDe3luCWAK4Rsl7SKAN37DFp6n6uiATfme9l1NqlQZlIIw2yfxBxt3dHtXU9XD2T+goK8xFZ43mBEUiNoC1nL1HmX7xwcIsC2KusExqToXUSb2PHXdjxBYut6my0CCFku+6xY3wdz3/FjLJPNiI2bvmsJChCX5rgyc6PcvTxMQrIfWnlhIsWksa6oIgpV9uqUYUoqZ3sSQJNNhhTnGcZfT47OlEpx0AWtq3lfYXWV9dZx1V3uucwOmX7yoNmtN5oHE8iTH6L7uKmrOnx1RT38ThLRPMkTBquXfhqNigOWGwtQ9ZvAmJjwSmPAT0rI4gOkIZPEwk9roYCGZrQjvYPI1fAGvToU4bc3sNH7m0n6woQWTzVypx5SOoFtqKpLAjHHDVoC4VNqjZIBHOgGeyn5whVahsDu6VLut8ObAc9UXa+wDHiHanCeZi7fQvF4g8pIyG7A5evq6+OpZT2UABw/Dv0qD6GRixdxtkTMdUdtYjN5t7qm3CDA1S/t1wlnIN0gmJv4KYaP6dpCiHdFQ2xbDwhiOy+1i4KFA+7mCtJ8Vv9lJYENi7azsphqduV43ghBinDbFzPIiTuopHC6E45D9F1RXUMWDMFvMmBEVQqf2XYKdD9aSmhlXyZfYhnbi3wIULUb1pViUJurgp54dyAw9qCZR05amvWKiod08ryPQOtLw==","layer_level":1},{"id":"d37c0744-1e79-4b41-81bd-05db17b138ba","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Foundations: Lexical and Syntactic Analysis","description":"foundations","prompt":"Create comprehensive content for this section focused on the foundational stages of compiler construction (ep1-ep5). Explain how ep1 introduces basic ANTLR4 project setup and grammar definition, ep2 demonstrates listener-based tree walking for simple array initialization parsing, ep3 expands to expression parsing with custom lexer rules, ep4 implements visitor-based evaluation of arithmetic expressions, and ep5 applies these concepts to real-world Java code analysis. Detail the evolution from passive listeners to active visitors, using Calc.java and ArrayInitParser.java as examples. Include practical guidance on setting up ANTLR4 Maven projects, generating lexer/parser classes, and debugging grammar issues. Address common pitfalls like left-recursion in grammars and provide optimization tips for parser performance.","parent_id":"f44e27c1-6dd9-4ae0-b131-7a0381989c6d","order":0,"progress_status":"completed","dependent_files":"ep1/pom.xml,ep2/src/main/java/org/teachfx/antlr4/ArrayInitParser.java,ep3/src/main/java/org/teachfx/antlr4/LibExprParser.java,ep4/src/main/java/org/teachfx/antlr4/LabeledExprParser.java,ep5/src/main/java/org/teachfx/antlr4/JavaParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:08:27.4476077+08:00","gmt_modified":"2025-09-16T15:03:10.5356768+08:00","raw_data":"WikiEncrypted:Xeqo3d6yIoNPMaUsbck4Tq59kIBPzv76XhW3TSj17m8ncZ8Iy89OhVZqJjBh3bnAHI/0PAT2x4ycGTyrlXTuRdlRXl42IgVQjWHPtpFPdxLykSIM+cqSAY8xQKSIseo0HZvv25YuOyF7aOIpE/YmPYAcEjXVxxkyPakM6BhlQt4xPMsBSBhJtMVL/ABSeJ3LfhL/F3Nicivfpsk85W7PdHvGp5algX/jYJWEeecIgr3mjFl1dYKVYXXnISb5MtgGcYdohlabe28z2SBfcsixauscsJeLe2gxzBdKWOPd02eOoIHzDkrXkkKzkHsTkzbdyJugEEuWSTV9Kk5reGBcjYXPTwBjbP8xh6tOXEhin0V3xbinqoGE8PM4/LhMgYdjwAjV27RmT6duiTr6a/D4TuZc4LnkBVI80IcEyX5ClUxY070YLB6+wb5udJkcitoX140UJdAUzbfeaG/yr70KbMBLhzlhpmYLy9WxSeZJnLiSbk52QgJnhzl4HNR2C2wl/msUgY5GqyDvV1MKjEq/1eq9/PxuZC4uomcm0LXjJWcMkPBZcmcbiXO19bTQ+4kCMwfS2S6PNX6Lfza+4n0cm4rWQEiQgoELmMu3wwTTgIW7ixxZS+MQd6DquIg1+KLrdgs9h+p+NN7oGc1hQyitBzxs5krST1BPCZlDwyMR5s2s9PK+rfUdGUmJH/h02LtXAuI6EnyOkdDedLe8JjeQuQg0xlyN5dxuoXhOsnNRGKRGXXQuBolPVhG0Zy+A/24RxJWR8GD3qLiZZPhkmWe2VHtPUm7JOOfABnrD61y4F38MjvbsqRasQEm8gIENBY7oASpx256r4BAMVZmlx4K0E91cU4xMAo7VhQ5tmShp1h3PyMIg07GnDxNW1nj5jzPD8IlBwkBLCwCpAZw/gapHGZfby0WyubVAhTvGzpHbSLI8LqQF2Y723n/JrxEeJ2hx1DJmDdqCRoTxestqDJsbw/ypqpu2hSWEen9496fT9JXhXiqcVdOuw/STBQ1FjGyol6ESahCM4wqSZs277Wc/4vbT8cUnvkTIV4zclJd19C51D9ZBABFAe+9vzpvGwRB6ZGojuGQnjo2ckIQo4CwDe/cmuOBw+LM1QSmeYIuCEPLdrSSEalXvZ9W2niTPCS1EUcrXF+hS4OMZW9WnBA11CWB4/2aAu6udjNqGqEJCpGxgRwcp2mAswAayKR9l2KqqPvPjVYnr/xcCMfeqHmumQtJWspyU7Ep7+ODzzaRDhn4paqzbIpmW+4qR2sz4+otThVbewQhpCkzndkRa9vGi28GSe66UJGT2+sxafw0+VPykAkJSOinCRAGxrchsGKSef6OCvoM5TzV9/LxQx0+Vjfah9kRS0ffsPFPGwZ0dE/NbI8c70Gna9HP4wYiRlJdEq8Luo4TiLGhibqEp3PrYXIs0GDnvKQ43ysJp4AhGd9KISNR45Iwggacl6VGjQP0+jkPgbgzTKxI+CMvqzqD8RwE0WWKPA8KrU0ajSi0EUA7WZTCS+QoNU5AHoJj4izqqoUnyW8wTMmrB5IRBe8LactOMF5QNZ0ylHLOlmAlr653/XXBdP5H2A7Td0lrzAQORsdvnX6AXlfPshTCYnuAUteYyJGVy0WUAxtO9pddAOFQNnacwdJQrRaifUP2FCfvGajwIk8UMTkD0bVGTWcpjwLi271mV1P3DjUw+BJ2Vyn5cor53jq1pkqIznG8dUk1+U73ORGtGNmKQxKptbgx1Obq/ZUfPFgzE8sXAkiXWfYQ=","layer_level":2},{"id":"05b0e2b5-6dc9-47fb-87a5-7fcbee19fc8b","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Syntax Overview","description":"cymbol-syntax-overview","prompt":"Develop detailed content for the syntax structure of the Cymbol language. Explain the lexical rules defined in CymbolLexer.java, including token types for keywords, operators, literals, and identifiers. Document the grammar rules from CymbolParser.java using EBNF notation, covering program structure, declarations, statements, and expressions. Provide annotated examples of valid Cymbol programs, highlighting how lexical and syntactic constructs map to the ANTLR4-generated parser and lexer. Illustrate the relationship between grammar rules and parse tree nodes. Include common syntax errors and how they are detected during parsing.","parent_id":"373de73d-1fd5-4ad2-bab8-0877f0474ac3","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:06.2813185+08:00","gmt_modified":"2025-09-16T15:03:42.0968918+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo0zTUDpQnXoR5CAulpPJV+WTgVh7vi0ZR+DVOAvq8NbZ/iRUdBJMe22uhAw3JmzaUhv+ZZgyEg8oeE1HYccahQCI6rbz7IPkr/I7dhX2To5FaW5o87R2irhMEY0Jn+XFoYYCFLaQW46FqY1z6kDqjijsY1KTDBXduFLXQQO98fZ0STn1YqRcO03rEV2gbBh/ZEByKTDnvBJxVJGNYW49ZAF9h7OyDZEQT/Z5R75NqEPGlK/8toXqcud1XtRYX238cCHEvQp7azWnuE1jtJ7pZ9Kw2ccESdZkHHlZPF/0xRgFf4aV2cCRu4+2UhjaHQ8d3UHqvIRc1sEzWBkQsLKoCROpKPmb628TlpJfp00R1dUUXT1Oesc743Vr/4FO7PLuakJRVvzcttjWZhWoP7gZIt+TxiwOVy8Kv1OQlXwxG7x6kyt6yJq5/m/5OtJgKK6L/awvxXottejhEuM9PR0DQTXgxTodaoUM6eTUYhJMms2ngkZ8MPhPKkcnRz5tQKKPwyaNHqQePHG09kWyVhYkpH8GYFjIVGWKPbX5NUHKU3iV4EOCLsHyv6BJVPh7TAZ6pHt3imJhSDqU9URXw799HQ2C4A5+neUUyWk0Q41l7mHZqqd9aVDH4N6fvrKjSsJ+tMOun0Hwgsz7Yi0sbRQF/Jxa2sducTlTLeoX29KJTDjXBf3fVLdY6LK9BoPsG6/2ldgSiIcweA+emqJ75ztL8pGI0fdW2P0WALNS7VQ9blLLyCilT+ZUhvFB54Hx0J3cDimosaWvIo9THzHuEvKZ3knVkQSqJQpeFI5XXa05sNu0BOV1tI/p9QlZNaVm1Dtbz4sihLAesZR0l5RWHvau1v/wp+eJ54Y/3kYVU7v9nvn1bdpSoVofdQVI+EOHqywwHbwhPo402PMDQyu/EsI9qahqvc/fwczK509lVPfH07BFYhrvHFODEAaMR0I69/Mp8Nsf6hxDuRiVr05ONhyi1A7lg0embpSPk9J2/HQyfZFEXcGLGuhurg/K9dA/obgB5vGfxDwigGaY1iJcv63dM/CDLSMe27nOuIGEObxO5tNHacIDeqXy0kWc4klk8bS6+9/smq+3JKUcfe1xxrvOh5cKhw4cKcWVkiq6qnVl7jN1NIDp+r0qhKThACfXSx7/OHQu3JtYAvCsY7h6jApHN/GkzQ8g6tXOWiArvBtZ2F58jl4ZCvolIKMoeb0FdaGP4f7Y0fYVLY/Ca4+TP8/GeDDyLe4Bsjmz/RqcZ5mrvfa+utRTmE/MPoT/1twAUtodUjbii8Q48MVYXwUFGpUvtV+vEXnXb8UEb/Z/sFCMo9eepbJ9NHdJpUOqoON17jdokTg==","layer_level":2},{"id":"a8f928e3-5267-4078-a432-0a28cc43b98a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"AST Expressions","description":"ast-expressions","prompt":"Develop detailed content for the AST expression hierarchy. Explain how ExprNode.java serves as the abstract base class for all expression nodes, defining common properties such as type information and evaluation semantics. Detail each concrete expression type including binary, unary, function calls, literals, identifiers, and type casts. Describe how ArrayAccessNode and FieldAccessNode support composite data types, while CastExprNode handles type conversion. Provide code examples showing expression construction and traversal. Illustrate how the visitor pattern enables semantic analysis and code generation. Explain how expression typing is resolved during semantic analysis and how constant folding can be implemented.","parent_id":"32f48f4b-a49f-4d52-a28e-81c006fe2406","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/UnaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/CallFuncNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/LiteralNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/IDExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BoolExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/FloatExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/IntExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/StringExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/NullExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/CastExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ArrayAccessNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/FieldAccessNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ArrayLiteralNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:09.2904155+08:00","gmt_modified":"2025-09-16T15:04:22.7773991+08:00","raw_data":"WikiEncrypted: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","layer_level":2},{"id":"a71db40b-272f-428b-91b5-c4b69ce4739f","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"IR Expression Class Hierarchy","description":"ir-expression-hierarchy","prompt":"Develop detailed content for the IR expression class hierarchy. Explain the base Expr class as the root of all expression types in the Intermediate Representation, detailing its role in type representation, result storage, and visitor pattern implementation. Document how Expr serves as a foundation for arithmetic, constant, and function call expressions. Provide examples from the codebase showing how Expr is extended to represent different computational operations. Include the relationship between Expr and the IRNode hierarchy, and explain how expression typing integrates with the compiler's type system. Address common implementation patterns and best practices for extending the expression hierarchy.","parent_id":"f315b1b9-34c5-4219-9adb-38f4397d2f9f","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/Expr.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:31.4011037+08:00","gmt_modified":"2025-09-16T15:04:43.3892672+08:00","raw_data":"WikiEncrypted:3Kmal/PeodSq+90zc7KWwr5GB5PEKx882RyWWGY63MHRGRwJmbPVuqdLJpbtZ40LB4L3yGWID2wHJDflgLMCGtjwuBAKU7WT+e3xy/ItuhpCM9gtEqIvIchD0DPvhRvWItbyRt1IUZtw4Qs0LhbAlReRH0fUdgEIgDipHrMm9QYs5MkYNlEAlXCK7iSMXOEKvyq44E94x7SkDGl/zipRYZDs9ufcd90YRCvOzEQiI4LOEM1Lu300036jCXAdy2Do3zaQuey1K2Ay5iJ9cIX2AW4NkjrzhJKuSCHf+IVjSTr5J4V5rIR/KfkUJRwGn9sICzxHMXiPAsW8G5uXyCn3BCzjqCBIxRy3nNX3rAxxI0GEOVPEpORt8Pj6niOkHTCVCYRmGSe/v+yuLcKlel1NNDR7NRQfsU/EJ3MR/gSfBAggMN6eCWrjn+kKJVI64DACie3dc8/4iF8rg1ay9mSALU1ZhzOq05W+cUbnKx9U14POevXtsCRQ+Rz9rFl9k2xjbaWuktsxK9y+CbCchhEbuUycN5anN4wQm8Rc6Lm956Dhu6TptMabCWGFwoug4bfGRlKd5VLUckTJ4DC0haSZmpeI0gLm/MAUpXPcy4f/dsEg66GyQ5tdba4urAJ/3BQi+U/muCLXGKp5jMXT30Q1nTbozcyN374Bg1ukcA13yZ0LI0/b0xnsTMQhhGjdtcpVq8T3Xfpp6xy4Fb9Xqj+4jMtPnNLwZxnLCm4Q+B3039xyVfVnBnWX4gkg0c4xTM2C4WVeicIq3RzEPzHzNocrNOwaW89WA/nL1R261ECFkMmuNpyD/DEQ9tojG86XBmH0Qp6PpKvwUVbkLoOIpohI+4EN0R3bCzj4xqVhunP9VPQGytQUVEwHb9m6QAvNAjNgaq3OhnAjJdYrdV+ydBhkIycneVbte3lEDrZbeuL4hW7I++HLmw+obGcqiHgBulV/yvexPOUNRBII8Kp9UAYgscJVUolzHwWha5Q2ZhDlUSKirVhbvWmILzHc3Az+ayt6yvXIuOCAf710O82P4uluGpeGMlLG5hxMLu9jUgcU/QRW26KyfLav7TSx0fkfqVIprn8qTuwrzMOwMBKr0TVvPI0DvBdkT7TPyxCP93pZhKUsFalwNx7eEHh0AfLZC43Ddjq0jfxGFxPsbzqiAMoeBml1O433D29uPPgw7O2/csjtpVPJp4J+CNDag1xMVnVQiw2J9G6SlaEP+6oPhcYX99jASd/1qouaOhNTQwkqDYgdvAlGpZ2r81sA5CgAwuNp8IQ2n40x4peB4bB5e2XV7rK6Gik/6V+nv38FV4/PznKwrNqrdVryYLwqWBJESMfgTL/Q3PH/6ZKJnzRn5S8ScA==","layer_level":2},{"id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Compilation Pipeline Architecture","description":"compiler-pipeline-architecture","prompt":"Create architectural documentation for the compiler's pipeline architecture. Detail the sequential phases of compilation: lexical analysis, syntactic analysis, AST construction, semantic analysis, IR generation, CFG construction, optimization, and code generation. Explain how the Phase enum in Phase.java defines the compilation stages and how the Compiler.java class orchestrates the execution of these phases. Document the pipeline pattern implementation in CompilerPipeline.java, including how it enables configurable compilation workflows and phase dependencies. Illustrate the data flow between phases, showing how ParseTree from ANTLR4 is transformed into AST, then to IR, CFG, and finally assembly code. Include sequence diagrams showing the method call flow across phases and describe error propagation mechanisms between stages. Address design decisions behind the modular phase separation and how it enables independent testing and replacement of compilation stages.","parent_id":"5a9fd681-5265-47c2-9876-2eb17d74535a","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep21/src/main/java/org/teachfx/antlr4/ep21/driver/Phase.java,ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/CompilerPipeline.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:42.8917709+08:00","gmt_modified":"2025-09-16T15:05:39.0113278+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U5tohgbo7RI/XhtXRbsVm5EWyuQxNUhiYJBHvfRu8CaIimMjQfu4qX20dvIGjEc3zNydGwxsjNoiQOob7P+bmiAmIjzjHmab4g+l2pf58vpT21aKT9AlzTQhfl23xINe4pGsUcl/Relp7CYkCq3jSzZS1ZDmGyEwf/jXx5JFNV28dK64y7DH8QqlavOp8EjbmZZORw61YX7cR5hBqOB9KW0oPIca05tismvSM7l78TyWWQ2CkTPbotg4sMo5DzZrLXnVRvCF3pgRLxh4YXYaz6WQMK0ucVD+Chv5bPiWmnXrGzokmsssz1dbNpqD1fNZNaSP8DCnTTDJi7VtgXw3CgdPtXg/6N+jjmMDw5+Z8HPVnW/G67BqtSxfAZbHuIMT/UIf+aa3s8/rH4CyGbd8/sSpBDFNqdk9k9a3jOPpINbPctQgoJZUIFXkvhjL9HS7eRbI1hETOvbrgy+BcrEWyiTKRaG6SWdv2IjbaGS6KrCC6Ed4nPhZne9R0NZGUrK36d56oABwWPeJIbYNZ1hy81EmiuyMFnkj4zToaDZ/dRvhgdGv7pdDO5r45HzrIpt4avxLhWxzmTXVTE9J+i5FFahKbjrnofQH1/fhqetNshcn3c57TavYOyRvDSskpkOqte9ozEqC8yN2R9xxeqXhMjhLqeHVyVaJ+t29dgHY9oFd4hZox/+OA5paefIoZTMG2T3lSrD+rqClP/d8uf7r+DXsoeTxScGFlLW7bZfW+EtKpyICmUwA+0GpeWRr7BBh5wmvJmMQzr/K2Hr6M98rCJoLkdcNyNRGkg4fqLED/aLYJjYEoZbN+tlo7kJ9XW3n5XazYOP8FVPkvHWZ1K8hLp8OtN5q+W/FQ//tpUt/Ty+Foq+FxXSs44lTXf+ClEQ7AUYS9OvjNWz8n5RGCx7Di8KgMjm82dCpOFNR8umvqvhy0WnfdzQIyRLOVLb39k5a9CZPFmJDItZdwl4Q3Oa379dFsSUBSu61oieUtClZNxw0czxu0eVklEPUDhites09JjYesrupFTYPO9JbQqyMtxwL1iPHWp+9uzqM2jlCCCdE9WQSJfyjyttqvyo1Rh8FJXSnHEkpdfYp/QJPslLeMbIlkcISHJlN30YCm81eQLDFI+LyuOEYrHrBAzRptBJ1JXL91Ud+vKnXPgrWDXCByxhYBAc/0NDhe/QcdDJ2JdvQCZTmUN7zBt6Dq31gYjR/bSnzEoXXUgTH16vepdpzh0xkOI7ax5opradtKc2zkXiuKegT7U/Luki2534BJwCTneBzfgBjWOnDHiqXujyUo49nWVJdTHh5OMYv6Hrw5bV/Ac469V/H0ZEa8goe5iiaMvuV7wMmjE3PyGabQDqenyeRswzvJXGpSQMLD9O2Bs5eOtXDw2xlkv7fzLGAZBdOxeOuPoYiRREcvuoO9RdIP0kZ2whRvaH3grrq/meBiCJREb3W3tf2okkVKSbte9ZhR5qExcgBL9qsMMqaZ2KHUr6uzCsMgfzox0euItKPVSAIOytFN21mWXY6/En9Y/J+F4Dm3yeDy3Wu3mVV7/sFv0TswcRYBxTPmME/29MFVQVZFr+ICYnvEs4/KVRjM1VTIgCq3xsWeazwYsv+whFRTNZ3d8zlghi/UxbjWIPfJpuWHQI2uMbop15Ofu3B/Vj0ZI+yByFBuGVmB3RKPLS6XEEuhzrCgy+n5mqoFUcRFHvwa7kMNWPXkYAT7wlbaYlmZ+S1GUKVn2SsEeW8+dggLlm+oqk049tr66WwhwcUFMldQWHsBMhx+qtBZuTSDoAVt6wKySr0YTKHxxi0kURAFgcCA/UiCy3e5uiGXhCL/GmcLUeGloya/zNMpzcy6HRXUzzkK71NhRECyAzd/Q/oeUk=","layer_level":2},{"id":"8d046970-fe69-4daf-8978-bd2113e2f2c5","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Abstract Syntax Tree (AST) Hierarchy","description":"ast-hierarchy","prompt":"Develop detailed content for the Abstract Syntax Tree (AST) hierarchy implementation. Explain how ASTNode.java serves as the base class using the composite pattern to represent hierarchical program structure. Document the inheritance hierarchy for expression nodes (BinaryExprNode, UnaryExprNode, CallFuncNode), statement nodes (IfStmtNode, WhileStmtNode, BlockStmtNode), and declaration nodes (FuncDeclNode, VarDeclNode). Describe how CymbolASTBuilder constructs the AST from ANTLR4's parse tree using visitor pattern. Include code examples showing AST construction for control flow and arithmetic expressions. Explain the role of ASTVisitor.java in enabling tree traversal and transformation. Address common issues in AST construction and provide debugging tips using Dumper.java for visualization.","parent_id":"73a9de86-3c93-47d4-84b6-073c2b7827aa","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/IfStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/type/TypeNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:59.0924336+08:00","gmt_modified":"2025-09-16T15:05:49.8313207+08:00","raw_data":"WikiEncrypted:VkTcfsOKPQK/yaws/KUh24mr9vE9Jr+MgDyzMVobeHf1yBUk9z7OG/X1Wuoll4Y0KBLw3nvJaZ4of83+RHU8Tydqj0GnhuEyuXINM9zPmJzgpUO/XcBy3n7GRNT30bLJ6BwuH9g1wcmYt1smndynow2V+P1VIeD/wrEalVgPSRJwZTof28FYdbE7xTfHNMhz042alrqL13gryTPUg6FF8wEbSbpKNnie1iwV3qp1kG/KwhySCRggVsIs85tPummHE02MlBJPHIHQgRfg4+isfSSZlP1Fg5xxvQ/2YFenQctDIrdq20VhJMc64B/mrPxDZnp0MAj8FWZI0wFQQPT8mgZT8FtEg8yt0KkLPMqfC7NRiPqEurek/stwCGPnu9ZRSTqqgq808Z2J97XYc9SUADiX3AJha5iSx3GdSqrsYAzg67eYfmbxCiuVTRgASZk0t0EDzP1zL6KRR4mtKqryYF3l4GRB2jKIUvG0c3n99/zYOaFHge3kHJJmvol06U3CtwbVbnoURhLuP+/eSqOW/UJlfrBF14iZ2rbtpC8hhzaQjoLEjcfpi/M01HdqnJPZS3QAiKAHNHkEv/slTBGHSQKhdowVkiKYzS7g9gf3bGa5zJjfzXZygLceprQ8S0Cpe97dciIlsAx5i/4IyNfVfvvpzv6+kQYWTju3zAgV9AmtelGS6Rx1cJD9nHf51hiW5hj+uWdMKl51Q0uYT776qNDolQNkHqjDy3lsS+sC7GbsAGDKTh9opwBjubX1cGjF0MAx4Tlx/6arcoXc2YMGS67A5qfV9uM2L8tww7PuEcWnkhxvdRyigNv/aaLqxpgXxh7AiTF/Hxx9hltKULIHNS1/NFMmBZFFiNc/enrb3Tv+DnmFzTZ6OKgpbkyPiO8ZJ2NkdYZ/2b7aUszwuSW/UxbNQ/QxjMYbDNpgEys3J+yS8drlQd3D5hKKUxeV9JNKNk2A6s3WLNEDlIqRhotruVQNEwmsyaped7wimvABEIM3azz37pHkjRzO47onb8HUA1AUA0vsuA4lFCjDf4WY+xq3S7vR2FWePypxcFKpBl9MJrsfO3o9TTaWt90qfcOE0DNJnlXGjsKuAtjReg80PFAOexZP2J3WrD4J3DWeSqfOTUI7LT6DI5me/N4qsWWYTSyRuO4QUgGkQ9PODqiRUm/VGWhaCeNO421z/xWuLyplMg2dK+jg3k2QBRZ8m+ZsWVcBPZ8QNkcRp1W6S/PIhjdLLCf+235mz8VNnNbhyR1ytaQGaVu6uAfABxyry2TBEDdzySWzWcVuyxlY2y8oIvdT+Qrs8zte/gQuLTjhDfq9COGT0F+wAELdDyp6XMqdUgkn5fYRYIZJETruZejPS/OqCUxshbh4dmjaNq+FHd07pel5SgZ1a/8TEmT6xnkE5DDLRgte8QTrytkPsO/ROMwL/6oYBWVQ08OfZYZq3B0JxuJ0txkwZbB1oUS3ZT9tYU9jQ5uG9A3nBuoKd3pVaGLF2plo0euqsoyYZPFbYwCzHudw/YX6xzC9w30hBDeycyClH1QZCOB1qUtTu4YvCSgZentWAvBvkGMVNn44VeJaAv0IyT/tMcpa+tzWIyi2B0ERQzMa6JBAx5zcgn7oCpzAfi5BDxDDsA8T3j/QypBkKwMXtgdk+qX2yzY6UObQzMmI0wZOClJ/v+7bwPhDujDhd0N4HPsCdZNtrx0OYySpt+eTG4FSV69pMcInkWaV27+29Ovtdbg1obWkovmVhTFLj0ForGEMzqbNGuIXjixUOxsmSzEJIUwbDBZpsOhbaEiviAZKJIrqEWg0tCDx3l5cm8YNhOsdNp1rX4Bn72WoeUlzKLu6rq9DN0w6Z1X35G+X3RwxGpwDCAGSFMSwTQ==","layer_level":2},{"id":"cda74bbe-ab6a-4d6c-b212-e881d286e06a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Binary Expressions in IR","description":"binary-expressions","prompt":"Develop detailed content for binary arithmetic expressions in the Intermediate Representation. Explain the implementation of the BinExpr class, including its fields (lhs, rhs, opType) and constructor that enforces operand types and operator validity. Document how binary operations such as addition, subtraction, multiplication, division, modulo, and logical AND/OR are represented using the OperatorType.BinaryOpType enum. Provide concrete examples from the codebase showing how AST binary nodes are translated into BinExpr instances during IR generation. Include the role of VarSlot operands in representing variables and temporaries, and explain how result allocation is handled. Address type checking and promotion rules applied before IR generation, and describe how the visitor pattern (via IRVisitor) enables code generation and optimization passes. Highlight usage in test cases like VMInstructionTest and ThreeAddressCodeTest to illustrate expected behavior and edge cases.","parent_id":"e5f39a13-a940-4a44-94a1-b1ad913b950f","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/arith/BinExpr.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:14.4327247+08:00","gmt_modified":"2025-09-16T15:24:12.6051806+08:00","raw_data":"WikiEncrypted:solS3bCfX7HE4J745xBbEEfwYZ8YGKwZJayvBXxMgi4S5fk13Ae09SkjoJwwDhcnbArhc8eimD9giMwjNwd0lYdbREFK1BR3TfswXwtJcaektWrqJvPrs7bZ66M8liOw/Ekyn55nSTCq7pSvLlLGzrMs0gsrnZJLzMMLb9ROv43h4+Qzw3f1xZKDws9fd2O3x+9+ZICIH78ZjXQnwdIptkWR2j7CJWMmvwhFHxo+pxwOrgqbgKD0OLTObfshfowENdAUT9dg+njcFQ9Vct1f2HSecKXBFsptH08pGoTtaGCKy2SaHgx9YSZFSsueK9MS1+yDEH0i++jPnhabc4Qhs4dpMunlfrH3QMSSbIKBcGpMEkkbvwj8I0BjFZDav/1D4EHuDCWhOHp4+X/4X1zGnc33oIIxDEUjQ71UxFy2A2D5JiJ+EJvDvqxa/Pn1jWV6L4QVplhkIFg5/8PiJwaOCuTTtkMlXRm7GrMU6z443upxNY3MqU8VaDLhwS4Lsk/UkAyb57Ig1T7wr2WYJkEzU3OAKh0aTFnLrspB4msQAFZknRz+SXpO1W+Z3kmJGFaBrWqFVb6CGk3vMrgaOjMYFkqo1br/18JXHwFjEjTcngswy03z4ZRx53XsnZUqYzy0lQ53gIX/z29BrAL+Fexk3GcwxSZh+aziWLtG9CgUjJqtt0ZxORKglwMZEFD6hVUiwJbZpkKMaN5gFgJj3DRQaTPbvjKhTiLAkN/xKfzNvexlgNDp10b7jPtb64raK40QCqCWNwSu/I/CYDjYmHBggey5Y/fRyk+G4W0V9wp6VYxNzELPgtrjbfuDWoHrFcVcjLadx+f2jmBYpjoGUumnYiglhEJMi9TNGe7ZPym0Tw0ixyahNSGRb+J+SH7wNhgYDPCLFa/cysjUaYlK/zdp9RG5QJTbOW1/uyOsz1GcU/+IEfrlziK+VZU8cGxtUaKGS6D3FeFLRn3vmVm+V2maldq9IfqJ3tT6r3iciHyJj5UHaT2VnW2AF/ntFWflVk3WMeZMDeeRx62hswIgyJbANruzfaEtV//s1+slfGV1m8WKgq+2elEXnvh5JrV4vJKdYCvgRmtT50Ip4YKUKgSRl418+l5qhI5oJc3ZLVeLCMqcVBADr/5Mymap2qekffzfmXfrSTMelrFE1ggWDuARB4o1ked86WhuskoaJ/4vX85s6G03En6bOJ1vZOgX4iMj/PPpPkgIlCgDez5F8KaB0IIFkp7p+ieMoI3rbkS8Ud0w1RD9LOJC9ZmpvYK+1PhYQRHh9pseCL4H0RVXEk3IzM1j5J/WMBiiH4bC4jsb/Plw+6oga6UDyMne0HEEvavFPZNlRNyJRqECC3awU6fYnGKGbQmlAq0vVclDE8H3j2MfogC/owbJ3oR/ppwslTKyvky1trb2snWqCX4WfbVZJod7d+LoSA2yZnTrBFLE8uAA5hbCks08oTA+0O7JqMxmFgMmj7pbGdooZoDvwUzzrGcE2F+0odzalB7J8gaiBc4Ef7EoPzrHOEcp8frfU5TDTAaHGsrtD33xLMwWUIbaf+VJatlv22Yf0ZQEPvmbOrh+muzt1ac3aspku/lIvUS67hC19d85vORXliJ1kbCz9sC8fWadtNnz1XmxYliPRcSSDjxOjttDIH7kUNm0u+cFtif4p9lDJJ+KmMN74QbVoH20mFSpMiVq+2tI6FSA1yjPR8WeW2VoRIrtWWxhiND2","layer_level":3},{"id":"ed534d72-628d-4be7-9720-f8f7685cffc3","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"IR Statement Base Class","description":"ir-stmt-base","prompt":"Develop detailed content for the Stmt base class that serves as the foundation for all IR statements. Explain its role in the intermediate representation hierarchy and its implementation of the IRNode interface. Document the accept() method for visitor pattern traversal and its importance in enabling extensible processing of IR statements. Describe the relationship between Stmt and its concrete subclasses such as Assign, JMP, CJMP, and Label. Provide examples of how the visitor pattern allows for separation of concerns between IR construction and processing phases. Include guidance on extending the Stmt hierarchy with new statement types and ensuring proper visitor method implementation.","parent_id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Stmt.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:36.9833446+08:00","gmt_modified":"2025-09-16T15:06:34.9567144+08:00","raw_data":"WikiEncrypted:HfwylyGPL34NvuXFDpnUX8c0+T3rsKi5pLwv8UbRlJmDENNDy9GadJ6qKNEiBnpdkWMCsLbZ+8FPpyHObd/5vAJ/VDEHdol3jx/0rVw88cn9Qi6o2P8L61ZlF5al/SPidXn5Y1Fw/qgNoKRQYCEUB33tKxCa2QroQf1Tlpz/BCvWvXUTv4epnMezPvkeHaZBT+x36/XVE1A0Xzc0Xnk7OLRcf36KiaCOyQZqULO/OH1q6KnvgHKjjKTTb71BkVr2ODRMGmkNzh0tLFV+23cHfyC+qkxG78gjvV8Vxnjg6J0SN8Saf+BCCAuZt7IdYFKe8Qg7ZVfpPmaSueKctak2a6YOF5UMUrt/vk8numRI4THJKU73xJfIJll4frFoK/U1Gs8fqM6soopL8uMHay/CF0yn4K/pcbdQHpZweL5waf+ks3/KvVNR1ZktpUjcgo4X3tTAe0l8/gObF8SSENmMjKU3qcABsZWt17o+A3Hvdb1JwuAzkz7Pr5PrFAyUBSgWjLMsIRzxIfNnh3Y4eUL2NylQnvZ1sDA8eAT5NmsBwe14Pw+81YR1Y6DQ5pWRqwpl1Vvifo8n8p03ugh4ZaFRKAgB3TBFVS0XgDisLRT/+jUhpq0Pn0qjKfKw/fIchuFFSEkatmfL791ua+/TStat00x6sLnootrUW8XiaQes0Ei7HnhuTln13Bsp37YDhVFlPrEAlGpteb7l6r9LS8IdyUN8R0ePXGPfYl5+9iQcGhInuW3INb9Ch8KryCbDFv3HaohDlqFlG44v+WnkTMppEYkHsWD3drWnNFl/UOCju/LjbztWc/OLyruue7BGyPccJxpxp67/rVgG5sxmX/+OCLYoWp67XqD9b6LYk83p9dmN76/L0f6/6EHYNa5VIh4tB4ZWh9JLzgNCXlXzF5f3Py72u0l+EQLn5tNXALaiaWwMuBNbfB1Gk1AJMnmbyAOy8wcb20rWa4SP1XPF7/Xk0j7+Yz5KKNYsPSX6n6Z229B3IhDlFo+DJ24OifldifmlWizkL87ST2dSR9tBPtXeLlFCbZyvqQX/LdgpnkWPbsTfVba0yvXFJHNGK+pfexACbKnKlI+lf8WSaTkho9W/EtFxLjE+Itgi9eToRWkGVo36YmO4kNjbBbDvmbxSGp7kC6EA/JeLfjiMc5Yml9Z/nbWFt2dCu4XFrtZjUzr6uz2I+EI0u//SGL4Po+Th8EC4yCuKQQ0srIEshSvAux/8N3SAwvzFYW2X4pezNNX1dHJh9ePiq3w/aliv9oB0iW26xoLdW6e/HH3A7ekzcBTpvV4rQvuSwzybTyu5bx+VuhEBIblhlU1giG8mQUakRX9x","layer_level":2},{"id":"62e11430-f6ca-4cdf-8106-0a3050bd7394","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Operand Interface and Base Abstraction","description":"operand-interface","prompt":"Develop detailed content for the Operand abstract class that serves as the foundational abstraction for all operand types in the Intermediate Representation (IR). Explain its inheritance from Expr and the visitor pattern implementation via accept(IRVisitor\u003cS,E\u003e) for extensible processing. Document how this interface enables polymorphic handling of variables, constants, and temporary values during code generation and optimization. Provide examples from CymbolIRBuilder showing operand creation and integration into IR expressions. Address the role of this abstraction in supporting liveness analysis and register allocation by providing a uniform way to track value usage and lifetime across basic blocks.","parent_id":"aae5e5fd-c5e1-4541-ab79-3e92c452c9aa","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Operand.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:48.6287666+08:00","gmt_modified":"2025-09-16T15:24:57.295794+08:00","raw_data":"WikiEncrypted:Bh/KpmOqBaGFilkjGTtTezRGHFdlt4p3uBA5usTbufxmX+NLW33ahekz95suii4NppiYLGGichHjA51/xM5SOrA5SD1igkZBAKnryFn0KI+cyQ3iwnQQsgcWumDwrlPdl8YHt9TJgjS1JhhBkOa5B+U0jyrdYVk1t3a9LycoHI+g/VWder95LQihREC61gkd1uuvLRCiViq/s0H+C57UF2xN5Leo/lSwwptgN1X8kGOCLtDEzm8Un3pCo+RCWAicIlZKW8So2WMdz+703I0/kqFmJH9100Oy+j4NKveR/Yz8Cmetm9NWZspkvOV6HCx/259YddgoibiSCsfByZjs17gg7UPc3moGvInD6oBoYpkeh/rmVxlOO8vlcJepBLH1LAQM+Ql/5QRRko9HDgeH1piX0quLz7l01KCmwVCsAvnT3GjpIE+DfBxYi2qY1oprhGBxuYPAeRFhmZrVbYaLa6mwSELEC7olYX4eCWb2piLCPUxqoFYGEfOR+adnhdFhfuFYQaLEAdmXNJSOK7PsT+1kL/PURucLIsOnPf2PelwjkJ4tWfxzpeZeMdqiOSoLuFw9eKrJQEm1+/gkvlxVVoPoPCP+BC594TFNg67tnVawA8DBE6FmAl63pcH/4ugQiVK2EHDcQH+OzjQkI11NpJk7M2nwAPuga4lFHtrUkD0Hq6VZypWblvkApCC0Dlekln7uNcb7sriKjKQrE5CZ3SkGS+0m0zHHSbV7jap+LYRPne0UYrzcUgcSE/n2VX2M4pu5SPo0+Wdy9YEHL2a8J4KJpyDFoEO7SADDELc5bkB1rhDJD2M/I+KTL3DEOE/Zp5UFAS+k6Nzdskf8bKlexuTUckGSlqHNVcxF4fZOnJWDfc7pNO7DFCkXfzt9cnxwIiiwWmuNswc3RzG5kOxOPuPNfioMuvSOGzs/Or8t3zzTjoNxSENTYRJlLqw5Fop1n/Kc6Hp3PtLG5pCBHEBA1YXa9XPg9gIFVe5rlE4pYL8lk2U1j6hj2lYYPjB5tTcr5Nx/tBu0b6Jq6Gquptpo8RYPphdSXge69lpC9VTuoNkuqFszXagI32Lh7Rups0z/A4y0DoImaJ3UB7vJy2fiCB23cbNqGbdTpI2uBETSFsIaPFr3Gp9GqM2XBSmiajHbdhbQ04MGPT+8A2H0gHsRla+TLHNkKYV5Nry+7Y7Iwh8Mf+bA5mVgEfHzKNWq8WcW3tqLRLb2xLjWNaYEXR5qR/kCUKAb3LN/ycl4Vdm5vNHU+iBdx8VHhaJt0ZQ4HGbhXi3xcYnvu0zja0fvNO8qZlF7Bvm1X7LnkWYl79n9QxtaHhwus79CItq1AqN80eEKtoci12PXDI5vkYAfTqSBd1bhG16DThi/qxI/iIK5zBE=","layer_level":3},{"id":"b80d8119-6f5b-4aad-9943-446655f67cba","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Lexical Analysis Phase","description":"lexical-analysis-phase","prompt":"Develop detailed content for the lexical analysis phase of the compiler pipeline. Explain how CymbolLexer.java uses ANTLR4-generated lexer rules to tokenize source code into meaningful tokens such as identifiers, keywords, operators, and literals. Document the role of lexer grammars in defining tokenization rules and how error handling is implemented for invalid characters or malformed tokens. Include examples of token stream output for sample Cymbol code and describe integration points with the syntactic analysis phase. Address common issues like whitespace handling, comment stripping, and case sensitivity, and provide debugging tips for lexer-related problems.","parent_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep21/src/main/java/org/teachfx/antlr4/ep21/parser/CymbolLexer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:14.1551075+08:00","gmt_modified":"2025-09-16T15:25:26.7562006+08:00","raw_data":"WikiEncrypted:Wi43YXAVUi3EFGFBo7WSiMuVO0l5kBSJaSxNtyqFIfMcn9492L3fr36hrUlFYiqow/HOMpTscohwgCyANN3KGvFr0GfVNsZZMFqAGnLaHwQCgGG5aeXRXYL02nxTTe+D3ADuPFzZtgY9qw3k6A4jsBBbYM8HJNwrFCCX8khPtlwxlU/tFeZl7ZgWg7HiO16e6LUAnxm08J8NXLWmaOV2JDlrcu55/QFaJosJ+0X+Ue4fVrpzwy0s8S8g1FUCO+arpYJtPdZLmTTfNQlyVMGvxkjiazx4aVkJRN2IfOCbVA9R1aF6dXzW+aoTZQS1dEi15YHwpMxNqyVeDYzlGWA5E6rjZc/i9r6PBJquaCrkuyF0/0toVUn8xq/tcUe9XaNW/ugVpoKxrnWVd/OUh+rp8qLKQkJgQPUV34ekvYyH+N68fTZ2mpDMYXQQ2Mjj/hAJWhOITQirC05aND4IPzU2zZ355fso2Rk4iWQy0wEaLtblvQFwO7bPwcjTwSG5AjqJS7Kv5+cANiHo5cjLQ7zCS5K2Wd+n0R9aiuNqFKyRjKdoX471MvdnCZ24OXZ/Q/dCHWvVvi0m0QWNbWpwNRe2a+THF8CL2DJuk9hUKXCrEr43tczjUxiNYvrgT4rDjLfj0aYi5WiDvaDRVfgA00oJ5BPwuBrN5MmqqucEQSnP0cu6txSKybvpfphO9rUFOOjsPx10bYz7ufz1rEt++3F2Azer7z5iBHbAz6TFrhO/P2lo+D1mrOiXp3mcs1mCFLglNKPjDPeM06srkE4JE0IwrzMfKQIT9gUvOxLIl4lLVae4gBFbKkj/NHuFe+Z2hm3w49W9PfpfrbvKCfQmoIOK1EBLW50XsgHJDyukrCv7jezuwBKdQlLoA1UuQKrFv9nTsvj6KrO9vOmm6b/MEbeK+j1Wxhm7bIBX9Fd6F2jHe7+2OY/tyiwNWl9+FCBSCmHS4wXfE+y1g6KPJc+EB00kj6vkBnAOmdBP/+Dw6Te2gagQax7u6XdiOUaBFT/QncmrYiSHt4x2yL4H9kXfQZXNZS7sdHakGywCQ+PDuoBYjHSfUlTrCtE12Xi3zmQpXh0BzC489/NHVHTWP44+CHWqyqyfnekiREEhcTEeHh3YcN8LuLkwLOEuCQPnwMmEIhsNljGSvVRZYCDVZsmhPRufyjt+ff1sr2t+0bS7xtQuWDoCVccCYCx9UeaTg41zprjoZLUVgeId0sj7o1xPJu3udLJUEXP8bLHdznlaGRgW6/Lz3A0KxsPOKWa8RZd5tzLJ+pTUdz4SBGNDrVb015IDXo7SKxA8REr83r2glYdX87koe/8PBns+xEirnuLcJ89a+hVby5Ft93zrKpZi1rUzRk0vAIdrauburc1UPtEBdwH8aiX5fubH+oX63RksDAHH","layer_level":3},{"id":"e5ad9a45-9d22-4202-8c87-b46f9a12b396","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Compiler Driver and Phase Interactions","description":"compiler-driver-interactions","prompt":"Develop detailed content for the interaction between the Compiler class and the driver components. Explain how the Compiler orchestrates the compilation pipeline by invoking Phase implementations for each stage (AST, IR, CFG, ASM). Document the role of the Task interface in defining unit of work contracts and how Phase abstract class provides error handling and execution control. Illustrate how input and output types are parameterized across compilation phases to ensure type safety. Include examples showing the transformation of ParseTree to AST, AST to IR, and IR to assembly code through these interactions. Address how error propagation works through the Optional\u003cOutput\u003e return pattern and how error reporting is centralized via the ErrorIssuer interface.","parent_id":"f1a59a9c-eb6a-435e-8fab-8701a6b44e34","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Task.java,ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:16.1343591+08:00","gmt_modified":"2025-09-16T15:26:25.0697373+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U196mR7zmyJXFeH4XDcyFSrzYHvhouCoN0g29VJzlKRV6PaZw+vOUKshRHlQQ1gfi1VkVlWseSr/UhR67cWOuu1ubyKSj0k5SdVE5EJYKVZribCr3JIc9o4jKMrbWnt/oAkcpMcPV4HmTWww21DLgQadbHBykyAdcK6GMMvjp1lffXLAeUC1L5hzN4MUVi9H66JTCO5jVr9Ih9LZUAAlm9Xe5kRsauqT/lyxnKbcnz2s+1SHMC5yafC1+uD74Ok/eLC9Fyo/uHpSd83t1P/aRCZVyqE4UJEcAPVNi4LAg+vafJ/v98cM6UCrl/tGSKb/UIHkEs89KkGMqu8NjpJNlrbSWorFRPktTRSugUx5Lpx5ypYHcXlNq+RwOyJVxYTbz2YoyzDRHb8vX7emVHFHRY1jC30tdNvsJMms80u/02S84fOTCe1u/WxA1N6X4wcgy2nn6xjChaOzu/rzW7FnYJeckabnP94ok8QZ2DAV7urn4IycRtUJZxLiXo9PRxD013qyM3wzZq+k5YWd7WgXG0l6eRDvz3uCsD6HpsGb3Dzvhvu7C1CVzg+N/B2N2KHzTHa3ERE9cTdh9jHyzPI2v4CZvPfXjrn8vOZCNG5a5mozauSns3QWSLC3xkZunudhxHuVVgKD0pqaIXu712+xJCyk0kkQzFa/m1NrAqsLjvHX4YAMs8Hg1juBMYEi6w8Q7UtLLhFXmJRbXNJLe2yBwZEdohNhe8gtbMj5U4Hnz6lgL6oJjlCxLdFXijJ3F+EXFeFQxCTXhcIc/VpsLlPdB04UUXO2Uqwc+H2PGaZkyDw7X4hz3A5C6zAcXuosZmBLTFuC3A5DNK5g4lTI1ObMIvAU+exHE3vA02Hsczlmogw0/8/kK3I0NSj1RcHtvxrpjGPa9oa5FDsIsFpx98TBqXSMVjTQG9grqaPuPoi0I9jzolNWEZIlX9+LjUGH/vwy3S0aMy4uUhfLlKoNBHNebcR/QmB4R2FsWNRzSqSpyNQY1GN5hpc+oV4HFUQN64xnhO5vKinaTzhM6T+PhPCqI/ZCzhDfAkSIwhr/iMR9XYyz1JvgdKfpaxeDg6iyBfDbJgAYLUeqIQ4PU/ajeJohSRjrhApqkWGRuRFLZUQhWUcCSYYFYJJPulSx3PNCf0SJ/jIdn97GikiF9WI/EhYR0Jv6Sr3AS3VHro9cS9tIOe81fDNXlISx9m0guqcN2ezKXMJOh+pboPUMm88zSKT8TC2GL5+RvHz9PXEfMck19jivtsdo0T0I6G7I7KnvGG+XjdOWdsPnpAs99ppbbsCDgVE1jzdDeWjhkzGEZVqhNx2QKl8gY8qHKenr6RltJ6dYCygQJDw6MVbUENkRyqkFMCn21q8tuC7uslAa8hhziKtnmQa/QGzXkxAjs9si7cBPFmnFbUd/O/aaVXKftIPcIRNsluUiUlSMU8aGwK/UvTZbvzAk/cTvAiSiqr73/2ZoNSNfLFLvk7l5CKUg7PNdRtcsUOzXDhXDJheXTdBIGspOxDrIHaulHy2pUXt/VePUJ7wL1wjCPF50jzOIMoSGp+MSaCJ0tTW0Vy+c1+mBwedNOCrv98quTXL5xdNIugRzObUJ4i4czCNVkbqJq2qLGaA=","layer_level":3},{"id":"8c1af1a7-d93f-450d-b2c1-a9eab2bdbd1f","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Custom Optimization Passes with IFlowOptimizer","description":"optimization-extensibility","prompt":"Develop detailed content for the IFlowOptimizer interface and its role in enabling custom optimization passes. Explain how developers can implement this interface to create new optimization algorithms such as dead code elimination, constant propagation, or loop optimization. Document the integration points within the compilation pipeline where optimizers are invoked, using ControlFlowAnalysis and LivenessAnalysis as concrete examples. Include step-by-step instructions for implementing, registering, and testing a new optimization pass. Describe the data structures (CFG, BasicBlock) that optimizers interact with and provide code examples showing traversal and modification patterns. Address thread safety considerations, performance implications, and how to chain multiple optimizers in sequence.","parent_id":"11cbb601-e7e2-4319-80c5-23ee6b0ecc05","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:42.541551+08:00","gmt_modified":"2025-09-16T15:26:48.2316949+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl+aeoHe3QIOvn54MeiLXBoFD+K+DKQHqmE4uaFUj32mN9d6GK41erWekqpHIsgjoAZIiGdDAqxngf23MQ1fjNM9cCSLEu980U10lUTM6/b8K74mBQ3iRu4tZEI/SOF2X/hGPg9h0GVAa4QSrme8d4IdS+6PR7FgZSfo+PKtFKKnj09+YM/YrtKjqWraCmcyZn7ayTJIM9XXec2rCH9D+Arje1BHNiLJRG065ATSoppJUGOde89/k7G70EX1yb7KukBvVoZfCEx9wN4KwEA7TaO6rSjDI0oqP3ozgNCT5PaRZEyIN2MFtBNYsqEsl062qGBt8jf9VSa6Lbgvfkw/eFpDUXn9XCpJ/ZAiOqWMwa9XsYzCctHJEni4jf5sJgWnx9bcuBn3HVNWLyVnIyb+VYIUrC+PAm1IRGGwVYSQTZGZw1bseDnTgDi3AAbyDZtaWleTpL9rLeUzJe4pPJLCwuVAfwGKsX4Qv0bmCjOc4NkwbJfN7pDmdn1YmIZZ6OTObWlQ97sRhU7NfCB/F2iq/TTEO19ozSutVEJiSxE5za7lhW64BxcxACYP1OwgkaFbBPK31p1DvIjkDMbpFCwyiTs6BzVTEJ00MMLjRuOyJs/rWuq5MXsy6VnP0Luzd9pTLQprrQHhjZsRcBXc27zmjcV1kQCWMcnApWKYMGx0tcr8yOy8TWOg50D0eNRp6O9pxQ5yhqEVLpppqmobsn7Zm9AgQGgcC4UKR//8IXs2mPdPFNUqact1Bq1a2w4tg2SlbvHtTCC8JqTCfgJlxq6GD2mn2s6M6aKt0jtSiYb43cp+ILJ5jzBdqSgJxww/kNAPh6k6f73W1R283NxBoZuzk3plptdnHbon9A8iSOH1ucJeGL+RStVH+x6ETh18E/JEqkIu0injkAMKxD4N11SxVs7ZWR6VEoJyDz5QVe4AtBFJcFDTcrIYGUgTLMqWXW9TckHT2tAqkAx2ta8powIP6oY2pUBcRfKPtQX2ME3BfbKogno+wfMuuI+EccVk8tYeVhZomxdE9VHyUJFBlet4vjO9Fmjk/fKqVPGAfdi5LMM2SpAe/F1aGmhHAA7t+TgZzTu0TG1cBQ4KB8fqP/ThCO6pR69Q87SowyaZ8dG6SLknavlR52uQw98QkjXyEAVRTIwph8OJCmmUAKqObf47FPbnrVA/bFQ90ZZNkA1uPTi+dtpL8RJl8qgmFCcoS3do8XXQHyhkQgRXKnO6ZPS2Xh9Cu0bOTti4NbcFB+UYwAUIewKpAFW6yUb0Dwbl9qABGOlAKRw+pATMksicW/bbM3ZovOGFnfk4ab+SOuonBAUjxbIsIUdozlr5m5qdjtNs50180fXGQWRaQMSzr01ySmz0bDCMN7JuMk4cC351/NESF4MzTcBiLzSMMx5K3nqxxKhFE4PHA2UE7zb7m/bpcvTdihRgGaqNhY5x7n0qGRvUYXqiIqvvoTY8tjLkD4zyO5s5S6TdAAUCgNX3eWwhxDPQQXNEt1GdsC/1iLIX9MmsgwBQwEGPM0B5DcL17EQVs7e4abYUrULmvKi87lGC5wpOsiCTkPo+pJnSOukBybwjAkrpWznmSY7cpav03tjfwcVoRRbW3pRMGT6StQ+L8xZZh2gD4oTgX8p5EhLeP43CVFBJDtOMT879Vforh5mOe30bPl2NUpB/CvGwCYeReD8F5tELf+NrLsK5EkLsSzGn3JxL4ezlPmnYlWqrMK+LHrg==","layer_level":3},{"id":"b8c07031-73e5-468a-9590-2874ec0d3560","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Visitor Pattern Implementation","description":"visitor-pattern-implementation","prompt":"Develop detailed content for the Visitor pattern implementation in the compiler. Explain how ASTVisitor and IRVisitor enable separation of traversal logic from data structures by allowing operations to be defined outside the node classes. Document the double dispatch mechanism and how accept() methods in ASTNode and IRNode delegate to the appropriate visit() method. Provide concrete examples from CymbolASTBuilder and CymbolIRBuilder showing visitor implementations for AST construction and IR generation. Illustrate the benefits of this pattern for compiler development, including ease of adding new operations without modifying node classes and improved code organization. Address common issues such as maintaining visitor-method consistency when AST/IR nodes change and provide troubleshooting guidance for dispatch errors. Include a UML diagram showing the relationship between ASTNode, ASTVisitor, and concrete visitor implementations.","parent_id":"c9718273-8ee3-4b28-9a04-6e8d7cf08ba8","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:42.8080519+08:00","gmt_modified":"2025-09-16T15:27:23.4402923+08:00","raw_data":"WikiEncrypted:dF8BSW7cEiXf9j2e6Ei2PlmD2AtFytPOMeZrU4XRoIu9aKgi7Lp0Dj70sPFI8++fCjjF12VjMX6I3VVEL8lDwPEKnH4QKNVWG+EnVZFXoXMh/pUH3I1QL6jsbha1/i3F+0Ciaj4Atc0qGbcoLCRHAz2d+tyHSDDJhxPmxtIQJFCRnAnUwli5EK3h7p9WzvQWRdHLJddDCrAIzNbOp/GQLw6j+NdsqT5bYYDnregDyciKFosXzzw6GoE33TkaUaXmu5gNTG0OrzOKx4ecfp0bkMaA8u9X0PJSgZbvriC/eqHuJrac9vf8yYRfZEJ7t/wk1xyL8xRiFx5hhMHo22yHOeNRk+HTkfHhU6wW4E1BUmwxMEhnFWNZOLBqDN7uSk1myo3scOQBBxZ3qUITDm0AFLiW5BP0IAt12Vztp87ElnSEidOcjeiy5bslbCZodm5YG9fbpRrcT+fgTX9+v2+gPHgFaXFoor/K/lUMd/3ZFCzR8NhbVzzNGvGNfB3sOr1FV4o5twL11xImpEdtKgwPtQOVPhfmAPYAJotOSisjYZgkjMwby5mignxLhuFyUNSuXclEKJ+SjbzeDG7EDr4KTBdsrOyvAm0417v46uF3EGn5mQypVr2wk8cjifsrOw2/l43zn0l0tSD/aFuoBrsY6X0ozd+5riXDNd69TKrFttuYR9dPLb8N1XYz228vefG88M4YqeI9KV50Irj3f3iQIL0TUWwg13ELLI1m8plM1a8p9rZaGL2VYJU3VGPaG/1cUrORuyTP4DC7BFWWkfQGMpuvKQY89f+uCUJC2J4toyHFrY/MjCWZSlIh5zYJNI12ERDPfgXyFX6A0ceAmaDRmeKWfQG8AwHkKRBc/9E21d+cI34aoJHShogSERrWlLZ2Bb4Ay9fmmqDllLaJ3oqZQux48DXf7ib3e/hVFtkJs+gISMhrTXWwziTp4JFbMXfZqrdX+KZ2MbtV8ZAtSovv4h42v+5fwwgbFnQiEQu7JROHoN4cvyRLRPoJnRmEKaIAvGDZIWy3hygRxHB96z7QKXszXYsZGToI0Pt6/m26M+7H2OdiP1s/nenLiTJpESmLctnwagjPAvSZYDH8J5ko/VkoCPieGK/TYBmiypPy0n7StAc3sl+risqy/JKSTM4hNuXEALH5hcH0FD5PM9aStU4D+nQgzufJLB2c0xDcddVMPc11/ga22k70C48HCpUq7I2Z7BTD5ytSrDHsumQdnbjh9HHCSlkKHeuIi2XSM1nftgqZl8ihGJEgzbpWgF+W+6r0TCr0RWLPtQkDQxA3/xtK411ReCKP2x+zbcPzMuCBJ4M38L1ds/oPcTLiHYN2JzLwIBKbtxSUkbRzFUK2xsDb7xYWZgvjOryASi2u1u/v/lRibNDcVDFTXsjyS/q3uJTrJfvGf3Ulf3PlmWZJ7rrHMDXYMLQ9JJ4X+ZEYno7on5R3weA5+DxwsUMc48h7mXoPXIZO6lzfsCFla0P6WUhlmiIQ4F472nqHZwETSmEjn3d6eWmYKT2HoTLeArzGeAusZGiO5Grw0QtvJc1GgREF0DnuzLcVM/zFSFr+XPP5RTGVB8D8xapSkI11o4bogpPtu1m4+0kX0+b45A2Z6W5YQO7Ch6o5PZnOyxuI2FI3QbuSecwLNTnXM7hBLpY1+v1Pnc4s4c/XViAdfIuTS52iMsTkY039rkJtCXw7kwILKcQQnq5AxA0MsWyz1SSPUEp7mwNtxm5C/O9bOvkwxWnSfUG5PG7jQrPUoQsjT7gexagmMsYIVP6LjtM0zBHHDg3YUXt0cbNllDgFEsxu5KFWmVaWX2hWlVa1gBYSUsbUZmQ3nanHwKAqrCHR0E4OOCm1xzrB01oRIPecSN62ARiZrXoNlOaRPIQnZa4RkSlj/GT8K/SYTduw0luKyUEjUp0Of7C6y9GP0RzkVNyiME1CZWU72nwq1cjWuUtPCYvqR61lI20JjkYjj5U2mmjg","layer_level":3},{"id":"6b71a676-0c1a-4fe0-bfb0-8d9f22825d57","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"CymbalError Class Hierarchy","description":"cymbal-error-class-hierarchy","prompt":"Develop detailed content for the CymbalError abstract base class that serves as the foundation for all error types in the compiler. Explain its core fields, particularly the Location object that tracks error position in source code. Document the abstract getErrMessage() method that forces concrete error implementations to provide descriptive messages. Describe the toString() implementation that formats error output with positional context and handles cases where location information is missing. Detail the compareTo() method that enables sorting of errors by source position for coherent reporting. Illustrate how this class uses the Comparable interface to support ordered error display. Provide examples of how specific error types (like syntax or semantic errors) would extend this class. Address best practices for creating new error subclasses and maintaining consistent error message formatting across the codebase.","parent_id":"896ae6fe-867d-4388-9fcf-354c9e9462d3","order":0,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/error/CymbalError.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:01:04.5557408+08:00","gmt_modified":"2025-09-16T15:27:47.190493+08:00","raw_data":"WikiEncrypted:p3lRqT7rUYitsSesycIwfXPeu4yeEqab7c7Jj4LMIpjWOREwuRPo55zKaYepMjGkARLcRTlACkeLp/LcQooK+5YaUGDObkPZkn4W9QqdhIZ3zBaNAtnet5XGmCUgjGNKLDvX1IKW64RvZrYGHR8AKacb9mjvOdSE8fZcOzENBqB/A+QMjrrEhYnX4yIXDTYBsz1LlHK1mC1xjrzZnwIY1bO/PJt+c7tu25TgeX+XT7sPuQlrNzkTJzVwRpnQDQ1I1flD/+kSRM66d/s9IRIG8YFBLD1GvmelZf0N2a8wryQDVY4HYTGVdSs0S9MfFw6MdW6/TPaRsVqxhUrjody5tV3FSTw4rh0kTS1Z8h5pRh1EwSqBtZhrSohehGXbbqh/AhZsgi17LuUEt41C3EDf+PO904optR7JSsBEncNSRHmysIoCgon65PDJgQNi0DWVXLIh3CG8ce60YzgSWTf/2HCjpNLGEqbHlbKZzgDVmSXCmo14Di5RCj0XA1EOjIZqIFxC1Z9Q5rDX8IvQtA9LfbHZVubODcOGnu/rj96ONLiiN7wXPdOx5HGDgH1g3Y24kxrZ+7WAIWOfW7NhoRX4FDP7qbLzmuh4+sfjkY03vgMPfGm5tWgZdacqSP8xgQfLSXdfU19Enk3OkB1qsxjFrCV0U0rhWWJs6HMgzm6M1ZzT9Ee6biFE2hfAnnVhSjVyh7HMXRlmUqji6kUG6UCaNXX5dhvG0B1c/hNJK6Hbe7XC04NWduTIYg8mX83aoKtk7QLLUEw+lxpFnDp+idqDJYaQU8J29Er3hLYhksXXgx6i21ySiXqevUrTKtdvFTSWZCsQ4dPs97is+BnwlodVkUApS5tin9ueHU8frrb8Jje7/FjMcmeCV+e4Dg0E0wbm/fdd5saOfa09o3SYi2qCD6wOR63VW7t0TjYPyWTHNWVfGmNsu5QpKOdM4qc3sz4WVahK6Asuf9epBlN+a1G34EngSpSBiXjWHvPsFPC2Z0DC1dARXvym3TB5XnckdwQThY6A3EVrm38nWfFlyGdEjNeUf5YO1MwKLjPxcL0bg2PjY11FBDepGN97NbAiGB0F2mfhat1ijf9FFqNoFabApufPrdD4oZdKlKPZgGwMwT9sihgWrc4iHdhSJvH26NvMRcWx0kDPzNAJjDK51kHQ4YQL67GWYkkcY8D0RGfYYquzp751NOVVdF3hrgYFeZrxUhDJ7mhhjLlNGN1MqycxzSbFcu6NBwyL/XOFFn67d8hPao1FMCMtbicJOuma6IxVmMTpGi/fsdlHi7rY6rgpJKsnWHne4HTE1FP4gxoYMnH0SrieNMreC2+68XFAPW5eX7QS03bVPztfhxKHHGqoDo0jQeHgZoy2OaHYhwQLRsWFK+jO+bX+RFyqr81m0uU8BBj9AcF/+2sJzKoZinSnP5iwsIEm4qsQmrs/Vu6fax6qvkGoTSMk8XSMCXoph6dqnyMFmHYTsJMBsKnI1eljxXJ7cVM2Jz6bsnHjWFIUw27RmET5KDhTB90vfBmm9TiJfcujZN9iaq3DNamlNzHceHMtRQ+S6f7nv7xqxHeIMWB14MwKno3kdb9kl4u62splc8ZfVBo8geGEDMKRg4uBulU7PJ6aA68hRoxdGMaiXUYs53eoHTokmACBvx4heZbF","layer_level":3},{"id":"661f3c30-4572-4ede-92c3-ffc405d097f6","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Getting Started","description":"getting-started","prompt":"Develop detailed content for this section that enables new users to quickly set up and run the compiler framework. Provide step-by-step instructions for installing prerequisites (Java, Maven, ANTLR4), cloning the repository, and building the project using Maven. Include commands for compiling specific episodes (ep1-ep21) and running example programs. Explain how to use the provided scripts (run.sh, run.py) for executing compiler stages. Document the directory structure and how to navigate between different implementation phases. Provide basic usage examples showing how to process input files through the compiler pipeline. Address common setup issues and their solutions. Make the content accessible to beginners while ensuring completeness for experienced developers.","parent_id":"","order":1,"progress_status":"completed","dependent_files":"README.md,scripts/run.sh,scripts/run.py,pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2859531+08:00","gmt_modified":"2025-09-16T14:02:02.3114803+08:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWjspqw7wFsgcSykO0UmGZY8QTKN7XNoRj5gLcQItLpCOKXutiG+6VCjcMYiCHQKLTKHX7TgOmS2ElMYTPD3yRrCuxRNso3BnmSLYayUJrl5eI0nlw3f7kP9QPyuhnk/x8OVtd95LEIiuKCwdeEYKIMdenK9+fDbb4b7iAAUhdcG9uKI50xiEEY1jOc5ts1cC5Amb0nhV5sLBTM7b2H2Owhkf93dQhjfOlnSnkSu2uCU5Nd5V6x+RhRj+XX8XM0ypw/Lp/YAenyBYN8iT7Oo6KQeexJdUoyuXo5abnOw2tYFSth9VFSgjx2ilWurizJ0AgsP4PsW9ZISBoky0rJrtS8nqupeKkOTqEw4gtOdsG5R84acv5MXta0Zcl6tG6dhTm6mZoS1CD+HqzJdLKtJ/9BV3BknISyBuBL0TiIN+VGM4IsaVJCs3JiTFJJJJyEvJrwCqqTMOupvZHJ631+7+9+yseycjnSG39xEbGtW96B97FnS4GfKXmqettBuhdbhVTthBd4bAJIgPJQs+dBVfMCyXoWSHXluc44HDe2GT2UnlsGSK1i7Lz2wDpvJx/NGmL/d9EKD4QjxT1eu3ByXdvQDDhAPIjFBCiHS+3q1VsaXj6cJvQhs8qUEcFfc305a3ek5Z3EwNOBLfeW4Ucnc+1EJxITJdQjgr9JPr705tLqHhU89WcsSNaXjay2ytqhxH7cV92tR43KkV0Anx3s2EFPnx2qubXsY5fD9P5K+0Vfv/Puvzm1ife7yQ//K3d99U1hHTJQQXpQlK316A4/QcmWOt1J7Q5QaoPboTo5a8eiZtC3dTkkHoW9uM7TVO6sfCA00gb3c35JDSHR6gL32cOOWwvuNcBbXcOXC5KOY6APck4uEuouQGyhi6u/oCCnOvids2J+i6y1M3wJGLipENLGFkMXSVOXULFoYuPTqspl0wF+jL3XAwZ8UNB3ttJ5Xnv6WglDEajttUbtJIamTep3ukLSzOMjKJLr+WkM5Re+P1IB8h6An5kf2IXe8ivikdpGHobpZfZst6VJk/AEU42rINyhIL5mrDaxAaR0XfISg+wA92aERlAAbjkg2/J+Xcq1kA7nRcRkQou0yHeNjvXDvjJgEZBZK/Yj3nUYU6x5xA0K1zUUCMKDbk+H/Uf0HwY358La1AtKC7BuINJFEh+kNYadY7cM5MG8EbasmMnVaX8m9Hy8SCiM13gN70bMCvS1OtzlgVPAJ5TccUFtB66dlc7ho0BfKOsZTueP4KxdK3CAR4FMyf1MQg8ndj/PKfKSDi3KcvWu5SLVrRbjwAk2trzuP0LqOAQ1mdQEunPLT36EdxC3jLPBG/z8SDhIa3SD3KwD4sm7lMrICjx/S3DGbk8u1OG6ffDeSpcAuW6iqZNA==","layer_level":0},{"id":"373de73d-1fd5-4ad2-bab8-0877f0474ac3","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Cymbol Language Specification","description":"cymbol-language","prompt":"Develop detailed content for this section focused on the Cymbol programming language implemented in the later episodes. Document the complete syntax and semantics of Cymbol, including its support for integer, float, boolean, and string data types, control structures (if, while, break, continue), function declarations with parameters and return values, variable declarations with scoping rules, and expression evaluation. Explain the grammar rules defined in CymbolLexer.java and CymbolParser.java, showing how they implement lexical and syntactic analysis. Provide BNF-style grammar specifications and concrete code examples demonstrating valid Cymbol programs. Detail the implementation of key language features such as assignment expressions, arithmetic operations, boolean logic, and function calls using examples from BinaryExprNode.java and IfStmtNode.java. Include information on error handling for invalid syntax and semantic violations.","parent_id":"028064f0-4617-43b8-98fa-7f5a4c031eb8","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java,ep21/src/main/java/org/teachfx/antlr4/ep21/ast/expr/BinaryExprNode.java,ep21/src/main/java/org/teachfx/antlr4/ep21/ast/stmt/IfStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:06.4354823+08:00","gmt_modified":"2025-09-16T14:23:48.1099391+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"9f19749a-9488-4a84-9180-95fdccc13ede","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Data Types","description":"cymbol-data-types","prompt":"Develop detailed content for this sub-feature section focused on the Cymbol language's type system. Document all primitive data types (int, float, bool, string, void) and their representations in the compiler's internal type model. Explain how types are represented through the Type hierarchy and TypeTable registry. Detail the implementation of BuiltInTypeSymbol for primitive types and their semantic constraints. Describe how type expressions are parsed and represented via TypeNode in the AST. Include examples of type declarations and usage in variable and function contexts. Address type compatibility rules, implicit conversions, and error conditions for type mismatches. Provide insights into how the type system supports future extensions like user-defined types.","parent_id":"e2f12f88-f04c-46db-9f1a-c69036de314a","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/BuiltInTypeSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/type/TypeNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:50.5867566+08:00","gmt_modified":"2025-09-16T14:23:07.1205912+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo09p70KYgk62Xbjw4ejbEfeHIJ0/obvtKO90zfqgXrmCzUbrXRSQlpJSQmpaXIJbjUpQmmroSSHx5aPObrO+RWCHmxMCm/hbq/uz8KLaCeH+R3/c0/hE5Am6Avj6AuVtsnJQqQrE9KErNY7Mish6SG4Sq+QKlI/IOoejG8lvj7Zmc5ROAdf0OA2chrC8O4xX51T1KYjEzpcZl5MTQ5q6UDjnq2swpjqT8N01hle48lTgxVCbC9DrBuFhDLufdJPZ+fIrYd5kzcddSxRcRxe8eQiLIeCytv8xWZfM8txO5lBZL4ek7r+M6NmMDWko4g3ZoDXeJG2R8AK71KQBl5OrvonbcQYX73dn5KA2Ptf7eWv1s/N9WVqME+MK6VBddE5oEF75hR2EfR6ze88Y4HDpaQPPxs1MrVKIj2gJzM/e7I1k7NYv1akC10nIBTKE8kkmgpSM8RNmMw2C1+F6U8OL3jmSqk0P87klk+aOqk+UcUz0z7UJtUp2HkjzrqULPuKpQzNVZTUdMWMJI5sChuWHS/nHiqXFw915cERAw7yspQA/EJ0fxO5GZxXi2ctw7zRBdUl664MoTyqc+gYOdB0lsHP0+Mt91/O02azUmlOm5L0LMn2NUxkBD5hhJeRBGq/SmhATbTtAMw1tnrgQq8JfcaV+9bGQoDBjugFiGwMUT9baXl1DFgAniC91AJfYt+NSzSP5PbA4HpuQABVBjujUVaS5JqVVQhTyHKF+z2kFAndXYShAqhEC5DBw8ExLy7zDNQa2AhNnYKdEIEFYmbfyCCCfyj2l8FEvWev1r/T4MNw8VrG/EFZr903yaxVyy+E9ZpXrdaKn92sey6a/qsAF+sm9ahreZO7lnJelIJwVdOH29FpLI+FoTeAA90yrOQ9Y8Y9kAgAOe0os0M1OiLIaXl1FMa6WJJnD+F195A5APjctklyCnUpL6k060TbFWWlUbEFYXbiMTJ4EhNISeKiKl7GMQZzvKeVVnvidKQLIRS1QfY/JvuRTnJqcRpZy/JHUwuZp/iQyai3nHmdNIRALM5xkhVwgQZlnXY93xoxJrn6jTclFXC2o3KWYRxvX1hTRs52ZcKbV2frFnTL5lyBtNyFKWDCdbSofWPPL7OC44D4I/7RObxs5ccHimOT2lfue0Als/iLHvhPnsh5/khtyK4qr1qMIk2Pd4amXXCVJX5fR/bq2vBW/nRESjzlXqX4DsDo+Xh9y7hiekO86SnJEe/w6USYl5SrAGtV8Hlnon4t8I4DE0/CVWFfLEdHUH0vson4oRUaCFZTpUXlz65GjakybcHdLW9xpacKqrWxl0CjnQXtjwrURadMqVbtHD4tzCdWvt4NVaY8mUzAnkFexh0AyEHadCvHU3hicNh5anG20R4B/3KJNoML1Tdf0xvfUP+zaxxZdrT6rP4gf7Yx00k+1Sd8o6wq/JUAEY1lUjPrunAwRswsmFRc0z1+62TfHEWPZgdTehYrgLUgpbQhpMwwCSQRZVkjEiuEIW9+JcaIXbw7cJUEi4aIam2axUUUKFctv2lROcVpMU1AlPV83hUvQ6Vctzbn3pe5CWzWjVwTAIKIxhq54p82f3Rg4XoAd8Bg==","layer_level":1},{"id":"04bb9ce5-9724-4759-b127-08200b9bdc24","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Syntactic Analysis","description":"syntactic-analysis","prompt":"Develop detailed content for the syntactic analysis phase. Explain how the CymbolParser.java implements context-free grammar rules using ANTLR4 to generate a parse tree from the token stream. Describe the structure of the parse tree and its transformation into an Abstract Syntax Tree (AST) via the CymbolASTBuilder visitor. Document the grammar design choices, including handling of expressions, statements, declarations, and control flow constructs. Illustrate with code examples how parser listeners and visitors traverse the parse tree to construct AST nodes. Explain error recovery mechanisms in the parser and how syntax errors are reported with contextual information. Discuss the separation between parse tree (concrete syntax) and AST (abstract syntax) and the benefits of this design.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.1693919+08:00","gmt_modified":"2025-09-16T14:24:33.0165289+08:00","raw_data":"WikiEncrypted:HgjcmVTJRVnJXVPG0yx0luM9biAbnQ9YnVxVHsQS89PS428SZMF2j/gUtLl6E3DIfFLnvP0X0ar90mbUZOaQLcb6SxF2z2J7HjRYxOhDoZAlHm4wK6UiZtSrxbMjMnNxivMrhtVlXdcTedRYqAQ/Vm8JSurZehd6W2hucjF7zMS/y+fvCmwGb2sCbxkhtFwvGg9pb2GQX0w7nfNti/dasr/qM3gwn4nzsdkZw4J+jdVnuNRvFIuKHC44+abK9p2Lp+zlfEHypEaa11/hc6DgBLHlbPWn6+y1SKMeOTekjqAjPnfF8lSL92tr2OViPrmEWxcayseZbidPg4Hx34VJJI7YIzHIE6yyd6Phv2lsz5Xyac8L9ZFgbKKnm/9xs8jOIEj5+0dEfx8LmzO+eIptNDltDNiUZTM482IzZT/QA+yDT8Nr5BMe8b9kXjKYkU+gp691F26PGe4wU9rVwkrmymD3fwBDoxMw/Jr04TUSisceJtV9bcoVNGYIEoWSnH6gv9okSb6hJnRjOeLi084giqpUPuvvle0MtguB5QpD+wO+ljerBlbdpjPAXgE22mazQx5zwPXxGNUlYLLZ4shjoEanQlwOqBjj20Irew6FiMBKWbuLuXhWIQ+m/7ZdRre9tiMQPvRTJBpfqIIJ84veTrPL5hJjwHhuE7QSe1S1FQjI3SQj2c4uU2LNcC4jvmIM10mnWwjpVcEAhvcZP0FvlnVc15/ZsKl4/VK5O3KFkjn7OJS1gFudgzD5+3pbsykA3YkrrZ5LEbZQk1dsb93csVu8rz6PYYnoKR0oB6rGGh+rb/V8cJc5WQ0Iwanuh5O0Ro8782OBGmOjhkAd0/+6+3oC24IaB46jBQwd207DitnoqNpTzztdlXPYESCr9e6oJEM9T3C7XSxsREwFyTIzXs5GSQWKKfrse7dOPKxOjV/wsUAX3rcuCLWX8eXbYxgPPL+xQ0z+NF57lWPBwCWWs7NXpkFQAhW94x4NLt1UZqvsE2kR24qoRedszsA1GQQcXH108I4jz4FHcaVG0n1QBpU/rcPCHSByY/pmUDGNRxikP4oXxK6EybJGqZC7F0RKh+ETrj5EBHNmcINmOTk8rkjWpMo2IoWVUGa6CtjXbnErmJdAr3uDkB+NsEexqN7FwgmQqwk/slB8jVoOzXCcWHYCYKln+1SyNYg5i2YiKJngqEOkLTjQPIZtZVETMi1GdxuROqCMGh7izRVzu1KLCBYZnDinVEiyYnfSbAmLMJVUMuelQUgG+hHoE5uL+ixmjOj88ykAWDcIMXRaFLu+VC7gMuP/JiUEJYnTLfxXpP3atrZKJE1sbd4niPe5iXGsHgvjF92uk7bqeY+fz/+nAsz//FBK8JAuA8ViCdai+4MPvL6ZlQPBf1p+LTl8V19xx1zEfb46ImBmOg7jryUjfqW7Ss3tVi1B7UHCVn2c91INlq5uYLWqVA1Gd1amAEim","layer_level":1},{"id":"0921675b-6ea3-467d-8f5e-f502cb7b06cb","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Expression Nodes","description":"ast-expressions","prompt":"Develop detailed content for expression nodes in the AST. Explain how each expression type (binary, unary, function call, literals, identifiers, array access, field access) is represented as a distinct node type. Document the properties stored in each node (e.g., operator type in BinaryExprNode, argument lists in CallFuncNode). Provide concrete examples of how expressions like 'a[i] + b.field' are represented in the AST. Explain the role of these nodes in type checking and code generation. Include diagrams showing the structure of complex expressions. Address how operator precedence is preserved during AST construction and how constant folding could be implemented using these nodes.","parent_id":"991e5381-362e-445e-8f05-5e5c818d750f","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/UnaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/CallFuncNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/LiteralNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/IDExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ArrayAccessNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/FieldAccessNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:18.0692777+08:00","gmt_modified":"2025-09-16T14:25:00.6543078+08:00","raw_data":"WikiEncrypted:RygSfF6eX9hx6opBlSA3CagVMpq9llRxEGPUKpKHDfG9jv69LSfm4VE5JjkKGuyvRCOZJWa9GwkjTItaYdIqLQanKN+U9yu42HjOaeIawiI1nwVSqTE74Vwz1asXElpuj+4hDn9v5tAqU/AkplUsnvysAqeDvsGObTwobonvvruXogrjtA8iJP+yS1P0L0s25qNNqc9QDcVhEWbcDHasz36L5lQ/jg+ZNJaaUyblXp7BzYjUB37OGvI/LuKmtoqaHW3NI26QYxIpuQEgzOaPCs4Bl3xVg5eyfsEXoqUILHHmlEIsM8anu7TCJQi5LHBpI7qE44cC+CxVvcpv4a7gmgDe4C4OQ52cK11GaVoXYA5UZ4lnuIb6mXovqZRh8FUAnYsF7RMrSaNWGXL/MlDtMmCBDpjKculqMgz1jdWjradPFbdTnVLH5NIBIsuuuE0XZQk7pOpnT0t6acghLtWLG8F9vBcMOXZOuDGRz1r9RjUFNFSi8ReYno2yLjjySM61vMaiZY/4LZzmI1piokgmuy0UcSM6HA38jH4jSaIloUvAw2xPnkTjGaPkcf5/kuBPDuU/jO+iuOqfNUD+VoiazCoA+iZJhaJrBhMEd6Hwn6n3J/PBkyYX5YJylu4t29z4SBgGzNagk2Ljy9Z4SYiguqihZ9ZKibRjb75llXV35T/sQ3s0XVkO/sSg0lDoSx/fwZJqT6v38FNIDw5pJdHPVZtn2ehOuKW+60FiCFxVHTYjjr389M4iO2P1tN/vZnx76xPuLPWJyxZgbacmxb0O5NwZZOzDpITuSvVMEcofmazbdeHcVtmdVB3nelj7nDveG6sc0biX7TrK9YOfhAq/gFMsBHwIMXC+oG0SvwQwhAgFdNZsq0ELAyWl/ds/a2VQ3MdQs/8jp/3bs7covpim0dBSocCVR+RUeoicSAlV9QQst57n+s/stTnJ3UErVaXDKiB6elCYRiTQC0U6F7pf0bGLpLQEZdS7tibdkQeBxbi6HXdmZQDWUTRiSAjSQZlge4Z9w2UKasB16rKjGcjVT55vza0UqpKX2AmhnalU0SUf5ZvBVYZK0swbYTuXvFFWknELggMWZ25EUiGWUU4Pg4gjjnscSzNHiuij4RoQILx3kZ67FDqu8yb31SDv9Hfgzh/32upLz2fpMYETBJVm4iWInMb1dE6IewDSHGm/B+B5SLd3sJoc6Te6B3vI4piuDAcP7LcGvzySXz3hgUpaeKftX112Mo4NFqpWQnFpTG+xFoLZJSRAiUDsdVEByweqIC3pMnoocWIxBNFG7jOZRZaUapNvkXxyeFF7qmvALv+/Wz1iYfrCtRRq92DoNHdwzJYu4pzLYT6HzevP4yDqkUOiTb/94OtxGKwfrbZujGURZIv/UTDMKMNwM4DvhZgAV0VDRn5PbuQylDYnTj7w9TaLAgjjiavNcO9CYqaDb/7WhjIwA94+BoLSq/DizDbdHnIsvrsS/h5LWC7pCs5uNY9uP/md0RNr+cp4dLCFPU7PC6cYPspmK/reL5GM+nrwJY49pKDu1yiBTE9DMrhBCWwBk5esnl+TWDZ8Q5Hf4fUG6LbceKiryWezRWZvOKuRm5mrMFM/4jxUBVPOlTtDX7fX+UK3YTF5RzCILMf6ETrmpUPuLIt1a7yQco7xrr1imxftwM9ORbef4zTHBwcwRVim0rviQFZ/LBnW0k/6He91Q5c3qZbK2BB9h+wQTe9s8fvjHfL+Cx7hnEltcvZvkh+4G+MhuOpkBDO5LRHh37Pn0MDsoeO613McLuAxst/5CM045Hj+PCzd1cqKxNfxSrC1q+cA7o5iVvXbAvHA32k2GTH3Ypg+/PteUTy2rtkr1HAnxQSOKtVGfb0ci/TO2KCsRr3XzT91JS6oX0sGJz1Iq8bf3NiZwVyOEz9kLJHg","layer_level":1},{"id":"8e0f1db9-190d-44db-81d4-1db880a0413f","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Symbol Definitions and Types","description":"symbol-definitions","prompt":"Develop detailed content for symbol definitions and their type hierarchy. Explain the Symbol.java base class and its core attributes such as name, type, and scope. Detail each concrete symbol type: VariableSymbol for variables, MethodSymbol for functions, StructSymbol for user-defined types, and TypedefSymbol for type aliases. Describe the role of ScopedSymbol as a mixin for symbols that define their own scope. Provide code examples showing how each symbol type is instantiated and populated during parsing. Explain how symbol metadata (e.g., function parameters, return types, variable types) is stored and accessed. Include diagrams of the symbol inheritance hierarchy and demonstrate symbol creation in context of function declarations and struct definitions.","parent_id":"07048b64-60ab-4f22-a6bc-52300115700d","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/Symbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/MethodSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/StructSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/TypedefSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/ScopedSymbol.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:43.5907174+08:00","gmt_modified":"2025-09-16T14:25:31.575321+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO702h2w4+2OcDnRcqQkLeBkje+OOyrINIDx15NPKHZK/nQcQImMQciizDdRdc0yefl+r2zdKTsZtSpI65cKc45sx9CGCb3feOsd1PV8qUvHJsKvCHBxhrpTXeVaT5pBjZFjhNm0NuGlcee8a2ThUAY1bH6pWzJ7T509oO1J2Dd2k0iBoMDMXncGUCAqzxoZCjtgOKkgXH1XH8bNlACgIUojHai4wb9rG0iaYNPPOTaiq8/V9hX426Rql/0CDoe0sgSVH0XmaYpuw8G8ZyNPSQ+Z1cZtjXI8RFq18v/kOrjpFer58cguiJ//Qz0zUUNuflWT28rECLzhFV8K++kksv+BLvbjnoF9LClIbtLwqc/GbTROXf6MrqymOK9EdX7tuCPKkI2ZPRRrjLCQNFRNBxE9Hpbp680SXunM/mqQKPcXGWrJgUOsETcSfnWW0zRqENFe82hvFzPtM/QOxPaClyvuySWh3QhDbLGnOduHB1sVVwgyVpgD8OoqZlaL9jRo+k0ZqjtXp4bEbiNeNqhWoIh21EG7IGVgD+DRY8shC2qnbH/6KRPjCiKpBGEMBIbypNv+ssMPejO6XjYndLpCKCq1ztaZxYtXa5IhMM1Ntk1wMt7V1ODCIuJwkOZBCxRYU/9J0D7hS52gdPxVaOEkoILtP4wvG37LtiekYKdrQj0eN7unM3Yb7Nd7xOfWJHevnqgsKoSZc407FATqdkfyWUI6TXAjtRxE80AcniMHrhQdVfDDbVLcrRqQRp1Gc4qIlRw3qOk52f7X8G5CeIdKHzvfLZTMMsWqqkuIDKSJ2TcdSb2uHgaVmoik/2Wy5mTdqXR2fTXcKeZAl6OXJPxaIo/+CQmRc5m/osA4LolaQ8aEiz/Ara6L9i3PKu264KvlH/ACKq0XdeZn9SBD8P11W1p+GthESV7PAzdfBXxtMXCSnvAAdZGQWLA3QKWkuL3A6BAf34d3BxuCGLeLzdwC/vI655XTamTOo56d0c0SXhyzUDZfhA4ZYL3kvJyl4I1n4LjgSP5j2nONZEzNdeTtafxpbK+GqZFgbaOf8jzlekjOgE2tHhAdzZZ2KwonqOtRuS8IQ4HxQiTNBYz10cpFUwy5QdiLmxa94ix5krybMtksGPSgHgXoufLl/E/WEI+SvwUI6XYuNWEPZCUBN6CcCyRXzni/2tEPIMkfw9FQsccjL1/PKYPjGzE/wmppUVI48JBrv2uRrTgwrK7k0MItdlmq3cb47IRdZRSpYWsWWg4efE0crkWsXQZediPk4Ora5AWF4kJAXKYjkj1alPP66HjEG7GURxPd4yUR/G+d5dh3J2DrYeEZpD5A83KTa/Vnfpj/L4buZKUK9ric7LTdk/kEcLabcZk0GBVT0iDbXDPmbYPWET+XoMqKnDJCjmvTt5158dpBlIn+nXN8TJtV6C84pk16zBaGwER0hjxUL1DNBrr6g3UtWDC7PG8WCKLENneEsXJkME0b4ZGlMrgdAAAjPrO2aH5Y9gnCNQ9h1NqscelDCfSan2ysbqD0eLz5ep2U5OS7ozR3MkPjxL2MyLAhhbYCJO1od/accvs+hR2jkyQdBB6yC4vjI4kkBurL6BVVWkFG8W7CpqBoE5LJ1snmEK+EEg86xwoxDfeTNYjc9RVQDAmt4yjTfNwNTLFQbMCCsj4YwpnlBRJJjHg0Sw2ziVOu68845HZu4IaPb0JsSmN9cpiUBZVRLavykmDBiqD6kEZLsG7cyDtMGcyQ2C1j2mUuOwIgWK8lIYnIUDmrD89atXqTCbG0OBAj7aBoZ7MI81qF+IA7Uyz9I54DXNqxrsROUyUj726VArBxnpR8Hw/JCigx34lAKqJnUvWEaSnrgNHKf8Sscxm1C5rQNI+BZfUW6xyRCA1NvZPUqb/RIyQYaz1xWC1pxZy4GRE/k/mA==","layer_level":1},{"id":"cc99a14b-18ad-4ad9-9639-c207a0e9dcbc","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Type Management","description":"type-management","prompt":"Develop detailed content for the TypeTable.java implementation. Explain how TypeTable serves as the central registry for all type definitions in the compiler. Document its role in resolving type names, managing built-in types, and storing user-defined types (structs, typedefs). Describe the internal data structures used for efficient type lookup and namespace management. Provide examples of how types are registered and retrieved during compilation. Explain how TypeTable integrates with the symbol table system and supports type aliasing through typedefs. Include usage patterns for type registration during semantic analysis and demonstrate error handling for duplicate type definitions or undefined type references.","parent_id":"24f0102f-a33f-4f5c-ab6a-11870fa7d7e1","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:04:06.7208822+08:00","gmt_modified":"2025-09-16T14:26:34.1503058+08:00","raw_data":"WikiEncrypted:Ue1K1AeH9vHkVmfYN+YC8l+J77xgAojm0V/Sdt+qOtUOoJ2H3VpLtJDYR74TITV9mWRG4yUxsjkLTB/72ODdl6aFGh/lxUa4UcuL8F/htyxJOtjo1iwlYQTZQW9CTO9nyiGtXrvylhSXWfZ4zGyAHPYmHv1+uYks3f+VsmyduDvEm7NuoJrKxHyLEBt9K2FYpNdoNEqroOK2kLOUDx3JFb7q2iUWDOdzUL0oKv6QZ32MJonBhjVJudo+tMeHSp+46A8Gj6Cjq+i7W4/giQONdzBi6igNoNHCY1UjSM/loTG58GVzm2E1tCPE8/nOH14V4+FjJU78Guw1mvz7S2t675Nln5ROYclEHC1UAvXvdsKjEvY+NKbKyaHpYiEwi/sVO2QKBMwR1P6KyqnHUE8vKKURvXoPBRaHbVYtSXMwiBYMz4TJWptX/XSn+rvTBtD6JgNqo5BbrEObBcNupzY2pfz98P5KXG+xp9oT+UQllqEBOujFqoNeUHgNu2CgrJH7JCz/UTPfPZRE9VKipjCW2kJV2wp804ap7aLl1GS8/Q/0FcWOsUtHjyrDOzmzFH3ALAYDKlG3T5RU7G0ltuBq28zz2C/JSNn3xOSDyXUu7L0Q7c3u9E4DYsN3yODvzGr9ACP9m1vPRgdylFatN4V7EribYraS1E3dArrRo9bGo1NIVyPV4l7hudR3GHSCrvAyRJRq8xAKt6NYcoerQ5olOmBhxbpPnFsL3TA8S5tSP+DmV4TCkj3Vd23QH4Mvc74wQPFeRDfFvp3NJA3rcUTa1gwmVWWuM0oCCFTWKvXmNTDcmYiJ1gGZFyFGtIeD4PjfIzGopdr5DD+orlwEfZwNBvL7BXMJGHI7gePUBIz0F0i7yy4jPC54DUEBWyH4U3XR+6dSzIaDfAdfAkDGMyfhkvGfOAmIkjBrubZ88Ip1q5q/fks1Bavyoa57Fh318LDbumzSswzAp6+Rh8EXYOPyeLQYazzOQxn0R0kpdSnR9dsZ+LyuhRnRSFw/2HuBxw6R6hkoO1nKCwtvS8WrHhNowl7vROmDcmSZgxjQg1UaVgjgfBkn/0CfmZHs8CopJTQ9VFQtlCZfnjGH1PjiCwiS615beg7vF91GftiHnGZmhRWpCQ6mhefj6PpIoadyDEwEbYyEG/cRSv4dbsV1y7w/VsVFXzvUQMPiZSPHFfLbaPfmrUlkPFJ1nf2LX2UIXYGJP4YBy7wRmaIHzySBPprEFkcj5rRfVX6Q6ogTbTFDzHhFQZe+CmEbjfNmoWI6fX0rr8oJ3etwiiuYYeW0aEkeVbWeY5IQb6yZFOX7BKqt41XxUGUysCSh/JLRosatcrLAJh7ZMwrSiHNMD/NDt6nnGQ==","layer_level":1},{"id":"f315b1b9-34c5-4219-9adb-38f4397d2f9f","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"IR Expressions and Value Representation","description":"ir-expressions","prompt":"Develop detailed content for IR expressions and value representation. Explain the Expr class hierarchy and its role in representing computational operations in three-address code. Document arithmetic expressions (BinExpr and UnaryExpr) including supported operators and operand types. Describe how constant values are represented through ConstVal and ImmValue classes. Explain the Operand interface and its implementations for handling different operand types in expressions. Provide examples of how complex AST expressions are decomposed into sequences of IR expressions. Include the relationship between expression types and type checking in the IR phase. Address how expression results are stored in temporaries and referenced by subsequent instructions.","parent_id":"e2398669-3afe-4bd3-9bcc-aaba5dbfed6b","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/Expr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/arith/BinExpr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/arith/UnaryExpr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/val/ConstVal.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/ImmValue.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Operand.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:04:39.1723943+08:00","gmt_modified":"2025-09-16T14:27:21.947154+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"5836939f-5189-4ff7-9bb1-2e5c9bac5a33","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"CFG Construction Algorithm","description":"cfg-construction","prompt":"Develop detailed content for the CFGBuilder.java implementation that constructs Control Flow Graphs from linear IR code. Explain the algorithm for identifying leaders (first instructions of basic blocks) based on control flow rules. Document the process of forming basic blocks by grouping consecutive instructions between leaders. Describe how control flow edges are established between blocks based on jump instructions (CJMP, JMP) and fall-through behavior. Provide step-by-step examples of CFG construction from sample IR code. Include edge cases such as unconditional jumps at the end of functions and multiple entry/exit points. Explain integration points with the IR generation phase and how location information is preserved.","parent_id":"b3926619-907e-47b9-8b5f-2fd3a6d8325e","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:08.0527964+08:00","gmt_modified":"2025-09-16T14:28:30.2731784+08:00","raw_data":"WikiEncrypted:1VvwO8J9baKrL5ZR07tod2k7+Wor2FubwID2HoQd5doRxEsSiCU06Ziw66vB+3dTLGf5wIl/HwIN+9Niubjpy5JvFoq5P2L1M1F7OmOO+EEMTNonmDJvPTcpA75EuC7cJ4ub3jdvERZ0BObnYzFsX9YV1XNsHss9kWclD1OMgOSbVc3TgcMZ6YMz9SUWE5d7+zjH8e1syR0bMNp+3Qt8GPLEf2LEQhKJWRlDOSMKt7eoYmdqHbSRg2DOkUjekP53wi27ZbGGq6MpvLtnl0mRYYpLxVKdZxpvH52xPiiHqIIF6WwnvyVbjxC2LDaRcX9f3PBMVAUJerTB/1iS1jjpdaUav0hO0b4rLeUSMIOS5kWSnqNhBOukpcq/xe95qXuWHQrGwGsAj8w5Ya5F1kOrp6tvyMJ7rgxCkq92UMUgF+rAXMq22UAzCQkrT4hwswSYnkJXy3WXEy9Kll0vxnAqfi/tf7rjUFseAUHe8EMlHvwVYCOwQAi2esJ04Boxhq75cY8kO1zgZvlWKBtImlzSX1TH6+n6hO5QjE1pcgMyX5Y/SwcasxJPWyHIiu0GxEN4tDZlh/bN4Lump9NskLYJ71jmyNDRa81wv6fMgJKiGjxu8Lgu/61uIR5XXJpybMbIYolTHRT+xJiH+Fij30ycG707XWE1DO5KzuGTEBB6hcV/hk0s/o16XksOzlB8tHO6edsCSj6Z4qedT22WchDBW3d8uqKhErsFFXpWIklghvyKBcFNtHnNfiasB1uNdmjh0FI1cwMkBIZK7SvJQRBNzCdYEQ9x+70FYjPqyH1Hz1XxHxoGahDrhzpfHhCQFpG1DPpii0zniox+OD75VAswHSpfA7cWPIl9EvnNmx8JNSl94+huRrG0ClLpltm2LH19b6ny36Rj2qgh1FhVpKDLWGnieKHYZLm5xzjpQwydNjAu/A5Rq+F0ZuWFEnMA2zJn50yjbagYxVS92JX6pepwHLtJSWJsdYj024E1LYRyYXPhSLNLB45gap0kqqI+ctT+PTSZ41rn3tA+zKNcJN0mMDjcYT1fSKsugcHhnHSljRsqNGxFm5gFO+o4ZoIeXVncsuk5xB0hRNKt4aj33V3WdR3rzfnz0fKFta4/929m3DdAZDyml0c2lICdzpRO5B2vvw4pvJfjPlSE3MLnjvy/wR9XclqjTVc06gIyuuM0tKxFKYF+bjPAvi0Tg/LxuWy07x/1+kyf2YoHM8RXWTk8SBnVveNwi70oyaQgsMsIbLPpv5eBmAODHCHzS1ycKbuyArHMVFy/R4Q/KH0V3ECOq8dL2VgR0jCCUnmPH2jwazOAFjV2gjThYQn7VvA0cIoFwkVzhSU8N0xFnF6hrPU1/nGjVngk6E1engsM/5Dz1mpT6+c2LfULme8PXXi3NxkZ","layer_level":1},{"id":"c0d5454e-e30a-42f1-8dad-2e14644248a8","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Liveness Analysis","description":"liveness-analysis","prompt":"Develop detailed content for LivenessAnalysis.java, explaining its implementation of data-flow analysis to determine variable lifetime across basic blocks. Document the algorithm for computing live-in and live-out sets for each basic block using iterative data-flow equations. Describe how this analysis supports register allocation by identifying non-overlapping variable lifetimes. Provide examples of code sequences before and after liveness analysis, showing how variable usage is tracked across control flow boundaries. Explain the relationship between LivenessAnalysis and the IR's VarSlot representation. Include performance considerations for large functions and strategies for efficient computation. Address edge cases such as variables in loops and exception handling paths.","parent_id":"80dffe0f-be9c-4f29-8527-ad9414ed7db8","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/VarSlot.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:33.6735444+08:00","gmt_modified":"2025-09-16T14:28:49.6930572+08:00","raw_data":"WikiEncrypted:vp5iIehX8Bt9/0gaK3FLs62nTUEz1yBF+B32Tv5Zp6MFxCxpNFCctO/ejjbYKNQsPx2IqWolo5Dfw9FPwvW37Sk/5j1SwD5pcbW83UP0wLEkzYqB1xslGujoQWWFDBoh38LZV9c8eJS0t3mjTQCz4NSbS08BgE9flfEcZlwjO+Gaps2wfncRkqojCNlA8UFQU1MaifKDL3WHzOcV7pQqh9Bmmo9/yhBqgEhjTImpcJnpEqTesQVCBC5FSyAHi2Ted+EYSr+rxx+qtRixMza5UXGP9VwtScY23OXXVLvUPgTZWSP38ziFMMbne28lV11prRXGi3whZYIjRh8Hm5RayRo6Em48jKdUddZXbquOQltEHp2G99+woKd1brvM+eZsGU+lRZZcMnRsdzDj2o+Tg+5ZfLbzw7dyHSQzkNGHQlWVFmPxRR6iaCvih+xY3bc6yBCv6NiUvjBVB/dm1h2yMT0534YqvlRoGz6IawwSszksqWdjoMVjKHKsOlacvbj7NaZ7zOH7aLRmGxQoIIdF5r2tyTNIWIWbujyIzRVAGqUTLzY/3pTv0ostj6ulLzHLzSuP+zkln3hatWPZGkEAcI7hKpFaw8OTsQk28hr2qfPwFj7YXxb/mpSSZOF4kNg6uevbx9Q1Tqa4kVwEUlsAZzD8qv3vuz4AElMGf+OhvBSo8o/I6EDfsf/B57OPF6dwq763XHnOyEjXb9p90VTAYNa5LhZcI3MOkCQBPzdZCIi4TVvSWRGqdpKdzEJtmWIQUSwVJi7PY3eSunxCOfAbRZTiiRoejss3bkxCHvfQqXHKy9mKklYGSt5E5WSesXjQLzTywMwvvnqIz8m1DOf4h4gTq0Bj0CCJp0ZOKEWAyehnzdJBr43EdOS4LTJRW20enKARmQ19CbDHEeQdpBz5LoJcx5tUQOJd7ZFow4NvJX0Mr/7l6uauImHWubahroAiDF0Zhr7oNIR9L91PxODqp1PZ/daX6KadMP7vt2nTQBVP6r4PbGZn9QSqk160N82ZC1L8JC10Ub1Nl2E3+30YpIssK6SLxE1knFQIyQmg4MD3sX15/DAyB26qC1/tAfxyDmH+btmguSN88iQCBUAS8TZ90kH/GoJo+EbcZhVqx87ZRDB1yl/aAy3rMwnLmSM7KXVWujXyBIjvBk7dJZ5P+aah7nUEfGILXDF6Py7CST0i2to9kL8mxksI+jf6vutaYMv58hp+k8YpXZHr6UziTBpmLEYgjvicQWrHj6A3gLJOGWUYUE38lKxEcuc5HXi7/WlHdzrebVLk/d8ThTxgQNQimSQxdeu82R2AQxsbExKF5iP+srFvGjnU36v/bPZnImwASf3b1bqX6ejLAi7i7o8ZS99r6KtdjL0n8icl/DSV0iUgt9HSxygwnJOujrtBy+SOE8L6lHkfEyWfY6znpMbQe01FXLqCH8jXvpRopNUR7tGIBxGrqSkwZUG1ArV8Qk7kNnmYo2AMi9XGYgTRP+1nH9rTnL1hjjq9Jw74xFLCIJJK7T1mOMCTxLP9ap/Ah+f/i0WYtYyJlu5kHY7iLw==","layer_level":1},{"id":"b3491b83-4564-4015-a493-9f6a7cf3bde2","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Assembly Translation","description":"assembly-translation","prompt":"Develop detailed content for the assembly translation process. Explain how CymbolAssembler.java traverses the optimized control flow graph and translates IR statements into assembly instructions. Document the handling of basic blocks, labels, and jump resolution. Detail the generation of function prologues and epilogues, including stack frame management. Provide concrete examples of translating IR assignments, conditional branches, and return statements into target assembly. Explain the symbol resolution process for function and variable references. Address how debug information and source location tracking are preserved in the output assembly.","parent_id":"f65967b8-0d58-4d3c-b53d-ecf1430b3dd4","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:52.6345372+08:00","gmt_modified":"2025-09-16T14:29:44.8735307+08:00","raw_data":"WikiEncrypted:QtFtQq/6WplphQLFIzO0TwkDI+yvcA9rOBW2t/I1/P/5t+Y565KHv8gQ65+c8obqQJGGUOB3K3brF6wvFajJcuvzuWwxoDChbYT9dreVM0ZP+/4XWrhj4Y2edd4Q9mhPcresOEnF++ur+yMuptAu9yehcTGGfiRebL+uwFU7TLRMyBiHUKfmPQaZ7dFMP1l5jCLgv93onUm7iJ51MEq18rHk0XRm6sS/8xPNklCLBhxMFBABfZwI7AEaprow22R8kuPbBHCdbzULLhgKmp34LqgD9tsEGbLr50HForTnyqsHtlkT4Xs3MjnQKWEhXTmQ3mpRtQfqP5hTN50vjA/xTegkJ3Pl75q9E187AdUCJTLoWhSbjNIg0NaceLSHYG6PFT5J4uszRWlqCBHHSjvfqhqinrZlSzXkApiswtCL45Y2GZyAGTw54K+4kXzrPLljzmyFJe6QUG1IzsWVYTGqf0g085i9lhSImG415koAyMgQuk8wN6uZtxulvzXKf3cTI5DcJBS2IAlrMYFg5CWJpW6bWd7pJRjicg1CbK+lD40nJ0uXYnV9Mef0WwD4OJ2akzXBNfqls/We9w+czdHluNKxgVZDbo4QNW6hsYV5MejnsshGBoPLDx+ioWe9HOiuJ/MRvzeliTBJoJlh5eenpklKkM1FQQo3bk0iy4sJFUDNR53wbtuaHN5751GwwE9ZrIwlZ8hr2IfYEfuQ4omQ9BR8B8pnN1O5Whq9quH2+DvpMwYfv+JWLTenNLV3iW7E+/Z+gP2wzN6Tzx4A3cXkoSn80j/ERRTZf/I668NqsBMylSN+hRZYjlfBYYPD/5/jeloXvLBLdgWWo6Sl8i3Oubaa6DAWbIsFdQaqpVetd35Xh6lxCMFV/5iWiwO0xk/Jy5uyoaAm7x6SA85zLoK92D/y5qrTONlucN2SPvyiu+xDfR5s8vBMKJ1u7NGQZmCmOhhjizcVj8JottKMZJqw7ddbPGzjMR78SjyZ9q4K/cxWB38Ck2h1i3r48tptgN+dOhj4ASdKkr7vQ8CDuJogk1c0tIrupX44d1BhHGwiz7Tspp/WUWbF7uoIonub/IWYL2k9DU14j9xv1EE4zzeTwMEF3+oC6zk2/zzpFDcGFyLdMPq6S/lyC//X9NMXcQtYg5DKOZpSrcXWs84KOeLTCCDHn4soHMS0P1lgJkYSnfdrojV5luUtqOHySazgEMRuL7w5SMNM2Agw5i6kmcbn3QQdv4nRD/sNazJoa9hKoM3D1a4uUgwxWTT0JDnDGEIGgmDgpczCISEqdUbe+QmeNg==","layer_level":1},{"id":"8e7b69a1-6b26-4c7a-ac7f-65be941397f7","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Instruction Set","description":"instruction-set","prompt":"Create comprehensive documentation for the virtual machine's instruction set. Detail each bytecode operation including its opcode, operands, and semantic meaning. Explain how BytecodeDefinition.java defines the complete set of supported instructions and their binary encoding. Document the assembly process through ByteCodeAssembler.java and how human-readable assembly maps to binary bytecode. Provide a complete reference table of all instructions with examples. Include the format of .vm assembly files and demonstrate instruction encoding for common operations like arithmetic, control flow, and function calls.","parent_id":"786cad12-f31d-426e-9be4-322905970e5c","order":1,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/BytecodeDefinition.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/ByteCodeAssembler.java,ep18/src/main/resources/c.vm,ep18/src/main/resources/t.vm","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:20.8849681+08:00","gmt_modified":"2025-09-16T14:31:37.3500334+08:00","raw_data":"WikiEncrypted:mdacEBQdcnabvKfhMtamRKeF3Ao1JxZDijZ0zIRT0EAODTuhKvlOrkCNdZDraYBb5yz1Yf8i/n7YKN7skm8Qj3tdAoHtZ2El7fsktVC/fEY5HudmxkS9sCjdEekInMzq5ICRSmsKqkWwV5VaykSBPjhi2hctdG/vbnZjEcwyNWsBk6wdcZRcRt60AuzmUboEDEzbM5avNMT++Lh5B5iiYM+zTmXv3PbHti54HM3xP+6pJeU90p2GVjUb42KklPLiPaRo+jQ7Mx+dzq8I0IqeHy269HSG69obU6ckpVndwkRNhnN5QVBnCDOJQlwxrZk6kYjD6gHMN0e9Sj+1k/yzC5KeYiULv+m7KbjbIHe9wJuedTbNSp0yr3iq6ppqVGcdqxQxJFSD3rUrbWqBy8lNcs9RILpj3ljME4JdPtD43ehiceKz7V0Tr0xRpQdG9D3hRnOTyybCwOUD961ifwWEWaGenUKQNVck0shoER8A2vJuFG2OX+dP42oHQMGjmhavbch22dr2GsWT4C7twJGPwrYwaJGpJh+vpXd6uTQdoddz00nKD7VQX0ySmMRMtyNMDCfQKYbmcuTyplI6S/Y7xrOJC9Med9kpxMzPL6fztf/YRtbtwk2yQBNSiS2KHAW9adwhCH5R2Ri+O2IKSIoGwICIVc4crXBFudbf6ws70tFb6fhnNMbWZfI1pQ63w2VP2TX9ue11B6ZJebI0L3+5hyWqpt+39hflZ7ygUfNYVWxaJmQUfyaPIGwfjt9lbBAV6J3iu1agsOMPtJI8WW3dISdb3v+GCWNe8BKAMmZVV0vBgXbidBl56GYR1u/s6kxtrrrYGo1osInV51vmDF0mRVbyghyZD6D2YuSETxbQu6419yfDmWniIfnhbluUC55M0R/JbD/ZcphkiD+rHNUH6ua6t2TnUaiaYzZBYquLPO9dME2v0i8sbZq9Ds1RCNRXfw4YOi3WuywCRYhlIPRhUC9qBB0tYy8MT3yLk3znKfEz0YXQFYKNfv5SjaQx4TmB9y1OCXnpEcMBI3Oh9lFwTZF7Z4pHfDH2DflY2AQcATA+KJdy8jLJ9+e03FbEsYtkf8LUCtgz9hHo2pTcJoxQMT2x+idVoRZ8IqMcw3PNugQSaVNaVPNYRTC16Wjs07oNLNWniQ3BH1m4zS8pv6vbt/0mBQWBWqSCok4Hvi1rmZWyrHfBEbt7CmgCYQb2GRbfTRdABGlGSRlmAMtnvK2PmjfRvY9EH62Kyn7XTg+BFDiuP+VvATPMlCXsDmsGUCexgc3eSUWJKwJbWHhWqwBoOsFBvXg/3f65WBl7ryYPa8Q=","layer_level":1},{"id":"fb69c068-d3c1-4114-a6c6-08c5aee8db3b","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Integration Testing","description":"integration-testing","prompt":"Develop detailed content for integration testing across compiler phases. Explain how multiple components—such as AST builder, symbol resolver, IR generator, and code emitter—interact and are tested together. Use CFGBuilderTest.java and CymbolAssemblerTest.java to demonstrate how intermediate representations are validated after transformation passes. Document test scenarios that verify correct control flow graph construction from IR, proper liveness analysis results, and accurate instruction emission. Include examples of pipeline integration where source code is processed through multiple stages. Describe how test fixtures simulate real-world compilation workflows. Address challenges in debugging integration failures and strategies for isolating faults between phases.","parent_id":"d2c2667c-8d88-4098-b1c1-29a9a9a3bed9","order":1,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilderTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssemblerTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysisTest.java,ep19/src/test/java/org/teachfx/antlr4/ep19/ComprehensiveTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:46.2561179+08:00","gmt_modified":"2025-09-16T14:30:46.9049661+08:00","raw_data":"WikiEncrypted:0j4RRfWJQdenLQLpT+DwLTyjMVG5sQffpuJQoSG8tbPh5or+98uRUrVo4jYX714zl8Ln3V3T+xK7E1MoacGU2qRVonRIM7UicjZZ128kwWVl2OSeDtCFfC3DBKDCp1MwzBbq7AtBw1e3oDxKip0ZM1ySIkyeyWmpAe9gOGsUqTtyVxe2gIey0NahRBPgRg0+guigo4p2yzCjVur24sFX+m8GXrlSk0LJAnSn/VDwYVMXjDlgYIjsWp/MYGfihYFl4BNTiiIVbs5mVlzhNHgxzlZN5sNjcFMy5fazfdWMX94oH1udxN7rQIPL6p3I84RD5b1n6UL0/XiCDw3yrS1ec48MSO+TUZvd86jl8CSBA7tHr9o//Pj1xr7lasrN8+iYCXN/P8fZ3IEMUTrH4z/cM1DJR/ZUbSrKYMD0eGKcdgKzO46bYKXrsrGnYdgFZMs3UApMDy94XGv7feYgRe3rwh8uSqAxF+vbliykgU9lXvFFrQtKrgiFjd+QurkY21pMCyEZ/A59XrdvDEjxmq+jYl+elYF4xTsDrS3BlFZTOq1W0DD4zs1/Jk39cmfJMNLFXSuckuyJVReNI7jsYCJJEu1HtM4PBtlY4X0Z76kfaQKjEM3JUVXkS19gOtqhNgCfBH9YpdoCpdBnbsTSyUIKWFxgdO4npR0wTcjZoQ0X91Q3JTjBfi0H/BW8PbTJ5TXcRqAPZmJXkA2wHPmir+GNOX5QXDEjZr+viRRl8VZlcmXNlS3ObLAByq9TJkosNMVr72Qz35evoRQyfYpPcoq/3HCwjutVnfGGp2AnBpI42GHpda0m7CYBKh8qE8ZPAj+GlM/1+3wXBMZojJqPVQJaHl3xcHIvJKns0HXj/YuegH6sp4F6QDUVQcYY4t9hiAPwpBB0V/TPdP11n83ldnwho4UsczPVr1P2GkP4O1jXaE9As/fTm+F/r6LbzMk1JMgox7IKVa5g3tGOjGs3WeTT5Tz0F3h81yBz3R2eqmzep1b/0Z+EeCjjDHEsW0U23iZAAT0jdBja5Aw0dl1LlQLnfzF7USVsN/BBsPrc3f7QVGX1mR2mO/z4hD14zu8fcEudJ4NCVS/JMrsKvNDf/p+lX56fAz6d9UKbdAiUjl7NwfhT47+GtGVAC+2evUt2oBsx/26MPw4heGQ19Z6wy1LO7Vnm2hIOaexgrEAaF9nqrjhVVMf5c05JC6XPSB/d8FYMQBENOFndlXS0NqGD8M7ZJewBuWT+PQME/q22BMHbvLN3zHWowS0+zTUEdJg8HdqABjzRFXwZ8POc0CGODVzih+z2OzlkkS04V30XLVe2g2Spdl1JtFeclURv+w6kqXtI/Bif7v4d3O6jjzhA6s0edRoJP5DBs+9qb3FWznditXu9bic2v0+ObFhfQi0BmMkmx3r+wEdH+smHn0o/CC1C10HflvrQo9BJAk1mR5GXJWSxU9zgo5r61y1v1hBowxdTWV+HnukGv8ODbzTpmVjACE2JoPIRP2Okh8sXFx6rqocEThRh4gb3I5fwtQirMxOV58lM+CRpexaRKGavdo4djpa1fM5ut3QMvL07qZ6AmE+w3hG6L34eCxhLby2fVgtf9HxC3XDnZB9uOlmuZgUBk4q+Gz+3R+rkOOfNlXmqWfkMOOmhaAu3hp5fVKyfo88wvxdjCTARW05XqmDrY/viWc1UnWSI9o4nwb207QcebygSsxYdStz7JYGxfZMDiLe9LtQHoXB0NHuqnlpTmeQ+LumQ6U1b2oUiutgRJRqra2s=","layer_level":1},{"id":"2961b515-bb17-4600-b58e-3337286a3503","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Register Allocation","description":"register-allocation","prompt":"Develop detailed content for register allocation algorithms implemented in the compiler. Explain the design decisions documented in register-allocation-design.md and how they translate to actual implementation. Describe the liveness analysis algorithm and its role in determining variable lifetimes for register assignment. Document the FrameSlot and OperandSlot mechanisms for virtual register management. Provide examples of how the compiler tracks variable usage across basic blocks to optimize register allocation. Explain the challenges of implementing register allocation in a stack-based VM context. Address common issues like register spilling and interference graph construction. Include performance considerations and optimization strategies for efficient register utilization.","parent_id":"1b2548b7-74c2-4e17-b45f-ed8bb24967fb","order":1,"progress_status":"completed","dependent_files":"ep20/docs/design/register-allocation-design.md,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/cfg/LivenessAnalysis.java,ep21/src/main/java/org/teachfx/antlr4/ep21/ir/expr/addr/FrameSlot.java,ep21/src/main/java/org/teachfx/antlr4/ep21/ir/expr/addr/OperandSlot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:18.1171484+08:00","gmt_modified":"2025-09-16T14:32:02.2776746+08:00","raw_data":"WikiEncrypted:hvwFz+sIainc/WWi9rXmKW17VGrhXkd2bnrpbtKqcPxzt4Xf5EVIk4tUXIYW3szpdc4ny08jpeOUR1IumTMTfHvxROapQVSsbI8aJHzsKR+aqkgXc11vlufmguTgi6835gVli8iwC5Urh8R2GyzVCNM0moxnvq92H9Tp1NiG1tuJRIu/HbbLJpcGIQNXOIeylTfZ1JK63ZDhS0ur++EQc1E37Iflxgl1Gv4CpWijKemooK8y7xj725g7MpHjEC5zS8IIFl8DcNfprQuMrXUu97r9l/4Gr68WNQJ0NdnuR8MXXyxblgRkb+Daa5zR9yVIF5i0VYdUrFSA+xlxKgK6T6P4XNUrg3AhC2AKiRu21i1p/pFF4cpUt4uqC81scNQjnCCeGK/sSfrcCqzDSlRgcXWgo0wlPKEScjabMPobox4hxQLz0n/VU98NbsY5naFjz2a1XYt61/aONPhySXeioRW8slQGA9VYljCSaYPPoYi58yAIBS01psW8AvPxaYAWFzLOCgPWzd/0x09x/FQUKTDT9m8dHN/TYkamebrcGmW+zMA6Gr3kgk9fqGxEJhAiu6OcJ3UiQ5hnqelN//4k8zsmchQzRfRPaV9zqgZ7nAOPExtqHB1e+XJimyRIq0L62/RSndoEcF/EKXNycJ5LdDuexxS9fv6HcEBFdNqKEnZHon6T2VJutg+RjzM1SBWzTDogEDMWRlQbt1HPjWnebHBOnWURmVHp5bcpN9u94jgFnIRoRMldoE4kSFlU/NgHVPNYFc/Ixlsm8hQxMekBj3mx+jGKeWYXRvs8NgyK0Qmnn7x4XTxup4Z79d/HJ8u0sTdE4FqGXceV0Vn9kQs/lOej0Rdy1duXSq/vNaq/cKpqND2oKfsRIaX2CEmC5AUQ/SGeMwSYYmFri9L46BIbn8sjk4AAzeF6omN3G9JuXvEcafrI5d57YU778GjoWQP9hEPigGXncEQcfW0Zjp1hh0FDUY8tDt4J6Rlby4nkWl0V413UUNRxL4GlAefIos8Ik7/eWrGU1ryr53Ncf0blW/nu01Jx1MA7FMx9+JI+FG1eW3Y9ftbfVkoovFO++l1oT5pbdYaximIL5HbPZWp6eByDzp8dW9RruSgL7tibhht7zPGnvkcc06hoH8/bZjhbdK3XCUCpJtslAjWuSwsV7t3k5rL2yXjZUpDP2vNMbiiB0LRpvE70DyuidM23c/fDlj+qx6C0ozj41O39jbG5JDDTwZ5We5j/G8oxYJZ2HCClQAHzvObcv0nBjaTveQau9WcAtuW0CtBdmLRRz6+fE4tMKkRimZTGUtcVZk/pdgam/JGpVU8Kkk47ajZVIz6qWF2X2Ia4QAffHwN5Ry+gc+i/KOFR0tT+kYJhEgfE19jxYNlJC/yeJQ40V8mdGDpM9fV0sEPDn4zPfy5+/FZ2I2P9Zz/qxQHR9ioC0USsQB0/8asFhKg9qJiJb69qBbm69km9BGIRMg8ssqPOmLcIH10gqe09tUvJhMbEY+cnoiv9NA3hWgce/mvN3Mwfu5I7X2RrGZkyUWMMJaDtgnLMj3uSTEZyOEQi80tsIh23+0sNUUjVleEuO45kMtD/QZzSXloB14Kh4hYLaRcavxdwZCNSIqk0VbnZ3MuVH/+Z8KxLsTXV0zTTr2pocvn6vP1jpEjX3V9a+E2Z79mSs47zzhPsn2HNRoM8Ctb1mW8FTbFePnJ2iwYdQMsyFJu7vbaXrgrQDpf6fWDBamZl2ZOfYQ==","layer_level":1},{"id":"df2619d9-cf7e-4b68-8e1b-bb782fa9cc48","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"AST Construction API","description":"ast-builder-api","prompt":"Develop detailed API documentation for the AST construction components, focusing on the CymbolASTBuilder class and its role in transforming parse trees into abstract syntax trees. Document the visitor pattern implementation and how it traverses the ANTLR4 parse tree to build AST nodes. Explain the ASTNode hierarchy and the structure of different AST node types (expression, statement, declaration). Provide examples of how to use the AST builder programmatically and how to traverse the resulting AST. Include information on error handling during AST construction and recovery strategies for malformed input.","parent_id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/CompileUnit.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:50.9587147+08:00","gmt_modified":"2025-09-16T14:33:48.4780086+08:00","raw_data":"WikiEncrypted:p+8HMnxIgmacoUzP4iv4UXHqcNDnMJKZxRPd0dhNoOQT/NZHOW6z9HbnI4D2ni+4cdnjOk04slMr/FYSgIJ/tRSVij3AYfcJmEdUymtsI/AP5r0+H1u64D0vBr7zpSj541F9nXUI8a7jKLHsAg2Hugu9AXb11YmvjEd3oi9jVLXLrCO9yl6d5eLuJIitHG3tIGthI9Iewq3oifugO3f0SPpsFxdPtp9hIkDl1S7GHZXOQ4hccUWRanaAGA7VW5InV9V0RvxLqg4Zl90WF6PAtrsaVyik0/Utq+cS3DHBoZteOE0Uy2BRCCBBLNnDWuI/4oXnJWg64LVGEvZ5V6rQrNEMDOMlWfET/kzDucpv6mfnCwTuvWUzM3Pq4QyLZ7YSkKNlAJhFTwFm91hKmPK7OmP9dJyfhjxQH496WkvYavlGOshtsZn8J8SrokDPxhmx1/nKM6dhrQ6Xfv7bASanb69AVDd2kj6gWUT+4sLE0IF7INYN1QQjdHGmw69eJUv17kxZRhi0SBIx1fZIny0NgdN3taGQJ8wRG28KOywM9WlypyOWB0LrPJ1/lf7iQAjVlYbz4JDgLJELmwgn86hUAp4ZyEmw4Cku4xLUH9gqprxNA7xJc/44Su9LVAptxEvFstmvF0jkBe7HZBGGjfGVQI7XQlgE66bsTPhQl4sXoL+4A+De6h1rT5nCSNkjbDao9AzGZmeL787D+T191Cb3RXnTEuZZ1WaZouNUPPZH4s/N1sYiR59bHcZT4bzLzEwZcmyT5ALyWT5J7lPlxl9dEEYWcP/8dwwpKoD55z+Dh2WeUOR0l9E1IKWViZEFvbuefRK6FRZDa3j2fFxwV8pAWxiiyH3jnX+SY/9zRRiABAkaY1EYVCAFkONrc0hPhMV14PA3k8XegDGRGeufYg2lSTr1y8JVKzSiDgm+RDu5hg08qhPR27AeRabYVtOSxGc4iqVrvjbNTGvh6nSYR5LX+BRImfvFXh0oqs2djHrUNiyvLsLeoyFELQ8geJf7/XYS1LfytVHaMaUjxebhohhACJq5llDFS1rAgUl8ETTJXz3EttzoIgtJBlBLoTcn9N8g8B4dbzZvmQwpareOPPRJutwFw2hHZOIzbhe1QTWpnj78IdxRUHmuvuaQxKVxZy23eXjtSPC/syWc4y4Oef5/C9bjZVjBgPSp+tz0VsqUXQJx39eqVL92t5lFsizCOPJIQ12EFCS9dAWN+Hd6f4ww6gr71rsJSPBzWnG3WMjSPp+qZr9nrxzIeJdtjKZxNTmoSYFgbWUoWMF/COYjqpxt9A==","layer_level":1},{"id":"2803383c-c032-4237-a6a3-7f213fa21d33","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Abstract Syntax Tree Construction","description":"ast-construction","prompt":"Develop detailed content for AST construction across ep8-ep13. Explain how ep8 introduces the ASTNode hierarchy and manual tree building for vector math expressions, ep11 implements BuildAstVisitor to transform parse trees into typed AST nodes (AdditionNode, MultiplicationNode, etc.), ep12 organizes AST components into dedicated packages, and ep13 refines the architecture with proper separation of concerns. Use VecMathParser.java and ExpressionNode.java to illustrate the transition from parse trees to domain-specific ASTs. Document the visitor pattern implementation for AST traversal, including EvalExprVisitor for interpretation. Provide examples of AST manipulation and common debugging techniques for tree construction issues.","parent_id":"f44e27c1-6dd9-4ae0-b131-7a0381989c6d","order":1,"progress_status":"completed","dependent_files":"ep8/src/main/java/org/teachfx/antlr4/ASTNode.java,ep8/src/main/java/org/teachfx/antlr4/VecMathParser.java,ep11/src/main/java/org/teachfx/antlr4/BuildAstVisitor.java,ep12/src/main/java/org/teachfx/antlr4/ep12/ast/ExpressionNode.java,ep13/src/main/java/org/teachfx/antlr4/Calc.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:08:27.4491562+08:00","gmt_modified":"2025-09-16T15:06:49.1973096+08:00","raw_data":"WikiEncrypted:oiB98Td4k33qtSx6lIMAxrhT7lHRj2p4xizd8qFUYZr6ldGmLnX8mpInvFlSzd4nKxEYiKS4yDlp0OIN3f7S/XV4nCSJSH49xh5YYobBAX0skqLD3fBhv7eWdUtqJ326s72ky2bSEuFi3i7GALQArYLliMQ7Fx6+ulJ6wFxI07oTOr6Ipsvu3+3qwBti4esqSlRu4y42b6n5Cvq7uS049yr/LPUecpWvO8U5ubLT3s1jHnZtVBEG7T8t3ZqwQWdpyT0YxkNfU2msx3HQWYljLKptmlCTPpM0sBKNYWZsNNGnMmE6fSafxc7TT1s1S2Kp/KJTs63KLgbTXWp+qZzh25qhZcSkLh7IdZtBgumIe7QHQ/Yuiwi0aO8qP9A0IwXVZ8KNjslqY7qXs7UIKnrLqRpcahIOTYShEHvQDg7cMjJWVpTrx+RjhynlJR6aNNC3NNLs6hV7Zh0FPdf4dHATQUwm72N+jXCvD/lH5eaSw7WnYI+YNUvvy/Y8c1e22AfzhKPZKMaqbEIs+31SlvjY0qZ0fM3ldzqJ+FF6aWHwbozoqk2gY9vHWK7pGxKRUo+y1SRsfti3YjU5dB2sTN592bJ4BoEEd3Peh17iIvNd+NYvLR5plVrVavgr/reRbo9J52suMcyyjxOlKNDu3qm5asaiPBg6Z+2TnYF3ALme0t8g+WrpmVW1TbDoT/CeBhpAh17IyBnDsRtgGLrPCWByQwGxiXTs5rNC4WBAR7trcBzkdqC/ynDLj+Ew60PRvMAO6Bf4RabT63iMqamKEpozTL+3u23zzBFRGqU50o8UKBqzjAN3oaUfyTOhzEg7cmclWDkKzm+4g0q/yafA7WZ52wtu1Jy0xPhLlRmSsDn76Xkoh41goLhKL8pAA1mzyboVfCIVLogRHio3ik1N3dz1DxzQuavRk04Pw2AwaNoQiODSaBRCJbAqSX9IDxV7gVuvG+TMnkByWeJGdIuPJMGZ2Nn2aMfC4pzXmN1gZBC9qclLTH4sgQ/okNO+f1BGzDv/lL3MhwnZbVN5nAhuU+WC2Kv45CIgOp2VO3nk/8QTpUzcakHKDByiN2CdIOQTguNrUvo9hVaVvZAN+vc9jfsIrNLx6hUQq1xnJU1lfsWZTF3eKXpmAf4TMiqDEH3xRPxwq7DkVSjE1k/P5zi35AZDFi+NDaLzWkU/INoJnHyIUKuiX0YbRMZ9aTwU3txIQ80tanBnIqKjfxHPNpvH6XpOA/16VL7sHkQtxosDC62BZ0N9/GXMxKkWEIdsD//fLMMvGkLqM0cUyaHDKyKO3CeHsDjPTC32cTrxNAyE3Vpiab8b941gCqaWMIAQQB6iwJSKFLka/CENFPFCPpwhVdwQuyWSpA90ZmDCyfkBEFl7eKLF7RnwAmOKGgrDR8hv6VXSPw4iN86VRT0kHHdtc8Vzg67q0kBrlNzWZrhvxorDKgZ3lncvYSmErscf6VkcRc2gH0JavhITlk9LGASZVaRub1JfTLPiSt0pFosGMlW6AYI3zDLPb636oi20VNPuwNAf6YFWMzky8/jO6flAaZcteHCuNjUZtMI+gSfnJsY1CfDB0ja3sLcmPkd+rH0f2DjWB2mDYRMfoDkSpZvrkJHj/KX+5t3jrP105Zrz5IVQn9zSPUwn/Sk5LjQAr7FEK6oi07Bki4qRPA21hHkbrn81i2HMGahvgsU3USfr1z0jXh0=","layer_level":2},{"id":"62584281-0d29-42ca-882b-ef04032a32af","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Data Types","description":"cymbol-data-types","prompt":"Develop detailed content for Cymbol's type system. Document the primitive data types supported: int, float, bool, string, and void. Explain how types are represented internally via the Type and TypeTable classes, including type checking and resolution mechanisms. Describe the implementation of type nodes in the AST and their role in semantic analysis. Provide examples of variable declarations with explicit typing and demonstrate type inference where applicable. Include information on type compatibility, coercion rules, and error reporting for type mismatches.","parent_id":"373de73d-1fd5-4ad2-bab8-0877f0474ac3","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep21/src/main/java/org/teachfx/antlr4/ep21/ast/type/TypeNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:06.2823509+08:00","gmt_modified":"2025-09-16T15:07:28.3029503+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo09p70KYgk62Xbjw4ejbEfeHIJ0/obvtKO90zfqgXrmCzUbrXRSQlpJSQmpaXIJbjUpQmmroSSHx5aPObrO+RWCHmxMCm/hbq/uz8KLaCeH+R3/c0/hE5Am6Avj6AuVtsnJQqQrE9KErNY7Mish6SG4Sq+QKlI/IOoejG8lvj7Zmc5ROAdf0OA2chrC8O4xX51T1KYjEzpcZl5MTQ5q6UDjnq2swpjqT8N01hle48lTgxVCbC9DrBuFhDLufdJPZ+fFlH7xZHrPYeF4h0YWzAX50kIqaEtNZQyg+8D1R8dNCnDE4GspxO2GlsR33hT5AUoOzDiGjanShJQiV2Y8+LPBHPup0yUto7rp//eyOgEgPUjGTZUdMPV1EVrzY4fQCzLSTu8+mJQ+9kvSE9Xrw5dGh2Keu2W/VRjwwXlgWeWrJ2v5ClCzVxZq9kqS/OzVnoJO4JttBEE+m/EDzUXYIQDJs6lyL1nZCOVNDde+EjPQpeAcfP4v+9+Nd1dPaYtZNIxX51FhLnt+2gEhAEivjD4Om5IT10Rr/3xn6m7cbV5/5oWsLBqfs6SpOAzTrgL3/UAwa0fk+wjJieOQ7Ukvm2gNM6nmLVG1kOvo5RLKs5OCUTiLgRHD4cU2fhldTzq0hyuvAb2k3nVjqGlf9HAslYzGV82pbV8BHXqx2Z3ljF4xkqvfzu4eo7rvIrEaxjjA/LxAlUVO7lu8xuDHkc/fj33hQQ3lwNhx9n7uUyG30jg8/tF2PvoOfAJ8hw9W8yrsWbg+/FtYj6Ze9GP+pUpCPpFgqA5Nrj5jmSZHRXzIt/Z/EZr8Ow8mk6vX3QP3PD3+0FSy6u6wo67qAsCRmDIN4jChqvI+3jA7jwJhFWDQjFrub8UAyWQLDxUmaP8G4O5jBFWR5VnmsY7Q5QQ/e2/emSiDo+42dDS/mG1UOLI4to8RdDELrLAscAihDfjBRFGuXPjgQOydBcBwNqAeH8PZUQVWej8HiVi2k/YMmG0+xyLywAWpU5Q7wayOA3kCY+QJI+VAYtKhnohXxDYWxfor8rnVjt+NfgqMYDxoexJeBVzU/9Ple3hSsnvJHMy7HxqTWHWSNpWivKe8K6pCs5hACtuiIrsIOVgbNf1TYF44X5s2YKQGrXX7gW4Q+6VWZVtxIn1ZqKuD/5+ALC/zIDSqOl2G/c+NE7QC2vMPxsRB8NdMFVAOhhB1upm3HmUTWl26sqr41CzqV3kG8eEbuPRdQbMBaEYqwLlaUnPOLRgQtACB/e6SJl5DNYYI2pWCEkMQwV0SAk7i60niHFGwrVE5fyi1HwHhocPIYpwYxbzlHGPube","layer_level":2},{"id":"3fa600c9-6872-4fe9-937b-f5de56c5ea1a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"AST Statements","description":"ast-statements","prompt":"Develop detailed content for the AST statement hierarchy. Explain how StmtNode.java serves as the base class for all executable statements, defining control flow properties and execution semantics. Detail each statement type including control flow (if, while, break, continue), assignments, expression statements, variable declarations, and blocks. Describe how BlockStmtNode manages lexical scoping through ScopeType, and how control flow statements manage branching logic. Provide examples of statement sequencing and nesting. Illustrate how the visitor pattern enables control flow analysis and code generation. Explain how statement typing and validation are performed during semantic analysis.","parent_id":"32f48f4b-a49f-4d52-a28e-81c006fe2406","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/StmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/BlockStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/IfStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/WhileStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/BreakStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/ContinueStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/ReturnStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/AssignStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/ExprStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/VarDeclStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/ScopeType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:09.291962+08:00","gmt_modified":"2025-09-16T15:08:20.0152315+08:00","raw_data":"WikiEncrypted:bdPiD2hF/2buEEWW1H/5uuIYdCvvsi0KUXE7qJLExrJ+BwtVj6sqLpPf24sxLjkCC1ScUKp4tyhTh1kVJgtVqAxF5tt7MXp52Aj3Gwcsq1xywGwNgswtva1tF1dEoxglGSrJP+2XmlkMWkT12E9PqIHF7IDCCeCGD8tVNJs9TrE64IXiAWn/z0LrbQkxVmPhAtPTXOJXgoVQacsGVi2cQGUlq2RiKVLyme3znq+E5z/I/vAb2GqYAA2dzCf869UA0W7HIq2R5JA+oAL5YjUFeqHf9GnwAsa1CYrkIbzkUIUgedz/nS+IGkc90r9U9bGc74Pw2yxTqNqfTvr36GMvBnS7K1x8RnClzeZuzzhcR5YgWQoLdyGGku0ljUxC5YrnogaR+kPWGx1ObU23UUFXs6cM3l15C4S3/GXjrld6/chx9Yib5DY8qRhrqu+WQuZR1QFCwy+89/zFgdAbHL+Ga9NHajHMIbo265w/NP6W4pyPfQKde0Fhswb/jh9svLDbqM6uuUMy2rPy8XnqFdpP6NzRbr/CGQQ826Zfsfd/XHu8ttd9vbZYfYdOSY6zMSGzFMgFAoUhzKPDfKe9ZBahXr0XYxAnzMCuwRWvzpQXj9t5zdzjnn47bKoAThrKdqjJrN6yY1t6o3NR4Pgeo2lpZO84hms2b/IkI6kpJF2aLXx/wA/JeCSplu1Jzn9wyPWgele1g6rh60wHwit1moItbuZCkYbI+pwwHfoaabPdZ/U4wCvolrjDqT6VACeT0eIXO+6Cn0Sv1nGdle98j8MBX8WGgIeM6RBsUDRZzbVh0uwrWUk2K9ydMa05229xVwQyb5euQfXKZZGB1HNPWeAOE53l1gZCxu3qNhksYiMS0vIojAhBEnHSx0rgEuOpMUIBsb4oNjAoszgEcm/QSTIoBGVGUBTuODluHda/4c4y0c2yMUxd9r5qE+SpUmIqhhw/B9ReHl2bzdy569wLFrolNhVEV9uZbMuR/61/0BsVoECzLVmMDV7JMUBLcY5NPw8BgWKiUwDUI2iT6B3eVH0FcDp1v3Fe2+WELjrOwodrkQ/RdT/PSqcaV4VdmTlpTMjN7y82fDqE/t8rB2AXpucc4RWLv1puZoouqulzzTkFXtUIwv1wbyjshePoWbEwaL17oCSbStm1DjiHVJl0ySZzLlfKPQGk1vSW4U+edLeyUX1pHjIGDsEIvX39v8mvUJKGbOyTNuxTW+cFKePNT9aa/71aQr785IQMcq6s/6MjJuNf2irP3vrs9YGynih27oVyDooTf/UnDpEESMm58czidwzPXMggzdR9CgMa3Sa8a5fWElZaeivEhAjXmaEbMYFYnA5Qhoqp2aTdzjI8nXm/Ec5oKfBeuNL5+NX/Mu/JAcdra0T6cLlUiCAcVHjf8Ag6pFdox/fYM0zUGri+rTn8XwWqGNKh9PQz5KDubslC1IWUV7+lg6Hz+5NMa0aKC1N7acyGsyE0+34Hq0ut0EzCh17X2ck9d0RzGdRHfWpOHe8qEE6J1MOf/0nQIna0Y5fyGiQvNx8gs5wKVop+dE3QaOhW5UnH8cChikQ6tB+tvxskzkIWhboQg/cyJPZSOR6KZ7Iedx/cDZv/IhxIwovTIPfy7wdmLiE4/0k5AgEg3KU6jmSpkhE1j7GtnsY9oCxzjeEpGR5sxoadNe8PR4zVfc9mmWLrEw4k0X9f1oLf9aYz8qrt+A9eSRcLbGN50RDMQETbuSp9ruZyty5XDFVPs893R9s1iPzgNw98+fEBP3BslrsIm47polPRylMo1hL4f5SPVPT2CxmdToJmeHvrV9Hn33BbM142XkDKzP6eG1modlvCfHoUtz8XQt9YbSLJujbsL+qvPoKlBwi4jMj6l71KyVmYIytiw3Zmqs3w9vYvKIgFtdWLSHHkORC622nkVuK9P5Z+Ml+prcx8KNdE8eX6OZzOMW6bwhoAtCHLpilvZvoifxwQcATmOHZ7Ku4x1NUG+u/WLkpuzyWAZfWeZ3oUPVFaFwRkGFOyiVNly3raaeiPa5DU8S1mfSnTBWzi2R8K5VL3GiMjPWJWJd9Pt+ngGyR6D905rIkyTJNzElZvqkvjf8M4crpxYBd/C2arrnfwNXv4qvqiFC5dDfCqtR8uKG2gCuA2Ftcvg4xQx7AyeCHF8UpPB30u5+FU7TbKHQaPZZfhg+WJbeoflwUzsroL4riPaaVA5Ra8SkQ6zWosZ/1WeoYCaHqmH60HpSXFdPpAdc2XK59G12qKxLH0oWlCKhnDMFB18+sGjk+iSX/H5HvuxKPLObxds4TiOaaY","layer_level":2},{"id":"e5f39a13-a940-4a44-94a1-b1ad913b950f","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Arithmetic Expressions in IR","description":"arithmetic-expressions","prompt":"Develop detailed content for arithmetic expressions in the Intermediate Representation. Explain the implementation of BinExpr for binary operations (addition, subtraction, multiplication, division, modulo, logical AND/OR) and UnaryExpr for unary operations (negation, logical NOT). Document operand handling, result temporary allocation, and operator precedence preservation during IR generation. Provide concrete examples from the codebase showing how AST arithmetic nodes are translated into BinExpr and UnaryExpr instances. Include the mapping between source language operators and IR instruction generation. Address type checking considerations for arithmetic operations and how overflow/underflow is handled. Explain optimization opportunities for arithmetic expressions in subsequent compilation phases.","parent_id":"f315b1b9-34c5-4219-9adb-38f4397d2f9f","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/arith/BinExpr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/arith/UnaryExpr.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:31.4026438+08:00","gmt_modified":"2025-09-16T15:08:31.0263842+08:00","raw_data":"WikiEncrypted:Wx7voAILpO/sH3s5o5KpBWqz6nByemCSBwejLMAEINn+Oc2/YcspWE1eb+XmS8x0dEUBPvfNclZZzZHP0O4HjoTYJnf/HYvQwwovCA0Kh3Vtz5WRzBIsqvOcsW0+THyNUtH8l6wu58lSG3yzvEua7rkA8vuaJQlgKUsx2c7p8tUDsUAkaUw0Z5Pvgxau7TEtLI5uL2wC+BhzAnIQprAvOLzeEazlfet8D6Z4Hs4pSPb7QEASeKG78RLdQVg7wwjZ+ba8dYsU0HvXmrRKmDNJTsfJxbo0JTXPYvpBBCNq3VtAay3wapMRO9Vc/FcLkc7t/F2SYZu91v8uMFHqtNiS+YT8wlkqvc+/E6c0wocLx05JsoZOYa9oU5UvMfaS3GnQ0cA2k8iu/V8UWeP1c9tpfzg1aTzVmuEfRQRZelNa5NSCr5N7p8Vw9ulsjFrnjFhv2UDoZm+IyGyu3RFYxWrCQtSU6cNEjJYfqwecpGCjQQdobyhgegB5YRLSE0W5R9DGH3KGUyFxdJLmmkpk31KVN6hLUjAeR3i/Y2Z2Oy0Ufz1wtsk/4HAs9EJ7NyDViXlz8eNdWPKm/6CQdgYDeGYkHBOYPwpfkP6BBtBodcuD9InOflXucWigsgNsb1/CMqN4zegUkummWBKjdYfZfOvXAzcukE2n2LdWtijx6hwq6fODViavCXyQRbYeUjCtPba7qtxgL9UYJvqfSq3wD1nkgUIze0hvvHuiQ6MkD9kD3JzmI/pM/tcAKo3RGLkZBPUEZw87LxUwmxtRTGq3nc0VYuJvydoKj0wzhgjXn/gs9aqUxy6LxWDnqASfKAAsfJQXFND3WeLw2Wy5LrpnxVTRgVLYTjnH7E8+b9r+F5DZ7ZKqsDTsGvf0atCAdy0gkfcZfb81fq3ZpodR9fWYu+YcjRxTo6Sx93fOql8Xuypamk2FwqoLnJBUSc2Dxalp2HUPKck6TO8d82PEnO9NK3pGjX1/9w2ZLHnEDfMhCXTqGMtbNV18FnccbpS0766G/WHJZC0yBVtS8eTVQrkFWK5hLThzhRhQ+irNbDajUx34O/7gMVipTWWHGqEPB00EvxX5edetO70Vo5i/IXRKZbW/5CUa+gLqfCDRbQkc5FenuU2LYQ+mgVI/p2+N1QWCFz+kNz5hfs6K7r2aJth7DGPUq71THc9iXIFDITWrmeJY4qPlJjv13Lu0cLc2okNZS2JuuFBfRfvU1diS6PEexeOR/ZJUVjxNaZ/9uaLpve/SMe00X1ITPaMQRCLBc2bH1c7Qi7t0g9iu+P9WVXV0vhvsDhEMOwVWj6MwUn0uF53f306YcLtKi+25taIXxqVAyqTHH+X+8T8U1IxhVqG9MyAESEmPYEihPnVVFiGIYEHSB2Qiz3UqksFiNpDf2g7bW4WOPEQDaSHXHESiphFiAmUTUWDXmRyRY+1TxehrpcJ7ovsMz8ODT26J25kEQfRPWZZ0UvXbSMlETbV1oL1QiiGLFyYXCAk44O7pAg0DpgrfqJAZCh8Q5ijugYZB4/M/oZVj+y9o1gmUMyygQ87M30iqOTp/krGPCoI0TYXqv8j+Uzib1DBUU7zhFv2naX5JMNLiVDexBSfpVFtoaEfAkwkKoeTkcbtUsbStFfrYdR5On5NTJKkL2lC/sccehoYHxXJT","layer_level":2},{"id":"f1a59a9c-eb6a-435e-8fab-8701a6b44e34","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Component Interaction Patterns","description":"component-interactions","prompt":"Create architectural documentation for component interactions within the compiler. Detail how the Compiler class coordinates between ANTLR4-generated parsers, AST builders, symbol table managers, and code generators. Explain the dependency injection pattern used to pass context between phases, such as how the ASTBuilder receives the ParseTree from the parser and returns an AST to the semantic analyzer. Document the shared state management through the compilation context and how error reporting is propagated via the ErrorIssuer component. Illustrate the interaction between the TypeChecker and SymbolTable during semantic analysis, and between the CFGBuilder and IR components during control flow construction. Include collaboration diagrams showing message passing between key components and describe the contracts and interfaces that govern these interactions. Address how loose coupling is maintained between phases while ensuring proper data flow and error handling.","parent_id":"5a9fd681-5265-47c2-9876-2eb17d74535a","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/docs/project-architecture.md,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:42.8928136+08:00","gmt_modified":"2025-09-16T15:09:11.2255498+08:00","raw_data":"WikiEncrypted:4Zqjl5aZEo1Vv5NKBpebTomBBVqvudgIjJFKRAI2hgGtv5I3OWs+Ol4REFvM8yb5tjq42ZvzYCynk8XafDSsS8TOFpwHEzxD9UEWPzH0F0MKRUMi2fE1FTaB+XbuXw/vAtY3zTjyQwVQc7ob6Li7AUOLW+J0TS2QpNuoYLuLmb0NONLcRiEhWlpjqZ6Sv9f6bpAHBq6Ih7uaDuMUAm81hvmk7Mfy6MeI+oafxGVOzPhRO3jSJ9bR3mg3gOUaFOs+oDUe4cUKut9QtzjgkAJYtagN1WbAkihCL6Ri3gfU6B+YB9aUGaQhVgvlPJEqEuVvjpM7rNKfIrzLE6PAcjxNpe5rh/gUXohO8BVMakW0124Rov3rD+1OFrW72QBIUhDdT68UaYyE4Qr7lEPks20+HsdlYO42J6p3sIy4OTVS3Vz29GCu4mjHkySGG6Cz829cKAB4e9Y547LMJKATsEBi41V7v+2P3/VbCB0qmIWQD3b9BZH/vMBGkKQBgQjpTWcsvuk1G8mmbkIdFVh8dvW5m4adXwQQVY6OkxzOBezMXypE90syAXD33k8A7SxtJ45YDb3akBQTGTTtpaVSENifKNmSGVYjs009vIIr3kBgpoXJVNinnjVp2aRqMre0C0ASEgiZSw35Q35wDjZIttNtiD3EP3hOD0DJO6GtaPPj9JnKGubkPHPYyM95hvdial+YUXHP2WcQ2eTKPRqub0I5MHIELZXFpOj7zC9lyE5uj1OA4Ftim6DSnRrlztiv1zOBjn3trG8QMP7NBtdzbFQwuCeHNh9FqyAt05O8e7vw0xENP6Aj9ScuLII3zF/geCTXxX0ln69gaV526pva7MBKBmrTchl2oPMR8ilJR+mNGsKG0s9TfoYRdvZFe08rtmUVjCoj4QFpmDcO82CSLxoYzA0rhB1Nz0K9YY6w5ICib9RV0oozO3BwtOGX5Cnbs29xWBKDakVCT6J5FqoeO+C6qecAb0avsXf/FPvWm0BiNHRVu/qPeg+ojL9ybiHOUqW73RjMt9t70//du5XVaIJZfcbq96wBtGLmvPeWwH46SYR+3/JEskK3Fo7KiplMkNIUbgpKk5yiZMmp4JKScCWg2+/PXiPBUgWAl4ofestxKJckWMu8eaJWDD+0CH1NbgJ8LHynIeIi8Kkbbf1GXuv4cke6vqOw4KB4sMdmyxX0wmu0rCccsuXweSuP7l71JoXSdssMOEnyujw1u7JDT+0ZsyLg5TvFdOl43Vd+gAhavNcG6IHmxO+fIXgWK7g6HUD8XmbFir146PNl4LHNBxga5wtfnFU2NDLQ6colAX2zlXqEl4oVWacS0ajbkpFITb9iv5CkXV4LoV4KW91s52I2tW49J5Da1Rry5EV09Hka3dM/ezHx32YYqvnndiiGmDGyuT+97Iz2RHcfoM7LO3udJGOUSXvw+iG8F9Avx9KwBfNsFHdNRONNThgAp0OeM4r3/iJQWc5Ix+loiW5gT6iRqq+6N/3ac+GUAMnenKockLAETZhSYw1CSVNeTNnwKWATafDsjFCjWvA6GG6vEKd5l7pqRSyPvsp/gwizGxULz+QZw/uLwdBvu114R8NUsH29Dm3jilJT1FRTudP1LhG5OOFYjvBaswEUco3pn9/4wB/iCGUgqPqesFrCSaSrP0Hx5vM//AqtH3PbLJ4oeahdy7iZaFU8oO3njo+Zz1GvS9PTAW+X8QM3rHQO5uOGcBALkSnpsosAfiQ7RpGrzz83FnzYxfFyc4K2B6RqmkXALZ8BdejqkDw6ocVIt63TnM2G1v1VtdB2HGnyJt5Ir1jzI9+ZZSHaur20d6AkeQa3sRmrP9utEybDJYExZSNWBh9BEabYW1/p0/eflW+KNaD6KKbDuqokHGp5CxToB0f/TNqAmkfRpsZY6Qiga/2NQYShGooBN4Qd9wL17L6L7mP7zuTB/29YJHJZcmNfzKqv5Q1B3GwAsFOl+LCv6tMPzrng","layer_level":2},{"id":"832b5caf-32bc-4586-b131-068261fdbde2","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Symbol Table and Scope Management","description":"symbol-table-management","prompt":"Develop detailed content for symbol table and scope management. Explain the hierarchical scope system implemented through Scope.java, GlobalScope.java, and LocalScope.java, detailing how nested scopes enable proper variable and function resolution. Document the Symbol hierarchy including VariableSymbol, MethodSymbol, and StructSymbol, describing their attributes and relationships. Illustrate how LocalDefine.java performs symbol collection and resolution during semantic analysis. Provide examples of scope chain traversal and symbol lookup. Explain handling of shadowing, function parameters, and local variables. Include debugging techniques for symbol resolution issues and demonstrate how to extend the symbol system for new language features.","parent_id":"73a9de86-3c93-47d4-84b6-073c2b7827aa","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/Scope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/GlobalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/MethodSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:59.0934615+08:00","gmt_modified":"2025-09-16T15:10:10.330218+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO73lJB/Ndfq9mT8QIymPU9OTRlTxWZ62VVY8pGLt827IdXMrNY7XmGqk+YjvOzwa8Ivo0GWHJWmyYChjPQvs3NG4o0Wb+ROYK0Qol2HuRD+X7uoqDSIoTgp93UR5z16QXbb/w5JBFeKkhFf7rWhhgVmcX+UsbwEAeaQZnFl02Rp1QLsJt7ZAoNaa3gOIVxROIX5EsvxCFzjVniMPUyauuSAosl3l4Gve3VABT692MociTf33v17CChSl7FvtftISdXqbGDUVYWZH0kATbKAKZmVtev+cYU4npLdq+3nAxhmKOHJXkq+gjVP2uA/ie0CO2ZMEy8+wR7ZbUmWN42cE8fmxukoIIda+7mlG8TIzGzWSlDUJntnd+so/bRSQExNzY9gDFRaxMi3PkpkABs5EpsxRbk/7t4LcHKnYzrK6nMAdOY3B2KRfj+TtBd/Uap4rIhta0gP5ayNlQRWIgDxY4BUt4Bn4gPwKhZU6cnrYidG4zpliWdf0+6HaMl4ncRPongX1fIvrXtUgYaeJdMkYUBZO9t43D12WNMfnZjQU5eZJryNhtkRr4FIP4jExabXqJaCzPcuq+7RqaTX7vYPX9Ht8jq2hMKq2T/uRZpjc6BBfeMD5ezaXIHbjGnPhwrx60zgLY4e6tQXN0vnDTPY2UDMgFUXwSDwLeyra4wa9yg8JMw3i9HAXKeAQ1wvAkfWe0ET1+fMiXnpoLacp5YaxhZN6dZL8BFG2UtLhcv1Bb2WozTaBwGf8J6ekm9vksuvgtZuP5Nl/FVz0L05yCGfbUcf+ke3sL40nlAzwjpRK+0TnpIJ1epTs9hqDwf+yxsKIeUnMagCDGOjg11AKDfBkrlrS+dIDiC1L3ZroWmlEGecMODkB9DUvaNDZTTwBYbgw4pzmfQEuC149Gm/H37TbycN+FpwB3PHZ9YiC09eLZe4nPUwHTP+oEAfHifkN1PkwjCfe+4ha9ulzNhi0o/ZSbytxZMUpQ1wphTh37/Zcb3py/TpBpsd021H5MU6K4cde4BFOfmyEf2fCPtRAnOiQVD1P37XqZ95degHOlZtXocbN7+A3UWbGbLi4SrRP/p1CzfiRxzZ59GdDdkh0Bj0lenIDJQQYWJNP5nGsR0zbpXo790hMJb/resyzN9ujIdgcCTC8l4rR4kTHwUX5YC8hw6QC0dokx8dfucMHGJWWCEZ4V/CaxUxAbrGYNdTmtx16AyGpGDF9ojR+N/K/wf0aa7OTf8yw5+sbTEcuGMZzt1HniglMtcj0HXt4ZJ+9eulEiA8Riwbt3plLthUypISeQAfxgDpj7Vec9f5p1H6MJffvc1oc1GDVeKxRFN6kiuaj7gsrqUsGwND3JSz7IVFv4xC94Oxm3XGO0IYvoE+mbJ/3M8WvrWiVzVcbMUdZDvEmmXd9cS5QkI1Jfr2BKwuC1FONYR47h6yINJNhXuftdlpUm3zBFokvqrdRdQMu+UwapttFePYuykH0+JMZeWMwUkmqCiD4ZASIdvl5kHkoaCUYfM/Y/scDY2Gc11/3SxisbXkrs30R5ql/JffQ7Rj8ricvID6sLokSqa2ruVz/Q0pN7rJctShQ2fn6qmpv7Qptam79aBKOdeQ10ZO8dywFWQLMfIDqgGbCXxRRfTvgcbluh6Z/o4YLXm/2sB9lO4zUQHWZ+zn8JfEjBBaNSdMzU0xF3M4UcfPvG2TV1/GFoRx9PBYX1XSbVwUdXg3PJE35p3VL3iEZpLnlQTR0mIt5Niv/bwXEIREtxhRm72LCfdArpDQAtrMFVv2nowe3YnOgcgvUbhpSJa7UYDVRXQgV0N63syBNQ/LfCbAK02ziYW2ke","layer_level":2},{"id":"ec3a5d0e-9da2-476b-b3cb-7f1bbd956995","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Unary Expressions in IR","description":"unary-expressions","prompt":"Develop detailed content for unary arithmetic expressions in the Intermediate Representation. Explain the implementation of the UnaryExpr class, including its fields (op, expr) and constructor that captures the operator type and operand. Document how unary operations such as negation (-) and logical NOT (!) are encoded using the OperatorType.UnaryOpType enum. Provide concrete examples from the codebase showing how AST unary nodes are translated into UnaryExpr instances during IR generation. Describe the use of VarSlot to represent the operand and how temporary results are managed. Explain integration with the visitor pattern via the accept method and its role in downstream passes like code generation and liveness analysis. Reference test cases such as VMInstructionTest.testEmitUnaryOperationInstruction to demonstrate correct instruction emission and edge case handling.","parent_id":"e5f39a13-a940-4a44-94a1-b1ad913b950f","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/arith/UnaryExpr.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:14.4342878+08:00","gmt_modified":"2025-09-16T15:28:22.6132275+08:00","raw_data":"WikiEncrypted:tIugEUBHCgMXeNbyfDYiCQlnG9c7ziqjO7ZqsqeMYBSQCmnBLUGgGtBrVmpbaEAA9b3pDEVU2GKv5FpPeTDQReCbZ7SgqGk4QMsIK71R5FKjIp2iAQ6LGbZJxErV79yw/3i42iYqW5RrA/Bnljzwf7tmkBOdi2BczwuOiMdBsWAKiVHToAD+Mc3M8LRs46xBk13kHEvTPAVCsMtbfhZKAGCAjh5MG1Qm/gUb6+lccvEMRw+9W1AQkubBsKEcFH8JvXZL3vH4BQzq2trNyILBnkijp6b3AHnNroceUXMSDcD4R25b5W2siYtPjSShKVZ0XXr3eFAkGshVpytSh0j1O+wzpLheD/1Y4b+U+eiWh34+wAF6RizLoFkogi4waSdl8RpAAPLUug1p6MzDYVxsJ6NOnXHs+P2aQe8LjOP4P7zKeuYrhqj8WIDS5RcbHESsZfjsTtbXlChwT/0vceCDtMJAtg8YmmkWyzWVpjYHU1o+c1d1BsIlWFuDhF/cDWJBYRvSUK5VFxDCvzd6MOuKFQ0CndDvjE+Hh3jc4blifI//aZABVVJN8fwz17PejM8coqtV0CQDq4eX+dnhsIw31nK+Xq+d8nNg8sAgSA2AjfK5wPSg4ryjfBZp/NaN+iisdPwDB7TV3CzzSCBSsAFyrXl90S/zJgPIbyJcCmcQG5NwwC4vQVDL1FND+NnVDYfU2Puq5k4cNkLyesbsaJ6uuUNQUKk5jgkp3fs6s8rOFEbZjwCudtU2FVN7ZueeMmfJOZg3kqZ3KZQp8b6eZ7rOAoPko8iztfS1jgZgmFCB9aLgoq7cta2BIfoJr5k+2nXhCxUwQqUAGEMTa5Sq6wdXYadF5w5VH/KCsKEPa6RoWAfuOVZ9/sQ0BBg2SVHuCpEcKMbLazxBHu1sqJEhNf6ZDkteFolaHQriqCnzA4WBkfhxb/i5h1I/k6Lrt942sDVzO8nqq4sw7/4nr3J7dsvnPel26JjpyIguOmDjLf181cV93wYGMNzC3pYFvvQT9hI4DgPt1FRy+D8uTlE20X4AOOSYVxNqDfwt2dVZOsTmIOwM3oVbLBgyEfLZzi0lpGY/cZRslaqt2HodRH+/qcRw4r0VuoNGrR3F9mSZxMR1mxoiK/OTuE8ms3KgVxC1n3MerZobeMs3bYMkSlSxPsmtviYKOIu3CmScBfGUzhCToJEJZk90kZ7fiA4mS9aFreDL4ruxPpDjmhxgIhK/0GkTnVA4yq4PemU1JPMCXGH5LlwLH/osPLLGEHkqxUze7Oxhj1bD+qeMt2on9XM6T6c8/YZDMZBz9TNVeNuw4uSPExBly89YaggamzWKtUEXSdY0VjTcgUDU5tLe/0Llb1Ue3SyN9viyWhy6TfNpCWkvzJxpI22yAIqT7vFW+vJVqoSZsoo1yh2zHXiP5C3+Csvk6RqHmfRL4HlyFaCBQrBmy2PTW5+g1bfEbO0+BrQquJ55tBOZd2RRAF2pldBEdYF+r//mP7TLYI1HPSVLt7E8qbhOSzxzgZKU4AVoi2vo8KuD2+UwJ2YspDlmnUuBANUNJvDaKiXz/NKWVmAzzEUBDwBdipob+mkMoHmob2gPRCVo","layer_level":3},{"id":"8383b686-c54e-421d-92b6-d0fac2405525","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Assignment Statements","description":"ir-stmt-assignment","prompt":"Develop detailed content for the Assign IR statement that represents value assignment operations. Explain its structure with source (src) and destination (dst) operands, and how it models data flow in three-address code. Document the use of VarSlot and OperandSlot for representing variables and computed values. Describe how assignment statements are generated from high-level language constructs like variable assignments and expression evaluations. Provide examples of Assign statements for simple variable assignments, arithmetic expressions, and function call results. Explain the role of Assign statements in data dependency analysis and optimization opportunities such as dead code elimination.","parent_id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Assign.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:36.9843751+08:00","gmt_modified":"2025-09-16T15:10:28.8191683+08:00","raw_data":"WikiEncrypted:HfwylyGPL34NvuXFDpnUXzjMnis2mCTtiSEOo78B1Za7BBTkolc11Jca7Ud+h0IR5gkcoscOlSv2l83cvRMHNI/dzXeCDsK+fg+k4yCpr4j3h+KBW06I9zJB9VROdmCX+qNz3QaDyIy/T0CD2RAE8cRxiuJatCCofA+NF2yeEPG59qPKnkA8Hdrftmy7hynGQg2xO4CKn8rqOQRx7Wpdl+2NiuP9p6/OesVRO/x2aUqsVqpqwfgKVMrJuV7Mfnw1XOhhQZ30L+djOBlhjG5kA0rnPNQEL65Y6Niim1Tl6bQvBr77kiwjTd0PQdsUD1bE2iUIajn2E87mP60geO1GJ1rWuKnE0APW+d3jGFm0qjKI/ZpI8K0phRNtxnnshBkRu4LOTd/E0sxFf0s9ruFXY218xxwkNAqbPqyJXI4oKrVj0Y+mysqnnLQ91Tr4O/amBqlg/5upV2D1vY2HZyzquZhvSw9csrfzQFgFHNIvkfjSaCtgnvBeXUq9yKFSdi0JD+FRTsubQATj6z5g/++WyqgEFwBT3rZ6Q68HDAY51rSlW3UX7NFy57yC+e3ByEd+tYDKxuYDlNcF9oNDxL+wFivANHVL40tIaCHjsUhmXl2RvVKf3R/4QU02C6iHQo1KBvCK/Lrbwj5iZkFhZF0Ct1IeSdtLPQL2B7eA55G3+H8WXp3WCZAsc3JDXvlbW7kp+wLLSe/wlNLsnMPB0zXjGtWnGkZyK9nMMdUAMi9ktpPQk4323nPx8TswrrqYeoPqH1q/4GXJuID1gyZXOj+ByBPlE2kQrOCyDbUG5xLHQFnosFO9B8n9T0BmPLQ83Gjl4f9W8DxaAT2huZynxdzlN1b2c0K2FgkBfhqKVjme+39+yAUUiB6g3aXd7sMctlKAeT4OxDPhvGHpAq/xGF3faIVtW/ZT5xjiIfgZbP6VkUGqeB2IKkBm4l5Ecknu4NKcJn2s+Om9OJ5Z7w/Q09sqQ/Ho/u8ZHgufOycmYmiA0yddSPOjwiCA7UkD4Cxr9O4T19Z0EabPLtwjuV17I3ndMwzZ1lr37PeOAqzC3P5Cn24zQZwjsv0063n/f7z+fJEcC2rbSYT6V/Vi9s9iNq2Ze1xiFpuZB7rP36JhM368TZf6T3c85wE99yZIVjz9KnRgxi5P4Y/W9fSVS2j2VfuRH7qxczQ4tYRKTwttql+NeL88skglQwb7DvQH3sj2ZEHOkTMH8c/6jsNtG49XW+FSldHVO9bRWcQ+xv36JahvX5Y6SY/LJA4sGm7VWTdBS3eyNKuBIrjI6YK3iumbNLIFXua3fryQIos0qCJpLzP9goIfzzt8+vWEn6IEYAZDzH/L","layer_level":2},{"id":"7632c150-f891-4d76-a9a2-c0061d548e92","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"VarSlot - Variable Reference Management","description":"variable-slot-management","prompt":"Develop detailed content for VarSlot, which represents references to named variables in the IR. Explain how it encapsulates Symbol objects from the symbol table to maintain semantic connections between IR and source code. Document its role in memory addressing and value retrieval during code generation. Provide examples from LocalDefine and CymbolIRBuilder showing how variable declarations are translated into VarSlot operands. Include discussion on how VarSlot interacts with scope resolution and type checking, and how it supports optimization by enabling identification of variable aliases and dependencies.","parent_id":"aae5e5fd-c5e1-4541-ab79-3e92c452c9aa","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/VarSlot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:48.630306+08:00","gmt_modified":"2025-09-16T15:29:01.2149412+08:00","raw_data":"WikiEncrypted:5vQ5s0nS48bl7VZ0wNBcVyA1d8ZDhnSJSBtpaFWS5euZdfA5BSyVokz9vgg39Zoetba3aiq68S79sgcLS6z+F2vyYHqc41jz1ninzcs+5J5MPAM57OHCI1ugtscyYs68CaxplNpMNXerF8Hf2PCgR+dh0NgoiNdXRCQJCLgRMa8OtfYCC3gpNMFMo5NjbfX3miu5bcvhFogJWES2iBJuXkTVAULedcUip/Kbeo+O2VSJVNJZ9/C1q7DubRKj1LbbEtJWRTWjFaknBUZuzie6OCsFpXjIONKBsRkAIsPkEHtULUfqL/0VI6epf6MLLuoN7gt8ZZcPnpRXfcUYfoN97IPnCvTwaeA7P3ERfpuDy3el4VNjyO3sSnuLFUy4XTay4eGzwI7K1sNxloIU6bYVmBPe6I5XqnBWIn4SL803MybQuqSEwJV/SbHL1zUrZaRc44k/vWmryWuxwxA95PYAKg1OskPgpIU9+Zeoo4HBAlkxxk3H2sfaGa5qun97BfouzoihkzH1kxX3orrmf8uKmJUv629e4ejMGQbZl+Lc5ArNzQ8MoVyazZxsUbJ1VnHM8zvvCsm9J8yNhzllTd3qXUAwftwtj+VZRjzlqUhM3bavjw9RoIxZKicLg2V48zWourbYgvkNhEtXB3L3ZS33AUHQ5M5iXgI5R67fD117WgBrbxcjgUq1Nh2mO0/V5U+Tie+zhrLjzgiUB3O6+8fv/JP/iDTi+C4p+TFVfw7357mnHnMwf+fE80YjHGLMa+fbEn2/PgV/cHDPMkRj7aDe+/tr4Gz7UWO6ES/kAclIhXLEZ5nRqKZcZLNMtRYkZ3W+3Fp5qFBQixlhXd7rK28SMla09+YkOilKR7rhs7CoAO5A3+tGx4rK9PhPeP52sRKFaSj39bqyu883sKYJt2ByHynWbhyJLDWJnaMyEPrbHiD5mvfgEhwzJ5SHqrJRYTcHt4QaW96T45P4B2tGZKZ3t3uoqmZvkiFK+z4Hz91LwGnM9f/sFhoF7vLzurTjgJ5Xzt68r7mBieNnHFi6MFLGKU16EPdEte3lVulmcXBg/pKzBDK1PbjGX2hA27juEvfeRerPv2lOqG4Dt01SivFWF54AVv0lIdpJ6UoJN1C9LJS2VG4YFfsS00hwz5dE+R+KDWmn8R7CTIYcJgdnySKAWhRktUuh1B7Zpi7AVpm4t/h0TzxcFk4F6ao8P9L5jteJMZvNshiVxLRuFl/XRzuZFLmHwH/nNVKSZsUXYxZQM1I=","layer_level":3},{"id":"7c6b727a-6205-40d2-9487-1ec941ba512c","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Syntactic Analysis Phase","description":"syntactic-analysis-phase","prompt":"Develop detailed content for the syntactic analysis phase of the compilation pipeline. Explain how CymbolParser.java implements context-free grammar rules to parse token streams into structured ParseTree representations. Document the use of ANTLR4's LL(*) parsing strategy, rule definitions for expressions, statements, and declarations, and error recovery mechanisms for malformed syntax. Illustrate with concrete examples how valid and invalid Cymbol code is processed, and describe the interaction between the parser and lexer. Include guidance on extending the grammar for new language constructs and troubleshooting common parsing conflicts or ambiguities.","parent_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java,ep21/src/main/java/org/teachfx/antlr4/ep21/parser/CymbolParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:14.1561327+08:00","gmt_modified":"2025-09-16T15:29:38.7447486+08:00","raw_data":"WikiEncrypted:HgjcmVTJRVnJXVPG0yx0luY0GiUdIngQY0+KUuDaluiPnQD3wZCIGm+ZM4hb8Y6SkKQ3jySoIispmA7NdwxNK+hOaB/Qy0Q6qj0ccSepO8o1b+dOm31cYZu1dvj30KQ3tztvrMMWAk0Cw4amgEJR+tiPuWtsN3LPSoUmPau0bNdqsTmnswQu6r55d5gf2e2fkdv9F6eFBOZOxauB2dBDwFVDjg1hZOU3s9ecjXpMyozh3bXhYY06S5IODfNzcO60DzKrJUctvJNtwWMmynjVw7qa5SmcsybZNgZDf54ne5J513YkDZFZhc5PJBuwYFF/6FKitxctMyhSPn6cj38RC3S/on1BTpr1O9qBPNaDQotWyUG0gS8JqxtIa2zftdWOcAvU2C+kdnKtHMX+ar2DLR9QePfjZndwa4vzBeNTUQ62XChB/VbKdWeIG5yOHeDCVF+dzVe0Gebb0s5LDiwNbxrpWCI6YfcUN9dpdbJQ0nKNivsKugJiWp7Jx5lkzytZXbLxJeF1MNTNtuSXnjdDwtrHJZgnQjl1yKA9k+wA94+2SQoshRboxYRwCqYQkFOWTQX6+zJuiuavXiKgfYvJMWe9kNehOpVgIvyR20bWiFXpFezYY5ufdkxEJC/MTrgDGL8nSeXA16DdBNsOt53e+A2fqK9oDszdwEjLorjOe8Om7glC9gqqVzcqFqbO9n20OSFJ3EBx6RKoxQq+/lSczDkynktCoHTmq/RWvZn2aumhfjzgcVJ19DrHacbbqddEZisz1zKuHEV/yZFivTaaCulyVHvhIJjBZ3fA67f274kCROAnU1xo4p4XOf66qmlgmo6reTSc+g78QNas4koAHfqzkZ4P2eDywdTUDkQA7kbq8acBsLTXdBPh/aalMc0cZo9nsW/rSoPgNbvcPdz98A4G8XmCs8cbhoboHkq5sCsXXz+8bCZm3ZVsb7FBMnq8PMOH8hnlWdfdnAI53AJpckaDyFEBOzRI773Cw3N79SYomiSK/3iAtJzwaMCmPTebH4+5gNBqsuBrmGe9FmA7sPLMQtjs0gKQRMzd/rFvYvtQ+12IQyxHgXLAiKIjHDH0jId8tVpBE1jMjNGcUDCRStzZ+h9XObwIISaJOPCsnNpBo4MNYZJdht8XEZE3+e2SrmT5+oArLA/63SeuQWOwIgCYRY3gg3rBQIbONznpqTC2BEaIfwJeBJEcG/pA+MbnmoCMSX6Mk0P7stS2abcaiCDvC1LLND8uKVJBF+TGGpVEhEzc9w94uu43Nh+uR37f5KnZ0yNJkHTGwzBR5wvQWtmv3Ky5/6YYVXnVTUs1eWzfLio3Z2sZ/iCxGgwxaQ1k/wxDXVVr8s49o5hv5A4tytwnN87DxXNMm3HmATIKtL6+DhXn53ZrXB+WH2VPgpW8","layer_level":3},{"id":"533613b0-4a25-4a85-96b4-4cec4a7bb4fc","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Compilation Pipeline Phase Interactions","description":"ast-ir-cfg-asm-pipeline","prompt":"Develop detailed content for the sequential interactions between compilation phases. Explain how CymbolASTBuilder consumes ParseTree from ANTLR4 and produces AST nodes, which are then used by CymbolIRBuilder to generate three-address code. Document how IR statements are transformed into basic blocks by CFGBuilder and how control flow edges are established between blocks. Describe how CymbolAssembler consumes optimized CFG and emits virtual machine instructions through the IOperatorEmitter interface. Illustrate data dependencies between phases, such as how symbol information from LocalDefine is used during IR generation. Include sequence diagrams showing object flow and method invocations between these components. Address error handling continuity and context preservation across phase boundaries.","parent_id":"f1a59a9c-eb6a-435e-8fab-8701a6b44e34","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:16.136455+08:00","gmt_modified":"2025-09-16T15:30:38.0178773+08:00","raw_data":"WikiEncrypted:SlxMGmr6AGTwdmsKV5dpXjelbyqa5o9A+7DG10DMfv0WzhMaZEyDqz5elEakTv8LLQBpU/3WvVnF2Jjw2Ws2FH4sQwyIXtqAMcVfMOCBwEhHJxfxW06zTJeiMUYz2HZijGFWbqP1givcYiAt/XLJFIlbKB93Qb39tdTcALOkH61AF43Pz2wCCJm8K3t9mUvS3FEQpihfbwqcmHgdG6yOU3HvVhYRYuowKnICveGpg+d9zKulwb4/a3Qa7p3YQvyio6s3lxrl888pTMgCnc7OkJ2q/fvHpJ3sUYQWIaYaKBbPc73+tVD8wGRcIDwHvS5G90dxPljoex5ykoFQJo2XnBbh/NiJouy3sIGAE2W2FBkMFk7b4XX+ioSscme5el/Ceez2M51qlUYa7esCMJRAU8TEkrlIJLWsur1gHiSPsdQP3sNIcLlTGQVDxjnBzJgFuVluwig3U+OhdNPqezF+1TeC6+lbj0s+iFUfbmiSzTx8xCvEKco3y2YOmCb+yxF7j6hdz0HEvipl7Hf2by6+jPkTmlTFNsg/MWrrG36D/tAiWEL1ef5oRtTeVjIEokwsEK8Q44ydjPR4dS27Lc29BJF57MRVeclz8ZYjz0IgVQnXGxVkLOY/sdQifuEQFAFgI5IcliXuPEM0CMToyzDasmXEXbdFASxTEAl1U63UW7zSfdb8A5alaLOfuYhwOeaJXCk4kKstu8pooMfq6XvGhH2scQJvy9AIt7yO1DzGFaB6u6qHj5ESJ0VTEdBPNv+/RLk4hkJxml45vKUUnevGpaBJwG1uYuT8/gjqMB5cAOkdc5n4X3MCCwO/ytOA5OJ3plWPGLIVpDD5ktg3cdhXWiBYkGx0ee9SmBn2Ak8BtHGrKrNMpXnuu9jar0g7Dzj0sEYSS0VUc+7035MtBfkjOY2ZOOQOkg4SUhFLyRyleDQl2p4q98ZB+U4Js3lSQXBy+j0Iyhv+aYT1GrhirvDUIVcYxMJKOrQ+EGDR/ECW2S2qRVAlgV9mVBYi4oFHPOnAPgk7SDQeGARwMX7W1zW+AAL7N9qdAEjf0TK38m+p5y009f4zPOfrmyjOizopSS1z1Q0SViQJdgE6h9Ix0XCZA9dNtu8G0mrO/YbGTxI7lOG3Taht6BM18COuRsLlzFnR8tHgwAhfV6dT/Mu19k4w0+ymfAO8XyV7izx5z8aipAlQ4hmkvz/UHzApGKb+7BAMHa3Yr06cjF8v7o9+aL3/K20j++zfcCRjJ2P7gmWquuALTGGOksgHcZDlyuINOZbsQiCi2CcPJVll5lMWhY0MLjZGe+waios+3P2xbk87GXdUwMyB5fF3GMtb3IBZF0Di9MlvVesqSki5uWKeVqlHXh1RX0Joxsggdm8cZ6gPoYjSdXfm46tu5vbk89XrXyJpUN/w9u7PTmqGEgeGFw+qxYnd2AfIf4QoByG8xWGxCxgKJFG6Vo0tioxxCTu89/05czg08YV0mefqR5f4MB/RXzasBj0xIxzOReakdGqir9jM+61/SCYANSoUJbpggINoD7qQwkOBRAbiB+DZZeIQ7KYHE9nBZ7BF/N37/fUFx8Hv00qHkwpS23DCoDzpRCCFJC2VzxAye2lfT2ZZnfYeba0MNBKC84u84WOCCuIGtuvCT9cSVUWDhdfWmT7uUmA7TkjLm/Uc4YM44IcgPfykN3WJJopgnsL+Bn+xScmuMGe+Vuh4SJNGB3NNzAeYZzAo30dePalyCffE5anOO/losLh9VC4KiAh6dGLQkMxUT3k4KzlIpiEDy9iNiPMLEd3f92c/8InE/xpfhmdqoBRWbHhki3dX4l+oGRIlkVuIUeQ=","layer_level":3},{"id":"0f591dab-d9a5-4d4a-920e-17e51daaaaea","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Target-Independent Code Generation via IOperatorEmitter","description":"codegen-extensibility","prompt":"Develop detailed content for the IOperatorEmitter interface that abstracts code generation for different target architectures. Explain how this interface decouples the compilation logic from specific instruction sets, enabling support for multiple backends. Document each method in the interface (emitBinaryOp, emitUnaryOp, emitLoad, emitStore) and their parameters, with examples from CymbolVMIOperatorEmitter's implementation. Provide a step-by-step guide for implementing a new emitter for a hypothetical register-based or RISC-V target. Include details on how CymbolAssembler uses dependency injection to select the appropriate emitter at runtime. Address challenges in mapping three-address code to different architectural paradigms and provide performance optimization tips for backend implementers.","parent_id":"11cbb601-e7e2-4319-80c5-23ee6b0ecc05","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolVMIOperatorEmitter.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:42.5436508+08:00","gmt_modified":"2025-09-16T15:31:00.707697+08:00","raw_data":"WikiEncrypted:VQrRNTUwo8negaMSWKxfbBeAW26FRAtHjfU9ayNrfgv67bEIcVBCZ4MihnYI6hQpeBvzsOSsbkvyFeWlmVGiagPe45nTdg8jxl/I76XMcmNS5/FbBxhIhoIaPkarzmgZTXDJy0gxS2rZd1GlhtJlU4I4LX4Ogt9xtPbInad5oGPnUUlpcODyaR84fpBIW9tuqJBe10mT3WfP63fvLwrS/IkShViweiFZpny/y/WYSwCHRlKu0nMPiahhCwjUNu3ZWj969F+dc6EVdRPloS2e/Jpky7Ebv7bMJ26+LMZp0b7a2/q8MHxsD5yQFXCn9451dNWPG8OJNWJunfI6PNHven8Vb1oi9K9XVPquaSp8wo08Z2CPGTJo8L1VZ8jVrMRRUl+HJCHAYixt+pgRIOwn0OTPIRuZw7gjIFQk1M+hthEkEFVrFPJFcHEko6IYRuAqHVlsmV4mmk7E7OKTUhvyQLBqJvs6FVXQuPjCb0AUyofZBahxoCCK1AXuXuk0xxE8ZBqx32DB37tZFPEcOp8+/AJBRzUDu9ce9NwABPqj+bcpQGQ2v1uO0FHcw9Yu7511l8iMavFJ6LpXHJbKiXR9sGfGU2OBYq4Xg1ZTWaCXWh8GK82QmRynSkK6KrghlrhdgYSBNuoxprbrQ7w2ZR/bJpT0M3XfIQ0UVgo9kDsb6l0yYAQkbym9FFg4Dm4Ga+uhCkXzx8yWcPHfGdL69vMRV+8GQI5jU0QWNAgHo0AwebGKwc4++xMwx9aDILyymBSHbZi9hUHQpwQqzIV1ROqON05TAvXicqyj7Cp/2j1l7AyAtuP5SZILXlXL4IL1IqRTvC/zyV62KsybJvHD2c8KtXoIWdgtGmyvwGmkhG6dmewQwEJvD+HsEgPXdUrTpzMWOY89ViTtSYazc1llUHgNT4htk5eRHr0Wgtyk+3w4L8og7WpHP1wOYSHQK/9rpKfjYzJqQTM3jT84Rjr1BffkWyjqS59NzQXHMcMuKa5PZ6hiNVjhOKcvMi1ut8GtICE1XDNEqzY6VQWid74FAj3jduFWqbsWavGWnGHBLTT7+7wGHO8CZKmkTaNooyOZx58O2YE0ZsXUyqCr3IpOIUevgfQpIOWGjxfdnKCH1rQYnH8jTnTvoYCMU8837ioXfxfR0myouJGEM6TuEW4LjZmghyno4wqkv4TxQpeqZDsWv7MAYdFrVBWMcC/00fOEtYKoYbzPM7euFPvKshSKfCZAWV73wB0S/uqNWEWNG6O9vKYzEUPF9FGF5kqSzhWfViozDmHCKkQgNHIqABDzBGCeEg8HeU0QcQxNikSbwZ7rgMNaH5PRlE+fRtGiBshEzxlsAOTBAUIiMQCeR3+TEmcSeWrVre33XZzdRT+X5cqeesIRb0BInmJluO12cj7gZh+hDKGrTbHd0b9AaVkjJGkx5BUfDMzw4o+4iTkFlvpsEfa7uF4BkDla1zG3k3dzcu5vNwtJ6dk7V5Af4XHMej2DCKWnN5vi1q6fXALS1fMg02Og7dgx8MDQo34e6Ctb3dJTfaS43N4pPKeAfDbUSqmnaVc2god83za16lEy0MRGjNIY/Ip5yv0KyfheWPFAXatl6HFoebRgTJqfe/64suLWpo8v+8um6x5A5wnWuJZZZBEju5+4KRqf3u+puPFxcezJOWmLJ+a49iesdInWO2vv+IJa0gYBQ23fxSUiZll5YgpdbpjdHkal9FxSYF46WDzTEaD0TDI4CBk5LhBYZfA/kZ7g883IGeKamXK+pZ1OohY=","layer_level":3},{"id":"3dc624f3-2a91-44ae-b26d-98e97ed66a5a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Strategy Pattern Implementation","description":"strategy-pattern-implementation","prompt":"Develop detailed content for the Strategy pattern implementation in the code generation phase. Explain how IOperatorEmitter defines a pluggable interface for different code generation backends, allowing the compiler to target various virtual machines without changing the core assembly logic. Document the contract between CymbolAssembler and IOperatorEmitter, showing how operations like emitBinaryOp, emitLoad, and emitStore are delegated to the strategy implementation. Provide examples from CymbolVMIOperatorEmitter demonstrating concrete instruction emission for a stack-based VM. Discuss the benefits of this approach for extensibility and testing, including how mock emitters can be used for unit testing. Address common issues such as handling new operator types and maintaining instruction set compatibility, with troubleshooting guidance for emitter mismatches. Include a sequence diagram showing the interaction between Compiler, CymbolAssembler, and IOperatorEmitter during code generation.","parent_id":"c9718273-8ee3-4b28-9a04-6e8d7cf08ba8","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolVMIOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:42.8096299+08:00","gmt_modified":"2025-09-16T15:31:37.5481396+08:00","raw_data":"WikiEncrypted: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","layer_level":3},{"id":"bbe95f58-7151-4441-887e-46cfc4621194","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"ErrorIssuer Component","description":"error-issuer-component","prompt":"Develop detailed content for the ErrorIssuer interface that standardizes error reporting across the compiler. Explain its role as a mixin interface that can be implemented by any component needing error reporting capabilities. Document the errors collection that stores reported CymbalError instances and the thread-safe implications of using ArrayList. Describe the issue() method that serves as the primary entry point for error reporting throughout the compilation pipeline. Detail the hasError() method that allows components to check error status and control compilation flow. Explain the printErrors() method that sorts errors by location and outputs them to a PrintStream, ensuring developers receive contextually organized feedback. Illustrate how the Comparator.comparing() method is used with method references to sort errors by source position. Provide examples of how different compilation phases use this interface to accumulate and report errors.","parent_id":"896ae6fe-867d-4388-9fcf-354c9e9462d3","order":1,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/driver/ErrorIssuer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:01:04.5572904+08:00","gmt_modified":"2025-09-16T15:31:47.2885114+08:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX6A4gBrw0GaYbEnV5dyF5/N6+Sfxv4zMYzh/iswmxUMYwLF9+9fHeb8l84Cr6m0E/XsiBS1ogcKeMzeB6A3cFcKWWxJk0R/GhuNppdHBnVmTyC7N/ELe5p4SqWeFxTBdXiFsT7us53a39wih2qhc3Jz/zpZFlwu1xrTM7kSKege9iZE13YeDF85Nz2aUQFSolY8Pdq2R+Mm3O+5BFdcW9S6OYN35YrbYXkeAxsahGSiqUaJx3Eane1tKsKArSNpJi2v2PrT0x8ptWL2NdpsDM4d1yMpvXDHYv0wPwUmdP168+nXj6x+3UliQqCLFTR8nNyxRci1ZZ9YOTIb4IdNc4RvjuDf3+aY4YVOoIVqTa+JprrvbayF3SNxCVfeGN+WrwiGfcuRpx427MSLYGg9FH97wJiqzCCDpdjgAgLv7unfAjmqukQemsKc+b/dBIodVcP0yQSqPxdc/Qg5ebpBU3Ouce5EOKoTkNHWpwMeX97VQ4yVQBfToutg8b2ojjlLCfUKDJNhGtekD7g3z7D6uyPSavlpXQiqUN4AtvtE/eAGatjvZ2xA0EdRvo4zgF1t49qAwBrXXhupzuCiQwZL7M9Ic11NeIq4gjLCaBPnTRqSnzuuiJaBrS/gxLENoUEbJVc1vDvsF5ircyvj8eeBrwFvfHf4CAkKUOqHJjMBvRJ3+hTN2u57bjJ3Ftsjg+cnAjU0297a/4NkP6mDcHlm/oyNR+jziWBdDwHnforh0aYq033jN7haYPZP0Nh3yccY1vlk/tdwPEuEN/ENGryrqE0yp92mGIw7GAL6EG884WhNc9Ja3tq3R4+yYrbGqhXJorgcmLdizbE1pYGhiQLx9DYGxyQC9TXLaF1tUIdxs6xpLMKTRbQJ3f61FzGWe4J6NZGGqNzjIZqVptpUVJav2vEnWFMz7UZ8hY9LlGWfjDAh3VT5L7+HwkGPpbqJkvzAlMzfaoriqkYwC7anGAML1VhuJEO97K8bRXalZregIcKRv+a2vHIRE4r6uQMF6+J8m5CEj/N1SAvTDDxBi1XhKzBQLycrnOkJJ8kOZ6uoO2zXgTUfrtadj1NVTqp+lFLGl6jDbpyk5Pqdky3K2GArfyeUBd8+SRGxOjmyAEoZyPioA288YrxyGNDjpY6tkCaNHPC6f0QpPJs4tH5tvV/E+zJVS3gUQORBv685A7gQNQ298j8zGDVNEmff96kCJoG3M/QSqIc9v7/3Ih/cqiWHEBj/msKeF3lFbfLyG4skWDbM06u0FhJB/WcNrWUcJ7G9zqlWAASJFa+G1dTUObBJr6Qx14ujfUPgsxB6xFPXhtXIiTOTtzHWbQzmo1wyjEV4u9MrY5RyM60XCYsMSUB0AoGd7HIz/6zNMjGV71aXfVNlmykc6FH5JM9Q7pLQDvKUp+s3zbIH4/Zk+N4E4Jjogam309A7WKeUKh/pR2bHo4JKWpHPlndaPqoy5+QPguE0c4iiFtNBLSEmRNQcQX6SbxqaPlsCENCOH341wYgYzyg3xOjA6Gw7ldWO6WNMIs2KUmXpV/QGCkIB451pnBMslhhsKu5vSGjkaaPAoGJlaB7cguAPX3Leadx46XkkKkM84/5WKjQxr2oIcdtAqZoCK27lkn/M30RbDDTSF4z5Yk03DZpo62jBZvStGR/NAZIUeCvMqux4zWDyuQeSInJy+Hho=","layer_level":3},{"id":"e2f12f88-f04c-46db-9f1a-c69036de314a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Cymbol Language Specification","description":"cymbol-language-specification","prompt":"Create comprehensive content for this section focused on the Cymbol programming language implemented in the compiler. Document the complete syntax and semantics of the language including data types (int, float, bool, string, void), control structures (if, while, break, continue), function declarations with parameters and return values, variable declarations, and scoping rules. Detail all supported operators and expression types (arithmetic, boolean, assignment). Provide formal grammar rules derived from the ANTLR4 specifications. Include code examples demonstrating language features. Explain type system constraints and limitations. Document any language extensions or deviations from standard C-like syntax. Address how the language evolves across different episodes from basic arithmetic expressions to full procedural programming capabilities.","parent_id":"","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java,ep21/src/main/java/org/teachfx/antlr4/ep21/ast/decl/FuncDeclNode.java,ep21/src/main/java/org/teachfx/antlr4/ep21/ast/stmt/IfStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2874552+08:00","gmt_modified":"2025-09-16T14:03:08.358167+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo0y+x25DIE9X9aEF62D/WBzLpBVwul8dlGkQPUImZI8LNafnng+XyqLXKAcCgHMPoUOyenrfsmuxK08uGFfcFFYdj+fouFam604uxwPLlDk5fZa8mkts+CF78SO1oPLYRrVzAfxyIG5d3b3LxsEl04foB1E6x0Pi76L14vcEsYoTYVdgTTixa48dweQ5UO/cCwO5Xe8JSbaLVgWeNeVNQ8DINyzKNRWNV/iXbgANG05tD1YjHU1R9HjLp/Bd9QSrLhBIGGucgCWwlO4+y44RpFQWOoAF3kD12w0Fsw7mLgt5oKyjvyWu3DqazoHqKnk1zV4PmiWaeCPIkkO5OtKzfTsA79GyS919hgcYu6Buci+ulTxERwJrbaZTp7qz7OIpm4ZlEXjO79iedCLLjrY00X3+HCHPMSE9oMs9aJyoQhv3co8aguZPYWUjHTHG4KY+wDXssxvzewdkTaUSTmwxKd8ScbrpvrP48CXV//gM6mpOSIdn65pkfrFLVCRK1g7bNDuX9BCT1zivqRqbH6GJhCYubBtfeXfjcgf+MDPAechHg/KBW7OHKlETFf+QB7TVDRPXsxNXiMyQSCc/QL+BwqhfMYaoLphxxGVwHUDFUAm0om6UaEi4z4bQ3+AyEqaK18d0bDkufVLQAxpjlXZHb+OeiSQUSGGaRaiAnORNc5wonbIAib0qNN4Ke9jfVvTBP6amKD4zOsqC2sBEKSJt++oumlxq877bO9mrR9O0R9tVA7f6nJDgQ0O0OMzzn7iZdo11qE11bdIxWO8g7K6T8G27k01l5MMXEWK+HG+OCLvHjQqwrz+/9azul9odzaTcWTshvzu/urM8tZwBGk357Omf39E0mRldmtVq2PdlLqGHNmMYBGkC2pUKXVa6voXQFIYI6Z4M8BD6wBotGo9lx/cNJ2bVMF9u14TIEYfdctwYiZAHJUHsGSGkZyamrpGNI5Itbo2HDT6qBzG8KNzKNBpOH3s60aI115wdYRddW+X2opWOq44pvUZgcLRd1ZL5hBAe4DrSzLtXqX7y3X8rBjPQplm6mzH9RgPeWbN8536cB2Ip76I0oH+kq/XLMUmwqtS5qsdRkG+Hs+0wCJlbBbpDgQoo8Nw+yNlt62Rc8PWQT8bOKFKX5x92Y7SRehs8ed2NnFoHdAEQqTQPNofw6fswMClGU+yNQm0GoggTsKWAyfA3yoQ//Hg3lskQ4q5Xdd4+VK5RGf/rKnaelfLY2P7i0z1elhwAtFvnw1A5vmUTW6ehNJnM2n0o+A+CYIqdLWiJRbzOPdrP8GCnSKggzMIOdM3Ygtlb0pLDaYYLEYN5F91XGrRdK1DXbPQfHWu5qGx6qxsOYZgVi6A6wYiMzw+wpuuX8A9GMKNKOwD1faPAvcr4nyx0XyDBhnMsXKdXohsrfK4puvkQc2dcQ+oqzzFIEgD615leXjPVCY07s1NsVmrzpn1RFdi8zvvxDEASZyhoVD8e4lrK2ki5rA0iRRY/ePxJngLcsrXNnHfm0kOR946ZEhKZfKRiClZwKcSzhg0qnnTO8h9jWYCYy0+Tx7QStT/uW78xZs4y5uDgFuybDB34e2F1XPw6d9Hl/JYv+tmQUGk8onxDwU4/QwHlhWimPfmCwTobB2TfzzSrTISLBPldrIFL+P6UfE3Kwj7c/gnJH5qcDid1RaLxyQmqbZL8tZEZr8ceCyL/DuwwPe9b1V95hrUP9R7lKgAFVJUR51HIBtm6USATQkHyC2YL8WPA2zPAVxOBlixXFuHp2fwYdKSFfq4sIGcT7QhSxH4K5hbsTkHYLKQ+lIHsSH+ERJNFKShYtVSWxjVuJHj7FZFrMYsDs2nkcXDVfiKB48VfEgCo0SE8GGASk7PLFPpyZBMCLtsHdngT84G/DUSxg7XNBCDUN0zh2V2fPfAv0x7CE6JS8PF6HbLDN6AM9/xEY/g4=","layer_level":0},{"id":"5a9fd681-5265-47c2-9876-2eb17d74535a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Compiler Architecture and Design","description":"compiler-architecture","prompt":"Create architectural documentation for the compiler's overall design. Describe the modular pipeline architecture that processes source code through distinct phases: lexical analysis, parsing, AST construction, semantic analysis, IR generation, CFG construction, optimization, and code generation. Explain the role of Compiler.java as the main entry point and coordinator of compilation phases, referencing the phase management implemented in Phase.java. Detail the pipeline pattern used in CompilerPipeline.java for configurable compilation workflows. Document the component interactions, data flows between phases, and integration patterns using ANTLR4-generated parsers. Include system context diagrams showing the relationship between components and sequence diagrams illustrating the compilation process flow. Address design decisions such as the use of visitor patterns for tree traversal, separation of concerns across packages, and extensibility mechanisms for adding new optimization passes.","parent_id":"028064f0-4617-43b8-98fa-7f5a4c031eb8","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/docs/project-architecture.md,ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/CompilerPipeline.java,ep21/src/main/java/org/teachfx/antlr4/ep21/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:06.4370216+08:00","gmt_modified":"2025-09-16T14:33:06.5998099+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"f023a450-ffa7-4ddd-9524-b92947b8dab8","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Structures","description":"cymbol-control-structures","prompt":"Develop detailed content for this sub-feature section focused on control flow constructs in the Cymbol language. Document the syntax and semantics of if-else statements, while loops, break and continue statements, and block scoping as implemented in the AST node hierarchy. Explain how control structures are represented through IfStmtNode, WhileStmtNode, and related classes. Describe the semantic rules for condition evaluation, loop termination, and scope boundaries within blocks. Provide code examples demonstrating nested control structures and common programming patterns. Detail how the compiler validates control flow semantics during type checking and how these constructs translate to intermediate representation. Address any limitations or special behaviors compared to standard C-like control structures.","parent_id":"e2f12f88-f04c-46db-9f1a-c69036de314a","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/IfStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/WhileStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/BreakStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/ContinueStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/BlockStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:50.5883111+08:00","gmt_modified":"2025-09-16T14:34:23.1716023+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo02+NkIk9hmmRCE+QYdBnu6xIYSvrK8GIyzf6cvGySbnFJUs5WKkrgd6rsubbsNXy+/3yZ2Dmmr47PjCpjcIjEVibNhqgZyFP2uP5nTb7KMvv0n3m8wpB5hyxVagaxBiJPAs27uVZCW2KmEwMMYHKpidOKGadqZZx4+mJC1poSl+DpR+KEkIBTEqZMdfRQR1ajDdhgRXBoR2kFnAhNMx+RYrrziheYZpx18jNtC4uGTq26RcUwP1RQGgocfQ7JOxcBfp9fmJ/9/wA1wZjvND5PK/y3JzDYF0BGHpQRJYdsoCzZPMKZSSYB7COO+QazcJG6hJN1ImIa2l3XRxFuz32UAm62v54ogkKlSVResJMRjElaO7Jtixb89O2rwqzxbPnUPu+zVy5B9Xma73DtT0n0ubE5n7nCgdfKRV5azuXIyEfSUWxNUTljuv+sQdS0kqVI0hRRc4AtT2F5vAHJGaX7GpNdUbE4HgxyROhzh23CyrtxcUzjWyCDC9x8Nue1eNe5Yu3NfSv2V2+gg+KSln1a+xzZuT3ehNoiK5PT7p5P1CxLmSUQGtkSY7jmgsYpMZ6wI9qM+OL/CRbgxrlansoWAqNIbBTtGBmgxMxUxMKNxauKrQZ3pSBGKkT6KxeGniTgEVo7IMOXv/AmMeDWokoM/3vA5i4947nbcm69g4E2AMWBY82nK5KfmNROVYZKUromdLNvACezAd/jCtHvr3zPuwJrVYMSxMidKzb50HJR9sDdtsb9P0WixdrT7Z47awJejPnoGAnthOa3EmiUThkZFLlRdHswLEWSmsZucLZ70J+MZmG1DAI01kS2z/Fq2hMcidq5B4TRCcqzPiSqIUAHAkj/T5j+pp6Wnu/onEO3aNvbf/Oy2BlZ5lWRJwHE31Koz8pj9T6/pzdtkYmFMDyjGHVjhZ2zcIypy7usBSDZZrcmxPqHvEa86zwvfV7VHRuFs08GYq66kWjFSsRZ4zgguUuRiWdglAjJrcfxW9tiAV99NsEcnTO/z1vjYXqvKrLeRo+FjLvsvYTYyxjI0LKzNwHEOfoGAZzjAy97G8muXTQNXWYoQP4Ed7DD4pPRQJvXPNwcqF7Kv2ROFziO/VqXvl6GjezzPupI8Vk6odcXb28p6gGvf/9z+pkyK1XpMAwG6LL9A8qS5G9G3e5ZpUnG0ge+6Uy/FQWVgj4Hmo1Ry8mtmHMl0TTLeLQXnm+ZTBDTMLDRiCgk7/+sEcgUIRlSVWI1wYrdyhvJ7FySffsLtSfesZiyvLli6Ehfgt1RLQ46wDgTUj+yssnfMHVyulgYBwfwKrFPWCjwWdh5nYfTfgfpfpYcIRdq3uVFzueKeICDHJyjx75L2gclT6KYG2lokPDZpW+fNhLM5N0Wax82HFhMhrf0BeLJN8iwUkx8PThR/lv6xFnEO3DVP4MnHIgViUdKj9R51eq222QpyorQ5amQMQeIgLkc4gPSkEyR9RUUCkawyKKbqQYDRXW4JGB+0ha6BFDQewlmMCmqv4Dl7lbVT2mWPXkQRWX0vUex6PL03saQ66CaTM5dtGCMjrdIeev3XTqTWaBc2DeJFORcJXpg8m+7h2ssBcvUZ1JGxxwpbvniL/HieYmGMyOrL3jB0cWgR5lFerPETaLbMGxqsvsIC8NcNVfJZmL+Pq6XViZ7gIxWAMAROxq4pWNjd40fGnFx6vBtpEBk7m38TsdRQyNKSDf1GkoZcp9MFtD81e9c+5f+MhGeh3WTqVjpT0TMLWtFUCv6kpVR3K24Y0Hv3f+X26KYHXe7YAbzSVmqzSANw==","layer_level":1},{"id":"4ae8a6dd-1851-42ce-b3d8-f2a6504cc33d","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Abstract Syntax Tree Construction","description":"ast-construction","prompt":"Create comprehensive documentation for the AST construction process. Detail the ASTNode hierarchy that represents the Cymbol language constructs including expressions, statements, declarations, and types. Explain the implementation of the visitor pattern through ASTVisitor.java for traversing and transforming the AST. Describe how CymbolASTBuilder.java converts the ANTLR4 parse tree into a typed AST with proper parent-child relationships and source location tracking. Provide examples of AST node creation for key language features like function declarations, variable assignments, and control flow statements. Discuss the design rationale behind the AST structure and how it supports semantic analysis and code generation. Include guidance on extending the AST for new language features.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.1704182+08:00","gmt_modified":"2025-09-16T14:35:04.315845+08:00","raw_data":"WikiEncrypted:oiB98Td4k33qtSx6lIMAxrhT7lHRj2p4xizd8qFUYZr6ldGmLnX8mpInvFlSzd4nKxEYiKS4yDlp0OIN3f7S/XV4nCSJSH49xh5YYobBAX3vUl9LfEM8Vs+jBa1hS5trxao+evO95XgQGDYfsCwIJZy0gF9Ge0HzVF6qxMzZKJvztVKkd7vBiufI4FEzqLPNoY7JNuW61MMSdvYhHrZZ69LNT/5W3SIxpF+OohcuYQiTVt88FJxccmFz20cRn9Q7zDEBs1ZDvC6Khq5RfOdKPaEA4pqQFAWDoCX4Y7Y3AGsDF2MFTeZt72rdmhLlWHZF1G0iGJjl5fEYhXwTWVaEYJ7K3ixQ83mD1StqCyfPz9sGFMNvKi3L9TlhgIt9a7Rj/JgFZx/aOUrxmMnMIk2DGG7CCWc1bzcRTJegxarr7RyMSlA+g8D2bie1WwIbT1IV6r543B03hyp2UhhJ8wzphmQqh/kyzda6Z5WUmz4IOb7QHQGUAiMJP/h2RNJp4bubBmZI5qVcH/CRhHAXsHX9M1sqwV+RangKqZOgyQrr21NlrZnMjtOgRqgdFaBBCtt7oypZdRiXzlSNsrvC9V9i8MqfPBxQJcZLB+umGTQjaFXF8XxhgUUExMM7kVD+bQgq3v/+khTQ9wnLJUawb11V7HxgzdfRtj5/YnU0z91CJnfgMzyX0dYWE3ADVZFWZcMSaIlDP5YEb8s1C5z5XDEWHQTcT0Kkd33t0DqiKWzJmWVOBIDBoyfVN7/J2TRu43z6Cwv5gNkXDCgBQWRhN2ZBez1jcxx3dSwGKxfWL4ca98oCpFEOfy5P8xyQwC09pMiZqxEOVgpHm4a7ILi/SIZRqgbBa0yJ3xyp8kOAjG0AqEx4joU6vHd/mGF1tnRNwkQdl7VdwGVnxG1nGKaP60kS9e91CoIJbE+nj3z5lOw0ynZ7jUfxVU/WlQ6a/JPW1962vzrsYFgZ2FTjzEUiRTF2rIfURM3O8ZJYqzwLnZe4hFHIS8WGK+MFc5gQqE0dZrklR/9dC9b5Dw0C1tuPHWrO+9wyTV+Iramfd+XKrjjrm8sPigfjNq1rQovNSscAMkVhEL/hp8CeUOxYizYGhci/GLoRojhYXR1ZgSAN7IxrTifKJ9EOUR5lupjZIh+gW6f73cgRnJV9VGlOzD76P3KB0gjP2qHL5mBgRA/yhB0Kj/klybtSLecAcJF3Z2DXpBXtmhnxWWwLHg/FqxcgzI+GiYdG4F/AsVowHB4tZKYbfn6xV3MeOyYf3mOjMqVVMcSsiEr1bQQfM9aTxeKFnU93AcOk/cPW9serltvIBZb+MYbIipcgDlvh7fq3IfLVClXZVPGHzX0kwuwqNkH8ooUdVwQ269cimXwIFbNTYolpJjkG0DN2CZ1z0bxWNFmo6C1Jv46ydYOb40ng8vjoX1spQrNDhjy69vnPYlhOuykczSVkXEAs8yhsjhF/lMH75Cn1j2cibyvUlQdTl4i+medtq+mR/ud5zlU2QKiJuyIUtw3QOrdSnKmGXt8CN/YJFecLyIXc7eoKyt/Nx1zgzMKb9Q==","layer_level":1},{"id":"bf5c1d81-8eeb-447e-bc38-07153331492d","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Statement Nodes","description":"ast-statements","prompt":"Develop detailed content for statement nodes in the AST. Explain how control flow statements (if, while), blocks, assignments, declarations, and expression statements are represented. Document the structure of compound statements and nested control flow. Provide examples of AST representations for common control structures like loops and conditionals. Explain how scoping is represented through BlockStmtNode and VarDeclStmtNode. Describe the role of ScopeType.java in managing lexical scope boundaries. Illustrate how statement sequencing is preserved and how fall-through behavior is handled. Address how unreachable code detection could be implemented using these nodes.","parent_id":"991e5381-362e-445e-8f05-5e5c818d750f","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/IfStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/WhileStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/BlockStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/AssignStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/ReturnStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/VarDeclStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/ExprStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:18.0703042+08:00","gmt_modified":"2025-09-16T14:35:36.6053329+08:00","raw_data":"WikiEncrypted:bdPiD2hF/2buEEWW1H/5uuIYdCvvsi0KUXE7qJLExrI+R7JTxYjz6HHBNxQOem5191mps0cLzYHgK5HtywPMMkq2KeqC1J+/lb1CXRzkiy9TEy0/gRYnNAW5B4AYNapulmikmP5AyUjbKSOPZUBW1kSyTzB63wbImHHmd2nWJcdRTeGz9ye/xUCMwuSlTYtj9gEMBvKkKmQ3T7RIu04Ebrvl6D5ooOmRu/loELVlfbzWxR+JU/uiEZL529sFdQUWmUEET7qDAQf9yZa2RlANDFvP3IHterZJvVnX5KWdHMg2EfVCGkSyGlnYGKSKkF6Ty18QZwmTEKRZR6M6MK7nfr/4mEKsIHn5OBrdmNKGRI0DPFqNaeC9KjyvJPl9mVTecRTWuM5QPwdOcszaAkyGCcyCk52ev9P6I1RgiJeJIqbCPOap7SkRaA7Od0h9WInGhlplS83x9uee0Uoy+8wsYYHGTPyi+pqJxYADGjNuVqPqvPONDEgdC2jd+Tk0reScoHrT29jAklKtV1GX2jTOxGnTz8NfA7Et/9IYsPAJ+Ch71vQuor2FZ4l21uh2tgPz71++LoDffjNnSMmneoF3AKOWKfcHIofBIkHKuhzbYjlJDNn6uYYMc6E1WOPJVFqIadmcQvv48r3wffoHUqPcqXWvqBbzBaIg5YvQMK3ciD6eb5TseNb21gXjQKVj3WGQg+yT4dVhZQNlTOA2OP30bI9l2Q517frke0uWGayNKrkdSM4Jgj/VeNSUj5BlRzZpc2sCrNbQ6ka9R5HIN8r5Us0ZHw0wLDEBRvZPXBV4n/EoFks79zgXQP4lMLKFnDQStat9mncwSCYVbu7rNU7LOdOtywfa3WmqjTsAlSc4FrkVnZloAACRxiEVGh0AueZC12MN1SeDZ4GVbkxY+WA7u96b9glhOg3EV+RbiyCw9dllSCt6Yy3Jmc3gZhvUlXr1L/7xXTvNCBxYD9AR94r+Lw4eHpMpABsKcW2lZc1R8zB+ijXaBoOPbzeEQOFFTnP4pVKJNA7nC2ijJRr9adyg14b9rIsS743y6Yzc0Av/APvTT98ABC9OuY7/jmb9xv9xZzossWNY3hIV/ut9EArgYlukL0tKMXV6OLoUE5Pe/gFbqvmNlqPro1x4D7XQikPlkF+BWpdOGDtjTQNcVWamiSo/33njhMYFSC5o6icqcnd3IIpLDXQ5Ym9n4JwSdh4WoZIllvw11P2G84Hcozyre//vH2iOkqVM7kgynfG+6T0DfZZ7GlISr1eUGcHL4YTqckID1gEWb+T2SB1NWUMrbeR4yscFYTrPB+56b/tBLPyiBDYCo2BGJ4eYv7WdMLYaTFcB3ldUtzRLtwIomO51CmqzBl26BLX1m2XcCU/iiK2vDLaU2Ty6R03qrtEqTFZiSmCKZACSV7qRat0eMKdzRDqrFgqPN6YLuHvKRd3E7v1MCB9gTJl5ZuJMkixVBiavDzY7eVKn6/8OZ9G6mZWtwOlEEhwbuT6FIEAQ7ZrLvG+z+OlENQvEtMN7DgSdbEUNb5+MbeU1geHhs5hEJOC+3p979IAj7JKv44jSCklIg5nbmFGHGCnlxZkaOlQ3l62nEUhpPkNkhr0FIC1gIR3MyNGgdAOgMtZwyjviyJnzOKN9TfRRg64zvHPphwGFbwEKRYWoj5aWJTVNHGpXfwdXt2KA7SKNI3XJPnS60Q7uNzOVMCb2PoMsi2mB9fuDX8aHQ3RAY9687a1nwoEW2gySWNRvnrgUDYlKhZrMUkAJWgWzR8XvwH/JqAwgfBc+4jioaUOcCoBuOWIu7z3B/uZBp9Nt19DNHcUAteh/nvMhFqh5fJ1gESf9Q+jEFYPVAK+q9pnW2s5ce192ZBRbh39VQUaqqfakUH2zo4ozZdvHyQ8=","layer_level":1},{"id":"7741c855-f348-49c2-92c4-3c4bcaa00cf0","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Symbol Declaration and Resolution Process","description":"symbol-resolution","prompt":"Develop detailed content for the symbol declaration and resolution process. Explain how LocalDefine.java acts as the primary pass for populating the symbol table during AST traversal. Document the visitor pattern implementation that identifies declarations (variables, functions, parameters) and inserts corresponding symbols into appropriate scopes. Describe how symbol binding occurs during the first pass of semantic analysis and how name resolution is performed in subsequent passes. Provide step-by-step examples of symbol definition in global and local contexts, including function parameters and block-scoped variables. Address how duplicate symbol detection works and how errors are issued via ErrorIssuer. Explain integration points with the AST and how location information is preserved for error reporting.","parent_id":"07048b64-60ab-4f22-a6bc-52300115700d","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:43.5917434+08:00","gmt_modified":"2025-09-16T14:36:48.6090798+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO74C/A6VhPBNejIV1jZ2jmpcYLByDzTO7YGeUNlJR1AiJH+88rwWN7gCSV3pMQuWrb0GcM2k1StLGcVaxJfMZi0vJ6vgleLykoqM1y+202IQ0E3PWb9LSR3Qhz3C4VCsdSnrmosNj96tuV/68fHUgcmPD5BLwd3uXSUltmVdwt6v6JpM38xwzgkwjzqMRhTNVPem/4Hdk1h7z3zu5J4nsq67JqD/8KFypdvMURhPLGHmw7Y5cJmAbRs/KU7w9WQ2ZPZVSB9EtaS2cy+mh0h4A7DhaS9LzKku6hpRdC14rUEvJZ3uZYgT2HGoLbiXfBnYXkcnDia09t7tKpXEuAoU8WyQzqzSIfzCVcebOCA8NIAArYti+EQiGJjPKxe6MtCGBaShRGkWffv5TbfMVhDNgPA8ji80uRjT7zjfiZ3ZVEObwLiG5COg8xpjXTYHqSECJGgTAt/iT1+jHRS/wiDZy7/sfwkq87SoBks/kpLR2GxHXwuIOBn2rk0BQHgrkbVWlrIvuVi7+p9+6ZBTVIZOXht5a3ovrSLWURO/KpotpY7lzXYILcoDCyCxwx8Yei80NblJ03GGS0R1J3RtISBgL7QNcrIqHZ8tD++YEVyS0rHBCZclIr7J0xc1HgUMjdBcede17u+ryShylmTD67dllVuiZdiD77aahrCwk5HJJJb1xPSDeng1IDr3Be2ZECuN2EdMtWrdYXH9oLndp2JXWL7ilfTqobffwmjQqWAJNZ0AXsCbTbeX991A+L3Fer+hxmPhuIiLLcnnTvJXZJMZe5PIolZXn+OQgel75xBYOJcYsaowabvEokx/XCCZsH7P0Ao6C6L5Y34LycM/RZ+oRG2fDlwmfscONhwcg2jlaVAcx0HAICeozmN/2HBt5uvH4sW0oKSLXleYRa/D5NfZzVNLcc2doED278nO1+uiE5y/0HN4Pt1T7raWHzLINU/faUCylsEy6qHhVcbbttNRUDh8iSgvhM4l6EAVnREn6Wft0jlNVaEqS3+EGweC4pG6WXp3TKHh1wVu6OU5VOYtFUzgiuV029qTKNyARBhllNHj9n2P8iUafKdBKU1dpjKWgjmAXc83bXFNw+uU/0N2M2RcwtPlAESOnil/ORteMm8/G1cpWhJvoew1M9g0da64F4lGNdxKBaJRg8RrNH8T1qmQeC+gk5gI94Ompnwml13AEBTtDO0I3Ys1WQ7HRs/VBaNMUb6SC/nTf3Z8LGmeRhiXN5cGhnALy6+xoflukcV1WVzA9/HykHP6YzyHkymg2W/t+5PABud12igC92EiMJ4cIjJ6OvrVaQIksxdXjckrCnbqM2otFYx7M/4HkKp9OEdrcClSBj/HGQb8ga6XtV4gQco89vHZqaCWraWi54cDafG3Br5SSp2C79UjoZFf6V63RdHeGCMYYtw9p886dr5AeiH/+k7EDzqTVGYoDFzrl3G+/dCm0jf/gy0D7I7oBKr0GMKV5jvbuG3FaFjkT7kE=","layer_level":1},{"id":"2451c2ec-6a76-40d3-96ca-02443e4b3d27","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Type Checking","description":"type-checking","prompt":"Develop detailed content for the type checking algorithm implemented in TypeChecker.java. Explain the visitor-based approach to traversing the AST and verifying type correctness. Document the implementation of type compatibility rules, including assignment compatibility, expression evaluation, and function call argument matching. Detail how OperatorType.java defines type signatures for built-in operators and supports operator overloading. Provide examples of type checking for arithmetic expressions, boolean logic, function invocations, and return statements. Explain the type inference mechanism for variable declarations and return types. Describe how type coercion is handled between compatible types. Include the error reporting mechanism for type mismatches and demonstrate how these errors are positioned in the source code.","parent_id":"24f0102f-a33f-4f5c-ab6a-11870fa7d7e1","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/OperatorType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:04:06.7219099+08:00","gmt_modified":"2025-09-16T14:36:51.4373981+08:00","raw_data":"WikiEncrypted:k6ifZ4FfRXeNXjA+c31imNeoWWtRDgiWzjmDh3nXULUgApIJs/A5gSSZ7x0STEaEOAZnRWqSFkpUYI3x3SSIMjEIV/Vpf6uRV0rmmtyZj237DlvgfSbIjZ6DTv0J6wrnv3ef+WCqFgayf4M/HH990OnSP6P1XJQrDJXyOcCEgkVJzeMHrmIXkwEK+4ytxwiFTO5Tn4mrNupeBgDDN76G7u0JbR5s6UsGYFuxakbjMZzcy2o5VUG7JpAjTkE1t7Dc5PPPllszKASQCEvvf48pVUVAXD6AzcAG1BStNrpZLe9RIT3EoB5+uwqR8Iz8uV4NFvJLBOTeOmRPdZeiJ3lF45r5aYRZitpvFRzw8Q3eKMuSRNtzXqgMJixinWH2Lus9rHMOxV6HOh7mnHxyDTn3dtdn7VBxdV58lb0ORNIBLubUmz1WZkUDPMWXOVoxQqynTkys2l4uUMX0gmmOACRAsfGHj88Gakcmc3naztk5GdMHfO9rHu3XndBjIOwBwgRkFPD0thEfjY+K0SY/FBfpU2kOaEC38MEMbZQbMitP7AxKVjUc5FeI+HvEjKXZfaqwjbaz6KRc9mvO1wdkRxPXXzPRkOTRFd5mYtp1MiyNPkSuMuMe5GEXqGTuS3MEffC0BUy+BtP+UNSN/j2m6kKo9AsFGmL29MXeKOqVaBVf4a2fElxDcHf6ZhTjvWeVegUXBmEpdSoMQOruIwO6sweFsyFgCWPqxm+dJOExlm5Ls8UqpiAiS/PF3ijOqSDT22FMLIhyYo48pDISwcoEbT5mIH74oJkSSx9FAQqBaTEy6KGbYSLyR64MQpvCWxxYrrXH/SqU64aQ2aVmV2jwKCW4j1RANSSHi2SzVR8x4OCdbe6AgVT4kbfBOKQ8Itn7FxOncK/mpDgT+6a4Wul9ciaCNfsG2I6hkFo2/hDel8xpm/xSLqHzcbnIk4IaDX0eD74sFAsSZPrXhtmNpwJBWk6iuL9YglhwHLW0lol6BkQNfot9uYFtOasWbnc2eCJ8nWDYtmNpIT0Zuv7im23nBXX0cOF2gAkDdaQyQFTfC606Rs0nodvNE9SgV3ha3RB+XhdrDdF4sicOmYXNrbHBLCnNfci9IN3ALPYxJ1olNz3hK2L8Cc9V23m/rsjynGqcDbDRDAGQKj+UbtnwCYr0N9R2egDj4MQhQt7rtwavz1+4QN03ULt4eKwxHyzZuq54utBNEhJjQPz9wfq0Gbv3j7fJrBoz++OeHNYCXxrEn4agXseempP+geztYAVYoOo8WbRTn2QLO9P0vWRh6PWlWMkBGFXL/Xc63JPXIDQfOmHm1x2l1IUbgvlkM+n8L++XIXvun3zk2VTORwqqgeIndkI8mDlGbsh8la8ckV+dKjT3tTpl5QyWv3vBNFTmfqdiCDmvtGlnPneIMATYks73PA9pwwTZX1i1analqjEmUXbtNjbbHig5wCcVSpRYRR8DIxAb6c9FdaXSBfi1vwTa676rvzkW9B5wmTyqyxSL/JfB0p6ZuRpHrGzGeBiy9l57oU7Mmttt1gMCQzxC5t+/YXg9z/dGZZ4u36B0hgIn9sIRR0aTBDl0OIU+bKOqnXtFBO2Gh9foZEnsYK+miECaOD1xSA==","layer_level":1},{"id":"63913b66-2318-4abe-aecf-ea51035a8333","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Addressing and Storage Representation","description":"ir-addressing","prompt":"Develop detailed content for addressing modes and storage representation in the IR. Explain how FrameSlot represents variables stored in stack frames with offset-based addressing. Document OperandSlot as a wrapper for operands that may require special handling during code generation. Describe VarSlot's role in connecting IR variables to symbol table entries and their runtime storage. Provide examples of how local variables, parameters, and temporaries are represented through these addressing mechanisms. Explain the relationship between these classes and the symbol table's scope hierarchy. Include how these addressing abstractions enable platform-independent optimizations before final code generation.","parent_id":"e2398669-3afe-4bd3-9bcc-aaba5dbfed6b","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/addr/FrameSlot.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/addr/OperandSlot.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/VarSlot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:04:39.1734266+08:00","gmt_modified":"2025-09-16T14:37:50.6881222+08:00","raw_data":"WikiEncrypted:l80u7roc4uEylxlPKadTvOZzrUr0W0s8YytSyE/fZDBKUvMSHIH2URayO3IB46SxWrknT3MRpvasKHbWP/yCScjfUEThVAtkiCu0fHhu9AVlbggOeBjA+Sls8bvaYDBCmmr8yZl6i0yDPgA/FIEeQcpZ6SXsZNeYXWWXgQ/53SqY7zjwGR1c7B42pxiB7aktbK3NMz1HbBJxaSkZLyRachoqRYbeWMdID3z8VAS8vkn1M1XqY4ofmyunTlQYA18MbqBcjwcoI/bkuy9X7ZxBF7KnRqfqrNfPWfU7g9Tb4XSUmjoG3XWYPBJavSGgOtxIraFF715xKHu89Nxj+X4wLCqAb96nB3aQKvwPrP3eg9DdZzji/FcEC3YFaU1ZoDdoZYlcjmv1BgzK8btI27as4MVFeoKhl6zzfiC6CISzd0skJItCaHREazw/tSIGH6jO4HXI0X3cT2BpKXO7X4dK2hi2hsitEiQ1hn8kEeUrSfPkH0V75d1uWo/Fp5dNlpX6YPqCXX56O2+efb891Uv3Vy1tjhnA7Ei3VuaU/+HUOBw1W57j6Wrnr0oCvwKEr65+26wvqdYvBo9TthliqDNVKqdeVaq3ht76/+Szu01lb+jjAPnk0MvbhujM9SR6P10nY3/KI17Sz8Mylg3wd0ZUy04GAsEd9cQXsqGagTrCdS7ec6yxMnXh6kFRa62imj9k6MRuFJ1fVnLKwPBuSzZkJyS1E58Y+t7Y1jxcApv3NZzifjD0J5RMDf4BJlpAmgGbBEBns3iGpFOLOsp2lBQVXxis6v/IG91FBBf/4uCm2w1kjUtTJma56CQzzmfbAooaXg0jVZ0nWP2Liu5YPJdNTAEf4AgcGH1IitPNXJ1SvAXQ5byDRM5ilfqXjPEn5qxTegC5vQdM0fXCt1D5nSUrU5U3OnMAbaJZXUA+kHLjP1XlFDKTLk5w+hzIP5eHZqjbwyfAjPomVDARXTPGROHDo5h4VMIA9Xa1JzPZO/I/24t7ZE9qbJakM9E51yfwrceqJal8kq5Ng2krKc/B/zH9cWqjhsgrfBmnTMRTS8p8Ce9p0wfUALFm52SlhbATVB8AerIH6nU0HT2JMS5a3PtmXI54+0oq+6cvPwKJ+g0AqV9VCSy8VL0fHQTUxkyZWlxCagIW40J5HXsVd69Ahfv6kQIm97+z3ULmdYoXg+lqbP2agV9p6ahVebV+xEIKRMQfUgAFS5J9gGa9lR+a5SEkgykUhO+BnN4PukBVoXaTjk8ryM/5pdrODpWpdt1rxZ4UUr3ismH9cB97WlJkihHzef1Bb0aP6TuLkEOEkfn1V2h0yn9xjN1RDF/9MvTXsUPQulxt+IAYgn6HwBaFP4dFFYvaSkNjmQF+FLWuOcW1NxHVPpM/jvdtSzOIpbG5V156GuT1/ZCOYm75p5SyWi+/SpepvKR+O2pi1QkuAl/c8WAOxOZlH3o48e5VJ+27qzE6TMyvyGBNh+Alr7eGzPOdKSJxabP+RoM0KHbG9RFoEvqWPLsehMFHC9aMdD5/ACOANguLtiVryHQ7QkxkS9+2GA==","layer_level":1},{"id":"1c7a452d-3cc9-47ca-9afa-1846aefb790c","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Basic Block Implementation","description":"basic-blocks","prompt":"Develop detailed content for the BasicBlock.java class that represents a sequence of IR instructions with single entry and exit points. Explain the internal structure storing IR statements and control flow edges. Document methods for adding instructions, managing predecessors and successors, and performing block-level operations. Describe how basic blocks enable optimization by providing units for analysis and transformation. Illustrate with examples how blocks are split, merged, and modified during compilation. Explain the relationship between BasicBlock and LinearIRBlock, and how block boundaries affect optimization opportunities. Address special block types like entry, exit, and exception blocks if applicable.","parent_id":"b3926619-907e-47b9-8b5f-2fd3a6d8325e","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:08.0543457+08:00","gmt_modified":"2025-09-16T14:38:15.930214+08:00","raw_data":"WikiEncrypted:OVW48CGFh2rQaIE/lBBJpCaI/p5EMI0gZxpJgLibUvdGW6Dfn5f/jExOhPJyRQOYO043zXaeineNq8E9mza6FRtcil+FTblwnqT8DWfrpS0ZWxqOcTgvuo2fUYi42erEmcyzZaC4BuqUmhVv+RQWHl+WLLAHwJ+hQsq/wlw+PQXZEIvsM7y0ugqRt2crILDjCks7DYqiDDD8Omu7gSPQCXNgfQ3R/p3oFi4QJjORi8Fb1SYYFzQzUThoKwaPcrR0HgHYFafHsGbc5HCXpJMaodazJwutHoSozQAyQZ9rkNdWr4KoZ9wmnipqOn/r3e+1MjsqdD0YkAFmPixlAjksdCDTs02dQ3oisehTZQ5IvZb4kKIWPoimUm/Sh4/V/4LCqZ/GgsgYgoO9H6zYszYTF/nCVsrLcbEJ3UeWk8I5kyLgcFPba5Nmb/K9kzTQ3Rn+RST15OriVIgaxDbSapQB6TaEBkAzqoCRbl/4zsR+bIGjNBuP1QYifMMMfHjTkYf/RTQEluB83YPJ98HB4e6Hv/tTFNrvLAkekpDlfiePaQKEn9YDK19xy+bjAIztuBF/usDLhEpnXh7pea2CH5OGtqpFYFXwML6TuQGHfDeR+HuBpHBEfyUUyd/SxgYPzn9v5ej+ToxrJ8RhgXgLMhU2yHE5ohzWjGElfokpcWHm9G+h7wMDsQHIdYPrB06d9nZF6JZ39DD0zlb6nrCdZtOpXDxEPqdcPt0xqdCKnTb2oogVAvZXlu2zZ1NgrGuo079eXNeiqLbOUIAoT2TTkWRnXu3ShokFyofD7MHU/NJMDTYYPKW10K2s3k7zp2tSyLYqTKh2xnmcdLrUAoKZM9Xanh1yW6c1NIpRrygk2mwDfeTql7V10ak460CrI0ZZglkANONExUwVNiBNjKpPpfkigP6/xZFZPP1y/t7WdcvQA0UYA57oj5SRNGNITpjsNgQl5jkA33G8f0O3EzDfb6lJKIyHHC5NNTSUAKXJ4GC0cAxgVmPam8u1SO6bJKpjnn4tgNZYjkKb7uxi9c1NLrJMBMNhsBpsZixzPatkNww5chwhQyz9RjgbvXdT0juXH5kIewx2g6w7W4WRs+d2Zj7ooiN9OgjCQajsDXGYHldxLxQWEjiLWYSjapNV3zJIOmLXkpqnL+tjbrURKSTOeZA22sRgirw3e0HBuD29Ua2kvq1fFVoMdA1zwqyNgqcqRvDSBJPjWRDL3wyIYZg637yurgVOBDbnZ5UJXlCHjvfjevhyvPqbS5Q0xmD2gStRzwXvjMGfwU4SGLTmkdEYGFevHKLP8OQ1eU2beoDtpjReWEaic7w/Te5D1dXd/iOzlFGU0C9EHnqpbgelvPHAR8pDwKID5siIXQKnFPt7Ufhbipk=","layer_level":1},{"id":"ae55ece2-1f98-41ff-9d41-af1176576908","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Flow Optimizer Interface","description":"flow-optimizer-interface","prompt":"Create comprehensive content for IFlowOptimizer.java, documenting its role as the extensible interface for control flow optimizations. Explain the contract that all optimizer implementations must follow, including the optimize() method signature and expected behavior. Describe how multiple optimizers can be chained together in the compilation pipeline. Provide examples of implementing custom optimizers that extend this interface for specific optimization goals. Document the interaction between IFlowOptimizer implementations and the CFG structure. Include guidance on when to run different types of optimizers (e.g., liveness analysis before register allocation). Address error handling and recovery strategies within optimizer implementations and explain how optimization results are validated.","parent_id":"80dffe0f-be9c-4f29-8527-ad9414ed7db8","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:33.6745736+08:00","gmt_modified":"2025-09-16T14:39:05.2997249+08:00","raw_data":"WikiEncrypted:jqeTTJA2bYc/BvQifyMLtW70wnm258O+PQ5hsg8Pl+dhEgH6LeC8SxV81dKxIpWuuL+2NFF7ml3b/iq6mZcz6O26i86Fy4AIHXCpWqxpY6CjtA0HQJrN0fWr8MtlX5HpSORUfTbTS8mzSALv7qQBj/41NIX1bWKZgsd56cy0Gs4+OEYxHAWUe3u1eh3Tl/qtR7AWaZUF+APKvuSHfLby4iMJ/3E0l2RNYCmFPVQi61L4zJvAFu/1seDsDRHKlpkXPB91nRMDZCN4g59rJlfTUWCdaoiKiMfbWf/3C77+B9GnW/yx0t3uE1gtaSoCAQuysUwIpK/S+6NdgSoFPBO2bSHm2YaAxwIwFkTgVH3viiwnFQtwLMHhrkgOzDM1gEY5Qd5vc6LuFiy5NMVXu6c/9IXnixK45hiOpCn+rEupT+KFFustGmvwYfn8seoAJSWJ3U7Jk+mByrp59e5s1o2gBgzHb/wW4Ye6PS9i78kpgA7Dv/C8lxHGBYtVcuI4qeNW8qqns/lh6Be9gxgeTR6cJXWQxnRpZ+IxJ1oqfxjUaK2GxzlYCBDLiLbx3I2puZQA5KpS3PIwUsnCS8JEbvJpK0trlQIZEbbYf3pTJxuTXbpAEH3IITpJnRbzoI7xw9+aQaFe2VGlJJvc2boFZKK0tS+UCxUYXI6Z9dNBMMXquUHC/pZDpIRdqpeoAdiJhdwDhQVu3JkoaKG81eDzvhMDh/KzwM48GcTnPYKqeXrNaOr/AGSG/oalpXEO2slvPhY7Lme0JkFG6humHD/ImILcvLoWMOdZ6sN/I7SYFQ1JhdYwVS+Jvqh4ymJbWKnB2xNfGzMBV7QBPz8t96yFfwSLIITVt3Hf6dqgF6OF42J0L7F5XsAxH3vLXKwpz6E31YE9eppUq9SMQD6RJl62K4ok7gZHpoG8jv40X3dSBxGqFXTf0yjOoJ63xINJd36CT2g8W7L6DZehRoweVysEuuhGfiTZX51cZ7q9b+/yEEcOxrKwgzz9Vhyxq1Z115D8JIIYkCg1H/GPdKCUvUD0kAXKkXmT8HiNQ4sjBxHnGJ7HMX2MBS5zgN8M30CldSAEyCr8XeEKoUScGI8FDOkoK1bu02m5e2NIcSBNGHbGfSc/8IsJrYqiOjoRpBLE3CDDl47mvyynouMX3UWyfgtNaeF0jFxdQZ0YYIwX0tLrzo0CbQMQhIuvmI9fAQgTjTWyqcKF3WUEw23CEZkeqg3Vr7RzltKMYSwFRBHjrgUAGgMZ1/vyuMMN8EtKQazQp7C0cvPBIWtqmUBYssbA5YQjpMv/jRo3foCQByTXTlg3LhZgMWYjI7BJuhajkc5c+pxOSBDa2Y+rLkglpIYyN2W03eceapF3AFwSywh9JgzOWnQOLC2Xrv4qr4q/3kpIhr/wx8EVz11NnPPO7b62m4ZPsy8vI1DOKkB88jtI90WFmepprSeJi7yMZkj71TEkFvIqS8Bpt2H9vkJSkAxa62P6c33lULT7y7WVsYSIdZaZhxtmPGZ8G8/TIoh9yojcb4SRljqAwplGVR4ipgXASmMKeA7OLahrBozf2SZeV78QFLIowVAxOByqLv9j/4g90ymFyrJl","layer_level":1},{"id":"24b1a9d4-6072-425f-aa4c-d0c722fe2db1","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Bytecode Encoding","description":"bytecode-encoding","prompt":"Develop detailed content for the bytecode encoding process. Explain the instruction format defined in BytecodeDefinition.java, including opcode layout, operand encoding, and immediate value handling. Document how ByteCodeAssembler.java serializes assembly instructions into binary bytecode. Detail the structure of the output .vm file format and its sections (header, constants, code). Explain label resolution and address calculation during final encoding. Provide examples of how high-level operations are encoded into byte sequences. Address endianness, alignment, and version compatibility considerations in the bytecode format.","parent_id":"f65967b8-0d58-4d3c-b53d-ecf1430b3dd4","order":2,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/BytecodeDefinition.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/ByteCodeAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:52.6355683+08:00","gmt_modified":"2025-09-16T14:39:29.3120549+08:00","raw_data":"WikiEncrypted:LWrUtmDwbxNeXL6QtgiPkqkwqt/imc5eK3acUz3eimz2P25yRxMOgcS7olHkzzEGlnIWHyZhUkfkgI5XgCJXGYB7DqjVb67lTbTr7nnxnGlz1YENig0enPMz3t8CeBcmOPlTqq25uxwtQQkdD2cELoIsXi3bmwmDTmjx+G+NxYuYQTyoFyVN26MAYBdjycZyJOUL1Beh8U83Km9t1kwdfojE+1YLjVCUaNqeRGI+X0JX3MEv9G7qkhEfNq2L7VReDzeWcB2lFAys9u9fBHHJdiX2SwqgbGIasKcgZoM1OSKHRx+qctrki6uUdDgAYHX6F37MIm3kYZH9WKxI3/pg6C8l98gMjkmQ91Sy8OxV1JNdJGu3ShxPDB2MrmohGwoCNcu/ov8LZAphRX1p4tBtTorjuOyoVsdb6N1oKfnJdfxiIVen2rW7hpWQheWibiBZFN82toxxz5k/jbYeoRhgtFdpSBciUXvu+ngtK3TsFbwTallnFJXg9UFLUNdQFcilYnOlSQAaxW1ARoyBtZ/+XW33wqS7p3uAVKnFTvmTBRrQtUejmdrIVCsHxQCcEBAH4vLCBCRByD21h7eHZ+AlN75WUUngbaQ/a3JQLrq7zgkzNC8NDkyZdfGuW+R5RJ7jJcn/rG1uz6cY7KyN305wt2wNetSUYRLCEUoHdBtl734azrF+1FsnfyR3m+Jt++qDvr2ZvjaGXghHV2ZA8kPFwJpO+bVY85OqWAIUB3NQzRGDzJ/dQF+JCvcsmJpgYshyzKRhKqSaz9W+GZqW2jqW6LJSD+YEY/aQLBarlCs/CyvvRkoYLZzjS14H1la9lXoYZJQ7Qh0tZsU+aA6qTyxMNGWAyJ1K3xWjbB++CQT8USHEBv35qEJvgP39OlKziqJeOTnUCur2Yvd+gY2T+L6aYLyapYyBe2TfO209ixw9fmr1sGJyDugIX368ub5yhOiL4srLx1XB0XqqCagx3ZSxLFc3Hvh1iAELlYoo2rEC7dCxZQoMNwOcSOHSJrlkc419yGHZYeFzveRDxk7jQvAXymUl8kHqWkKpk64MtZX9Q279TABm8ecd7RhwKq8o6YNyYdGhTO3XaDvy3F3RK06qgvBxA3/cbYhNaaGLn2f/7RTyV318b05EzAPaPCLgh3UnSwLBcHYcyfJPTof6MHHoqJamTZUUv4bY2FPhkVAGvbk37D6EcExujRam7iicTFtAXuIn444JOWCNIbtbvRX06dE6UseYGoH0MX1JppisthE8ZeeDKcpTF34GIXkkRdx2OMwRB+o35ItHQ0fMm/5cEFH5q7Bu/gKd07M0sEoBS76xmu7u8J4r3FLA8Nm3fosNRJGZvyQgPjcl44hF5ec6AA==","layer_level":1},{"id":"1b760258-826b-4254-8248-f7db32d1cbe1","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Stack Frame Management","description":"stack-frame-management","prompt":"Develop detailed content for the stack frame implementation and function call mechanism. Explain how StackFrame.java manages local variables, parameters, and return addresses during function execution. Document the structure of the call stack and how frames are pushed/popped during method invocation and return. Describe the role of FunctionSymbol and LabelSymbol in tracking function metadata and control flow targets. Illustrate the complete function call lifecycle from argument passing to return value handling. Provide examples showing stack state changes during nested function calls and recursion.","parent_id":"786cad12-f31d-426e-9be4-322905970e5c","order":2,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/StackFrame.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/FunctionSymbol.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/LabelSymbol.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:20.8860004+08:00","gmt_modified":"2025-09-16T14:40:22.5234251+08:00","raw_data":"WikiEncrypted:KH4VhOssg5AL+386kbM/tL2jtYpAeHGxlG3WM13gFfbItPKg+26KWG7TwYbNNfDOt8NTeqOedKdig+6xAp1GUfzVmGKsBQu+LYkriDFQHzm8B6Yc/loRim1xnJEb7mEm9rjkCHaUFvPJ9aIScpR8kgpcIH+KuYwMVCE6hhGFJN8q9KNWWi2HSHfjB4pspKc3jpb7wFJVGsrE/1+dTGnNnUHqkraUvIT78lKTb+fbiHpBVfuC8TU3TS3TqVL9AvAzshx4xDljZcE2cep/KnLKCwrwNSpEXNMHLznlt2TsErVHzrWLocVXWsB8JHxMpwCcd+vtPsE+bhDoigq+9Le4jesMoXOsfWoopC5gQ0JP7NkwWC8SNb2LT2YHrZMDq+xg1Wqcpoc3W7aQpMESCzDkZVeGwFPYoYtj/oJVHvEwxGRxYLrfq1ak8Ki/iPWJCp0JetIkbQ49F2iOKT09eDVqfC362SGomK9TrmA0d8Jgcp6VSAY60xguj2SWcDpD1UCGtRga2SR8fA64laGVUyC2hJtewaYfhwMZENCLu5Ff/GwrG+9Nv2x0t6K+9soJDQXthYi5SCO2a9+98lqSe6Zskthe2ujZ4Gh/Y1ntWhbeGM04KJ725+Nv/p5YE82nXa6PEkRlhJN/Zuxx3DaLhZAAozVk4VT3UCojchV8qVIEM2Tr+byzVac83PghRldsAokJoFgkjuJZex2L2MmgHGG6DIfK+vsj1tc9dgxSIRbbQQb1ImGeRnw1GyPWoP5CdVbbI0LmGfJhB6rt9gFz/urzRoRGbjfOKUbeyjyFk3nodu3viYJwfBoZiZx9QRlLaFvs7Zgyii4+B1OEA9/kCT/3SOCNWn9bBheG+eq2qQY+0vgOzWwva/bkG/azxS+kUQIaPHh1aJNs5ryGcq0QbLwb5CRqiLjbsS/x2/qVmayx1rBS3tAu3jUsMb7mIxLSFNQ/TLlZLPLhaEZ/LaF2FNND0YsJe6YdSb/4Qg9n6ESLkkLAhStudZC3cFChgmOlxtkmRuvTbvfEm0SDqZV7Szlmw8DUvlGZYpId1VIZPyakGzHmbl3829yzy82+iKB6E8oNjLmTaxrQj5v4cMAAWUnwUeENPgEagvd3Mdeu+j/7g5D1FfCX5fS0B/HQunOppMivwneGAl5yPlu5mMx1URwD1bkUUSpcOwnPrkiy6yGjz21PwhvU1g83RZz/VvffdAy+r9Uw1af3ZyRNlDS4YoD0SW4+ggEWUSTgwwhPxBm2ct63+BXXhTzokKAtmfFq1usJ4fJnN0p7r+KTiMvty/Qfv4UADinBcdE23g3x4ZT7Jhw=","layer_level":1},{"id":"be9aff74-6d86-47e2-a599-df2491e0ddc8","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"End-to-End Testing","description":"end-to-end-testing","prompt":"Develop detailed content for end-to-end testing of the complete compilation pipeline. Explain how EndToEndCompilationTest.java validates the entire workflow—from source input to executable VM bytecode—by compiling and running full programs. Document test cases that cover core language features: operators, arrays, control structures, and function calls. Show how expected outputs are compared against actual VM execution results. Include examples from OperatorsTest.java and ArraysTest.java to illustrate coverage of language constructs. Describe how new syntax additions in NewSyntaxTest.java are verified for backward compatibility and correctness. Address test automation, execution environment setup, and handling of non-deterministic behaviors.","parent_id":"d2c2667c-8d88-4098-b1c1-29a9a9a3bed9","order":2,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20/pass/codegen/EndToEndCompilationTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/OperatorsTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/NewSyntaxTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/ArraysTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:46.2577066+08:00","gmt_modified":"2025-09-16T14:40:39.0344685+08:00","raw_data":"WikiEncrypted:8PoLi0fFbGrJfe5V6uXOMJtzr94hGMG/xWmOGNKC4gsGIWmsj2ExraItj//pEKgSzZHBHzT2cWijYoB2JydqXxgbia/pg9TWvq+KYU05RdFQi+dBSHYVDk4AXJ4eB/Gvrpow4jHFUy3micKpcTIsW60bh+BrPuy8dxSIigAxg4hM48sLOEGIMp/RTj/QQ+u+qeGbyNLk8AVhQ5+7cesNyVegRx3pS4S0ZcF0camSnIj7r9LigtU3k3N3R2ohPmRD2sqAfiLR1jX/U6BCcTaikHsn0SZ/QVFohpWnNGGTf92FOFi9FLp4+b0qSJHK3gp56RS1809djsj0iBFPEK2Bp1O/SteXVJuSZa/wXzaqTspOti53aj5Z7v7/TWVhjW9hmHUvbI5TIFATqsuSi2viVmPMk2PUsGlzmtRNy6w8Ji/oc70XWYYtgxXgqAjVnd7uZnq+Wg3biMupPWFVm+qU6TnDs7bEPhUJf8Sre0RxN4ybzV2TQkFBEVV/t26C/cRug7v5r66wSGwva35t25yuVmo5z0VWFa4mgRzuo5iCFZ2qjcA2qu075+wPC9VlUIN7JyXmb/zTzC5cetyFHop8hUuvUbYxpP9jhg8LRakMKRIw34nazipuJZyY0kVbxZm9DfmW5LurOu7k3kvc2ZwnNvgswM3PM0/lMclSejGWzV6d2/5XE7ZxLfpAS8p1fJfjdIAbGkw7Ie4WBmIaA1bA/50qJI7fwdCSxI4Ed7InoEbdBHO7mXeMzuSz3zRewrusiUTNkoGxz4LJx9FqF14DVgc4T4XE10UlACBuvoGDz2DCoNA6V1GxX5xWfAKlHUigdQPclpKmvfzSa6DUyp1OWHybwB5hKdFt6k50CwTHH5MPSW8NA2++lYHXlVwssd6iqVMeYb5BS8hzElUTedl1Y9Smz2CQAiNXzicqwUkzRtYBWiUDRtBrFA5RkgF3yb1rg4vRxDtiN+vjeApD68nSx2ChLd3fB+TCfXc9zwkDhuGFQq8sACbHov+XZRPNOKs3lB6ezxYZoWKMo7bhEdMqCSJQbKQZTOygv2RwX05WnFFsFL2xGk1XAfvslxkoVJLMdnP40FeQ44rOevTLwdq0HYj0aq31Eso5SHyuLSJ6CuCJlhJJTjsuVpNi176GLhmA2dyEDGgOYL/IT8DTbCgeQWDRLfwS0Jg4b1L0i7PDrZzfiS6apy1oJWIJK62I5GQ+vgBRGi5DRkOxB+MddLwIjKn3YatFzFDLvKC7GvwU0KKYqpS+26PJ+KI5CSmm4uW06pMT7npIPTuKbQyFnDw5YmygR63uwaMOiqJTi6DsbOozVwq3AW3gskRGU1Lx4EdLOEHAghvCe0QPLa8Gpl6ksuuxh5bYFACH2yBI8MiHil3MH8VJ8k8IeONsNezPEpTFB1j5s7Yzy6E2wLvGkJURLoydWEhHfgwU1lgu3velpAz92tVZ6bjfyNXuukhE0VECNQSvruVMMDKeLjiw9uvrYJE1CeJLCF56F03tPi5IZZOB4Joe8b9Ex6Mngr6RV3MQ5Y0Ej6YRRIvvtB6NUIbiLy8XN2pcq6h6BkjQjuFjSm58jYTfLboW22Ft6kN/F2XACf2e/MQEexXi903p82ggFz9K7PM7KC6ClGbqdAfCs/Kv3aPmGD9GEBAhloweCbzp+MR/8xMro71iXY3EzmFjgL2Ss+cUzfRdHEL/0IzHJ3Q=","layer_level":1},{"id":"90649706-c147-4381-bd1a-b402800c9cc2","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Advanced Optimizations","description":"advanced-optimizations","prompt":"Develop detailed content for advanced optimization techniques beyond basic flow analysis. Explain the ControlFlowAnalysis implementation and its role in identifying optimization opportunities. Document the IFlowOptimizer interface and how it enables pluggable optimization algorithms. Describe the CFGBuilder's role in creating optimized control flow structures. Provide concrete examples from the codebase showing jump optimization, dead code elimination, and loop invariant detection. Explain the relationship between liveness analysis and optimization passes. Address the challenges of maintaining correctness while improving performance. Include troubleshooting guidance for optimization-related bugs and performance regressions. Discuss the impact of these optimizations on code size and execution speed.","parent_id":"1b2548b7-74c2-4e17-b45f-ed8bb24967fb","order":2,"progress_status":"completed","dependent_files":"ep21/src/main/java/org/teachfx/antlr4/ep21/pass/cfg/ControlFlowAnalysis.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/cfg/IFlowOptimizer.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/cfg/CFGBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:18.1181826+08:00","gmt_modified":"2025-09-16T14:41:59.0111788+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGd58Jq6KY5DrFrraeg+jnbQM3l9RAcas82hiHijWMC4N8BHAkmLP8wWBU82dtgbt11d3obKEbngwUjvUYUVSYLbv1zH1zdc57sDoN1IBIdiuWKi4cHlNB40/5mS/mwdsOvmbxX77mHNHD08wu79ef3tBlwJ5/GWUwnyJXTA12uWmf9l4ro23bujswJo/SmXdRvvV+asbQjog8niNkuQtf1gG22gqLRNj3DiJpXPFMMoj/FNoGwIbKe+kraE1MkeGg0aeRv5JM27khnuz/YrIqY3id20RZTd94ZY5ax7cp196Kq3S3IALv/a0dM+TnjvOmPOm5z31/uBR++s6K9Nquwe/MGFR205kIF4bAhyIBiD1v+TQZQRQT+Nh/bP5lLZ7X8OfMUSufcH6uNJbkb3ruRIn3k5ybHvINvdBSMw61B0zkbkHwLQERuFyo2OyYN4kjsQ+OOAqO3U6hMu/hNmbPJOitJkOQX4/lnmlunGwS3vB+4v+7OYbCiVa3m1MR9C7H/l1M3yDQVnJ6/I50A7VltdnUVKaVzO91szoPuZyhGNQlOXfBQ0LyXWZudof0UJbG34D2fVHkVJZHKTorJHGAQCNq3s9SvfgE/t6LP5N5YPD3eHQ7uetpmSX30WtdOqe2fjL2uHvasPmgSbQR1Y84KjiRPFFewuOl27VZp2bgNmFam+5oqAJlrOa3e1t+l+uK1IXoXOFAO16ZoTfKhjXNrCMOJkWmn4TuV9GQIjotK0roKueJwFes+TYH6eLTIRnKG/MqeZHT6AO3urMkiDZYrtZblV5sj4DEYkvSanrkFeZ3oaTT9kqaAlJ0jVtCfvcDXei2ar4EOVf9p8ebbs3VIf1ehkVvJ8lnGDGNY6PVspo50MhoQfVEJ4YaQmuEX3bMWXlsIuGIHRagYcQjvbLb2qSAHvCeG3TTrBiD9bv7w9gFOUQ1B30D+bZa2VSQ2kiMqOvTRzQBeWD8zE4GaSRiMtba1TnvF7KkaIMX+lBXhCuH8BYt4Qm8yN1fehA3yE9B5FkZ/8WQJyJ1JhovKdrvRj5xHn0Ur1kQPoA9WD3DICMQVEy6QgLjpnn8HhEfery8rRt95HwJ/oxbHaJq8eTz9m5T+J8K1CuZZ1fG+OX3Piu7lFGeVwWaK/zibX2fOwLJpyx/EuhnvtU/5Mxf0lAQSRw5539DhGCiIePjuJ9tJUgtjsfxfN3UthbiOQYHboLPgGqV0fOSMW5HqmMD/7vJC4Hp6fGrrRq2RVp9P4m//NwdTTtoxgv8G65G8iwQObluAaPtm0tWQqF/UmJ9hL4vUyXpRJigKgFYjRxmXPUsogpEZPy5JXuiT3sh8HExGKv5OgSjleLPrNxjlJKUi/KY5dLUlKM/h8rJTLNxmKzTkMtRNLbbVhID7u8n6HQ7vJlHRPmhIBfimEReM9gZvY4nOlgPn3Qd6q9/Aiw0ZYIBUlWW4grUP6FOdsC3MajOcf1NBLjH14MOD/1eUDrjO+VtFjgzVFXaF+7aHEL0k+/37TXks75AKLSB5tuaHB36ycyQ8ncZ1p7DFrA6DNj/Qk/2eOrJceM8YqYt9VfhgSWLvA5DT6vdWvFeVGGtnRy1WPEUg0VxrqBANlGAprnPNPiuHxMTyepU3kzGWEbpJ9EiJDvCwJ6Ja8GFb8CvybjNtQluGy4PPC4F6hz3fMsnKF1Vg98=","layer_level":1},{"id":"e0490cb2-3505-49c9-8283-e7f5e0c57049","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Symbol Resolution API","description":"symbol-resolution-api","prompt":"Create detailed API documentation for the symbol resolution system, with a focus on the LocalDefine class and its role in building the symbol table. Document how symbols are created, resolved, and managed within different scope types (global, local, method). Explain the API for symbol lookup, insertion, and conflict detection. Detail the relationship between symbols and their types, including how type information is stored and retrieved. Provide examples of how to use the symbol table API programmatically and how to handle common symbol-related errors such as redeclarations and undefined references.","parent_id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/Scope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/Symbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:50.9597445+08:00","gmt_modified":"2025-09-16T14:42:49.8107873+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO79N/vyZRz3pitr+DRylBinOhgxDrTc5p94sK0voJymB/Y74K1GZy+L88YOdDS5T4K/lgd/NDg+WSaDd3iXdz9CKjLBqggHw8qZ+lIdUaog3f49q+PkDgZ6agduVFy+RKZWvdt4ad/HU5rGz13qpKiG9fxceYNWaqge6AMaTJ5DRxU+rvyAspkhjfP10hffttqSAPenNlCMtjS+0NvPKtk1ZDaHOYqDNrpljTuT08LJpx3AztRLle1ytEJITBkZJcfy8NQV8j0Uup1rEl0k6/IqYflaLBjbaXw8hUOl5xkxvJXz7wmPBJ7NC8SDkSg6neO2DAhKOmSvK9aJA0BmMbJMoWcE4iW9lsWKBB7zB6CFOtNReoJX1eX6y4HU7clUby1U2iPGAz8Q1h6brKFVUdAwwV8CSuNIxxmI6QllF2N7T/ovCnJ7qBnTmm8QXAmCXkvb1vHD0wViiQAz7nJX3eJiiQSzc+ay7fxU0IBUKcSud/SjyeUiGj+QJ+EdU6IUO/J6CBRHawclurYPcncXOmP8ymzLOZHL/yp0LRdocEVoQWTLi3UapRgGGsghx33nl084H7spOlTL58Dhppd/52XXdBJac/9w1oqo+R6nnRYyrBbOi/KmEik3aPSn7ZSe+VfCxfID5A+fiY36nkYsqVL+mWLMlKD0ieyyQJQA0KzOvf7mfrYdh57diqhX1qnZnnqlNWhcmzZQJ0Tdl4XdGGIKv1w233bi443HofJoj6sl2UjUhkt/xCDHe4no34ln2RbYN9UTKA6/19IUEFgVlbZ7DbazXFfZIQC6PcfypIUKxp+c5phlek/gnOKbFaOlLp68Nqn1bBAvTFm/k45gYPSOjFrDethHTdHoT/ZqGWQwM1Xl2bl07xeBZhMXIHOSrCTSPybOXEFK17uOYpLhCmaZHNrdFZkANr424aGyuX4E+qfN0ZUOjR6n6T70AQLEPNMM+cUDvlL0W5+tRsx4ux6w/ix2QlPC0xrNFk1Y+3r6fZHDml6s+KtqtLXb/wQKptFgZzJrmJkbYJdPf+fMQy7K+51NutQ2UaFnGTPdLbQOhNzmLYa3NDkbNSINDgKWhkWyhNc3+L4d+kumBpwl8T+xam7eftbRs7vG+Faue0IsdYYieMnNAECU3dgFqBk5WDIrAwmrB0ObArcr7UTTVgttxNOhl37Y1pafRN9vUPhMw88hxmCBniChNe3EgjNAph64EQYOrda0+c9YoJ6R5fAeQOg2csQvbZvVHDdiFoKyO4AKUqbIna0IWLSVkDUBoy/nnLBNcBut96hVckSX6HLbbv732W6YdWReio9EXTAqpsg+7s4P30jvJEICk2YMPzTnHXdLYMMCpRMs/zk54/KB9BqewNzD/3+8BZ86IA22CUFbv4TQ1ciOaWIKDpjUHpaA==","layer_level":1},{"id":"650e30ed-8c52-484b-b415-044f4dfbff89","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Symbol Table and Semantic Analysis","description":"symbol-management","prompt":"Develop detailed content for symbol management and semantic analysis in ep14-ep19. Explain how ep14 introduces the Symbol and Scope hierarchy for basic symbol tracking, ep16 implements LocalDefine and LocalResolver for variable declaration and reference resolution, and ep19 advances to full type checking with TypeTable and TypeChecker. Use SymbolTable.java and LocalScope.java to demonstrate hierarchical scope management. Document the process of building symbol tables during AST traversal, resolving variable references, and detecting semantic errors. Include examples of scope nesting, symbol shadowing, and type inference. Address challenges in implementing proper scoping rules and provide strategies for efficient symbol lookup.","parent_id":"f44e27c1-6dd9-4ae0-b131-7a0381989c6d","order":2,"progress_status":"completed","dependent_files":"ep14/src/main/java/org/teachfx/antlr4/ep14/symtab/SymbolTable.java,ep14/src/main/java/org/teachfx/antlr4/ep14/symtab/Scope.java,ep16/src/main/java/org/teachfx/antlr4/ep16/symtab/LocalScope.java,ep16/src/main/java/org/teachfx/antlr4/ep16/visitor/LocalResolver.java,ep19/src/main/java/org/teachfx/antlr4/ep19/symtab/type/TypeChecker.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:08:27.4501824+08:00","gmt_modified":"2025-09-16T15:11:54.5326133+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO70nlVMqQ8ZIy2pzLwjRXFZ9D/1rI9TrqDYhKtinLMeGq6V+NxbOOuOCkIkVEt7kxEjc4ST2e4ydGq1sT22tLnAQVgzXYK5gSHJhBJVnIfIy3tuF6V/E1KGgzHIU6zruvpTkdGbEk8a2+hgca3xOAoCo7gNfz0slWabZj3gphoEZqeSoH/y/Hj2ert066T1G+RxxnSGzRnDH1nq5U/T6B8SpLlxNXAAR6AB7K10Ad2YLq/ghOBS41yXxFBcOD9X3vSmbT7b75M7akqu2Pc4mTgqhaS63hqtkDS333tSyl8DizCTNnaz+mx+1+mycX/f/g+HdLGHN5CJxJuGpzf+ZXuOX3ubPHHgEQZDztUlP5nRiSyyjsvvtYB4jDDCKg/e2UYCxMqpm32j0+VFqRkPqwzUSIWjkMYWkl7CxsaFKtiVD+eU8U/Fn8WZlB99OunGvYL3CgE9toKgB8fCxuADu3Hwz1h0+cDFxpkWj+w5+UkJXiWaIUCoIOpBP5gJ4lBZwptvY4FG6b/Kbci5GySiAK88+VKeeksB4lj92lu2rGchNoF7LyyWfkb2GddH1WqbJ7WaZAqEyV6QoPeETkHwxWrVkHbbOK821C9R5OFrbVyhG1fN0i3OJCcBaePKysjReoTm7FXiAEwij68yELpaUyyCepEOrYtHvW4I2rf6SVifGbSgX4/uJil8thqot6lXXP2/W59lPfKjvdlbQj8x22KiODWNy+kbtNRGJDR9ehKCcZ+8+Eae+gQkaUWCOgSoRqiy0NC2Lfj/Sqzm1BC/NF3UUSNUyG2lqgO8PCLL4xkaxrJ62f34ubj7pFz9fdQ/LMAtDkQNlrAWBeNSbtP3mA90mp7OBN9nBq4Z5BTTAOvq2ohexPMaVgm/+1emFCFvCl07ybdEZbjAa8WskAeyuF9qUpL5GXo4237s7ZsENFeMkGSD5WxytDCitcf0Mmp4yVLcql5b7X6Srsh2lA1rYcEvoy5QVGXbp/S1xnyJg19JtsDm19uBbzVozCQkLSKksc3U1r1RDIH3Ws4scPEInXxQGJDeUvqoHDl/YFOXwO1sgwA+8yNME+5Tz7354qw9y3ZPQJcrpB3eBRKqdw5QVAa/0auIadrpFkTba3JRXAIjOBPUjWzoTSmGNhWdqA0WChsryQMUxH3jx49znS2Curh6aPQkel6LsA7LxyeaYJbIR8WB9TPYnpkBJZYh2vU5CIP38g7ZP5kBxjy/OTuInHjbz17a4GOjSoXntoWVseGC0ryiHZ0fJoQDz/ttIaLi7ArwAVqxfZpB2ZbSzKtGbmo91lqSud7MjfaUrm/i1iw2En10me/pP4n4C3aDKCVkd7p5FH2NaOSKd3qZSrzcdAg3dLZRVS9R8cYt3ldpuopF7sTUG5RGM1a47yrlfH1VrG/U1mz+4LNXJyfNwhQLiVTT+rsKggSt9dO+r7jqjR2C/zZz0HBqXzN3KYnRvbjg+8bhA6fdY8Uq6ISDTkyG5dQG+cbZuXw8G3Mp6rP+l5GJHTg9agqioYSzfjxjDsa0m3Vh40iiFnEucn7yLYeibfLXv7kHiGh5+tEIo1TzoCBRqzQmMXScbUqL62a/frPcflishb8/DKcMtEq02VaEIA2sdgweob8pcFOoKUa30Syg7CwxPUCStsm8JQX8FnPqXlSl8se5Ib6cR1FBJdSYdcgJoMbiflyfk31VM2JKMbt4ub26EsuA3GJZ1c5uHZeO67A4y7Ntt5fGXiWUhfAaqESmPhYlf7YrcWVlPGBeo5L2vf","layer_level":2},{"id":"892e2a79-18f0-445a-ae68-33efb444526c","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Structures","description":"cymbol-control-structures","prompt":"Develop detailed content for control flow constructs in Cymbol. Explain the implementation of if, while, break, and continue statements using their corresponding AST node classes. Document the syntax rules and semantic behavior, including conditional evaluation, loop execution, and branching logic. Provide code examples demonstrating nested control structures and edge cases. Detail how these constructs are translated into intermediate representation and how they affect control flow graph construction. Address common programming errors such as infinite loops or unreachable code.","parent_id":"373de73d-1fd5-4ad2-bab8-0877f0474ac3","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/IfStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/WhileStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/BreakStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/ContinueStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:06.2834413+08:00","gmt_modified":"2025-09-16T15:11:54.0968635+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo02+NkIk9hmmRCE+QYdBnu6xIYSvrK8GIyzf6cvGySbnFJUs5WKkrgd6rsubbsNXy+/3yZ2Dmmr47PjCpjcIjEVibNhqgZyFP2uP5nTb7KMvv0n3m8wpB5hyxVagaxBiJPAs27uVZCW2KmEwMMYHKpidOKGadqZZx4+mJC1poSl+DpR+KEkIBTEqZMdfRQR1ajDdhgRXBoR2kFnAhNMx+RYrrziheYZpx18jNtC4uGTq26RcUwP1RQGgocfQ7JOxcBfp9fmJ/9/wA1wZjvND5PK/y3JzDYF0BGHpQRJYdsoCzZPMKZSSYB7COO+QazcJG6hJN1ImIa2l3XRxFuz32UAm62v54ogkKlSVResJMRjElaO7Jtixb89O2rwqzxbPnUPu+zVy5B9Xma73DtT0n0ubE5n7nCgdfKRV5azuXIyEfSUWxNUTljuv+sQdS0kqVI0hRRc4AtT2F5vAHJGaX7GrwA53zDRfMil9sl0o2tlPQN6mztNwM0FJ8jxSmdjHYAplZ/+9ILt722XPC4NvjXfuOx6ooIeT9TrFqcetgk4E06SoC4owa1rCww+8J/SLOAgqSGEC2HDKao0TtFUMCjNFKb/I696bqwI6DkUOkRhw8ZK/9RALIow9NID/Wd93xX2qlczu0ryFxS4WrxwRLdgKkAV1xOhHiBd9snEx5hUbx2M8mq+OjC46J9WbcndaabqWmRBy1GQC/EVRQNzwSkDZdnmCxQ1HbKcwusU8uzs87V8hagmQ97jrC2YqdvN6/V2oaS0/hHVfyvDk6cjQjCEK5Kg+Av2RipTfVv9naU05qbODkeNdkOhHjGZ6jkrQ4uI7XW6IL4vV0Q2oZstRSyFAcrnHfj9tZoek8Bi/JdUClayrNt0K1NOqvYilBPhkK497VXxVNhbgScEcyLzDB5lvcqi3CjBp4Mvb76ISj+uZYMOHL/W8NZhMnepI/s/G8VdQSi6V0o6jv+my0K5vL14f4g/+l9CtOs9AltOu6wHh31+qwzcUwqbQ+Mtmbr5fNz7ebkQLy3dpLuRSmbJ7tQNco5dtMSrHT8ddUd/kMgtHNwutkI0Kxh9eR3k1iq/IjqQDLaBwLl//BYZfQtBO35ym3n1eL6+yKDKjm2uHSvU2Znln5yIusC1l88E0iXCJv9Gg6HYN9BJ7QwopAmiNALiUJ+SyUzoNkzcNyLT6D1DGUXn5R2EV6ylXhSZ3DMMKIwq7eobuthCJH6qDcIyK1TIpU65zKZZNfyLYmGjDzJdZbCfnMquUYZY98qz37L1aIO7uz7My+z1SfedKx8PZqkimIcK8Sctnt0PfYz963p5v7+resT7ecN1xJbkP2Io5bwc60DxRkup+w6RsdQP4sLpzuoaw9iW17F0Bp+SfSakcHHny6zLKOxXnadE2ljWIYASq5J4BW3tf1x/SEIYlznccgEbR8+z6Ge1AWxgJikhRJpHyM2EkBhPQhNGRp2ik7MQ==","layer_level":2},{"id":"50cdd8b6-b8a5-4fcb-81ea-ec1e925519a0","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"AST Declarations","description":"ast-declarations","prompt":"Develop detailed content for the AST declaration hierarchy. Explain how DeclNode.java serves as the base class for all declarations, defining naming, visibility, and symbol binding properties. Detail each declaration type including functions (FuncDeclNode), variables (VarDeclNode, VarDeclListNode), structures (StructDeclNode with StructMemberNode), and type aliases (TypedefDeclNode). Describe how declarations establish symbol table entries and scope bindings. Provide examples of declaration syntax and symbol resolution. Illustrate how the visitor pattern enables symbol collection and type checking. Explain how declaration order affects semantic analysis and how forward references are handled.","parent_id":"32f48f4b-a49f-4d52-a28e-81c006fe2406","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/DeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/FuncDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/VarDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/VarDeclListNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/StructDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/StructMemberNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/TypedefDeclNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:09.292994+08:00","gmt_modified":"2025-09-16T15:13:35.4696897+08:00","raw_data":"WikiEncrypted:wdQxH5JutJj+Xgqy8sscz7WemIBb7jgsZ8r+E6d/o+KRkCu6bxGnQdt9TMGuDOBpgjY6BwsKw711vgxMNE1Ku5sfQTvFmkWH4pvql3ZQzQ6VmEqYBVOw8Yho8TGlR+KtWtL9rhikuz/tCpIV5UUEApXRnN3aSdOLWG3QuNPOn1OSrxl5imxa3v2HdvtBemvLp0i8Q0ffFQTSk7QGO9GXakPwvmiYdN4iKcdjwMYDM+tZAbeXKUJekQ3YeweV8gRkCLhh7fN7kORUT3MMuBm8CjiJPuw1dtbvHb5M4aFUfgyTdnJVHuQU1xXmtE/pDkmeUidKWjRuxS+AmcltyWwKNFwuj/IqYQ9XQiKyyAD9OXzv/iSFxMl5/25Ea3WhYrd283MQ0f0hbGkqo9I78KwXa9Mtv5/LFFlX3Hh94GhL+qpeP8xDs8s9AOGLW+61iJGKWosaYZySnI7SwW+Q59wQFwgkW/HmSec7+EJFa9BvXrawZ1uaENpP2qUqUKpDS8KhSVHkKJC7/qwCAakMcevZlFwxs4jhRbS5UKEZOdmEFM+Ud+vsS/jBSFfpP7MnFAYcZaUFD7m/So1I2Nd1YsV37idraPe30Dhnk/lmU5ApSpt/yLD1APgIOebiBfB7beTBJ0jSho9k38g7M5gkCJFC6d3AwXjXD2z06T80kRXnLtSFVB3GhCtOH4ik2odCmcz4Xyd/sqd05lymsX/ToNRLA0Qz+YFcav8G7Fqts3TH7bgtfAbG3W8pValxWj/ISuLXwI4VOtFFBtpILNAi9FMnj3Y7Hzao5eusnGoKuMMb8rJ5/tzQPuAjKelbJBtg/G430HoTDnY09SWFrEJLeR4kESuPdPguApgva9qld64m1RAswEXS/GP4vzl4lIIwf9phqhfb/6m3m3wTK7RYLhH3PpyOP+v+LU0YxamB39qrh73Dncpxc7Z0XzLqXb5Eqy3u6zw1qCKrLNHfbKJ5ZFreiYVoaWikgYFEatGZziGudiOpwPUQR45049zsyxlMjHB056lskytJqrjkm5CP6S8Pugzh7xQ4vZ7ORdCVnEsZlgtdCxCu3BN0Ye/2caC1FAU8ZRF/Ku6X20hvhYuEhTBmCOHmI3hE54UIll2IpMXAFcyN7CEM9SnW0hN6yGxyEO4oy71WdwGllrtSD+dtrtTe2MZHD7vPgEwYCg8Av8ETI2ews1NFpGKvorSqYl1O7mSer4jHlrpviSxBGTw8QjHuqjMNuBGhvRPXykblLtI0HDxDdzwb1bX9rYI0CpTmenJDv+0RL6DUBqST47QfXFx35vhuh6zK+JlSIbuEqiscilXCgXGZRp9xGPjnFUVYyNuave4qMV63oIJMGr5xp/rpOBDi8kkQW6OlpOav8OLdJkwhXQfA/lMXlyQIUf6OcvKMMsCaJj1TQBNMYwWjj8jcMdrLJQ841CO9tRxeW2zDSOD/BcU7rvpJLeTlvcNG91jHH1WaB4tJRwYNvelizVRp2aZmK0C+0kNS0A84bepHcpXIYT8ft/2lITYnNeYpR2dNuATHzzsRqn8zKAlINGGI8MlbA30LCGdvD324i5m+1yWCbgLKXtSEQS42gRWULZ8iy09MfWiqSPyg4JXT96XkhzMai0Wk0ukP5ojtc+Tfg6NrDDZsQO9PKHyfyUAKq2cD8eyBCMmF4esYx1fzZy3lcJWxBZQh+ef2w3DhcQcMXwubGvI/MRq0QwXg1MHwcmF+lSbOd7/FFm1GDJJOxwsWhhyAh1TRTe89uWI21z6m7KdSOC0vVJOpAk3p1xOa8zzQ1IVx8s9ZAyTQGsZU/ap4Cdi8LsF7msQ3SsF174NgZqeOYbgtSFnHLv2WR2eyXOLZlOCA15iynmiZTpuKNwEoMQmVkW8TcnEN+NMekxBa5+g/QQX8YyGph1WlIDVAN5uszCAtJwFSRUuRarVMSJ5r2Q==","layer_level":2},{"id":"f3614b9e-ef0c-4719-994e-14b52e43924c","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Constant Value Representation","description":"constant-representation","prompt":"Develop detailed content for constant value representation in the Intermediate Representation. Explain the ConstVal class for representing literal constants (integers, floats, booleans, strings) in IR expressions and the ImmValue wrapper for immediate values used in code generation. Document how constant folding is facilitated by these representations and how they integrate with the type system. Provide examples from the codebase showing how AST literal nodes are converted to ConstVal instances. Include the role of these classes in optimization passes and code generation. Address memory representation considerations and how constants are emitted in the final assembly output.","parent_id":"f315b1b9-34c5-4219-9adb-38f4397d2f9f","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/val/ConstVal.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/ImmValue.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:31.4036705+08:00","gmt_modified":"2025-09-16T15:12:57.0434949+08:00","raw_data":"WikiEncrypted:L8lI4q9RGLWw2Xj90gO7G84NeaYEwimEVIpF9AuBKC1LWN6ZstDZTPSMybZOpmJ1BLMn9BtE2zxHLLCBYEKRwX6APZ7aDyWsD8T7/pl63jvQhAdafiAQXCCcWbMrNas5IZZ35kxRtdp29eqwuYyQy6pbmFmwirYtgo6pOsPYt72DfU6w1Wd0nxbgsZwCaj88Hed5e8uVovbr0xU8j0ouCFTDqODLOb4q+yGqrHj3FCd3Ui0cVCyNGgbnFlSbyYT3Oezg/SnIKwnnxjcnZXzM3hAW9pXDXQ0ltgmD46XKMXEW/YvqAn1utHhmY2pc5owt8thGnByeiEQEUMKF9yX3xZsBnGH1D2XnMrl3784RQRZo32HKBBo3ZVeVBA0vRIKRgKP3t/Jx4sWrlzL204ozByw4mZiSgF91RZrRw0x6apZi/ijJ1ibhebiN+RkapRbKFvmy2Do9Crk5vWvZkNyek53UCIwBcRPOhBb8qlCoafFBfDg4biiV4lZWZtcr0YSz0TGTm0fpqgvcFPdtG0urL0obq3gD/6G43Q2T5nQiEF4zGx9hlQyNgRQYj7IlMcAajRVBGtg4pQgjchMxojJR6f72WjE3S8drK8Q2tX+8bUpEh9aEjTDztN8vnAMBdPjpoHzc7Ouke/AGUhfYqHHymeuzqPG7tLp6o+rCdSCz5NMwqZWCQNZlJ4nkzllEfqUg+3IJr+2H4UO8Mrrg3wt6NsmOq31UJG2WId7vS+ZbgFDCN/ss6MBU7zSpawIF1zCLnHEqN7YT6Oasb3JozYra/SVlDZTVI6OEEs+VXfd9sQ16wCm4ORl8/Qv7cfU8nuAkqHtCufzS81s3cm/TMjlIoTHOTYw9idfvtbEFKvwZAYupCTtAPR0z6pvBfK2/sigO+4at2g7xlQ8p7E/VQc6UaiQ3BvpuMyC81DsQSu2i8bbueJKx/3JxYhJCXjyGfEoCCxxOcyk7ISB5ZU8LQdubuRLuZVtOFLM9YaaBDMZgfvb0VbgWwFuK9djmKYIOlEjrg3WxkkP0+8WBQt+c6PELkzejaTfbTaMSMzaw3FxpmL//pz3/yViChdpdvvf31kdwB7oGPp/mGJcDjNIIYd2rfGeClvm06IpBZ7JBUxsoE4X9S/frTJi/9VXDEvQytaZyo3W/1QdSfg+OriMJWafay23DhP6G4QLjEN+N6lXoxb9JMBJ1lmSUNB+v6MhcH8HYNqEnzOOwMIQshdCjQPF1SHNLyyo4hbKIqHQtrJKBhXIRAtcgoQEbv5CxYkiEw8oJ5lbl6Lk/jfzIy549/kh/SSfbrNiM7mHNk7t5WVCGQlhCd9pLnV+0eZU29/nwy89QbQ/nDq+6cPSsudqKGzhELenak4vCYodaSjQrw5jcacaKpXjwX0BS9ihlHDon79bnN3bI0QQjrWAxUjKhP9A+sw==","layer_level":2},{"id":"c9718273-8ee3-4b28-9a04-6e8d7cf08ba8","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Design Patterns Implementation","description":"design-patterns-implementation","prompt":"Create architectural documentation for the design patterns implemented in the compiler. Detail the Visitor pattern as implemented in ASTVisitor and IRVisitor for tree traversal operations, explaining how it enables separation of algorithms from data structures. Document the Strategy pattern used in IOperatorEmitter for pluggable code generation backends, showing how different emitter implementations can target various virtual machines. Explain the Singleton pattern applied to TypeTable and SymbolTable for global access to type and symbol information. Describe the Composite pattern in the AST node hierarchy where ASTNode serves as the component interface for both leaf and composite nodes. Include examples from the codebase showing pattern implementation and discuss the benefits and trade-offs of each pattern choice in the context of compiler design. Provide UML diagrams illustrating each pattern's structure and relationships.","parent_id":"5a9fd681-5265-47c2-9876-2eb17d74535a","order":2,"progress_status":"completed","dependent_files":"ep20/docs/project-architecture.md,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:42.8944011+08:00","gmt_modified":"2025-09-16T15:14:09.5873396+08:00","raw_data":"WikiEncrypted:tQ/n3TmqqyhuGeI8lCgAb7lZvLBN5fU/eg8msm/3XbtXSgA9YVN7ICleaWzCUGuEthxNd8UqeqelwH/2Im21G77Jo8cEP9uwHmiaocfYiSNnm/ZUbFF2LiFSApIAP9F4N1w2RQ7Lk1T8YsiCT2P+raBIIxEZ3FZ1VM4Bf8Q4j3zNm/SokRW8yYhX0C4z2XYK4q6Ing4OIqFTshRU4GrT5qMr9sw5oSr34ew6q4xiM/bZ+7y14GXpp15egGYQDwmiJqr8iKmGbCvqJzHWxVoLwX5obZXRe9BoD4dHQZfHM7/Iby3VrzkY+RmjPOKhFpfJ9nL9deSZcS3Ervj3gS3ztxue+lEc1g2zc5JhSRyUxgVXPmOMF5T1rhjNVd0/mTphL0/rADme2VDVWWfXePLp+xsX6bQk5U3dDVKpAxSE52nZSISLClIup8R2HDr2EeYPN8blMUCTH2oZPBNsv+p5barg2zA4hxQLbBvUS3GJD7o/owRXytvHeqrVrkqOI8tqrKRUn3Zkqlh2R5wAy1DVv1X9+H4Sy7OXPvxxuP16b+ktD2+wJjqyP0jnkIyhXGI8SDsB+tJLhGD5flz9xIERb4pLtn3DUrmp638T9C1lusnZxtabmKlcqQcVvAHzwcJ1szHnWmLSLX0IR13czcFq2NW3U9Bk8V4zNAZIoZkLIOjD0TBl1SA6VTH3YBNL3G3448pnEW2iEvzG+umCJ+zHNklKVZUP5AEP5NLhXQ3FHakQIlgzWPXNL07zu5/W9+53oQO5Ja4Ux4RWbOfYSj08WZLGm7RumcIiOF7f3SRujtltfUwroxfrp/4yxpeCkY2//gee3EHBt7n/YR1HCgIeP0EK4xU/dfQXmyf5JwgHSGLLaBLjvriKBjR411+OfxyL6BzWaSJAfIdkXPmSM9WvTZ4I6sE9KP523CgSEh5KBB8+Y2AZGHTlpLJZAZ/uLIB1C4UUGsNe4qJrE8bv77a4nB9KCQYNcnnVyosJBrIKVeV5dwf/n25bdXloiaMkFUmnchm4aa1i4I9lcTxm05Xl0QNAGbXU/h+tIrC98Un38l4D+6JdyevZ7qVvJazX4/gJVBTaCtUxA3uz4WOBxU7s0bJ8W0SNNMfl8LAOgM09BA5Jqw9nSZLJ+MonxGGoXrwXE3taD2ZD6Kite2+8KEWYkJSFFDlqOTEaJUW21VWTqsYvkbDs27iJ+KUID+IOfyc6i9gHjroM9lrtPB7sll4OleHSxpFy2Ua1yZkgFDKqRCCfS7eqcyw0klL1YEqp2iQbGeEKcApKEshb77y+smcVAsvkz/tVXvrXjKw9gvA/15lKmrAbfeGJwiSqjLuDXppOJ8oRd7moRqY+d1Gi3EyjIlBvJCpuxee1aUX/3lHLRESNLGCRKutwmDLlXVy1Y9VEqY2brMGpkMlOu5z0bmICGPxz3OdH8qhvp45s3q1uojPPXPwmzt4YbJyXgm9D5RgFeDq9dQKKS8aWdLykccARxjfxfcRMzLVlKDZsIzP3WknHHyTXb3Z5na5LGoFEd5vvugM+vRp1xKVj/HL6a+o1mXGg9XiLTJfBZ+5akMOnM5vdXHTqJ558gTR910BMd80tcHdh+z8fNKT14vveNN6HVG+80a1q0kka8HLZmm9r2xJvXCGfonAjdLzcHK/lmaJlKhyy7QTzhjPSaZP3AK7A0JbX3tONzlJof58fzV2Un/koB0Ay2h7zss2ns/lD4+RlM9NDiBS1UPLfBc1gSDMap32H2n/PjjnqFQLTW0v7doO9QxOiuaiq5eMb7FdqaDNSCctoiOKYWL6oR9nGBm9c8QD4dQu/Vybm6uTP2deDX4yV4znoX1q0vlpGYBMbClKJBxsix9GAMMbcoySAl2VlySN4fN/sjkpTrAnu1pOE+MlLvlqSlBGmqgbdTq4j4wDx","layer_level":2},{"id":"280be546-5e60-4484-81b8-6af79027275e","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Type System and Type Checking","description":"type-system-implementation","prompt":"Develop detailed content for the type system implementation. Explain Type.java and TypeTable.java as the foundation of the type hierarchy, covering built-in types, arrays, and structs. Document how TypeChecker.java performs semantic validation, including type compatibility, expression typing, and function call validation. Describe ArrayType.java and StructType.java implementations for composite types. Illustrate type resolution during variable declarations and assignments. Provide examples of type checking for arithmetic operations, function parameters, and return values. Address common type errors and their diagnostic messages. Include extension points for adding new types and operators.","parent_id":"73a9de86-3c93-47d4-84b6-073c2b7827aa","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/ArrayType.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/StructType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:59.0944906+08:00","gmt_modified":"2025-09-16T15:14:59.3097547+08:00","raw_data":"WikiEncrypted:vKr6dgGvp0y08i+7u+cDRL2CqPGYrvKOzkFayQNG+lv2QjRbRbRJAOUls5fWz+vee6FmQtI9BmLw911bNWL/ZPdPNJ0EGjj1ECj0DsQOPotC3tuONJcPz2qwV/kN6606GOQf7EF4QWWZmUg8YdJkWy5xVYVwBOn8ZnD59LKTbqW6CC4t2tukVh37btL++fQ9HsanZwACw50/5WRtDm0tGCRFZbyqGQh3Qvb5/Dye9PeXTf2ABc2G+9camEVwxEjdJb3pKYMaHhCtRpxgJDEVbtPrmQ7evkt5wHZrpnzCEBHgl1QMj3Dn9LtCgK2vqnGwkqLRcxEFEwePV5/iVB8a6OyyYG2Ridm/MG8HLi2OUGFziOPGAxlsJ9z+F7xldvNFw+U2jrBcEpkL+2O7APbgRSN6Bk56w6pk6slmaJ8ZaSDqyeIbfaeQ/KhlSL1x/9DBPKW3/4UdE4m41GRPU9dRtw2G5BEQttYtjdUSQEDccxQUPxfIjKgu79+p4n2zVY+NCelKe5Bgby2O7GgaEMLb+T59SMIM3I64Tw1qQfVyzD1M/La8e0LlgtiuI8v+PZ7sKEReTLdE0OHwPqrNEjpvdVKOURuiufD53ltql6qt6poVyRoOmWvrg5QLyc6DBjoyexT1iXJkSm2aO/3Y6JH8jTRq+1whmsrPZAYNbt24yniJAz+DfLVfr/vhKv1ouRwqTRuPSzX/x6Qs9uMmkTYjl6kD5ZVCWxVPPHQ2Qc5wP2ko04OtpIdw53n7/KkPoeb4kFNEn2Q1g2vTrpw/j8TR95uUkDBB7+Xv4awlbhYIrqdfDtcN8cfs+kS6R2/J/6RtRllBbmEsSiODTCZey5TWCPSBBs+XWSMvbDWYnFEucrAf7YybjwDAsHWRrivXsJtiI7iXAgtQCR3GL6T2ETQnMDAdv5jdqW1eGFJeqmzPjodiMlUAaaGa4qrEYGRSLJihdz6vy/izX9A5hu4p+QHuwn+bEczQsHA9zAyVc7vIIFvCNDKV8N+mdnLOKwTiBucZR4bWeKyOqQ0aJhySVn/1Ew2ZayRmpuKgVa6TltMW53Jlpv+q07L6D2wgOGc3EV8x4vGyH7uEyl96Z06OTxpUSekB8AxuxFKTLnElq/Xb4T5GMqxRuWGAodPP+R0SoWrRyPGg2cXD6Rp5cwS5SIDLY1/6DWwgVbzJSUUdmz/kDxZHuCWNazdnAPRWxnYHrno17YSLDYguG5lB2FYFwBP9SqF1L2itief4a8IdY+3FIlarkRoJyCj/IW/y8DsHNMIMwmjOqNspHQsS96U+DVG43flsvBoUSld9D125X5PO2gFMLVwG71QMz7FUQGAJlnw/gXpjPD+WC/bJNax33iuubori29jyLpvlESPO9uULKjJ0N4bh0+kX9ohIn7zzlD5QqKLwqlWmrseCtEAQkczTYZgVAF9Xy0COoR/Q2cNLicDHZA6J2Uu1aeJBOvz4fIIpFoCWyNf2oxZfHOty6DzGAhRQmD1CyFc31mxBppMd84ahAq3gQu5JnWa4H/t4qk/Ah8gHwstcx3wZ7ieZo9xSs6arQvHudlzjUNGfYVJGTsakgbF5j84418flpS9yp4lQbB546TDgegJRLnQKdKX4uNHlB+RHlxG6gvn7+PwT7qLoYbyGECNASpojp84QYgp8h2xsANIG9X70jDp6ZsMqyj1zEjePhFHBLHfVmLtA8sy8XgC1ECT1uy7gNPXwpKDMTxKbp6sw4MfGPp546Bpw+w==","layer_level":2},{"id":"e412c6c6-f68e-4907-8a4e-d2092ed4ca8b","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Unconditional Jump Instructions","description":"ir-stmt-jump-unconditional","prompt":"Develop detailed content for the JMP IR statement that represents unconditional control flow transfers. Explain its target field that references a Label statement and how it enables basic block chaining. Document the JMPInstr utility class that provides helper methods for jump instruction management and target resolution. Describe how JMP statements implement control flow for constructs like unconditional branches, loop continuations, and switch statements. Provide examples of JMP usage in while loops and function epilogues. Explain the role of JMP statements in control flow graph construction and optimization techniques like jump threading.","parent_id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/JMP.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/JMPInstr.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:36.985921+08:00","gmt_modified":"2025-09-16T15:15:12.8367347+08:00","raw_data":"WikiEncrypted:HfwylyGPL34NvuXFDpnUX5G382c9XCreMntERi1LjxF2SK6Bv1O6qi24bV+X/f15luLEoCwKIE9OOoQX0/hiXXAlyytfu0tjpcJ14rcVv6c4t7sngwVY5m7o289pacQOAa6Q2DC1e/s9/pWUMZpkb3rlXgp/c5UACS+jsigasdYTuSPhDoZO/yKEbMeJ3pxakGHxi1weMxzxmW9HV2N1OdAz/GXL7l5NR/XkrF3BOTHsrsbYFtwcZ9uAXun/9Ifz5wc6t5HkN5mNyDj0HCPiLU6+behIQfUKRdNyJ/yU2UrxVZjlv4f2GKFrey4F8O+ehBEXZFYvr3SdNp4oQibZ4TIlzFCArfp64/I2EMSlMrUflTCTJWoIZrZ9ht2qtgogPgb9OdGAmofhWzkRdU/9NHLT2gg/LeE5HHLr9xbnUnh0Ccx9/YP/xRpz7vc55emPajEBJLuvaul27FpnVqOtrqa1N57RyzNArUb6mmymkDgIkO1WYagrEOfxSuWly4f272ECY+kbx9VHS1foOALsj1MfsXnziHL2bbZ/+/l3fGfXew3P7SVKD9OgMixTQgzBn51q10yGZnVIlg9xz+jLjIzybjS1UignqxLKG5kD+xE6wFIvql9LgBXVuCIkFz+Y/qP3Davz8xJ2AiDWDayESflx/BeUDt63xKB+UX8ExcSSzRChgeN9Bvn6CpKPQMVFWgTfOJw46F1Dml/6nK0//XlehZyL8FP2oVBCHCPD/aDM1Llo2WBPBwuWtgIcnitHkq3vJ4SAd9n6DQ2IM8Lqs6IGUhb3vGARG1DNxvV5XUHBfEio1ePQFvYgLck3O0Upd/WrXM95QdpxkP5b2WvPwm+YmiN8vbKAYM6cdriCyVqNsrSD63ed+9MLx5ITQQSZbyATwOLjmFlZ4sBGnifn5Kg1z4GEvQDogt+tXcuDjfgQEwNHtagLPDsq+5aiy/66aKsumByJYfpQyr0k4Be02jp4BIGoCra9uFaxXAub6jXDvmsqb+mAnX2yE0VUynacmVS6wrIcaisOpqb5aExaSyO8YB+RXjeeY2kJrf5/HN5Wi/QhFWUCw6s7UqIk1/cuZQnGdWfA2+7S5lPJdODrQT6RUQGu61sh60a0+fzOByg+pGnZnMQVNXzJWJAuRw6hmxvMuPvzBZVMTDu9zAzL9JtGAClHTkKM/Wm1nMRPpAN7RNnlOoGT52m0/qi5w60/2M/qvixuq0QQWyjsAKPMr8CPkJds+aQdY6V8Woza6tXZZCpZRfS0ctw00vhtyQCJ+WmTMPgOWrmHR2SiMrsKwoRuybFfJkZjRb6xuze6cYE6rOnhXl5OipPdq+7HV3N/v8LHiKqv0XOqdn6ZmkUAf1JZoRDTQY9v2VTCAZLFrLA=","layer_level":2},{"id":"4567db44-a56c-4eeb-8f1f-3e69dbb7241d","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"FrameSlot - Stack Frame Location Management","description":"frame-slot-addressing","prompt":"Develop detailed content for FrameSlot, which represents fixed positions within a function's stack frame in the virtual machine. Explain its use in managing local variables and parameters with known offsets from the frame pointer. Document the relationship between FrameSlot and the VM's memory layout, including how offsets are calculated during code generation. Provide examples from CymbolAssembler showing how FrameSlot operands are translated into load/store instructions. Address how FrameSlot enables efficient memory access patterns and supports debugging by maintaining clear mappings between source variables and runtime memory locations.","parent_id":"aae5e5fd-c5e1-4541-ab79-3e92c452c9aa","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/addr/FrameSlot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:48.6313366+08:00","gmt_modified":"2025-09-16T15:32:26.1287053+08:00","raw_data":"WikiEncrypted:ExQGC9wVrOXvQIlsPbBOlKZRPRmi0NPBQ0EesIGZRPsMnjvhwdesb3ob1H80ZfJL7pcpfUPFUTz39q36k4OK95oN1Oo0nT5depAsVFEw+JCGbqbr+AWYUwQCnfK+pFywsa+57wgWlMe/QfUWZ0H/v5d3KM8MSZgOUwMtZdKjS4A4sUBMETmBbcnlTWDRyPfTnLQ9dYZL524rqqahk/QaOzFx/oDxpHl+xHxb6gxPVUhPKZtNdgMJvr4aVhyI2Qc4NRUHTxnj7vQaqXGS2onlpjPqbA4GlKoF8/vTrkXXqF7Y2TT3LxT/WdolsdX7XGTtX1A/q1iGfIOvVVh3MzsgQEJLUcmEzHL2idDwDytBmU1JnDjX5NCjzVGRPjI5J1e2i6+V2SScNOt1hz4FjS7T/tgmq5wgjKmQgzDBA7J+0jYu1EGr204W2cXLqgXR5jOpbWDahof9vD86FkM4rHlATjnl0qv5Lts5zcJAzEKsE6kVjO/4EunyxNyIIPvSdydxKx3OJaJ5chuBMEHQKCu7Wl781h0Wtdteyut9xxQG5oZq3MoSlbYdTyPGeC+aub1Gxo03HIs0OvMZDp8zWRtv7wQDpHmRrK9M4L5ir8NUZxOroahLR6u3/viqzhbmjgrriVaLYszWJcNvkd1rV2zHDApPx6lDy+3pG2KlA+QU1s2aocSoOK7UwswzYR5ryOi0dSnT1IlYCOGAP98kmra9K5d7jETA1ZnnMpxhuf/aKcaRWd15YfjOHQsFIkyw1nbxv51BfZsAJw+RIBV3NRIwmuT+jQNRWVOC8W+CJpfv/1ce4tNgy6GvH3nypCv+rhYR3ij0+DCrcKN6zGQIxO7ms6tLOZCpi+2gQRaKUUhCewCaUU3/KF+FGlglVx+x6Q/+35Knwc1nZaWY7IOkN2/y8u+RcphYFzilOprQW7ntZXCQdM/nTrmAk1AAb4o/zdSEW7W83j2f8x123pGTnYOJYB1I5hws5vAk/5QzlsugYzM1rmH/On9J56Uc3P2yiFyskoPYHoQQpHxoGReP+XuL254FWc+vJdoqfdWnSL8uV2oq7/SLB9FKq+w6+EJ9XQcuvIt4bmSlwtyL0n/FHv9wMfrB3ptuGkRy778ZmMpUworSfzBGpxx82KHKTjWvS5a36Y8AwrMj2c6q/kWSHK5y5ZCYT4FQDbxvpKt05NfqH7pg5sGxeYg/Qa8fKs8zKVqDGxpp11+eTr4a7faTB8xh5uWv7k53fhxNtoPiGGfrBs1ygqEcsV6438vRm+8D1JQ0ehop6ge1Wu/WcQTmgGDhc2oBJUuSma92FPPJhClfj6E=","layer_level":3},{"id":"9f77fe64-ccce-48e6-b0e8-79a172acac48","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"AST Construction Phase","description":"ast-construction-phase","prompt":"Develop detailed content for the AST construction phase. Explain how CymbolASTBuilder.java transforms ANTLR4's ParseTree into a typed Abstract Syntax Tree using visitor patterns. Document the ASTNode hierarchy, node types for expressions, statements, and declarations, and how source location information is preserved. Provide code examples showing AST generation for various language constructs such as function definitions, control flow statements, and expressions. Describe the benefits of AST over ParseTree for semantic analysis and code generation, and explain how the AST structure supports future transformations and optimizations.","parent_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/ast/CymbolASTBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:14.1571646+08:00","gmt_modified":"2025-09-16T15:33:36.5855732+08:00","raw_data":"WikiEncrypted:oiB98Td4k33qtSx6lIMAxubR6gw7/iwBPn0KVgK6t+jxtgXHz9GxloY/vUX0fPbc4hTgWoKoMwlznB3eYhphCvA8i5W1q7+ZTIKMUAp4E78kYC3GRkjAyViX6SnUf65xqkmnQQ3Qss27or+wEjLt6LuZDEz4FFeTt1628Iji2LPNUAEUILbf4lxV9nvCtuBcpmPBZzFp/mF2X1Y8Gw8lGilj8qTuUx/r3s0KyMwIfRyRUEqx2cpqsr134p9a8Zw2fMV+t/DAKp7VzgcK2urlbrC6oq6dbFkCRC7TRP3ORbHdEoXYdMVWYOC+yiFLCbI45lZt6cGHsKbqD/1ExxaRGDdXvVCnq3DfIa0YBsb7w7GR0TPxQ0/GEd54QVyR/psC3HJCjnOy+iSa5oqNWvbUHCbV5TTlZaSDmYSfxEkXY1oebIh8oaGqR3H2o/S8hch/GGGq6rKRWed2FuYof/Ahtb4Ai7w2ggiX7kCAwqEQx6AIS/3lryICozHIcBdXl43JzMv2mdRFD132M6eAjucfOylfldE7C+Num3rvnuO37JMBFQm6X1XRG8UttXuR3hrSCyymYpPzoVtOdHOuZJ8XzMaT0JH+2r/2Qdl+nLMdJf/LVG0vwiwLVUy+VChBoCMXbiK91pUQ5+paIMqgVRFUEar8kLRKLpjityk43CnpuLop5H5hrQdKsblDFnyzIwIfmQvAlXWWfp+odPgmeupLVtZOXJA/P5Mm3vvrK5J9wfG0XJB1sXwdQXTEKxucs9P16ZtxHkC1y93mMFKgp+UP0jFcZNH0EEgnU718EcHPC98cFwSXTJsEd4rjRe48GXCdMFjK/YnyuhpQlAGDCVtXEICwrTNUfIN5C8GCo/X+e0vWq8CV0ivjjBI0ao4PQGy/ape/W98p0t+dg4PPIO75Z03W2loMHs6D8QutU3+JAVzvujMu+ulHbarvG4kCyRaP2+UY1kejLbN5jGJbDFYTMuEJhqd9o7lLIYKCBkQLMEGAnqswGn69V5YFRLd7lCplbqojABvwr3pj91ethO98of7TR/z2LB45apT6zNKYcxQs3Gv7OGvWpSWFVYZr3cCdrtkdXuTksfJhQljXEdPz+HIqeMJIrZcaUVrEmbXUZ5XipmwMhPWkUMDacyQWxQc4nrdugRqfRGGi3cvNJbW7VugdWlbmxgiviOT71Ijo6c5lJ3XcmJG+TmM4MQne1utePslBRPjSxuu55VXPGg5bMRbGMYhIbf+aO1NOExioX5CYmaohutiloVPYY+lDxBOx8CHGekzqennUV2HfVsPCJk5TeFXpIjS5F1YMQGmnzoDPF2X0rHfEV36yXZQrOBZPxnZ49SE0fwbHzqkE5KMC+msEeudS8L0Rw1yuwOgn8+mqwwXEqGc24+grUkOvdroJGPavErr72Ag3D1Bo3VhNjt2U1i8KRF/zCUk/EIhVUwxJnKzONSm27LXEXM5E01og","layer_level":3},{"id":"1765045d-54fc-418f-993c-a459a854be75","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Symbol Table and Type System Interactions","description":"symbol-type-interactions","prompt":"Develop detailed content for the interaction between symbol resolution and type checking systems. Explain how LocalDefine populates scopes with VariableSymbol and MethodSymbol instances during declaration processing, and how TypeChecker uses this information to validate expression types. Document the relationship between Type objects and Symbol implementations, including how BuiltInTypeSymbol instances are registered in TypeTable. Illustrate how scope hierarchies (GlobalScope, LocalScope) enable proper name resolution and how ScopedSymbol maintains symbol-scope associations. Include examples of type compatibility checks and operator resolution using OperatorType. Address how type information is attached to AST nodes and propagated through the compilation process.","parent_id":"f1a59a9c-eb6a-435e-8fab-8701a6b44e34","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/Scope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/Symbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:16.1374779+08:00","gmt_modified":"2025-09-16T15:33:43.4036494+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO7wvMnXhqy+OhGtUU84UVAFDIoQTX6ibvJ9o4+JpK7NY2ZYkaITJuXLNs/vT0TuMuAu4wFl9oZQJmd/5gECZRdfH+9H2FWNdTmIq8rpPyvGkVliJMIf3rZRlqHSo1F0pxDZzZb+No7YlxL5XRJCddafvqH2j8p8M5QwqUPDRp2oW0SYqBgpPk5MWcjdUdlBoojIOJk2SDAjk7d/nvwadsT39tuQD3yawuxiWPrZz+cbP/vPaCkKleGaIndrdUQhlnOMK/pgwn3esC96GqBjypvNYrVfe3aFO06CdLKZr9a51N6jdo1ePGo7qvTiCEzWTs9KT92PNePlfpPENcKzg6BcxiltGi8LszVdCm7MspBeUiCx1c99f4094gicOrJGeaAZuAffEpaB5Yl4Ra515lQXgi550fps3RnayaWTXI7AjVEjzk5ohFL/HK7DIu43Vs5C+EqVdHtawa/fJoDTB4zCUDlDfsUfnD9zEuJdKZcjv/2WiZ0LPcZSnQAyeBN6zqMIXGMyWXiACsemZGsxGhpZKPtKh1slI8NWriavTTQ9En5FDZxO7wuDfsMCNpy+KXTKJNEJW/4WhW/DlB6FwhssejjKUCWBV6KymzA3NzOg/PZBEVoItqjbJ4pvuWcT9HEtJKeulfoXsd4Q3OchWnqzx1AQDENyEcO7ZlG9FkWUL1CXdJAkpOT31UuKDGIRlsK9FCsAhReWDxBzSv7NZLokaidYza4HGSDmHwUpMojeNhHHeiIcNxxya6vVmoeOgerafmgG/Z/Al4RlHCkAvXE7Fn9SE507LQ/iqhyF+YYdu18gnLwpCD0UvMnfKtUM13rwwXApE/n5nhpJQ1oRckCT5bWZVIJT0m14nmT4lBZe+Akk/g6nJu1lgqDhMTkB+m8C4tqL2dnAO7yvYsNu5dCvz47IaBkVDvG9ndIO0D21bgFnwqoRm3/MJ2yggGHt4naraqTCSxggNf4y41jKupj63jHs3RQxuEPKIC+t5u7Qh5HgQEqHSzUq4TyBOrcFgL67BJQLiBmvkyd1yGmVcJRv3mP5/3OX3ZgQzUp+yAMBRe/9hFnPCvBzhaGbXCJ0gfgL+TxOT1Kb3tFWk22yICN+5dgdXo+/KMPVwKS5cYRquWGnaYwF5eY1iVqZmXCfN6+DRyVTT5OTwh0agJCoynCcIgoKkxX4pROi/pJIk7PGIW4FBgBpCzCKRWLiokO6xK7S0iC1zHXK+XSSAGQQ3+MhU0yELSaCMTuS/yNq8B5EKKMK92e4jJ/uhGTd7SYGN8uXaAAvoUFSsKB0fn03eF6lvjSn4l2w6f1GMawpMs9+gHXXcq+Dig7/94eT4UFGzq9PF8O5fhxwmCN4b7dnC1tQXabNPT0/41S2v1/FBMGut9lRxMwPWNlXM8Xm4byE5uJ4KmdSKTwEZFbCqVI/MqBfg794i4PTYuONuiHSB35pRQrv03eBtfcmKBKVAqW20d7OF14VOq3NMXLo+8O0Rp8c6munq6JkYiS7ikitenYbvTQyN+k3e2NKFc7hIWwmnZ41EuRY7YLZpVL8tCAo7dAdqMlETa0IqMUT6XZxxadPwC2yaFOiwo6ul/vtqVFBd4KtQGCasBJBgpsrDKv0JGA9mZEOFIuDSvzypzj59gdMMzY5C/0R8JzSQ/NM8qw4baBBxXVkCfEdp/S74OhsAid40BFvikGJk9C2xC5F/tXwDojHzY3QLHZ/8hx/co4K7S2l8HjxFZihwpB/O2rk7HWfw=","layer_level":3},{"id":"5563ceb9-0f72-4d65-8bf9-d1ad2feeec66","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Configurable Compilation Pipeline Architecture","description":"pipeline-configurability","prompt":"Develop detailed content for the configurable compilation pipeline design pattern implemented in ConfigurableCompilerPipeline. Explain how this architecture allows users to customize the execution order, enable/disable phases, and inject custom processing stages into the compilation workflow. Document the interface between pipeline stages and the data flow through CompilationResult. Provide examples of specialized pipelines for debugging (with verbose output stages) versus production (with aggressive optimization). Include implementation guidance on creating custom pipeline stages that integrate with existing phases like AST construction, type checking, or code generation. Address error handling across pipeline boundaries and thread safety considerations in concurrent compilation scenarios.","parent_id":"11cbb601-e7e2-4319-80c5-23ee6b0ecc05","order":2,"progress_status":"completed","dependent_files":"ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/ConfigurableCompilerPipeline.java,ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/DefaultCompilerPipeline.java,ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/CompilationResult.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:42.5452168+08:00","gmt_modified":"2025-09-16T15:34:50.9459407+08:00","raw_data":"WikiEncrypted:oxtugALaf4ZaLWbA38Iyv5Wn5eLET/fJW5EgGkJx5QlQBxunp8uZVrlu2WkDUgbrwuyjjX+IgbUzv+gx/H9FurqMovJVl76jaMikxLZi+k9a6+wB69htHCs65+dIFk3m2oa/nE2wDBfio41otuZoI3iVnsv+7PE2raL7+kWEUeC87K3I1GCiKFvxWei/rsWApWE1fC7X2ynckWSJcwEMoIuEjx1cMDAit19OpxZfW36ayaCrkntcJRzpxQyuwgiOjnJu9LdfvFMsweVhCGz3FcXLFBZ236RGU1s20jbVsTNW6SSEsXe2lAfCGouP0g4oz5dyHZorr2LdKx5rY1kW2kcnp2CFqy5O0v8IESJhJX4lIsRTM7LVOQJW8sJFMK54ym5hHy11cC2h+qVL0bdtZT14O1czNPwZVwn5lF7wLnVqVlmpXS+3OEyp6CfmJ5YieYi+kj9/paDAl7ZS+i5RtkigMoUt8EfMTanz2nWSBvXgy7i2rOPcS2dM1x0LodDzPfTFlS0ug+2z94rIHcTYXMBldG7ftqcDRAt8aArzlcXAbl4/dC4wBSAMNnqsvz5sQsTnuQ1OG4MAoweQ2h9YK2QDKiIj3ooKiH5KMY5GOI/vBw7yVYxPCt9fVWr8JSDAAxeV6UC+Ka03umK8cPQJJFapLUmp+0UUycR5yjJhb+kx/XphqjjP14dA3YKq7BWWZAm8SI/lVY2IpoH50oCbp39AMV9pohrd4wTbG/R1Qe0lCuSfXtSZJRlKjA9cZ+/1LqOX/jEvn11fCUqCIW3fVcekB4r8eB4qLNu8WLE/zfPGJHwmSElB+JZwfj2cZHGaKEoa4TW56GyHx3FWtvJSTYup3HCscO5oNpVLZOJ1RV62ervk6bVHbLGEUsMTSDqvdggnhdvHZjKEwcpgQ4i3Lf32tGsLz13PZ4HOuNG4CkKWmDA0jmadeGdkGLbHy4FDZATOb+N+U3DEidsdYbNZZWIJq46IXct7XSKQnWTkkiuAnZP2wilBD+9e+v279jvED4YTxd8W2tibKvrdA7B9XYi9snZGYCAJ6kky0EVA3n0gWN5nTto49CFN9x8UkE0of5SHiUZldqjBHM3G4MNWS4Kt8bc9Y/mrgMwtDmb+kaX3K37xcR8fTGaBE2fIvX4DuoaWgrPLMVqmqtxBZGpbgQFa4tIR7MI7EK8osxYaFJdITtM69i5XKwzBNbfhXG8F2q1wsd5lTYthYV2eKereMiVVZqE+wgLGuZrYwuUogDU7EZbdDziZXCOuxuxPqMLlj7JVqJgl6VALM6rcY4QTWvxIkQySVWymbWYc9TPAvH2oOheT3kJ7R3q7GE5W4d/lpHgZ2dIHgiC9ZcO7aqj2AKx+4SqLXJc9GBx5mJlB+nNs4X9g7KlmYuftipe/OnnRZ//jqzFLaNa0IxplehaZJXLjNl9mP55IffepTk4davu5HQvf+QWZ0Qa/QOav6wEgxDPdwROYwyUSPhK4mYCSjC1jOLWRFHRQPx405IhdcwqWQnliE6BsaeBEe1aZAGBA8Obzcc6dLuA+wRcPqVe4Pb1wtNUaLR9c2k73M1QvabWrWMOdB/+AbGtbBe3y35/WRgOfq3TVZ89x+DZg/BR/dNmiRl3glvg9xP20LGII29+WS+fd1AwDNY3s0TC0SeAi1DDFKT8dZC/ng2CBSnNLFgYjUWkE/D8SizevIaYTTspoQA4SO9kQ8rND6nA0gCQo06llt/loFFcjEoclgDA/iQyiY1KDS+1SNS4mkS8egBg=","layer_level":3},{"id":"ce164e68-cb2c-4541-af3d-c1663ab43654","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Singleton Pattern Implementation","description":"singleton-pattern-implementation","prompt":"Develop detailed content for the Singleton pattern implementation in global state management. Explain how TypeTable provides a single point of access to built-in types and type registration across the compiler, ensuring type consistency throughout compilation phases. Document the initialization process and thread-safety considerations for the singleton instance. Provide examples showing how various compiler passes (e.g., TypeChecker) access the global TypeTable to resolve type information. Discuss the benefits of this pattern for managing shared compiler state while addressing potential drawbacks such as hidden dependencies and testing challenges. Include guidance on configuration and extension, such as registering custom types. Address common issues like initialization order dependencies and provide troubleshooting steps for type resolution failures. Include a class diagram showing TypeTable's relationship with BuiltInTypeSymbol and other type system components.","parent_id":"c9718273-8ee3-4b28-9a04-6e8d7cf08ba8","order":2,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/GlobalScope.java,ep20/docs/project-architecture.md","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:42.8112024+08:00","gmt_modified":"2025-09-16T15:34:47.2944019+08:00","raw_data":"WikiEncrypted:neigK6RjqTPkV4w5UD3v2yhZn2zg+WLJAlEuGueGgea7injZVAJm4qIXbX6s/UkS92thhYIZyuM6S/DQD08gLobcmDyoBmawqAaONvoomC/iBmfnthV2QTnNIzVQdqJD+DOkFy1SnnwUc3hKvin+ApRGX3lGgizvoiOroaGg5GE9FHoijVv+VmoKHhJABGJAdnzoFftj4vBRlmJ1IQd4itXB+2mnnE1Mf3EmWUc/dU3zbkA4fgcKF3vYgVyqpEGCBYoI87cft4kdRfSUV55NPjCEoG14jqifCXgnYSJ3sqGB2Zud8ktoLbsDEs5VupBV5TAY+f0uMJXK/Up+lWRUsoECFKlkVc9bodRDpUfkYzDCP0XHGYuCdRx1yMcGUKT5mDfd2jShd3TcymsyTJPfVKaaOxZiDe+DZf4TEggq/ttyEHXCooBhS9F64gKf8+0HEdPbWYECsExHrn0nHudwIKwTidKZOmjIjMsAggOAt4ZcCZMABQE6BC4BlkX6L9zRn7tv4ieLhd6QHGZ333KXBqSfmr+PM1WDcQZ2lS15t8jSuRFqhY3AQ5ETOpj4RjXdGSP9T2fOA0aDMb7w6kc5TVVqcczr8UsMV7dIz01DwWyjYEO6JssybaHLq3y+t93zmdd7bYuBmGMo86JqIW0dEido6Gbc3QXPNWEaMfXgme2JOR4tVjzMnjmpqQCvNI3wH175aHg9Gj9J4n8kkWa4RXnXZTbTMIZD+pYDd0ioMWpW5Olk/ZGrWiLZzu9lerRipn06etORBw+3AKo78vp3F146Rp108cI/dngcryctqA65MvQsOUGOobhyBcNgKymppcv+ZWrqDVGM2sXoXG+dB6dDk1KkhiS0L+TZPX8dKxxC0aMYKVgiw3d9klnr6da3WS5i4THjAjFu/48/kvrqu6QUhOpEgvfqVj+hgCRSwz+uOxXNmmmBrpH+AYpF3LJ46TMVJVqVQtwHI82+i42vQuNGA4x3DA1E0N36vbPsMxZLJ/zw4Yr18NJ0Dai9VmLYS/eUCrP3Mf+HyddH6lfeOwFTDm8heOqF8GpD9Z0S69wwFOoLJM6o41AA5epliw1c0UK3Vy8dx+B59XHWoYlOgNQ11AnWhWCm6mPcgK/dsP/xffyiOwmhJiLM9LiKmj9aHvr24X+QVK6yTRREYMlGughTnOK6G95y9ChcDfCn0j9/g3v6nfmeD0lMH39F6MIn6ngDFFfoZNMdALnYtVbX+zMPB/2AutVp0rTykaiYBrhzimdF72d/K8BjM2zCccI1D+8fAJQgLM1xaLa9qI+GT5tkHi9q1PDkGN7iwSIxH4aingPCi8v91q6LKRXb6O5EQiER792yuB/OI36UNK9J1pzpdyiZkiMcI3OKb4vVEAixPkn9Mq5OdCDU6tw+t0hNdiZzaQU3zB7z/8tZJnlTQjMvZvd+/IfK3SomTPNokwINOqze6J/pMZjiTo7xYwyRHksWeOe9Oi26Ma7Xr8thptG1HPUYW5SXSY37HYK+L/Y+X+88w1dJVg/vKkgRGenQXDXXPSVbUfVJcuWXzEt2kM/+LSJBWXYNl3LBSkcgm0+LeKkCdCof3hpsrsRryNBytHHf2yvFSYvUj36GeaeoeLl5sN80Ptzm9/bM78mHzCXXpJULO7B3Rh4GZQVJYafK8HZ0X82Ob+HGRIrWmv9lAcPqqVtgVJcuAnTUd34g1y0ZH3Na38m8nx7Xvtl48/yDTSfrvieMtCqZJr/j128TngwthIUQsCYrfdRUdU1fLkBgNaaZmoMvYGqPgPOPtIKh9KcdVaBvz2iC9hhMm8g/l0Gsds1/iBjVNpMMP79bDHmKxCLFIQUQ/oYVLf6RHgrBQ6uv9KMMeqlrVZKCCeMs4AKZ3z0UDA//wx4uSl2jW2c=","layer_level":3},{"id":"f9fd3b2f-fb06-4402-9149-d9c838fffa5f","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Phase-Level Error Integration","description":"phase-error-integration","prompt":"Develop detailed content for how the Phase abstract class integrates error handling into the compilation pipeline. Explain its implementation of the ErrorIssuer interface, enabling every compilation phase to report and manage errors. Document the apply() method's error handling workflow that calls transform() to execute the phase logic and then checks for errors using hasError(). Describe the behavior when errors are detected: printing all accumulated errors to System.out and returning an empty Optional to halt the compilation pipeline. Illustrate how this creates a fail-fast but comprehensive error reporting system that continues processing to collect multiple errors before termination. Explain the role of Optional\u003cOutput\u003e in representing successful or failed phase execution. Provide examples of how specific phases (like type checking or code generation) would leverage this error integration pattern.","parent_id":"896ae6fe-867d-4388-9fcf-354c9e9462d3","order":2,"progress_status":"completed","dependent_files":"ep21/src/main/java/org/teachfx/antlr4/ep21/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:01:04.5589109+08:00","gmt_modified":"2025-09-16T15:35:45.4384769+08:00","raw_data":"WikiEncrypted:Sq+/p8Wa2iWvvgytzJ/V31OhKYjAH52zsyJ49mUL3HWSB3oYntmJNp7XNolAERdGC/82SZQa9o2+UiGeVFiQ/TyzRZ+tlU3A1aJYF81F3AU8dy1vepkGAY4HlLdNhZk3dbmfOH+/OJRS1xUbC7RpO7xOvnbavzaTpQbP+Tvl+2UesUX4Le9OkVmWNF9CvlY+FyBHESfhbedymra5/eZ9fzye4u1S4l5oPchHHhT+45XwUFHi7No1WfktFKA/mCDfqIT3TkzPQPXM9Y4HhqX2qlJ6FEE3JdpVBru37Gv0OHJ6QmhMa/TNg7ESHNuZVCF4p+rJByyIcLcnRMviVBpEVkBU2mUJOmIf9ERiXL8uJKXGs11zy7PBlm6AHwKx3XMnjJfYehbDUv6gd+qo0EG1GeS7nQo8zPUmIZe8vAggUJnQufgZsPMLPJsIlzSzEGTn3lS/Sx/igr+XqhKpYpNCvWEaaQ5T3eQ6ki4ZjNrf6aBFJKd2R+zrRSPaOst/azxC/35h3ct5BK0vNv63xdHclZ1phX/z8LOZkJFqQZ0cg7Gtw4DGOGPq/Le5AVw9P2KCDKWzXDGvuqDzKnRErYa4nUdJCCg7eJn/ZGV8bu43oCawQ/RD1doqINpSEwPiS84ttYcGV/gt2Dn+2eqXQW+YAvMjRidns+onwlgsRJGZE8RQFP0NCp7TIWG4eQYz2LK0xnGjd3d7fOwpklM7RVF++jmHfIHJTreGzk9sjj+R14Wgrtjhtm+qubFpsLLdTBvoVBG2K1567KdVUaV9Wt1B/lY+j0/a4aOlb4Btfz8Gv+dYOlgV4QRociPZq5K+5d9K/xoDd+PWcVnS8dbRNNwMYQj6cxMtNPbYtlWXq8ekJnQ1MXK9MwHU9SaYQ27zkANSxXHNrbvZ0OIOe/K7xsTigogR7qGpWBgAkFxibWBR8PsWEbSCPJZoow+CFOOF3NAiData3VADgAWGMzLujn36LVUxyJ/mEAi7WRFPY+ao1e2LCYRRMQbqR0SmuKz1fzXGYLQY1k6Mzgl512ZC75tix0CHQ6SYUVioR8xT//A0HhDmYsSgfddklwkU4qmteB6lvLnKBty1pdL8GsVAK/rrTC/nkHTqqn7WpOhaivcdvriyu95LPTa9b1N1UCoDh10eB2t6YOQSo2NyAX8Dr0I3T72CtAqERM6haA0fNWfbGNdZO+F77mnMVBZtiGR1GBJQTDcXFY1e6WOn1A0THS8dRXONxmbYFkdRPs7xZ2KPSyamg+mwaSfLw0n+65jglUnHsMl45DvL4kgRMG/WDs7TogdKRF+L01GTXS+W4LTshFREMSLSOgcF765WiNryECHMP7s+f/jT+JI89ytfJOjt5FLj7Y84p++oyAxt1UG0rFblmqcYZW0514fJpk0OyvLMXpl6YvjOJnvbf6tPdduh39W1aX6/2mvPeITiIkgJ1QyNEdE7sZb8yTmIaLQgOLHvU88bugICWJ6s/F8Sm9Cz8Oy604wBp+hOJyku7XmqEGFabEdEmXT3JD/hPmAq0B3J7b0bQLCQN7KvKmuS9BisT8Nv5nI8PXE1QwKcvdpj/CRbhnZh7epK8UnNyureYL6N9RnH6Xhy0AaEgY5Bv4wD8YurQeDcsdeLHznpZ675pYeBFCm/uLpAX0bQgb5sev7J","layer_level":3},{"id":"0a280837-5a3a-4748-babe-7bba3080c119","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Compiler Architecture","description":"compiler-architecture","prompt":"Create architectural documentation for the compiler framework. Describe the high-level design as a modular pipeline architecture with distinct compilation phases. Document the key components: lexer, parser, AST builder, symbol table, type checker, IR generator, CFG builder, optimizer, and code generator. Explain the data flow between these components and how they interact through well-defined interfaces. Illustrate the overall compilation pipeline with sequence diagrams. Detail the design patterns used (Visitor, Composite, Builder, Strategy) and their implementation in the codebase. Explain the phase-based execution model and how errors propagate through the pipeline. Include system context diagrams showing component boundaries and integration points. Address scalability considerations and extensibility mechanisms for adding new language features or optimization passes.","parent_id":"","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/docs/project-architecture.md,ep20/docs/module-interaction.md,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2884591+08:00","gmt_modified":"2025-09-16T14:04:10.5074309+08:00","raw_data":"WikiEncrypted:r1dbw1ciiG74lYTjPig5U0k1XYS9Abj7C7khUeZl2ERvCkLTu4+tioVH/tMDEqV1RkpvUDPc8ePgdgLNb8d2Sydxtp73XIsI6QcihHaMiCRQ7A47C0zlZHGhCPQI7YCbZhdUMuy0JYM9bqXCnVFLYMY/JY2xtPH4n0Tdor4JWiv8QqvXfrYrqgnkXm5g7Xazmr5BRN222m6z5P0/BWzaEXDN6Gv8zCznnf3K8ULHirCZL34kDizipUjJOWj0vDQvO8N5WQUzHDi60sn4H3vOkZM5EL2gSu4jRN5iqVlgwUwy3Jbj6i5mBhVZfoE04wDICZO/a2FetRP8Ge17yUIV+n13dVUlPXpDl6xJaOGfIsrTRJPsv/XO/DgrkxIYk45OL69KxzZA3m705vRZZ9dpPtESKop7SG/gcntnj99R1WJcJo7+HBCTHGBVgZ5kWfbCt47e8/OvfT8XRYxmYXUyaM1VO2qLWNFfQbYixMf/wu8USpKejiXKfBZrm2uqWEOzL32zb/7OEGNqN1LjXwYNJB0Kb1AihC77VMZq4+Jcb5gk/qJhWCZfPQALMly2FcY9Mo61viGzr1dpXSeZPFBZeSolqUErOaM3W4YkFCs04wqNsBm5vjl6n9ie9Txa26yOPvRgzvzAUFauFD7J7cNZxkLDagMAqDDMkzFnqVzP+B8kvs/6k5U/ksxTl7+QfBEWQ290uOBRA8NHPx9zIy1wJ663/ZsDJGkm/Bydk+i8k4UpGltnuvXqfTHWOdgQxmpx4GGdOsvnCOyy1l73YyvcP0UoU3/yLAJvZLCsd2rdquVPlFGOAa5sA5LjEx7gQ4sZHa9LOkxYWFpd/fnNg2oi3NHz+cXC27HrRK2cV695qSaYO2eVJWKe9XXAC6ICMvUT9w31LjN+lgT4ZtzhhIPA8IIa2s6lA2DBEwoV9E35cMGfjf6HO5/IRFE/On1VC8oRb92gvbFM6qjJTAAU5H7satrh2MQerj/8QNrgO8mGvPgIYSNzi907rmcMLru/ejEG984DiXhqWD+P973cKSjVoHdUxN+sOViJ5Pmn3lRFBk7ZdPXNPkghyt8mapObexLYE8G2a/nwoGpR/LYDQKCrEczGslZa5E9uNQ+OkpS30hxl0Whl/3JOhGcxHSUndGfnCbzqlycAZb+qiou9OgWLpfLgfmnocxZBTI4IcKA9IvQeH2Jdlkc3aDJutZDRDumglNXyVqyAu5EzO9ILY051gD5wlZ/ytsqCoNlTxcUHOE4WVF4BN0SfowkGvK7GN+ys877LnfLALdy4o8FsELEJ7nSzj14L/thnJfOalijJeYWwV3/6G/Lh0KzQe1fGLCTcMZ/lGzOgna/c1j/RO8PQfyaW/AsYAYCCASaqbck+xFJJMkK+VbzOlOZ3OJd/QPR73PDa7nFnTfJyLfrwQxbnWhtpeuAOQrdZm0pQSw1piAfG+F+zqJF1RKQIx2aeGkEUaSYJxxulrMMk5vch135FYbGowlXmpxNV9R4SCPFSWZUEnrYFFRXbx3N/PI2CbC5MG5t3pEuuB9P98Cd2EqYONprcxNKFHpc7mPvaTNkW/mg7VmMeVqe1GnWq5dOtMeinkCllzVtwxfdtB/yO6aGYRCpaBTR1X4+nEN2Z49M83T2rwd+vyTnpjqs+5fNj7mrM8pMTW/LX9kGiNgJlS9DGh/cfDSrK0TAIdzbtRECRxDTnzob/9fC1LcbdFMYPFXwz6tAdvJsRtkRFSlzFPic//kBsB3yZ70wSSy48uvAsm5OQIsg5QPQcrTVK/dDQ620kFeo48SZy2gnZ0f4e7c/Fj/VOzsEakeelSb5w2Akqqk+3/ua64Fc8IS8J+HnGrM11","layer_level":0},{"id":"73a9de86-3c93-47d4-84b6-073c2b7827aa","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Core Compiler Concepts","description":"core-concepts","prompt":"Create comprehensive content for this section focused on the fundamental compiler concepts implemented in the codebase. Thoroughly explain Abstract Syntax Trees (AST) using ASTNode.java as the base class, detailing how the composite pattern enables hierarchical representation of source code. Cover Intermediate Representation (IR) with IRNode.java, explaining three-address code generation and its role in optimization. Document symbol table management through Scope.java and TypeTable.java, describing hierarchical scoping, symbol resolution, and type checking mechanisms. Explain Control Flow Graphs (CFG) and their construction from IR. Detail the stack-based virtual machine architecture described in VM_Design.md, including instruction set, execution model, and memory organization. Provide visual representations of these data structures and their relationships, with code examples showing their creation and traversal.","parent_id":"028064f0-4617-43b8-98fa-7f5a4c031eb8","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/Scope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep18/VM_Design.md","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:06.4380485+08:00","gmt_modified":"2025-09-16T14:43:06.1086671+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"7f8be801-10c3-457d-8010-46cdc0518468","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Functions and Variables","description":"cymbol-functions-variables","prompt":"Develop detailed content for this sub-feature section focused on function and variable handling in the Cymbol language. Document function declaration syntax, parameter lists, return types, and call semantics as represented by FuncDeclNode and CallFuncNode. Explain variable declaration forms (global and local) through VarDeclNode and VarDeclStmtNode. Detail how symbols are created and managed in the symbol table via MethodSymbol and VariableSymbol. Describe scoping rules, name resolution, and lifetime considerations. Provide examples of function definitions with various parameter combinations and recursive calls. Explain how the compiler validates function signatures, checks argument counts, and handles return value types. Address the relationship between source-level declarations and their AST representations.","parent_id":"e2f12f88-f04c-46db-9f1a-c69036de314a","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/FuncDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/VarDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/VarDeclStmtNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/MethodSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/CallFuncNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:50.5893443+08:00","gmt_modified":"2025-09-16T14:43:43.4893625+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo09ZmWRKqzPbEVHBrg0yPPyoSx2D7iQwnzimfu56MEkCOGwNBUZYHSLiQLRcaE4WazJtlzeS2fvwSwKYD3GqqotJz2Dpkre5mKBT2ymwJ2WnR33QhDT/rXZvxMYMENY9w/5lK+DxDH/WTROxKWw+5zPwRL6XqCPdlHtuj1ZZc4Uztae+ZHOddd/k995zKFrLyxp270hteH9tkeJ2kIllEKC4MnKZ5M/TaJefhf/dKyTFqw8o9YE9QyBFbRCDtbqwzrDxkN/R4EvRrGH06nmX5uXrBiESaKRg5VpulLbHlelSxtoo1ivOh2MvRHpZaf1E4O8KCCswEYGiek7dBwXDQxyDX86FKD+dNbLzD48O2Gi2C4QjMk8XNvG4lF7pcQ019ueqj0+3QDLPwt+JUtfnG6tyUrBGePU3MJf4Hx2dXDdFs6XAm1nDs4hq/bQyE+9HkQmaKDbnpWHLEp40TGXxliJQDLiliKY0KXI8GVC7KJDQgNDYXtKNq/zb+/3TDXtiFAkZsEXD4Iwr72+Sfo24RuyCZMhQaeT8w5QMnS8fwNlM75lJioXK7WceFGHlypDAC9pGbZQ/NIa/Yf6v7AAXPz0pmgE672Krhi2MmtdyDSHybQZU1TjNtL1QGIJX5jRcD/aUmkBJRcoryMlHlN9YQ9/nBTMaYp/nZNS0o3JIiIhG78lnIdJOPp51q8WoN5GK9dKVk0svrjQJh2j+vFimpP0R0NCHzXOnyoR3QNH1WZMvmgb+XolSW1SgvNLeU77YXLBJZlGRh5DEziBOIK1Shqi2/IyJ4FpdeEC2fgvt8bOu+QYKMFCjK3KhegJWVVPDLxT11s6SMFhc3lwSR6TB0Yym2Mmf4iYodI4UZ+OJ9SKCQ/sSJZUA+VgOu4Qs9czsV05Sqkr0CGEzjHB5iKCEArUVyOEmpnHEVFFMn7UcT2IIN6XsKH68zNgpj+/mZFJFtZY4UvJq8dLEWCh9T4SQGW0nHyJrM13l4VjNTEWuyNIAC6nxEFvLg0LCGq4QIEOux8/BP0zwKHakOCnefo+WgoB0r71fwtVIdzmA0cIB6O3Vx5YVuKfegKiybCDQc2ZzICXMig1p+isiOGhG4PMM7HXsqr+Ka9sZUnH5Uv9dRe28vxsRxmI7LMmWGfpMNbTIbj5oA85TxS4xwXmhdyXKkcKzC0egzSKLUAIHxewzSNRahUGvmRUzxvRg0qym/xaIQpIC5LkqsxLbnMYn6+WfCRBFDJ47XROTW7ZzUNgs1v/AP4MP66ssnXDe9uTbVkin7twQPPqFR4XyU5GuMZDDnsxcwBpHQi9Bl+TvLW8HNK/pwP5rWu/lFvWtUhXmfu7l7o0niYdz7y7FqH6Gf/GbGKI5FB5KyryY2DrJ4ZNOAVD5sNSr7h5WeBkeBWu4j9Wb+zvGyRdpjBwsls6zobZZtQchPmSq3H3JmSlkbPYAdKM2+BOlKuA5DAv4TzMT7vvLM8mflMA11tVNEcsroeSdQ7KwosoQLQYU5zkYpC6XDgQeE7RnUte+VjjxqyrCyAMpH3fknfj91B+phWHeD2yTxWeMnUXJ9SsqvE1GXZfEhvVUNmg2fxdNMmHwtGFZBc+8jqbNgpo/pzdOd2GrvN7xb2yInd3M8mpHIRM5fLTjJmImtaiOPyDVs4iFxwI69gpOso9Iv7CFrd36MiV4QK+O8C5AJ95u/Yh+wZfiRRQWyEFqHdkR88ydmvPrf3xTkH5Bht+c9XIA6GR+WCAbhOu/h6TuXmEnBg223jptK2JMquU90kQV1l4yDoqIz1S8xNmZ+1zfgAQ1FnRPEpSlxemtYhwWDYkNgOR9xcdf6E96wdy+8NYytylE+M3ldiZN5nzwmM/bJv1/C9LaSwHMEgdly4y2B4hUmwxMNYQYliWyfkHnQ","layer_level":1},{"id":"7bd73bde-5f62-45a9-9813-c4a794967c75","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Symbol Table and Scope Management","description":"symbol-table-management","prompt":"Develop detailed content for the symbol table and scoping system. Explain the hierarchical scope structure implemented through Scope, GlobalScope, and LocalScope classes that enables proper name resolution in nested blocks and functions. Document the Symbol hierarchy including VariableSymbol and MethodSymbol that store identifier metadata such as type, location, and binding information. Describe how LocalDefine.java performs the first pass of semantic analysis by populating the symbol table during AST traversal. Illustrate with examples how variable and function declarations are registered and how name lookup works across different scopes. Discuss the implementation of scoping rules for Cymbol including shadowing, function parameters, and local variables. Address common issues like duplicate symbol detection and scope lifecycle management.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/Scope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/GlobalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/LocalScope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/MethodSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.1714496+08:00","gmt_modified":"2025-09-16T14:44:21.5212675+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO73lJB/Ndfq9mT8QIymPU9OTRlTxWZ62VVY8pGLt827IdXMrNY7XmGqk+YjvOzwa8Ivo0GWHJWmyYChjPQvs3NG4o0Wb+ROYK0Qol2HuRD+X7uoqDSIoTgp93UR5z16QXbb/w5JBFeKkhFf7rWhhgVmcX+UsbwEAeaQZnFl02Rp1QLsJt7ZAoNaa3gOIVxROIX5EsvxCFzjVniMPUyauuSAosl3l4Gve3VABT692MociTf33v17CChSl7FvtftISdXqbGDUVYWZH0kATbKAKZmVtev+cYU4npLdq+3nAxhmKOHJXkq+gjVP2uA/ie0CO2ZMEy8+wR7ZbUmWN42cE8fmxukoIIda+7mlG8TIzGzWSlwkkN/iLP/E+YNy/6WoFaRtZ66ObWHurI0V3lETiL8lknQmnZVNBr6HHlqFGiGYB8s5l0iBJprRz9wg3+elLmBHYiIWzcw41P1x7xc9xDP9bCk2stH1wghbpE9tsVuXKbK+vqMOVZSUwmN+icAb/Pcee5FZe8v2xc+oPfyoiUI003AzBGd4sr41M1Vs3aNNwZ8q6k1iYAJYcqH2aHiTsScFTilqTVDPH2/d6HOzZ8BSeGIv6u1O1n/VV0Z90uguaz42GzXj2PpTQYK8UCGXXRa6mi6HYpvH6zmO1Xn0sOuimgrsNvtUe0CW05iIlgipxMR3PWhcdWlXIFpU3HXAmihs3q2NRwGxRRJHAIhLkbJPHwXG0iBrq0ao8ooMKOJBOhlOCWw1q3B9h8lR2GvdMqfiSSCvRILu6Yr3DGBHtBGrwtmqi4bU0hlH7N68UHNuAYe0lVuTWq0Z9izo1UXtlZ2j2hy0HJzDOCFfTQYxJl+4QhZJY9sGo+rSJpcujHT5WBvsgEkQ8G+SmFx9DVEF6HIP/3Xlj+we8VoZ93Kd+p0PiyMMzCaUPyQLwtBuMtV80VsZm4kqUxtu+uhDWRoUoNvl3zM3klKKiWgXgJXUvLXNTa1C36mHoq8sxH6ncXgqJAkNc5OP3M90NRk5FPflYwXsz50lHdfTRTE+w6GD9UQX0683dzHUC1V/NLVqNcchvVbTu+A4unm3ZAe0jgjOwYJmf8qlBEbWGuLti/mfApdmLOhkVsy62jYCg2teoFDzDETCNOwY0khpKA9GYvk7lOd7pf8qKnvtuMCGJgRmP3aXw8FjC4g880t7HR04cl+pd2xYMO4ndi0cdxc+6cVXBc7QfHCbMx4p1rEHXRcH85chXypH8OldzwKqRo9nyr5jfDOFENjt4U/O0jGci5+L/oXttUwGtuLDUUjCErybXbUPKca9tN7D7j8806ztyVgUfsT5Uz/U4Cke5syNeUQ8S0zeoFiSyvlcGpfXBq9yytMBB2lHKQcUB/FVClU1Wd2n92g7Ffg2bJV30CchsMj08d7nLPmUMRM+BcHsU9hl+l5iWVVCLFoWA5/KgoUlYiy0xvN4wc9M8v+fcdfVxnH0eAZXAzqFC24LpB7uL+UcPq35H+bJgFrO/KuovcwbVX6F2AH+ubgR1DYzWpvNbVQGlIJ9+03qLNdafFk2gapcRqSorz3oFw/EDRWPCJFiAQwrXSjleXs+NqwkNDn7Kq1H03n/c6jWfTQFd38sfxMYGfK4E8vcMnV7XZCEKVCIpvwd2JNJq3hBeKvaLXRpGUMM23Whfbe09ZCCNUtHlmAswyZWZqPrdQLsj1ulqGzCMEl1L3IrTgK0YUMcDvofKKHjoqYD78wzHQkjTUgMweGipljuELvBETfOmXaQQykj4LYALLE8foOQ2quuK+m7nOOzt1hRfAA3cy2/dUJVCxV4FW6kXWFW4xxxpslIvaSj2oKdCTbIzUbUTp1CpprDgxzG76WE7eIWMv/fT3AVm6Xx1We3KFyqENTXcNYU/4zN1MyZGv01+kg7lrLbUDRuu5Exwmcf3cWExCzqbvWrt4PXURUMj4xgjkbhI8omdK7149Gk8D","layer_level":1},{"id":"82728814-0cad-45ac-b006-83d6de25945e","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Declaration Nodes","description":"ast-declarations","prompt":"Develop detailed content for declaration nodes in the AST. Explain how function, variable, struct, and typedef declarations are represented in the AST before symbol table population. Document the properties captured in each declaration node (parameters, return types, base types, member lists). Provide examples of how declarations like 'int func(int x) { ... }' and 'struct Point { int x; int y; }' are structured in the AST. Explain the relationship between AST declaration nodes and symbol table entries created during semantic analysis. Describe how forward declarations and recursive types are supported. Address how declaration order affects semantic analysis and code generation.","parent_id":"991e5381-362e-445e-8f05-5e5c818d750f","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/FuncDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/VarDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/StructDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/TypedefDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/StructMemberNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:18.0713314+08:00","gmt_modified":"2025-09-16T14:45:10.0726068+08:00","raw_data":"WikiEncrypted:wdQxH5JutJj+Xgqy8sscz7WemIBb7jgsZ8r+E6d/o+KxnVu+KYUuaJQfDAHjoO/D3BJjWj6zdwBgbPQiBbLc99+UAuqGDFA03HDgAGym5K3bP7emMYnh2ZasyrRgH7+3enAjDsYLQoKVPgUQ/EGkKrZ0VYOII5Bn3Ok7vTIajMMlDfrJaj1C3u1AfCpoC+rVfHV8uKbLqMqYZPJLzLIUfyWaOycJsG7v9TOt3Cl/GNtzjH1Ld2v6qN7bh8yg+PAvP92nWlkt1ggWUvj3dGFbsEOn22jKZtKT6GYC3tg19NmDxL5gNwB6XwAav/W0NAFOjqyQGlBoJJnkCXXO5H2kUtyz5Yya9Dcjf4G8T5iC2Xx84YskzfUOwTamXF2MWTR9JxLdKtqDi4Y1srg5ItnYEkW/1pp+IOve+WlBooi5hMUungZ6ZMjPafZHe27tBeXmuJR926Al6w0WWvmRuwOlZdiKch3dOHsqmvZqrooNhFOTzkE4enNUgGU+LHffzyrZtlJlg1PrAnCW97gjMn0m1G48aam0KEPy8oj+YlBL2sSHDWthDottWGTZ/RcGjbb3iXGdWYoi1Cl/c7zMC2sQHqluucBZAZ4YjU2fDdKkNfxv9PDJXoWtipogyoJo7x3FvCtFnD8ldqNGF9C8jGN6IAXfUWUMY08cVaunbZMoCamSkqYbSuvpZki2IotieSCIV5YXzB2DfzQrMk8oWiKFFnwc8Ifh21cSy6humE/hNqXZQTm1b6e014Vm48fgp957cx3oE8CSHidQ7L2nPDCmcg7GEOMnsr7XWiencHCsGtrBGPErPe+WxRPuHPVB3K/kdatZwpofr0BXvFc7TmJf85ZCcghPZDC0F58DDkNpIHpNMCR5X+kbienXg19+mx8MAH2WhuSoLOWInwoAOhSwO+89J9waElcicllWoevfp1JXmI9G1mralkEVv2sh/BnxHvC0zulh6th3lastGfk1Y4rAqPV6F6frU/IgkS2E5cxebfK//IPMWre0b9/+NEppUfjaOhTSfDwuZBrwpRO6TO0JgUKnhKcTJs5N6ahrrXyoTFBJuY7cYpDvfbcFenjf4s7PnN2OulNiOJAivU2pfpgXK0IMIwGC5v2w0u300c34mlNZAqVnaNTX2/Wh+RZRV24vywbxKERePWpD0ztvSQL0eoJGITnmY3s60iOSPwpWicl6tTt0Qmafv8ZJrbC0yvBBLTFkL7pF12GBmfmwH22lgS/u02YNnTgjg0D3LK0V1qbL1GHptcZ2+k1+185dqsVj61hWUACPeiSctoYoX652dBLMzqGcAaaJ6Fm4Ja30/38Y2kk1zIZ98d2XOUKjrmw88cHc/WSIZ6vsaNLEs2JRqvlBrBaLwgv1pnmmELKkjYjghKj0XJdzSXVqFDn1oZLfR4MXMTUJueesn8OlY5tICyV+ic8pjN9xUyjnlxHVDLUqgBOwGf9cuI3aPveKYyXU0q7+nFfF1R7uSNXTseNGLPQ/aN29f6CpWu/EISrPVP8x8UDnqLvDntQVNyJjWjVAsG6OvQyKFwTsi/qPib719Mex7CEw5Lh5V1VTtZornqmUEBHckce8OsCyHQivgiMcNg4qV2m39C6H9bH258eRy2LUop3tbXfMoBElT+5fXUGG6qWw8naF5JwYT5bDFeW74Y6abSJ9JrKxIMZDVUJs+oT4tMUt3hZBfCRDjgOf/M+DNTzlLQv2BQ4TQ7QZ","layer_level":1},{"id":"540f0827-3ba6-48cd-9ac6-94cb8fed67d4","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Integration with Type System","description":"type-system-integration","prompt":"Develop detailed content on how the symbol table integrates with the type system. Explain the role of Type.java as the base representation of types and how TypeTable.java maintains a registry of all known types. Document how BuiltInTypeSymbol handles primitive types (int, float, bool, void) and how StructType and ArrayType support composite types. Describe how symbols reference their types and how type checking leverages this information during semantic analysis. Provide examples of type resolution during variable declaration and function return types. Illustrate how typedefs are resolved and how struct members are bound to their respective StructSymbol. Include diagrams showing the relationship between symbols, scopes, and types.","parent_id":"07048b64-60ab-4f22-a6bc-52300115700d","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/BuiltInTypeSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/StructType.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/ArrayType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:43.5927751+08:00","gmt_modified":"2025-09-16T14:45:27.6822085+08:00","raw_data":"WikiEncrypted:vKr6dgGvp0y08i+7u+cDRDkoQKJxOHthVXesPKqpw9/88LX+Hlopo7bvb8xRlIAKkagIXkoLaNDktAi/EM+O0OYupB0GJNWtEBBqDYF/LhQFdtanY7L3AvuDnLDuLxIMYoVcd3HqP/l2xlKchbez9xvoPsriTAJC5JVnvykfDY/gM3KdTVtIagITzGPS0I29tSBDQJikxVHPUAc6y/iu69hd/KLVQRCMxNOprIC19auR2nAYQHOq5WkqPB3qho6U2S7PFGtSX92/r5aXsctoCM/MkDKmrJq5wiByzYB+45SmmbQ/PD8ni3rB5QpABoIZAwbwj31LXA20wozj+WXQ8ezbtOdc2sD3M11RFP+d6mbFArCstteDQbHuXkz4Drw/D6gzVsQ1oCA5v+ppzl3/XdUaWCT3sn4r4Lqc7R3kfZIMzhPqKqarGI7yceWDwPIzIR2zlz3Cq21TgQ/tdm8R6d7+a26tYiKjxQLq/xzd+KklN/zinbM3XDyhylgqMIEHSGxN/sU27+gpjD/FfbSt1+VfIupnItBD+yjNCUBTl2UvmyH9m+/++MUFbpSld25vVGqyiXAHoISg6Y2vZEnG3lVT6l8ZzHzMKobMgg2VG668gdffQfUoXwrMrDzjnDf246MfAzsYdj1vEasczh9tyBosSEMemmBxr2h01K5WcbuRJH7Yuju+Asu0cGxSiZ32Ipjr85gixlABPd4gQ7L4eBZQQZK3CsG15ImiA9rdYuCIMufU9DyYFZcyKDzHxUVKxSFDJMyXMZ13w6R+Jb3MpF9662eH552AtyFNWBqUp+n/E8jfWdljGr45EiIcTsCbYGQX6whKrs+gdt88XqIizHCxOuc164JDzSWe64pS9GxgKFW2FYlSjMmRycM57rp48MgOYh7Zd0Dz0syy5ULGzCLAGxV+VK8hJRZM0IErHFcKt/dtI9tHrefgSkCZkLOK7W8DtZYmzvouQHabr6hq0gVqktnFKBfuQ9ZvUn0SQn2u/WFCJUsucH/JvpeJyrFuUe1ZMiqA5pLFGcJfsm6TbrqPqFoB5tb6SQjSYhuBmz3m55TlzJtQIwOBp1EZyU6imoLQrdLzoUF371mW3+5oaHFcVJ7zWtMXj+p/fYvAiYVORvnXmVW5p4jSdwTiVSy8lyvPAHLG+aNGYZJpDnrKVcgmL6wMcuHPCqO7mtPruLE4TmZlO/AbJ+wffhnvkj4DjQOIZKixV3prdlSHq75Wu7FaOnLoQ/OWf/wPj++lQfH7v73zt9LCgM2VMikLbi+Lpg94joaOPUasfA91F31r2NeCJLZbOfVGw5cFeYj8j4h/pMJxVuUPKCIBU6KYUxn0xWk2UGT18NpRa3KyHO9HIaLmv/rtGwMvODd1fRPSlndo+rz18DoM0wswe5RMcjZfT4UWUgNX7Ne6BxpsnLMTIvXE88OeXowlF+BB5nuo6Q7IviVjH7Y/1oGTA92f0K7JwiyR35RRXNEo45IEILU3rvHwdGI0/+Wf+95CM1ppXHOoxv3ViUctIjSOhBRrIv18OGE+lg1luuQ6LmfI/36xS9V6MUCOv4BrCala9fsCFOmVtVBkpfGMMIpbKg7F30xIkhqWy13xigtCup32TQ4nZFW3ZKbXTZ4Al6dLmfNO5J0ee5DiCOWsSbj+h5mKOotgFNfYpd+rYzhE+zXMDx7ui1M/PbTQYgb0arnHHySwVClASPKs9XfTuJMEJ4c5BAqJx2R0yepTFp7rQpiXl6vQJOUzq2criISLgBQFxgVWX6M=","layer_level":1},{"id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"IR Statements and Control Flow Instructions","description":"ir-statements","prompt":"Develop detailed content for IR statements and control flow instructions. Explain the Stmt class hierarchy and its role in representing executable operations in the IR. Document assignment statements (Assign) and their use of source and destination operands. Describe control flow instructions including unconditional jumps (JMP), conditional jumps (CJMP), and labels (Label) for basic block boundaries. Explain function entry points through FuncEntryLabel and return instructions via ReturnVal. Detail how ExprStmt handles expression statements with side effects. Describe the JMPInstr utility class for jump instruction management. Provide examples of how high-level control structures (if, while) are translated into sequences of these IR statements. Include the role of these instructions in forming basic blocks for control flow analysis.","parent_id":"e2398669-3afe-4bd3-9bcc-aaba5dbfed6b","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Stmt.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Assign.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/JMP.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/CJMP.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Label.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/ExprStmt.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/ReturnVal.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/FuncEntryLabel.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/JMPInstr.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:04:39.1739451+08:00","gmt_modified":"2025-09-16T14:46:21.6938286+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"d8ddafdf-2a14-4521-966b-d144044caa0a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Flow Analysis Framework","description":"control-flow-analysis-framework","prompt":"Develop detailed content for the ControlFlowAnalysis.java framework that provides infrastructure for data flow analyses on the CFG. Explain the iterative algorithm framework for solving data flow problems using meet operations and transfer functions. Document support for both forward and backward analyses with appropriate worklist algorithms. Describe how the framework is used by specific analyses like liveness and reaching definitions. Provide examples of implementing custom analyses using this framework. Explain convergence criteria and complexity considerations. Include configuration options for analysis precision and performance trade-offs. Address how analysis results are stored and accessed by optimization passes.","parent_id":"b3926619-907e-47b9-8b5f-2fd3a6d8325e","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:08.0553801+08:00","gmt_modified":"2025-09-16T14:46:57.759167+08:00","raw_data":"WikiEncrypted:QIBzkuXysBzMSQmkzf4c667oRiBctAVDEIrItVYiCSEdj+N+lkM+s7VAmUlD8gVb3r8sln0TneMxTwT/wtEjxtBHVhietWQfmTyBqa+5n9HCBNc8PxqBqmDXWRTKfne47ZWA2WP/PtUfozekt9UaSVBOjtUYwLMmMO0FRcgoguR0k2BZZ0nU/o3H5nnCdZpgLfwb/rnzXk6laTo0fXWJ2edEplPvGL0eYs5KGQLseyvrKXHK8MQZMVuxZcy07+WE0Gun2aBWXRHHPV3NZAta5KQBgAyc0A9Vkpk1vgNMxCX6MYWD0inyytpdsoTQZM7kgtOsLfQkNFKoqaM7Xbc9YcX0lct63EjPSxwwpDrIMY/nQmkg5mhPcaiTC8Deu17VrjaVb22X892X1EqEfJK0M+dUczWpJKLWHgdjkVRkN+WiYFfPC2DYTjCYAo/b6s+QaNenAQ8PeQyYzI/iZTtBPn4JnKlZKU0bhBb2dNqEF+6bmYn5Wt6rr/gkRn5wUSuBXVRMfwk2cptCEmfTiIgFDGOngtnzuvgfYpLd61IZ6R+hQX3MGeqB+4XtweZLkCHbGzuKPN2qJzyZ0q4XS9+/+yM+ose8/XpmnJ8KsHJ48LAmjvGs1Zl2nZ4q8Wvy5XAbCGXrGgqTqgoG6ErSr+iuekwHVy4vqahxtDy7GmE48YVTcUFLCuBTXr8BhpiAXlEiG7mHLJiKnmLBVwKFnq3y7hFhD78ZRoSPyIHONsl3n0RQXDH9oeN7Jhp9FEuhaynG9PoZDPZyR6EjNUSloJXGKRpelsmU4U3Io3btja0KPrf+u6Wg8IFsEpKU2EUiU5h/154TBTcebXWsjWW0g49ENbpwAvq8HB2EP6XxdW16VO6mXJ9pSjy5xKmXr+OCRd1iAllLIvR4msSRkvHd+deW9jgnngABP2nMPJpaqm8XCjVqv4RuQTsPQXziIob6YQopkeeyjg85z8QyXJCO1Xcvjwj6UJSd9oGbuFa5hwprSqiL2IAsTQrU0yTLgD3sh876WZUZtyQ0atdbRpssKgUDKBOjGuQjJCO5cR0CBhZUSuEr+YVHTEtmOKi5LJM2LKWF0ZpLaYp7oW02W19y2UCCT6RjOHgRszJ5HnGAO7sK2kcTvLLVU/xG1yrVWUzK7KbIEUP4/ZvwdAk0uwE6qCUkkOzf6/AfxxmYt4emOhYuQqfAQpqmniOJDp6qKqFg+t8OJ9UlJVaF5YppFbn4wKskP/Q0RO8olwkukMMns7d/eMaalsSNhcmokPfGHzqnYQ7LNnex1BFBs2LBaIXG+O6iu29PsJWUaVY4CE7JqXhx/VUtiq1X1Cqb/kBQyIGGfkau6zFuyXGwNXZUWSUldLqqbK4e3G3ym6BhTWmo1m4XwuE/6CNZKgHiMnAXJ0COjjmnnpg/yrV8j1xfgAM5UGAAZw==","layer_level":1},{"id":"f95b2f93-dfbc-4544-8d56-d97724f14adf","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Jump Optimization","description":"jump-optimization","prompt":"Develop detailed content for jump optimization techniques implemented in the compiler. Explain how redundant jumps are identified and eliminated through ControlFlowAnalysis. Document the transformation of conditional jump sequences into more efficient forms. Provide examples of jump threading and fall-through optimization. Describe how the optimizer handles jump-to-jump patterns and unreachable code removal. Include the impact of jump optimization on code size and execution speed. Explain the relationship between jump optimization and other passes like liveness analysis. Address potential correctness issues when optimizing complex control flow and describe validation mechanisms. Show before-and-after IR examples demonstrating the effectiveness of jump optimization.","parent_id":"80dffe0f-be9c-4f29-8527-ad9414ed7db8","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/JMP.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/CJMP.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:33.6756019+08:00","gmt_modified":"2025-09-16T14:47:30.8658885+08:00","raw_data":"WikiEncrypted:aJ5eBvpghNuWA8HwKeAUXdx+Phmmc9+J8FL3XxwbWFAtTBTO5YhY9IEec9V7tYBtFLBD++uZEdOdvI2HF1ozccZQXeU5p97ave2/BymWiNbHMD/5kyrO2HpJ4ifvYAROjIl3nL2+Zs+sjAfBtQTkn5z31EEvfbgPyNlo2tip0GJxc4FqWOuuMWHPLiJhlj8F8chl6h2kH/SBOpjg88GJ0Qq5xE9/SZGvfEP7Cz3PBSfPI+jl0c53GVszuDR5E3TQ+lLlDw+YhJamac5HDrUewf3+oKH3M16tcLb3GWQur9jOEpo7a8eexkXq8uXoN//Brxuw0MMhioM1hwt6eo5fag6r8ouUc7X8uKd/Bwqx4Xiz0pYhxVVpflDZP7GHplu9BVucDwq+BdGSS+NATurBSWE0bmNKRgQBViu/RMM5IHPFmiwyJF9S5K26eIZ/SUy96FrE+c1Ouk1aS956tR+fj+opXjtDaG+7Gk9bx4nWCZZtoGiVOoUEmZF6YJydo7nvJ38IfLh+54ohv1jYug/iybhtmnj+UVdE9T4X23DnqcbdnFzNaOM7R61JlYvqgCuBaIGwJXWjlTvHGCgp9DLGZkvCTK5Td0l6g8FKVnvA+EeiMQ6Qhp3Rl5fVbjjFX7gy7Y8L5XVV+zPRR5O5Vjt/Dmsp8dflpfyDKWzDd4Ea9vxWO+36foV6MXMdZyuxBX93rW7Ygajl+LM0iLr1RemsvlbPFw/5eaZPyMHNSlQMY4egtka0p1cWpaIXbSPRBpnJ/ls7aga1HquUzOsn2LjK1iJr7/j/i0/1NgzjHt0cQvdnqi6rXF+D4UTmtgK/o43K3nmBmLz1TVefSoE0DWRUAmVW4hRe5DmKKthdzWaBk2lHJrh70C6gw2cPrB/TfWk+AR7hiuC+6UTv1x9yh9qr7x6AGcxbnv+C+xcQQV3ZPgst3m4w+kx66N984AtsBFCl1UqWd1Ismq1qdjbNWDe+VVwTccis5Ranf2vnZJEIOrO8dXBcobroa8eyjvUe999cEW3zIkBT81hToTlmuq3yOg52NCkyHftxZ4WEodTMyGD2k3AONEjhvB1A6gibXwsmr/3u3HEF1CKqEv0KxpGXg2xMwVkFviNNLzWQT09r7nYJwihlLi/sWs79Ow8O9OqWO4jxMlhiBMugdZ5BFORAHSkuNLc5SXF2fPs7AdMod6LaixNzisDTQMHICAH/8nGxmFEk2mRvbehfcIMWvnB/oO7kLufy6vGX72FUow652mzuvfHJGHVH/SZdZ1R2ZS57NuObwnz0WnruOAvXKpa5Q+Zakf5jStTowBbfKw8mM9O3Nm6FU+1Y6Sd3I7rG5F/NJfNX3wSKI4fZY+L9P7aAn9nXz9T1BETg8X6nHcB6V57NEet27O2dRxP5ZkuX7qtzHYm/c2gVYw7egXx4uBNugncddaMId8xaSyD/ZysFsWmAOkusJ/4fJB7lVruQQOia9UjI3rM8NpmegzkWiBTDG+gsqEU5tF9K/VoB41vkYH4=","layer_level":1},{"id":"76fe6999-e264-4aa0-8faf-ab45385c88ee","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Memory Model","description":"memory-model","prompt":"Create comprehensive documentation for the virtual machine's memory organization. Explain the separation between stack, heap, and static memory regions. Detail how StructSpace.java manages structured data and objects, while MemorySpace.java handles general memory operations. Describe the role of FunctionSpace in storing compiled code and metadata. Document variable storage strategies for global versus local variables. Include memory layout diagrams showing allocation patterns for different data types. Address memory access patterns, bounds checking, and garbage collection considerations in the current implementation.","parent_id":"786cad12-f31d-426e-9be4-322905970e5c","order":3,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/StructSpace.java,ep18/src/main/java/org/teachfx/antlr4/ep18/misc/MemorySpace.java,ep18/src/main/java/org/teachfx/antlr4/ep18/misc/FunctionSpace.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:20.8870292+08:00","gmt_modified":"2025-09-16T14:48:14.2888577+08:00","raw_data":"WikiEncrypted:cK4SBLsR9PqiZ6AM5RV/RLwNOHJoueK8Z7rOpgsB52WT5IuhU1ZoC7OEr55Q4IemGriQH7zmiXbS/5eNwktyw4mOFTUApdBFeeIHGlJ+fvo+QMnV0+KHMr2gWS4DF2X/LBeITTEADtHiXY6LmfqSLwL+Q07hVJdv8xrys4tYnbJqOxHsXficaWhls5AEo/psqeZT0oicLZBitu0ZleGYjBYJrBoa87fWDWp6tHq2xLg0zTGvr+orZZKuljiuvfzQnpMdAZuHmotB+iv6o+emlGD5xvO7TrUQC9xtBC9P4yeJqS+iCx4LVnlUPO/u+dKsy8PfUrY7gBo7aVLRE/VSvpabV36iQTtCqvp8DeQsD57yeyQb4LnH4uNDyG8G/41HLtof++fTGHcla1E8dtJxHR/iUBh3zBpoaBOis7pas/1aevWpdWuOMkcZQVlv9/I22ajBNbnLZxs2IzPmiiYrBsVvtB2QQY1AdQFVOIhKosbGYh780jH2DLzubDb+0kRDTNvDqUblUklggwVeSKZNVItbWV5OiSVXVKRZLH4arzMtI8pC39SvGLJigRYsmPeJMD/y3IAu4GTQYrJ1eHqD+m85LMlW7cryKgKaeo0Mhiz3Ez+vocW3zAFizjSubzb770EmYusif+KUxPJq/8f77CVYqdPX3JooZKCRqJ+F4T2zhjdKy32cw0vw6GfcQeslQycH3kWmkkECaLk0DXyjt+8E5sQsnp+1fc+88lyzdht4g4trDIcsmu5w2hE37OB+nKNdTqmpYDiXMpzfGO2P4COJY2bzNw0lUA0+BqQOgahrBWxySbU242VQGe7Wi2CApNEXn3AN0q97aeTv88skqG/vO5wFLR49u0aLGe3IKUaUdy8cMWLHDvyMcgYVWzsgvK3sA9OrlRgSEVhK7RzQsr+Qkkj0pwojRSdN/RA305MCkKf9+QW1CjwhkjggeJ6AEPigwV9n1tR4UMs6m8g6iqByotxT/JoVtdoYydArEkWMVzYQGMc01aTwCmdxTFDKVrgtpcgMUfK66qjj15qvvTVruyLueWeVgjoLVp+RMB0EivrLQm21WQsNBPzqKA6adcE8BHh7Qw0pTFbp8plM8bdWcFedNRCo1+RbiOQ/R2DYumpN6bgzXwQ2NWFAg3pfpLXURdD5aI0OGLHwNb8gySMGOPtcshljNm1r5eCOieST7pcz+iYmxTjiAPnDsJrnZyD49nH2kq3SB14O/FhID9p+CoGqDmmenQfcZB9b8UHGxjjEsNPYzBOAR7yC0kyufcIAhy7g5zE4LxGcNGy7S9Xr/gQFBsnLhuszox1Hpco=","layer_level":1},{"id":"60878b24-bdbf-4f16-a44a-443f67f98071","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Test Organization and Coverage","description":"test-organization-and-coverage","prompt":"Develop detailed content on test organization principles and coverage measurement. Explain the directory structure mirroring main components (ast, ir, pass, symtab) and how this enables maintainable test navigation. Document the use of Maven (via pom.xml) for test execution and integration with coverage tools like JaCoCo. Describe how test categories (unit, integration, end-to-end) are structured and executed selectively. Provide insights into achieving high test coverage across critical paths in the compiler. Include best practices for naming conventions, test data management, and documentation of test assumptions. Discuss strategies for maintaining coverage as new features are added in EP21 and beyond.","parent_id":"d2c2667c-8d88-4098-b1c1-29a9a9a3bed9","order":3,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20,ep19/src/test/java/org/teachfx/antlr4/ep19,pom.xml","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:46.2587345+08:00","gmt_modified":"2025-09-16T14:48:36.5674027+08:00","raw_data":"WikiEncrypted:CLmYRxdsKx48GXAr6B4njBXeYS2J+o9y5+8ac0T/rYKmHJZQsuLh6gnIMcq149jsLhDW19h0oYVzeUX9fr/fq6GBk8H0kvzJNsdv3HPKwejyk7/JiOd4UJU1vP1OseofdpZNIgBuh95PGG/PmabudVvVbI7yalMalDHhtonuXinrr2eYMU58cCI48cKwK7hgOfli+dZDI7/mk93IyJw79A9ZVSVqoAi1ECNb6M1b8SMFtk0pBAF0C5rfAYnIl0S8nj0VKdrxiqyinvqUw5nV+FrFOb22pbxZJfpLq5AOdS9yt/XJ7GBAz+xbZZlyexwCpFBsuwred5ZZZtHFPyp9WU9sOqk5z0pw0xacT6I72vB8eKi3OnTMC9MoPZcH+vfOHyGyaufDfqkCaE0fo3v53cL7Osm2Ffoxq7O/dDwuGRUyL8M2d1hklF6wLfxx1CoQOI6lmt2gHLEV4eTQwf2e9DQBAeqAUuql+HsK9wLESmWM2SnhA1xlWYgLPUGsDqdo9nB9+G4CCHguQRFTqdwmD0dwifeLRrAARzgtpyBuTOBb9df4h7SoFwmJNrmw5StnFq0SqYH5NWO8gOCExtUWZsf0EuibX9Qe0PLam27Flb2MrQcO850CMpSa6HOIm2vHSsrYzlQYCvWM6brQa3W7FuPAAbdapPOk2qmGsNBi1PdkQ9cB2JebM5hYchtv/UX0pKuHlxeFW49R6sWNamQmXNCO+EzTg1P8ZRXT5Glq9eEGGBIEkbNzmBwfDVpycRqpYCpZsacMW/ksuGUf0vthmXpeAywoAFDzbVThVYQfw66M9TzEsaOXh6iTdJ2uwnPHtUcS92U/9/TpQZhaixtnx1Kn7j6pvnqoEuDNYvXaLD9v56z581LYfog2iFrkV0JIbISzrPwcriO5qmhs/oju5p4FmIHhW7moaPYnAbcU+fTqJ/P8E/O423k6eyytbGlwvqgcIjj3lPF8BjZtY6fOfAB6ahquaGAt1leoFn8TnMKFPFYo5LIELYRJQBPDOjOjHTE4rhFSGwy3AZ1hiybKa58KdHvADA05/EsCVOE5Z7mw9OK2YzUrx8d45zgGS1wF95y7rUwV1tF8+72m7O4xlUzWoK9wf8kqAmZmuh0+eiB4eDYljjA1NFc5M3P5Dfg/+7r7Fr5d+U3aZvcZvvO/uTyOvIXbLXzp2h9bIdp2LE/HoNtfwXKKgP49BQT5coP0PSJFQW0HDZWmEAizbbuQBTBw165/DbqI6y4wkDIfstAR60CdmmtWdzDrSDT+mlUhpTiej38WAZ+qECBw9RA/0CbgGbdPeIfnlKNgEHgJhG2daXAb6Jdr6kAAnBLRr7pzEbWab9c4ZWuOc3fWIsimFMK8Tu/VoyoT9lEN8GAByPQweXtvBgbvcVtKNze0hPLcZgyv16SY9M0crD0OxQJCZQ==","layer_level":1},{"id":"2f083cf5-ec04-42ef-b95a-90bed7758568","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Modular Compiler Pipeline","description":"modular-pipeline","prompt":"Develop detailed content for the modular compiler pipeline architecture. Explain how CompilerPipeline enables configurable compilation workflows and its evolution from earlier implementations. Document the Phase and Task abstractions that allow for flexible pipeline configuration. Describe how different compilation stages are orchestrated and how data flows between them. Provide examples of custom pipeline configurations and their use cases. Explain the benefits of modular design for extensibility and testing. Address the challenges of maintaining state consistency across pipeline stages. Include guidance on extending the pipeline with custom phases and integrating new compilation passes. Discuss performance implications of pipeline overhead and optimization opportunities.","parent_id":"1b2548b7-74c2-4e17-b45f-ed8bb24967fb","order":3,"progress_status":"completed","dependent_files":"ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/CompilerPipeline.java,ep21/src/main/java/org/teachfx/antlr4/ep21/driver/Phase.java,ep21/src/main/java/org/teachfx/antlr4/ep21/driver/Task.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:18.119721+08:00","gmt_modified":"2025-09-16T14:49:31.1883358+08:00","raw_data":"WikiEncrypted:R6haB1SeBlY44pGM1lXrC2cXibJR8is/Xg3IhfZ2WSV1FPVklSJWTUZdDMqopYqu5mwgeX+ieZLWQXB052kMwINg/uJA1+yhP8RsMXV8dC1eT1bnJS2TpZlTBXSm3ZdtByOoJIkrqBTCqbJ/GoY/w/zhC03CWSkPVsS2+cfDyU5ls7Vl7JLad4lzM0hvbxtZG+OacSmmkWdW6G9rRThOB541Fpx3xiE4E2fDdQpH8iRtkuPexnM31b5iY5MLrN/5EimNQhfttLYMtCCIzdWKK7HttRPlD2JsXtRJz5z6np/uRqkSLvzKVhF9r1d6VbTuAruBe3lCfDDmdp9law1L9c7Xh0bpOGg3SkNpVdIxOuLY6LZtSoSX9ZmhdZ/5ApqyGGEswEFR5N3n6TVl9Wki5APCh894qbM6ZCCELkMLACLcNr/fu7bCmADxurP9ZdbDHK0IdvOzrUJnBitfijI21GXnEVeYIlLQ3Me2gf9nEvBtFsfPHohWnulmZnH/Xldg2+3Mb8VIupgjeAKuQRSxKWgqG4nL25AQB7qIZlZFXmNaUT1K+a6FSbt+VZW+Jz/2+FpdGjCS2fbaRQsDM7mx+lPML43KaBegOTHPefGBd7Ego6dhf7xEq8iOy6iAjS7J77U/mwxLaIcAbl+tWZ0LTSsKGO7v1L/BQCqyBSVWqC/6YDSy0DFpVxxkYnSHCcZ1UGECKlDX97yy0X3CTtDh66CF1bCpOmH3DjVcAOwmNlKcYrPD2Gdu2IpBvggED/JHI8bY3khXK4wW3nNMdhCalMwNDhTobfIJpgbDwaSyPIdLGHEnROga5W+qZfB1K3d63aNZ+jrFoNkgh4Lr5jwTdlP46BM52rpz5no+SXQGKI+ZBWq8Nq5so+mFas0ZIdoIJJtmBnroaIQZH50KgseG5/sAsuVzdIbfZpm+a5aSauc7IHXXa9o2BwAUnfuN0679cl3f5Igld6tlT4AqprdGGbTNT7sbGrXT8Hbz8Xpv7KKfshETabxTmYU1odDPD+fPYVnnKSD1VJMb1U67XEs1N461mbIQgaLaEsuzI4TJn8Yqo9suTY6+D9jrg+21qsx47u/cYsMl6z/fyNma4TRt+UU1WZtbUbVSnCRDRA8/Xt2u0bP1XJGGS/TJl43G/H7xMJ8gQCurfjycm9wFqGHqSzn3RAV0IsUBwG0flIfD0tDX+lptxSakS3K/vhtvkh39/xIKhg3JcKms3P5evchkU6EzYiWP10vkoSOCUnEiya2N5mN+ABtZjr5j2O1OCgIeNqXHUsN+pQPFxaRN2QFs4c3USEitXxxfZkWxRIm3Z/UxXkEpK7i8Tt4576rAQM83DzWA+OfOSAxlrHDGOdp5bEDKp/mJC2rluzSFdwbOwC+8o8whNEzKrW6gjCtIlPSIVGuija+xA9JcdJT32mLbP+DpR/OBkEDxbk82bU/F0iPkgAD1XEaDOFLBp3QTGdBk3BWH6hEcm06hVWG/+R/nYyo53w0qXgs7F33zL0AafaYcclcymR/mViL8ze6JUhXtnsl4vbBS9yWdM1PB8OySEG4sPGTT0F2m6MrrTn4vFnzqsolwpDgW0lYqdfbZIfWRflDrv2D8fQFc1hf7L52TB4+Y7I7oFFQYTndgUjHwfZ8=","layer_level":1},{"id":"60aa6685-af80-488f-b869-51f27a4b8ba6","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Type Checking API","description":"type-checking-api","prompt":"Develop comprehensive API documentation for the type checking system, centered on the TypeChecker class. Document the API for type inference, type compatibility checking, and operator type resolution. Explain how the type checker validates expressions, function calls, and assignments against the symbol table information. Detail the type hierarchy and how different types (built-in, array, struct) are represented and checked. Provide examples of how to use the type checking API programmatically and how to handle type errors. Include information on type coercion rules and how they are implemented in the API.","parent_id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/OperatorType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:50.9602578+08:00","gmt_modified":"2025-09-16T14:49:54.6009492+08:00","raw_data":"WikiEncrypted:k6ifZ4FfRXeNXjA+c31imBBs7kSnbQZgOM6KUS1vIzvWcqO1ePglWjbI76fq5c5VKoyy/X+jT46iZkMOYDdNLm7wLkI8zw6sh/C9+L4mGODeQAkNpeVLVkOdsrt9kxxVibxGg+pHZQzSSA6q2NU+DS2egd2dX6/sIxKplsMNb5/whXtarUmThhvu2fidPsA5vHzBsYQ3cyDw8mxAjPtF7j+vq8py8vsSsZoHeH5ZOxsnlqbVxj7vVQ+wS6fMrFcf0h/3OGbHN2KIph+oxNArTHsGAILI8zacksp9RNbx2tUq9Ed+ZiDWb152ZZUkQgxiIVDW+EgxZu5kD8oCPqAmYdxO1EsozWUB8F65IznFMF+Gst18pzj2uwGu2vP44jmZyFM3uCG5BSAvmtOwK3BHWdnFObvl0uWKwL9eiVV/krNfVXWiaR3bfVzFpvYfpkJlYA9vVBK8W+SWtzzrm8gxyW5SVJN0md7s+es5cEYahVA/bp9Zve2MUW+LEXXthNPEcY3TEwtIOfakJaxAx/B4MWNIijYQKtSa8BeKwEuWNRwBk5Z1IPcP23rj5Gr80AqES2+l/pRxXzkYaBtGhLnp+cJ7kI81PK9J7AUCNttB06Ms7E0OodXgPz8wJuq9e3OVpHCg9lCulCgO6NIV3WvXf0hkM1+8R3untU93W+1fwWuLJS/MqW/q+Bqv27ErCjXYMx5yhAGRIcwyjZXW+ykNtOEeAaJqqGlTCKlGP9YEX6bqVWGw2yBBjGp3lV1E62vxMqLWwv5myYzTFnDN1ES/CaQjtUn6tRNfG9YV42qyw14abOF/yhKIIrmhvCQkos1feOyUZyEDnGHx8U5y5RhsPpcFqEfuwBe9lpbITalFEPB97cg0QsTfU42m++u3LKM5V5vyVEkdkQNwH2F/FWMN5Njb4tRPfeG1BRL7c3neqwunAwKTYxD69P37oGIOxje5vsxkhNIS7BzUJK/e8aCYmKxjAEn1fR0MXFmBVvjxZAtxHFAkWAT2bXEG84MZB2BNmNfy8TdHDQJKaCy4sNXjAOoO/bvHeA94sh0SuZqLGLDSNKFY0VPzJ11OjhlwVUVgnNXEf+ox0zIKQ0G+QZ4fPrtgHMYuVQVA19JjDLuBUelLyRpJSnWhOPuI+QSNfju217pw5T7oFD+rrQu0mpOq9qD2PohE3Is5WQ1IP5EEBLVZXktacCegabBB1W2LsIJ2TP4XtYiUozGp/iYjHAFvCbbHbijrSFwyD2gkVkXUAVhqa/jrIVVpWlnTGURdCOfA6RNV6Or2a972NNt+23w06lKLsZkz9RkLawhsEhdbxbM=","layer_level":1},{"id":"54709b3e-2aa8-4c1e-8881-65f0d6134efe","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Code Generation and Virtual Machine","description":"code-generation","prompt":"Create comprehensive content for code generation and VM execution in ep18-ep21. Explain how ep18 introduces the stack-based VM architecture with ByteCodeAssembler and VMInterpreter, ep20 implements three-address code generation through CymbolAssembler, and ep21 enhances the code generator with advanced optimization capabilities. Use ByteCodeAssembler.java and CymbolAssembler.java to illustrate instruction selection and emission patterns. Document the VM's instruction set, stack operations, and execution model. Include examples of translating AST nodes to bytecode, handling function calls, and managing stack frames. Address performance considerations in code generation and debugging techniques for generated code.","parent_id":"f44e27c1-6dd9-4ae0-b131-7a0381989c6d","order":3,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/ByteCodeAssembler.java,ep18/src/main/java/org/teachfx/antlr4/ep18/VMInterpreter.java,ep18/VM_Design.md,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/codegen/CymbolAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:08:27.4512088+08:00","gmt_modified":"2025-09-16T15:15:54.20069+08:00","raw_data":"WikiEncrypted:l0OSRLb3jX0WYjxj0Qo/H7RHhqitOnOdiuDaGCmhl1sm8euWj6yfrmcd9QwblMGbs4srrBe3m7sLB3mulmW9U2mdvQScDDK9Lphld5LrqKOy9DCKrvOfZhMemHOVoqhJywDgf2IBrEbyxcJttYJo4hZfaSXZ5iwHUuYLU122jUddJBuQMcgucMWWc3M9BdlM5qGQNfWuqPpq/fNTTzN1YEqV2XmhMRgpUjqiY63PTiqTtL+fAomSsFEUeIM4OhvwTGPpCdOycaZeFeoA+WO3AGmDv/HW0ezQta/mWti+A2fHfm/Wgc1rULc+rZqvZTTbmjAMax7LIMBuKURShnSWXhQT4Vtfbok0y9qQLGK6E6m3HmdtbDM1O4+5DfYwdc6ROlH0NZt3wMDreP9eHbv+m9lxHHzzNwONSxzPFYR0Lm4eS3MfhJACe5XW4IQKINZ1LUQIz+r4XHdB/ka2xXONIbFuQ7jcwVnk4DqaTaFPPm5HZoXrlHtBbKBBm3qjEgjHckTNXcvRYuQqz++6rwN/jMnWyB+xDbw/d3wTf+QJeOtPJ1ZKNxucXwpd3TZs3oBhkg8vbvnPPjnO3pgueKNaot5qeXJ9LLZaTSQLIOJ5igyT/dIsxtnqKkJ15Aw5DQ/T3S2JmyTuDyC4cBJN+JaoCXYp0NxZyRsk++B++Ta3heODr0RVrdXWP/b50VUim64xTp54u8OCWCxyBMdOFDmPbMxlT7WYXciLDN7SjvlKElDlOCxLDlYZVk1hXiPjh9Zo7i8fvQs1DWZJkFIS0xlmyzi+MWAAWAzS5wOUSKvajiRHanivxdHpeXz4N/Vdh6MYFx9OAb04Sm9lZxByKHoFizvGBhHhZD+QsL3hsGeqYW9C6EaRfCBp4HCZ216iXklxvWSgootUaw4umCyQl7EAbBjtGtv+CCNXSiQjFaOxMDvcnAjtr7DMa970mEv+caD2AaQrCoxm9FeiyU6cHvSifyHjrvGEoSgnfsl/RTnZIvvjXTnp/pdZfPJO4AZpSF7dQLkruSP+yFtrJUns1TZ2P73vZa8/rLmnsDwqzRO927utbfdALsBDPdMlNuX4onM+FMVlJbLYSE2uUIU2Q5h9j2Iu7knZUeUssptHjTDByl3i37oKIBkzu3O3xvk5Uoo5G1C+Lm7W3C+K0SY0P5vt7HYlJkuMwCFC/ThlJ6YTWaSpm7rkgnzzslfwOAJdXSLva70LK+1QwutkLP0Ln5es2xuQrmD1yIAnWe2o0sy5medLZVGrKpMQ64Qgu+c5YJPhtlxY+veDhfDVeMWZc4799Oo5REZSYNAjkIOf3RG65eug7KXIjkHe8azoqASg9uLljT3U3kcySkFEdxjxFZ2O0MtmIF/QJnnnx9jzSlhlG5tI8sf8ls2UCOjrK8/lOkjoTcCTAMmUR7PQplh1lFSNjKJedjD68nj0q5Qe3jq/+U6ID8FVVSPSR+fLAyYV7epruKAtd5l6NE13lV37TvQItdDVIiwpL2sXtFW4uv+R3z4/ghnuq/UxlaRtYdZ4see/BzWvcMd8QM5UCf6Y6tCfq+9mJhddJxAGzw5cpvJYdls999KXV+Kl8ULwdHqikWzYFQcTpR9ftmktNhGqdcX6nGrya7DcNerQLhT3ODFvKfCHDSoDTvsd8uutaeZ25SpfJNul70jDG1KCvZqfEO8OOAAGQMgRTWCPt5v+cO7ZyV6To6Q1fl0/TgdLQhRjrIj7","layer_level":2},{"id":"ec0ea5cb-45cd-45b0-917a-e0a7534caf3e","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Functions and Variables","description":"cymbol-functions-variables","prompt":"Develop detailed content for function and variable handling in Cymbol. Explain function declaration syntax, parameter passing, return values, and scoping rules. Document variable declaration and initialization, including local and global variables. Describe how MethodSymbol and VariableSymbol classes represent these entities in the symbol table, and how LocalScope manages visibility and lifetime. Provide examples of function definitions with multiple parameters and recursive calls. Illustrate how name resolution works across different scopes and how shadowing is handled. Include error cases such as redeclaration or calling undefined functions.","parent_id":"373de73d-1fd5-4ad2-bab8-0877f0474ac3","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/FuncDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/VarDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/MethodSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/LocalScope.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:06.284987+08:00","gmt_modified":"2025-09-16T15:16:49.8217501+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo09ZmWRKqzPbEVHBrg0yPPyoSx2D7iQwnzimfu56MEkCOGwNBUZYHSLiQLRcaE4WazJtlzeS2fvwSwKYD3GqqotJz2Dpkre5mKBT2ymwJ2WnR33QhDT/rXZvxMYMENY9w/5lK+DxDH/WTROxKWw+5zPwRL6XqCPdlHtuj1ZZc4Uztae+ZHOddd/k995zKFrLyxp270hteH9tkeJ2kIllEKC4MnKZ5M/TaJefhf/dKyTFqw8o9YE9QyBFbRCDtbqwzrDxkN/R4EvRrGH06nmX5uXrBiESaKRg5VpulLbHlelSxtoo1ivOh2MvRHpZaf1E4O8KCCswEYGiek7dBwXDQxyDKiPKo6Eba2N8whjRU/Nw0EAva6qrJBggGBamiX1xKJCgV3RlS3mbI2Pn99iHBPOWnWL5lJgnbOiPLmHarmBFeqo2HVoeZ827xe8Jv0Hwl4hhu8QBuvBGm31ETFC7/NiBCjx2Qrn2gG9Rdfl+zDlk24Rnv59OSa9yNsBzNj3JKcBMHId9z5cgV/D5YUDlJ7pXK3yx8mpJ8z0yYPSw+DYqUHQCGGW3V5Xr5HJa0j87hsmW6MIRnIUSPK17t0E9s8fS9+UUDKE5oMqjrg13cOy+GDYOtAJrC/51OjpIK/z0/PMp5eS/1oZrY5Q6KgLlBETXEBDKCm0+8WTodmudfJlwM3VhhdNgQnFfea6IR2WYtcdUXrB8BIHLFSn4GL0ZlgaFhlrPEZN7VGvMgSzjK5ALuSJE3JWGze7qjeZ/iuMtSXgeOxayNkOdj6auwRF/gzeVQHwT0z7ti2MDTGexVSFueU0m63xsTeflessj/69gn7xaBoUEWtIzqTROF9Z2ferFcg5yvaF4vVIOlda56wGJmfC0ICiOHhG5TLXAt9tbpDVKqyTj1f8M8eqFio72oleO61H8fu04baH4UowAdx9BzN595jS3rGrbKxuvAkzpJs7of3FCuNsZaOOZjZ5KsXjf0GCt9HsKSndFS34PvcMUh0Wxwyqw0X0Zo7nRGazeUUGeN1l65urrNcnptv9E0AtyplgpKBso0xUvX+c5z713E0QEzDY6sV0Sd1meSDFZdDG+9R+ZaFGEbsPUEZjeo+OtBOUtFKfRuUO4b2jb2rS6aGp+w5T/9f3Wg9DzZ9g/YrG2IROg8/w8O1C2+AGyJiN4j6q/DWpkRb9623H0epITn94+zaNZDp8O6CqZbYya/abWCUL6ByK2LfO67mlaoNREhLpG+T84qAZ6AJG+uDOOAyTIUubKp1cuJHxeG3MRZu7FQYI/f0wZ7ce8AmBRtN0IUI1bELRND9EkMUzVaoLHbMcLj4q7HEK2MeWJU3rHSVLXciXU4uwKIN5F4epBVCHnhcgrprpoSMCE1iZYxxrv51+Y1MbFbopRrt+Atf3guoG0ba8Sf4L1E24okSbsw8PbXV2ehQa9/RWhmNX0L5YnIU8BqBNs4gPC+XLGp+raSfzYivEOwgKJAK9DiQru1jPo1TfXBNYPMcTUkJr4rDeaDSPmAO6Ec9n1vCGAhoIEM2Mu/WhJiwOBlVaEpo+Kx+9KhvigDHLy8Vlk1jf71IldOeJ0S9KBYy/3uc0AlcS/NbECSUvs0PIq49W/YVi7AgZfKSyfEtHLONciZOyvE6w6azJayA/P2M2zkPleg888Z8is8EYhSmtbirQCQMIePsLU=","layer_level":2},{"id":"6a005956-8a98-4532-81eb-16844193b31e","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"AST Type Representations","description":"ast-types","prompt":"Develop detailed content for AST type representations. Explain how TypeNode.java represents type expressions in the abstract syntax tree, serving as a bridge between syntactic type declarations and semantic type system objects. Describe how TypeNode captures primitive types, composite types, and type constructors during parsing before symbol resolution. Provide examples of type node construction for variable declarations, function signatures, and type definitions. Illustrate how TypeNode is converted to actual Type objects during semantic analysis. Explain how type nodes support type checking and how they enable early detection of syntax-level type errors.","parent_id":"32f48f4b-a49f-4d52-a28e-81c006fe2406","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/type/TypeNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:09.2940253+08:00","gmt_modified":"2025-09-16T15:17:16.8420801+08:00","raw_data":"WikiEncrypted:YJF0I9ZZz2sbQqHVy6oqqi7GZ+i9w2W+XkIk0lufw54KFA4+R1YTAv/wkfHswKSk5U0eSYFuprpRWWEVEE265FJ16IH1OFCnq33szA5ueTLhKJ/XqpTwcttT9XeplUSqSJy6DCpVzWIF7IIKfKlYh3pAlVJsWs/OE59kUwmYSKL+GgIZnZbCmzi1h0pOIFofSbEKhCLDRGzYMXADr22vXMccX9oM+BJPIGD9SVeaHSsJI3RNfkCF1nE3QGaktGH7aD1ryrWl1HSxf0jVFd3O67FLrg0QfRNyLZKJ7/TzUJ38YoTbJhIsgoMgQCFYSQOA+eVKlZyDlDbVVLAy63IHofRLLp2G9zxvyu5bTPRgpQslCC30bOtn/roi5olunddY1/XHa49tkND5Rfp9v37++D0sqXHVIPvvhrr5rIGo53FKQmN6xWw1aoBgtBBKVpCpOLmgFDeymtenTpqy4hXAUcI6Z6LyUqsNVSrbPfJlGlKF6d6MFQgO2enWFzMyM2E+4BuOgF16FmIg38mNHv36wneOR4QWs5r4o1gGwBQEe18I2BzSfoSeEgLqSbQN0DhX/4nXia65gHssl1Zlnk9fKJPwIwSvHJ0t03c1M3OIdiOcyUH0E5kAJyBsCeSdmoZYcJIFg+HUE1uYX47T1Rtnq/tyPTLV5Wp007mT+OIYTQnP3Ig3k0OK2ERgCzgzjNftJYE5/gR4L9ohPxemz8rQsdDsOlurcyAoVdeEVziFo8xUWx1s0bQDvEUJWn1ANcIx6SqAmxNJezkZ1l7fChJh6GUv6INTMinM619Eq2z7hLlWCDFXlk8HcfZMOqOf8wkGptHlnRYLZi6rfY7UFDnKe0X54xNLZuJfaU7TPvg+at2+Gk36yQDuUDLHnbxCn8ptxOAYWNRhUH22sEJxRICutjRMUshG3THT7LHSmyRntaYVIkKcpRk8dQEh7byR+iw5vu7YZKwuI0NIQ6IyroPBbPars1F/ucLHQ78YqenWTmdxZOhHQ+tH+grsIBgzayoxsI2ksD1hsISbA6V8PGOiv0RGkpu3NXu9e0KwEYiOmFr7lCkLmKG659ROD3V8z5Mof7eFwMG9w5Lg4s1XHJ+lZBTKtDPhU8c9l16BUC9GLFL72HXw4CwwWKVq28EFDGpkmvpiAYQI65vGH9gYu9UYSsgcJvJSKj/fqczBC05gfnqI5nyS09pqU8qVUItMt8rgWvovOqhrQCmuIrK9PKtP+3wyucY3xT1aCyQMW6SYZx0BGnAT7NlaM5hVi3iUm22oK8SG6WD8I4fOnwYjLh7FAw==","layer_level":2},{"id":"aae5e5fd-c5e1-4541-ab79-3e92c452c9aa","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Operand Management in Expressions","description":"operand-handling","prompt":"Develop detailed content for operand management in IR expressions. Explain the Operand interface as a unified abstraction for different operand types (variables, temporaries, frame slots, immediate values) used in expression evaluation. Document the implementations including VarSlot for variable references, FrameSlot for stack frame locations, and OperandSlot for intermediate calculation results. Provide examples from the codebase showing how operands are created during IR generation and consumed by expression nodes. Include the relationship between operand types and memory layout in the target virtual machine. Address how operand lifetime is managed and how they enable optimization passes like liveness analysis and register allocation.","parent_id":"f315b1b9-34c5-4219-9adb-38f4397d2f9f","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Operand.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/VarSlot.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/addr/FrameSlot.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/addr/OperandSlot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:31.4047008+08:00","gmt_modified":"2025-09-16T15:18:07.6132289+08:00","raw_data":"WikiEncrypted:Bh/KpmOqBaGFilkjGTtTeyUWOXJu9OlRokftM2wNj2HLBgS5i1UdR8J2ybbsfNJ9JuoXxKbgaeb3erUICj0F1KFGq8p7UwLUVX9WwNr2GNlSqqXheIR4sQQCS2PlHL+P+q0QMXg4cqHvdFlZV4/XILY/z5Ox5Dku4gDOhMPf9QyUu/H7l1y/G/hRqAMSBByv6J/LhxhMvHJgjYZSKk7kRKYUSY+WOnqWWiQ1b4/mYi+eToe14bcEgbbaVmZs6qRYlYiJEHt0naq8aT5pKVlVSW2h60JYBHdx8Nipdy+ahPsjSpAsn9je7tHdVFyWVwvbqW5uHJAe3qVsWJd4hjc9bNZ7xMk2dFhJzX+VdK7SLEMYpDh8wO2FsI0LpQAdTpeqQxvgqHcS2Wf69wSwCP0WqtH/MEzJOISaChcZWMNR4jE99aniE1hVMwitPJQ4f52CZIkkOICUAjuRMCXmqZT5k8kuXBhVAXBqVCmLgkodCX3HvOz1hoobDhzzn9kuQcUXG0fcqnwP9Wj9X7iX32QLMtngnfj0jCBACzHaa6Nw3tDWiHfy0njPSDaWqTNGbDrrZLMgQpyMHpBFDwVFyKECY/56VPBySf7u7zEai1TLCAdv2666R6+8HP31Rayp3vaabvbM/Qi9FHX5xORe1tKocEsHIuEVjP1IZv4aRdtlIcPeqiHZaJTgooE4s4tdB8mBjBnBBUT1qU0B9lTUEoKSTs/q+vGQNmwxCMOjZmduKJN/gLNcz1hiDZytEf8YHutgsRTNI2M+mCcI21dYTIzBiRjeXhQpEjZdPILb4RF69NQr5Q47gGEX3j/akMOSWHkVBnrZFjfwEGBoX9F30ZfWBEkhCy2REMY/btZSNLHCqS9VjxBoHSqG2QbrXKxMyTcWaMgFypoyZDsqfXK8qEXKI+/zTQOIERgwmQMfqLaDO2fVM1FaK80cWAV6T20HtaDJWMcCJ/0iVwCs7pUluM/pyKZZckTSDpSXx8J9ZnAGIL4TE9JekF03PNQFWn7/9hfF4YUT5fKaz1NdlDrzKIqCl5QsDOZ8edZ5ktYmra6RufkepFPszWKFEzzLnMtsQmYPim1z04HkKR2H6PGOdx5WhzkIqCxpq+iP/u+NCwwGbISdJ4/IX0yhYKGpF61FuAoAVH3JktHta/dIAvp17JWwzRWvXCQ6mYx6HVPbyRApyKxweiRrxvyQvnyS98/+LpcGdK56z3dn6gg82PTyGdiPO7D2Su5y+qRzxp4IV+PwUrwPA3t+1eI10FtVenskDg9CpkqqFjT7bQc3QZW3Cs2yMy5jLoj1LDvHG0kVei+KmbEpGbuJf+URtmD4J1sTLDzvMmVUP8/z1rZExyxBSAqDfufkpe05ZaGz1Krkylnher0d/tdbgXXK5dwvKRV4DTKJhqbi30Xb6D4BDVvGZcH5sruiE6J2IrtHJvx6z/MkSUJn60kO+zjXoi4ZdoqBMmix189vdLh4jQOc/793C/PgqtUY5xFYgHdWBvLLSL4+Dn2X9MDj6ADT1RJxy7W5TJbKPRZFiPvo0vBmV/sbA2uCRcfN4Q3xbQqTNTilSA0eNzcTft/79A8rRy1swVnk/wFON4SF5kYPtZtKERdU9ez5curE5HThttQm/fy2crkV0LrCQcMs+bsCRi7XTdkIrR+dvPjHs5BHpXa6cDIYs4S3gBkCQXSbpJadxYDQo2assRj1flBGhjgwV1SqfXOsKWgf/TfcgUBQ5B8BHoUcnPFtnLJYeX4wezUE8fL/3EhNt8viBLG0zH/f/p9P3H02Q6mh","layer_level":2},{"id":"11cbb601-e7e2-4319-80c5-23ee6b0ecc05","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Extensibility and Plugin Architecture","description":"extensibility-architecture","prompt":"Create architectural documentation for the compiler's extensibility mechanisms. Detail the plugin architecture that allows for custom optimization passes through the IFlowOptimizer interface, explaining how new optimizers can be integrated into the compilation pipeline. Document the code generation backend abstraction via IOperatorEmitter, showing how alternative code generators can be developed for different target architectures. Explain the configurable pipeline design in ConfigurableCompilerPipeline.java that enables customization of phase execution order and selection. Describe extension points for adding new language features, such as custom AST node types or semantic analysis rules. Include examples of how to implement and register a new optimization pass or code generation backend. Address the design principles that enable extensibility while maintaining system stability and performance.","parent_id":"5a9fd681-5265-47c2-9876-2eb17d74535a","order":3,"progress_status":"completed","dependent_files":"ep20/docs/project-architecture.md,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/ConfigurableCompilerPipeline.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:42.895439+08:00","gmt_modified":"2025-09-16T15:18:17.6439267+08:00","raw_data":"WikiEncrypted:9tFZPEMPWdLFkkE2XbXYMvmVppeiPi2f6bkfAPEWaY1zNucifGT51ovM0cm+Q2B3YT58LLWWAvfzDYq6YmqNo0U+/y53/6qlCfWluGluO0y6jNoikUk6nqFYojmpz3aOWtnv2i57W5Rr5eVXloVeKaKxAhw+/FapzB3O32SZvxtUVATB7FVXOJza8agPUpLcgttzALd5yUxcobnOLKh3P4eWizef6bllaVm62sOtX7NAPXM5p/Rl63dX+HdYWt7RWSaYhV8rLWcG6DTLJNKKaYmso4Ra2MkVyrLelMmq5/rIxf7c+G+jZHUOf1k8MsmK9u/H01AZagTE8NeGWmLHYQ5TzJqcNiqfZmSxDBcNYQhi+/cLKmk6PxamQSsS0ZPnbfiF9u1mAJFblYjdHwDvS4F3WBZ9Yk7d4dsjwaD1tCQeSEDnphNVn5CHJ8fEAsbn3rGmt9IYYW7OsOGM8Zpbhcz6XFjZ2WvUAZ/d8BuVC0eArElroDb2nCki+AHBrRudaLkwsIlnP7w2AL53TeO/bYtBAjk0MYlJMDtpEXglO2bn6OxDAu7CjgVgPUiFPp5tqa56r4abaUYuH6SA3KHfImeFV51X2F5QkxxmxFAH4tULDYusEKfJ+XsIvGn/OvE0QUjoAnbfQnaX7RBYGh1yaL1ANiHycAODDdca9Vcs+7hbU4WutRQF/Qsb60UjEbLNWHXczUTjQlktSPwBIrKOBNRHtxxyblPK4Oz9dnJOmaPonLTPnM9Ww4+OB56QqwRq/gHaf64/DtzkWqe2QNWdQ2vIX0zPXaeoOL0Oh+xs35+O0js65ftUk6IpF/gSipvCZ+FLXdSGiUAJG55Qo28ViM1ddJtdO66NA2omwh3Y/+BAGfdEiNhhqyVDK6Ej1zxzXDd/H4Y1MiRAOGwrZza/8QE8oON9nDiO9Il4Oql/VNo5mLWEKhFLEIfuK0rF4F1UKBbmLDuFGx4au9QNbIVDPd8Dph+//muMSyPQBVAAjDHaRxxFD/TruPktAdMVJDH+btyzlOnEAch+gFHw4cKBPGLX9fHekEGgOD/pbdp/kQDASwZJ7f1qgYPw75cPMIGidN7ideX4I/V997I32/IUIZblY7HmoyuaADaemftlHb8K0yK7Z02CiLCBSfCZVyaQ5btPg+UGZE8ZgqKYLqAVAXHKF6qYwtXzRY7wK6UI1nCBfor87j5bDWQPaXcRAELH2YN8EcdAQy4LI5M57MMp/fs2LrFBElC9ANenxzHOS7eeAX9hKAfcx5XaQHrsGpJGV8vZSwDbm4Z/sMVMN49JrgrI9s2/mEFAtmrd0IoLQEe3T6ratJDyxsaIWL2C028/dJ6SYXLXAo1BuNmmAM1OITwvSbn+/uE8OYZon0yLw4Jf2eHdy0PsuW6Xwz4xvR6I7Y/CLL0OP+heoqnIyi1Q+hJY6qk3IrcxpikB6Gq4F3lVZkppGC05Njco9aKbBdMrsEvL11Jmz2gm6nM5hGpHoqOLEMVenAMwuzuZYFDWiWPWqRTMeTq1tt+fwfCv6ifuiNvsbk/cqN0jjYTwOK8f46bk2ofACnd+b4DatWsoi6aW5C6RlCy7jkBTO6d4aXfDn5CY1f5zIDskizNuo98VE2hPHk2oRPY+mMYZ6Onyp5XTkqfti/D5vbigfbn6A216fjfrlYEtlcgs7Y9w2AugmivBJ9bM1KEwQrJ3ofpVo5OrWkkjToVkos0Ua20Nxau4EHkBnyA2woPbI6ildE7rFq+wgAtKtrgGT4yHFprEV7f948db/VSjBteEfliUroMNLoTeJPx0vzd0MPmlnApizNh4g7hT6pZrIw7wtFgsw/A+H5zfKTsaPWSaGLpZzF8gAxgP9bgutIiERsOrulLL9r/85rxSwmDt0K9R8po9nwc=","layer_level":2},{"id":"269d5bf6-a82d-4480-a1b3-74b90e0eeec2","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Intermediate Representation (IR) Structure","description":"ir-representation","prompt":"Develop detailed content for the Intermediate Representation (IR) structure. Explain IRNode.java as the base class for three-address code representation. Document expression nodes (BinExpr, UnaryExpr, ConstVal) and statement nodes (Assign, CJMP, JMP, ReturnVal) that comprise the IR. Describe how CymbolIRBuilder.java translates AST nodes into IR instructions. Illustrate basic block formation and control flow representation. Provide examples of IR generation for arithmetic expressions, conditional statements, and loops. Explain the role of VarSlot and FrameSlot in variable addressing. Include debugging techniques for IR verification and optimization readiness.","parent_id":"73a9de86-3c93-47d4-84b6-073c2b7827aa","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/BinExpr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Assign.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/CJMP.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:59.0960355+08:00","gmt_modified":"2025-09-16T15:19:15.2142924+08:00","raw_data":"WikiEncrypted:bau4NuMeKDYwH4zTc3K/e5IRBG9oocZGf6PWQwzqrOU37VxtnxHvGzuvsvwSIPc9znCi6/xG4rUPJs7iuVgDYb6ySF6XMloavlVvKHHhh1bPBm5KYg0/0Jbc5W4eYtK7LMzksDMhDmeqIUsu34mfeO2J4xJ6psHF6UjD855uH5k96YsG8Gk0PM6zeaPIgX8DHC6J2hRS4x/VzIT2MS4SXGOqD2ECbz1c0wIYNuR6lxweyYRfa+pZwB/ZFRFr9NhubsOQZhxLMs9gRmLSM/aIkO6cX5ixmQStAJ9kkDPO1ROpPPISmS7hyZDOVWvI+sWZWgTp0IR5A4XfuvSqXom2ZJbIUSEUZRYJ09Fl6kwspxTsOlBVGW5DNo9hl55US2gUjPYGWwNcHnJnD/f/1ATRHLVIwmnqapwwapr8bFuqSDjqPUSEyJzSNEMe6WLt3QC7OEN5FtEFjZK3BNHpQ2ROz9Oh8rj5Y4XCKbpZgtqoRkIMGJvFClNGorUyPXnUu6XLGDh2nufZMWs7D9w+H1LAkUX4Glmp4qCHBMQutFVpkgQumHeTEXedJoisxDAqrNedtzzsIMPThQ+qvRvXntXHY+mojQmwE6LgCgjDCHyTj0OW3sVAFf8qLdHJonlM3i39wBm/7Z+hK4swbngWRajRiuDk0GHezeE2ByELu/RD5Vs3uRmV7hAGetdzQGxZslXNzjY3VLIFq2bVJKE3VkPGbvAwseNoNgT8DP/lcJNL0c4rbX9dPc1BiEZSiag4PmAWCFWO8zbzc19rGom5C2Z0G3rt9pP0XnJd2MgTpv9Yf3vd1kl3XkuHCYKdqbuiazz3YsJt2DveriwTL17SAZxWBikL3GFxBSu3GaggWhgXmtH0wkIMnw8jRgFzJviulkxSt/PPxLkI/LP0NPB0+sTKslygoityM7kQv7VPW//8GPHBYM+14FFJdHNPwLrwT0IykM4dHBtiadW4rchuiz5WLIBuEpfq+JcOs8osaAQR842H1JGXFSZV066RfekT+3zvhp1WVLi5lo4qbKiJo1eyHJxb1nu5vGUDVZ2y4mJtpjOzOyR4WwDJxhEplWw4q9Z/G9nQBeNCooaoFZ/w3LuoyDsnVt9FJgt2RHCG/T5lkeZnaeBJe5g02x08atKkPA51IWrHU+YthRy9cBlWHS2CuliPpQZs/R3885bsTRhOpgUjO/KATJstPsk1xBHGvysMMZUVjnw6aZO+yM6V0KNRwZu/LUjU5f6MKl6qoxeOE7RiyFlMkTim1dZvmWJuUn2HZ8v1KKzBDphJBYWUqvUyeIJ6BxajST9Lha0YMNwvoORy6lXGt57QJjnoHI1DIDsDjcFpTXGTaRbjglP9Jemb3MbljIOBrs1BKRqYNWfl0Ee9BcgVjiIz4y/iv7HbeTo6+RUqunFLFoOQwLcWGJn/WZsNX4aX/WkIWN1cFVtnoOCG7EnYJIIV9FFAdhWkNlwK6onxEqqa2iEcoFWbWSU6esI9DGrq57a4l2T+EMoSz3+fTq2iUW8bvuZYZb3KRZDu7uPfFdn4oE6G7xaM3993QTkWXLmPYgOrrWVWkzDq0LazC14j9r/ZXm8yJa5lVd6Ogj8vJRKAWhWAuJX5QGdxo4fv70/OhHui/tVRfiDV9XHTQGme53v0ITC8wcoFUqtUUXmZrTPNfr4q8ldiM2612A==","layer_level":2},{"id":"ee13fc90-335f-4d82-b18e-bded68f4edf6","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Conditional Jump Instructions","description":"ir-stmt-jump-conditional","prompt":"Develop detailed content for the CJMP IR statement that represents conditional control flow transfers. Explain its condition, trueTarget, and falseTarget fields that model branching decisions. Document how CJMP statements are generated from high-level constructs like if statements and while loop conditions. Describe the evaluation of boolean expressions as conditions and their translation into IR. Provide examples of CJMP usage in if-else statements and loop termination conditions. Explain the role of CJMP statements in control flow graph formation and optimization opportunities such as dead branch elimination and branch prediction.","parent_id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/CJMP.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:36.9869518+08:00","gmt_modified":"2025-09-16T15:19:18.153525+08:00","raw_data":"WikiEncrypted:HfwylyGPL34NvuXFDpnUX5E6tFkTFFvsMDLVMn73+pvHzJebXWLlP6lT7/+7p/K7h5oHHRulsbE4ivofb185bwHi2EpL8aCVBuJxtUikcW/hvC01N6hOCuBYEukErtgU/ntqxaA5+WiXOU554vqS9KMlyIAlPtt1CHUazVufll5eprFEd2WksW+96Ory/xEYAqL4x8GSjpUTj8tMWgt2APD2zck4Y04kWxT9o2Jz0iGXjaM+gVikERRkIG0MipPQYCq05tWTZBpQAg6ImahrBwFfERRTtZ+hfF6Pbs3p2BCYDf4WmHsf/O3oCkxR9xP14CACOPEdJi7lwSqTZyy0+yKF6WikR0Xb4gK4c7d6LF4VYMNvQ6Rer4rB4QGI+r3GacpfG/8tL0VTQ9GhVj/BOJhcNDqbvdzPR5n69DDZx6lS7gJPEgGTkWTtQOYbwAol7FDUyKvdnZ0M9KeUbO/uDil36/BU6Aj7qLxHpC+WGw+Yos3f0ivvj8HbZMMCdxYwQmIAp7GOIHT8G4qzGUcCCx+j9vRkgEfNjqyyyTQS9WoOFTLXw5XLLrBoG85udfK/cOx3LSpX8Hh0XxKDghOrrgYvts65VgWEdb6eTIvDNCRBFCgoXwngiBugU37V8r3ETrX6jwWw0IqY1Hj3PXlqPf6+JwYk22XB/cmJzc0dM9qM7HmMI7fXwVYOy2B/J4OAAJObGTULY7jzl7Vwph2TmlyYoGjjZSMiZQ++agg0jMwec9UhkmQT6K7KmVkjeg3CxxmWxj3ADU2FawPwKeTKqBH8YJ9Xu2INYQsYahwOdKSYPk4fCNpm+KIl6ATpliREFZp/FfXamyKpTjlznpbY77MaAIbLZkwOTtPBPrWAtWEH8Lt8EkTSX/4zW9BzoPFte8AKYFIskD6hy1x1Qxt7f8186FeUDOX+iTf4xYQvTTBnnqdpmsdCh0jpJGw014GomLsIYbtTZn4+dH+7alljyLeCTfW9G7pzZVHH+PE/caYTqYBYoep23VCswEPDnD1ppCjaboyzsdY9Q5QSuoI9lnQJMdGTEtnxug8lHvxIl6zObyaNzDdXUOvoXqGRw2s7T2V7MfJ+c2lDuyd+t7X37yrEqgHHJKdDJmDCqqEcx6NBeT6GZT+sgEOTKoEfBBtorcUx9Yzl42I7nCa4fwGaD9IBlUX/h6EbTL7gGm381LFFMA/XVYkVd68V5x4hkLK9k0NEMExEyWtRdZfXs106wj/OTaAU8aPZq82Eh8xvJp4gGXeR41tmjcU6ksWq07cd","layer_level":2},{"id":"8f308476-59be-4ca2-b4dd-8a1deb18d451","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"OperandSlot - Intermediate Calculation Results","description":"operand-slot-intermediates","prompt":"Develop detailed content for OperandSlot, which represents temporary storage locations for intermediate calculation results in the IR. Explain its role in breaking down complex expressions into sequences of simple operations suitable for the stack-based VM. Document how OperandSlot facilitates optimization passes like common subexpression elimination and dead code removal by making temporary values explicitly trackable. Provide examples from IR expression construction showing how binary operations generate OperandSlot results. Address the relationship between OperandSlot and register allocation strategies in later compilation stages.","parent_id":"aae5e5fd-c5e1-4541-ab79-3e92c452c9aa","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/addr/OperandSlot.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:48.6323672+08:00","gmt_modified":"2025-09-16T15:35:49.3155487+08:00","raw_data":"WikiEncrypted:Bh/KpmOqBaGFilkjGTtTexh0g+wTnuol+pyxRsd5UWkHhK98KAzOnod4Jq3CzIUj+NNzOAyqIPy6OFnB+3ZNEX1thj2KlBz3WH0lDN3uo7gY4ijBT1yXcRXEk15iw35RQZZM06USx5tggun+cRG4Q5M8cp26v3FLtKmWjX+sLDYseAvEzEqNAj4qcpj8h8I9sMqoAn/ZMg6ibVsl3gMCkjqFUo1H3wsrgCVN8LF3aXklmlz73ANTFDpfiv5OFV5Eh+2WMmKQTV11i2+Dg9hb/lzejQvj9t0g+18BOp78lxEkeHvAHZCDsmm8S81P/gEJiWg7e8ZvJHRu3wxAjaBlW/8VaK/jj9XQzeWdWkwLVL7aPDuP9NyBSTjnTcxJPJgR4mw42W+T9oZxHiCGK0n3a3rNt+NgATpqV9DJv/nIaSIkaogurC1ykht5ENE79Gc+YLqDw3XmXaplB99Aqy0LY6zQqiLlbW1tvpLtFa9XJcwszcaWIzHR4DbqmkdZ0JhsGOTq3Ui9iwkrq/hkploASRW1UtHdUZ8VmdkMVMKNE8vWqwL2b/x6JR6FFEXZjouwiqGiIktsY2IPL50n5hhRGlhK6/EPXonof7rAwR+D+hNauzqYyGX1lHvTwwuzTOw0wEiiObihYl7U1issobYXeJfLFFBmE4OC67L77bnxDukZO34MJNrRXAYYNU0caRrcXzfUW4mLPBnA61R1QbijMyUDOPS5Ks7bp/7PqWhHBZxpfpNl7XX1peHuQFFEmzvPwagSMIUL5ecnnY4gISZnLF73NEELkCL9/kSi0/9sby1TXuLyQOxE/ZiRka0trRRcAk4ETwxGd6q3rMG4wbt9S00H0pYXLOKSJsHdCzUqpfpA3po7itS99R8aXsRw3SZfeXbVpcnCU+c27yPxX4bMDjDln17VjYeanTD9QYv1WGoq5en+6TbnyRhD4jZw4pYSrvskxXE6p4DnHFjcMeMivtEEQaGRQzsB1W8yCTufgD90s+SbjVp0S/wkUNogjW379lgXADzbSUK8G7DA7SRKcsDFp4UkQoHfeBCYRFd49CRxIIKBkzKv1JKUqyVuOpvI4P6m3mQsgV7icpaJJXi3RiFRSdvoKdi2k5VjOTGkDcKedY807KvupEkeka0WrFRafltJzhdyxbP8kHCjXF7UhKB1fWQEqTRkacVzgrkv9rLQqjYI8G3fJgn3s2akfihI308pj85NowlUhNfIHHPvSUgQCZNJDBAlL4x8ihsqoEwhLvzQM90gtQuQJ2hj4fXTdi67Wms9/sMXNuB9MaljV6p/HZI/SHwc2iz/M1cmt6Y=","layer_level":3},{"id":"a2902fd8-a9dc-44b5-a780-35cad48d9162","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Semantic Analysis Phase","description":"semantic-analysis-phase","prompt":"Develop detailed content for the semantic analysis phase. Explain how LocalDefine.java resolves variable and function declarations within appropriate scopes, and how TypeChecker.java validates type correctness across expressions, assignments, and function calls. Document the implementation of symbol tables, scope hierarchies (GlobalScope, LocalScope), and type checking rules for arithmetic operations, boolean logic, and function invocation. Include examples of semantic errors detected during this phase and describe how error reporting is integrated. Address design considerations behind two-pass semantic analysis and its impact on compilation correctness.","parent_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/symtab/LocalDefine.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/sematic/TypeChecker.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:14.1587073+08:00","gmt_modified":"2025-09-16T15:36:45.0297288+08:00","raw_data":"WikiEncrypted:cZY42Nb8FtGTs6fC4eeHuslDtH9JsmqhGWg68SJjdX+rJ4XfPHC8BgEvqzmKHxXhc1Eo8bU2WrNAVSkbgmDpe3Ld/CSnHisW5MkCWz5iqzn37xulqKBYBEe0u7PyrUEhx1OqovM9KTLbuhxoje8w5wZwwremFBzlKFS5UVfEw0izK7xKTV/LGot9kibZQEVG6Rawf6cUxVJZ8IjcCPPB1C8zqu7dRLTutU1iElvmR0GHdzjxvSBtuJVaOedHBZFbr7+NSwWkbvFsROq9urxRHqR7/RBgxlQCZ4mOHzuYavSHw5hKJNu7mo2+p0nP3hEveVntM+cQraqQy9X6XlMoXwqfxAN0JFwf0rJGnV1kouhbpgR0l3H1wCs3CyukZyI7wKHV9kXVTOpf3saMhwgvHrwQQzobCYMgX7FUjKl6ER/2gfk04AKh+UGCg6V25cfof4nv8/o2kL29xdOlDrWsTe2MoWmwJphxVcKHXWvWHfTjeeh5FrMoGkRBdKMq+SB1z6szlwS7z+rMP6eCSf4Pu5eX2emiiB9MecpuxgoidxIZQUWTPBdGB3DHe9Bi4H2WO7k7KuVIS7j4TtVSyXMHtFm7aNjE2fvIKO8UoW+ZttNuxxAQtHSdBpi7CtBpDQJaPN36MTAOgP1X/D47Vm2wMIjVoWwvyUQRqE4r76PsMC72VkMastmV0eYAyfKONL2qjv/ijtbguiC995ZGfY7l+CGA99eEZ9n1246ePGjIBJ4C3Il8feDnH+MeVjVVaUzcxf4KQE7bhcVGs3WmLjyEQRXjGHEqh5Y7496lf3IXFxnRfifDUgQNgKOY3RCvMy6wLHRR7sPkFofAHlcMyah1XzY53jwOelyJBTLTUmfDMY+tezJ5Nl5GW2jG4G3uSTZOSqx7YJkTg5QFwQ+VH3tE/KLp1F8UItDVMcQKm1EX6x6H3pLksXFNwnxut61xPLluXb+rDryrcUWnH+GJs8sJxFi7rY4i/6mPjqR4M26YqTV0vCkNSYt07G4WhuUSYTgTZju/gLSaSqVZtwc1m3VKOfE0e/hlCiJjQ7xvD8YSUNduQVksnq+nN0IW0Egr321mhlg4XpUN36KvI3VrcmYc6Vu5QQXUa+dxFN1+RU8PSMRokqZRpJ6cRTyCJgSyg6p1FEUumiy1kRMoUy21PXRxOARfBC5obRqkwduEwq7b/VK9W+78X3OC0Xs7McbCNTC/ZmB2KsZD3v01OIK6V12JRoHxJgWV3EuV5EXcl3tL2cfKx59nuTULjPsRdDg/du6jlcofxwq7ysqUNnNQE8vhsyHyiF89S+vUsBmexBBHy/8dNbvxe1ykRnrfzUOYbC1O8Rsj3y1AdzZ5VZ9wR+Tx2LSgqux3OeThJ8n/0+9aQxLP3wCArremopHhZ5vNhn/c56TrkhS+wkvc0BS/8BgOtdwVFyve3lfB4cDsWUuQ5C59OIa6ECY7PcX0w5aDXpIDuPIjVpBVwTwjmgc1XDCz3iZZQkPQORJfFNELBg8pHE+u5wq5tGRBl+fScvub0oXlDFA9K7U5ZT6UWvh/kPY/1c+cxuT1oGj17knHtbLye+MWO5ZyeJbirR+V90PLJdaiYqGV+TAd9MdFK4uek0pZsg==","layer_level":3},{"id":"1e728540-f781-40c0-987f-7ef442ae8d92","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Error Reporting and Handling Integration","description":"error-handling-interactions","prompt":"Develop detailed content for the error handling integration across components. Explain how CymbalError instances capture error messages, locations, and associated compilation phases. Document how the ErrorIssuer interface enables any component to issue errors and how Phase implementations aggregate errors during execution. Illustrate the error propagation path from parser errors to semantic errors to code generation errors, all unified through the same reporting mechanism. Include examples of error recovery strategies and how multiple errors are collected and reported together. Address how error locations are preserved from source code through AST to IR and how this supports meaningful error messages.","parent_id":"f1a59a9c-eb6a-435e-8fab-8701a6b44e34","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/error/CymbalError.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/ErrorIssuer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:16.1385074+08:00","gmt_modified":"2025-09-16T15:36:44.5183697+08:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX8WyYxFaBOF2quTkHHFnJl9YQykeVXnLNCuY1rYBW+V3pDZBhmKKGfLdgXQGwRMxREyp8vJxLHDE0zoF0Ykv95qhcb0AsHLhUchcmGUcswlwJmDDfyc/ocZUGdayoEbkbotECiNker8YmkSP0bxjzWox5t2qM2lEs1z0JcfS+6XNpjSNMwRXYT+UgsgDqf4SbNEbW10EMUfDlGPAIpVwQQGN/YUvWah8fjOHfWN3+a+BVnTAQj4gg4GZUd7bkWUXBsc/kvT0TdclahB+q3aVrU2bYukOejcnK5SZBh/h8PzPAI3HyBeb1ZcG74UxLKoarPgzO7jj4+ut2+S91+Ztqb+GG37r0/Uv3IXS+HfZIYvLR3A+GgALopDBg138V2TlQHT0CELfYX3j8PSIBPzrmxLSonIBA9AUuyD6k8Yu/2YG9MFy3xfBomXNjy9uVxPLaRjgsO0cBRqwsai3diaAtGh0v0CPnnGPIta/J0uyG6LQ1DEBqbbOMDDpg7YyAz8gBfL10bAIKKGlYO3nSL724YQggULhGNDH8eAJGeycQnx9c18ctXtUJES7X6s3Dp2mF0FDoi6ul0cw9xDwDzdqtdC/C6fJeC9ZqocmJMqBwHqF4DlZVIlD91D9tjQ3VvKPWauk76HMV1ZOAq32KaBHEz2WabUHmHm/54xuAPtY5xpO8SF6pVvhTyLOkoyYbskLe1OBziqzpQfdV7qtLfbV0TwYdAK3Do0nOPwIuoeYgAuv1bKGAcfg+DbPA6ncxWmp/0Y+QPMrZi5yNG8awJpUNVlhCciNyhja6qpHQd1CPeMPTXLmG+y33n+Grbycfs751UN95VMBDeWBDNhfdsFDCyOTzyw1CEI9sFZZ7Bhqm6lseVzHGn0rqZuVOzKwgNQe+tQXMzO3CLuX4GDTKZfgigqYrc+v9MBDQWvS203fSZ+vLRdYxfN1sNePvGxevscmdSg4wyaw05Wt99hrnc0AuXQXXU2vRrvZXk2pLlAo75TWO2J5FwU5R1m2OTP+AjMRHyYBS11JPCAkb7LByYh2yu68jW70IByakB7qYPisX6PXOgf570M6EOv81d2rU/sRUeYJv3DkImqCR0elysDqkChWSdcdiSqeunxK3YFHgAPWarSjnPC3yLApLlhG6o5pvDsw9r0Rvcx7y5N8dntc96u2skN5TD06KS8L2SPplRrSVkcNzy/JNhR++mpqJmXzgtFbg6lnxVNfLwj1inRo8ME80AfXBcpk1naVXD81i+lpuJ5ATgoE+L5S8hSGyR5JXRJeU3reVDcCMNuz2T2m9+Q5apm6FD4LOVYQf74BGW139/aedXIwMuKp/3fvORvjoIh7lleLG2y8ZDAy42CtcgWRlrmLIgRjzzj2ZUngbPbKyopbL0a7BzfldMy42ZeAGQBaClNdkBhNUPEsc2avF4gcULzPPj5e/wL7yfU7IN59HwEK86KbuiV/or+07Z1WCzgct7g3Xm642JeKK8F6j0EGpFNva60PvNdaKpF3pVp1GjjCcZaa02mORH4wW9zaf4NCwDUNUWoDvQBLi0+jkdw=","layer_level":3},{"id":"ade55ae0-4d68-4343-927c-1b71d49c2b52","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Extending the Cymbol Language with Custom Features","description":"language-extension-points","prompt":"Develop detailed content for extending the Cymbol language with new syntactic and semantic features. Explain how to add custom AST node types by extending ASTNode and implementing appropriate visitor patterns. Document the process of registering new data types through TypeTable and defining type compatibility rules. Show how to extend the TypeChecker to handle new operators or type inference rules. Provide examples of adding language features such as arrays, structs, or generics by modifying the grammar and corresponding semantic analysis phases. Include guidance on maintaining backward compatibility and ensuring proper error reporting for invalid usage of new features. Address the impact on downstream compilation phases like IR generation and code generation.","parent_id":"11cbb601-e7e2-4319-80c5-23ee6b0ecc05","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:42.5467808+08:00","gmt_modified":"2025-09-16T15:38:02.1207394+08:00","raw_data":"WikiEncrypted:G3qmt5UDg7Zj/Y/UfgyPa/TNKVT1ztJAOIiPo4wyrUTlmUCnPD2ikiIN5bu8CfrGQ3EBzN5Zkk6uow31ikRCaKp6mAduBDJrEK59krVYCmp9V71w4LFYkyWWlJSlWwAQcKzMCLq1THjtVc7Rn0Kc1ChaD4dZtCiuwuKlow+tGPn5cZmaABZXb6Ml8WYG35zVsYBuRmRYRToZy9vnSPdVHMWBrHR0FRGWfHkwTq15hQReq19GLYcu0WY4+9fXN7WKqSlbxcVFzKSi2BPq1UPz59GfynJu9rI/6eGdMy5TSa/42/1jF90j4J7Gn8AlUJRm2HiSZ/OpSkmSsjVHgE2qKSvOhBk7GCmsM5WUrRl+aAPdQeMSJ0KC/ESyYltt4cGuaeX7dtbKpFLrxU7LuO5uMeQKDcHPrcDE+N+FbYzR9YjzxXVUqeLGhN76UgFTIUAdfE4YU+xpRXKF47FdmcEhEe8XKRENtOnrxlnZ8CkX3IIBpOpOfXu/QAGpToCnLCNGAK9O2DIV0CxWQOUb9Fjdeo75elADDfOde29T8JpTR3QE1F9F8dftXt8/5psrYEFQL964Y15XktmRgaRAYqdhT6JZNu+cWWLj6NZOnpPHqyC1yoq5hjLtfj9avgIWgA309+7y+gydTURgY65OSHerViinSKfmhO3o0B252rotJ8XRFFNVyVOvgg3hSgMpjtG/z3xBpRIkHD+v0Zu+GaqudI0W7GyXAjq7Br8qtDHbX+P1+OvRxi7d5jvoY6+5b9S/9OSH/tl+fDX9X1q+i7KCXrRbpxoTvUDVak3YAS3i6bO7f0JpaTJQeX+Dy4TXdqvlan4G3VNZFVHEAEAL63JD/nod+7tqYcipEKwDFtVlGzwHBV1V/szIBBhu4mF/dt4eUd5j2AJmfpF24tQGQUe1Od8XJmjp0ReVQhJq/2nejsL+I5Ob5ej2mdeZMMBySEscoEPOayPlNHwTEQJa9rnIaSehU4ohLIRui/tMnJn7TI3YooVqD9GG+EJSd6nuB4OdA98Z483AIvHWcw6/JSrBrqWV01+Q8f3mtdfg5VmbP0sq2OV37AfnehVFbD77eufZpHLC7QLTxjKEehPYWLUrtp1UH1IjEbYnuV35bvEObvaSY2xZDN8W/LaNl++D3N33uLdIBpLrOBVuZH9ikCU03bKpd5l2LzmeOpK8FtMGu+Q2XKH0Ay6begiHvlTjyPSE3N9fjwKtVNT1Mabt9j3tCbUJ2sA5kNu8tpqjhal/+5k2JbDBXDskxpLGyWKWxbw7LbHA+fN8dDvhuayNkGSM9oJaapVl6q2EpkiOy9bJLqnZr8thuOmDFQzHP9WQj7ibLZgpKIaWJ8uYHo2Qv5CeoQ8LkXlXdBhCXWkzi1vUvTwX4zzu3kRwZCypc+mfWGa3ntGGn1umYiIcxugwjIwTltp4m4YaJClq0GxRpywr3uJrUP6KtGIiYptIsVIzyeZW/+wuSK2zZAi9lUmK4vJJ9RhaXPVcqMD/P74+8WMGWqEwI9GArh6PLueS16l7vbt2XfCdZl6XhQdfqwhr/CIiJLtbJ9ifjFgwfUqB13s3FIyx6q/qIBm/dhlXo2LYDtkd/IreAhWH8wjrb4DPpoQLmfTogFDPp7vJ/p3vLwrOSk2dxztLhKWKMnuEQOW2uK2u/MqkuYcCpZFzT61cjaHFvQ==","layer_level":3},{"id":"38c81246-9ad5-4540-aa6c-472a9e1193c6","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Composite Pattern Implementation","description":"composite-pattern-implementation","prompt":"Develop detailed content for the Composite pattern implementation in the AST hierarchy. Explain how ASTNode serves as a unified interface for both leaf nodes (e.g., IntExprNode) and composite nodes (e.g., BlockStmtNode, BinaryExprNode), enabling recursive tree operations. Document the component interface methods like accept(), getLocation(), and getText() that are implemented consistently across all node types. Provide examples showing how tree traversal algorithms can treat individual nodes and node collections uniformly. Illustrate the benefits of this pattern for compiler construction, including simplified tree manipulation, consistent visitor application, and hierarchical expression of program structure. Address common issues such as determining node type at runtime and provide best practices for extending the composite hierarchy with new node types. Include a tree diagram showing the composition of a sample Cymbol function with nested expressions and statements.","parent_id":"c9718273-8ee3-4b28-9a04-6e8d7cf08ba8","order":3,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/BlockStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:42.8127668+08:00","gmt_modified":"2025-09-16T15:37:44.7693185+08:00","raw_data":"WikiEncrypted:olSRviQUvb/fDqvwC8uYM7DY1YA9d/4iLURwv2Fq8YZfqVANlG01QSbxhVAB+3s2opjwMmpXS63i65mjvmsvuC/imlGnn8+Uu2/wy4UGDM2vE6xMkdw/g3MlmnHK6jUVWNDlLqF0+Jj3Dmlb0mlrn8dyb1IJN4yVeAuoStMPhMVJFma5+iXD7rHjBRQyM9NqJdwy+TKXXndVRIcmPNQQrkNj3HYCp/1NhCW6+2szUke4I6jVLy5qcOIl1X5BYKwMUpTaQB1AM5q/TqQjrjyJnBcClqmxeA9g/Sj2X4NMPT9PKYk8Ch4EAKqznY/d9qLO9PcKv+AndvxHV1YcNkTIkIpJc40EryVImrC8SRZFENvts304F4i8Fqmg9nAOOkUqTdeuCnu+hQAlQmAsNFVer2jg5pihOCd9RkBxyeI2e9byq5TfTUPgGQ99/kzVGdMxyO7ombH3JyjU5X2iZ1JWp9m/XsApX2bU691Kpos7tAOUnFwa2Cr1TtGYvVGUGWoZu4Doum4olv/t6cUTDRyzrHxRdYNAekb6gNsVgo12lIKmq/2v8VBh3To5BrETt2vKws5uod8Lsg3pg815r3GQcBZ6vmH8WWphs7H03HJ5iZRDZZjzLNxoiLy7RE172bpJOdkG2kJjSxw4ZCrmiuoDnR6waCZIFV3wiwuFOdEt7vpYZCVJM0VEcbv/C69ExwJqCp3g/4D0rw77YMFLHy1Yiy2Ta0GQtkO+9khT5J0o9N5Xe63evT/k2RjnC26lA6RK4gX9EpiCS0CDJWCBFfnmoyqq2ZV8R/Cv+IF6M5Mqw4PNJronik40RVFMW9CGa/jmvDW0wybH/B9Xer1ni52YYAkLdBom6T/n5fP5XLZbbywcU+GgJhGXxfoBg9H4f9j+8PnxjEhqMph9yw/1NFmp3HPFPKhdtxpPcHdkTljDSInZlTZmDgB0lf8sHrxO5aSBz8zL2bA2LiB6nCBnk0IatTWfbUQ6TVMhGXVU4P3ktyF9RoUTB5W84lkxyhobiWSFV4ZdcOZf8n21u6z9xmhY+uNb+H1akLqMoVppQJ6Dd7nn92YKjpHJ3XpZycmGg3KYlIl4x7gkq9z1pghv3fUPZUS/Rxk0WK4OHsQf1bssErBErCbodctl6Z8aCTmzC9v83FR41OP0L9uLz+l9VIwLRfXd2WQRcXft2LXow5u3paYQCT8uy7a62aTcWU+KQF7AoaC8bcmQTWOdFqTSBriEixfhezZcwoaUPn0zuQq+GrkKr/2Zmf+os5emOk9r9b1jwE/LceJ1VVj2gN3NreQpYFqIRZXD+wcHITrle8ZWIIcCvcY121dd2BtDRzSluzCrsdVQaCedueKUMTeOO/20ChIweyceaynyl/cAiTo2iOf6ayO1frhewhRd4NyP7BXg48cEy3lh2JuZeacFxRlzdoC4+5KYlr9nXSksnX+UqmFSuFzsXawEG9N9EVzX7aUEwt7LvyVH0rKv+vx2xnl/CL92IGbEmHUSjnq0gWOsMty2gWXRLYraKAuFxemCqaLP1cy03C1rMzxMdlhBKYLDoboAzxghMS2bGEX/EyDl0pLVVPBbLTuFmAIKdzIXXu7eX+3aXi991jASssW0nsl5wLy4JU/p4c/7CdvZrH9xSyGoiiYvqoCD+SgOMim58NVru6Rfh2xqwwQMAzq49WjxXiLLqgDbifFlbYqaZnXxj11FSo4XmOZ3tjOd9tx6mHX45lhzSASLID4UXeO26r6PgdHbRX5i5oiSceRsmhmzfN6464GheWhUPH6TiA8JmlhNn5jT5KToc9NJoN9uHy53jxOaTxf7F41Kk8a/iUhzipnUfpujH+WK8gWkPgtzyDKLzX1veoxcFmPuLvu3S5SwG+Q+K9TeoPqZ8oGaAneAJZfBjBm41yPj1SinZ8Pn1vPCwjZg7P/cErUjhIR1pb1u2A==","layer_level":3},{"id":"a8a753e6-2805-4250-ad07-b61191d4a485","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Lexical Analysis","description":"lexical-analysis","prompt":"Develop detailed content for the lexical analysis phase of the compiler. Thoroughly explain how the CymbolLexer.java implements tokenization using ANTLR4, including the definition of tokens for keywords, identifiers, literals, and operators. Document the lexer's role in converting character streams to token streams and handling whitespace and comments. Explain the implementation of common lexical rules and how they're applied across different language constructs. Include examples of input source code and the corresponding token stream output. Describe error handling for invalid tokens and lexical errors. Address performance considerations in lexer design and how the lexer integrates with the parser through the token stream interface.","parent_id":"","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolLexer.java,ep6/src/main/java/org/teachfx/antlr4/CSVLexer.java,ep18/src/main/java/org/teachfx/antlr4/ep18/parser/VMAssemblerLexer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2899455+08:00","gmt_modified":"2025-09-16T14:04:22.106309+08:00","raw_data":"WikiEncrypted:Wi43YXAVUi3EFGFBo7WSiCsSxPLvKRSEsEUt8hNWdFdBd3RDuPQgULQwnRGaUk7ZyJJ2ZyYgz3dc7chFG1Fa9N+LxlRoCxSigNRTkxnRoIrxSRSUydPBHZ2rA6akLPhN3k4VSlKF+YXmo79fXrTU6+7ddRRRtuiTUjZqlxzOLJ63edg/o/wgvIAKKIO2WjaYYZXY8V578d27QkP0HICxo5YxrK1OfALPWLuJxLQO/+GwcTybpasbAm810TQ3xcTZx+kZMbqrDRxu6fdiaD4YEPjgBvjPxRrni3V61LEtdlEtd0T/6A1S25ruBIdvyURjIOj45pHtAwFD/TXENYsVAAnUMvrjPzSZ62eJTKd46huYfDGBCbcVkPY1IQEyXzSTJT0inxWtrs348DDO/lN9R8YYVO0AQOG0tfR+wwv40G4S+/2FpE7Mxnxarg4XTsPwuwbSAluD6Rs1ocA3I3yTQ1hOqrzZGb2qd86RMl80Au9SBzsMJ3PVQOybw6RCyu/igsn3/Uq4LZ8D69sRq75JK4N5RRTn5Lkga2PATzU5UN0FpicHZ9+bNVnSv+2vhI02Y8u4pVEH4lY3AVZ+9Z73RbQeURskiR30dWcIatpnWG4H5lyFOsmh20guJrBW1PVGnqcQlUj9Xog/vDf4nY7vQCLbBFVqSKAOgV+LtdgavEx7Q1Va0kBTinpXN0PDdZtx1jdAft+y7LKS4xYNh6mmz0atDtjLMQMRo/uOo5z4kDql2W+1hnb/bamImT2P+9WX9aysOPPcEMkJ4YF9dEi1EmDsx8qrpmTlLHsw2i6G93/81cKq7JmxedpVKgQwMMXNEIsyZhwRWCk9RDDWX7G5W4Se1MMDauY5CkoJfogjNvmYG5plkYUiAJj0wdulkQj5ug1uHNrxbpnBhK0Z8lENPzNFTFdEXR4nWlfebJq7DsFYsnzEHnfarMeWPbESyx1s+WycbwXc8FJ2E2SAHBHt03jMH72OFkmKfNOCW9bEgmbBrs/p8TIyX2atEw4/dZmpORepVHqLFL6d3ydoFikyEbLwEIyrYeclFZ1t3DDRROJ+NcVRpLyvICCkXvF31lEUQdodKp0zhUPp1TLqQBuzVXrQHD+GDKkbcGzfzd3JlEzpWDngjUIY/ynRMDS50fH7y53t7M7LcPkfCP/3ME5W8ZpG6cXtKBLs6LqPDdxS3GOeKeyWOfgTgN+epFjOe6OAu6qG6HeXGylWXJPkYAehqtHyH1s7eKu8ICD63eHHPeutfffK+gGxaGQwoUw/8DksiG/5Grn7fUcdMHf9tQhmcnF62iMJKb4PqIpjPVZnfCxx47ImgEdkFCzAG+965A8wTpu88//nz5J5+SreZCIUVQfczs/P2MMP4rJAGjMC6OM87T+72mNNgO5OM1iwnfeXeYnw/vKPLGjWnLW0+5mSaf9q/RdDy9njlmPWdBwengVROHY4PbzHr7DONHygRrzwK994acx9mE+4sYfjhu2cZ6t30gtw4tIbOd6jnFRofKRSWIVmvNtmEwTtO86sR17GQIjgo5dDDGCdcK5ShZ+bxc3RO8TVwtH3/DJchKevs64=","layer_level":0},{"id":"3729618a-f751-4366-93e2-66a3ad6d5850","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Build System and Testing Framework","description":"build-and-test","prompt":"Develop detailed content for this section focused on the project's build infrastructure and testing methodology. Explain the Maven-based build system configured in pom.xml, including dependency management for ANTLR4, JUnit, and Log4j2. Document the compilation and execution process using the provided scripts (run.sh, run.py) across different platforms. Detail the comprehensive testing strategy that includes unit tests for individual components (e.g., TypeCheckerTest.java), integration tests verifying phase interactions, and end-to-end tests validating complete compilation workflows (ComprehensiveTest.java). Explain test organization, mocking strategies, and assertion patterns used in the codebase. Provide guidance on writing new tests, running test suites, and interpreting test results. Include information on code coverage requirements and continuous integration considerations.","parent_id":"028064f0-4617-43b8-98fa-7f5a4c031eb8","order":4,"progress_status":"completed","dependent_files":"pom.xml,scripts/run.sh,scripts/run.py,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/sematic/TypeCheckerTest.java,ep19/src/test/java/org/teachfx/antlr4/ep19/ComprehensiveTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:06.439082+08:00","gmt_modified":"2025-09-16T14:50:09.2397648+08:00","raw_data":"WikiEncrypted:ZHd6gDb1oAMJeik+Vv5fPoEvxIA3RnLuvt+hKUADwr8u4zHFsx2L7PYsCtCkooCO4ED0Vj2uTUcW2RfIrRh3csSqmpkhsrNLgdst0Kp7X3lAWMm/Dycwv1nCHoz5/0EZiH52aqpYNG1zJo9TwY2f7Vz9QSpdL5Jdu5DsK0SdhAJ+W+MM/h0CZXObdmZ+8RdbuBOwOBVOXQQC59fwIaL0InL+IufHds+SDfhuPtUxmfomWNWzj4QVWathohTcGHnpKyg9UWppIhdcvWS56q0lT9TPqLvxqTt+82NYAW09btWD78HK8KaMNdiPe4uO/CiOv3yBrnUooCu+m6vLsfM1kLw+vSFJ1tqfhURm5TQGxOHdRfZEXmkaVzGM4xDRZQP7eofPcD0DnX6CHTXMF5sIhMp4fcM1m7+e7yX794FL/9uvphdesHiMcXfXWv3Etz0itDkBR333/FZbP0Q/HaQ7Vj0Td0VdPVP90cRT4TOfgObB1V3KBNZO6kozkzYknzV7mSSlppMY1beBhKI5a5ouI4jVb7dVvYnsYdbUZweO9BqMjSnPJUOGFdZW4Qo7ZXbEJI6eAuTwzChbjgB9aTKSpak/B/aCQcquj/yi9QZ+Xi5lcdp0loNaJHGC2WY5v1vYVlaMCHAXrpWffYRxDxUJtT5qnoXaZ1hl+GTVpBccM4SAcIehT9FmZ43uZ/S4e/nOkYGYarxLIPAf3szLCYONcDDguKockK/SBcIG9E1J8ovuY5mVC3bl5gWao4rmVNxTsvp1Fdj3/x+HAZ9jX6r24BzvzvZZ9n+jgIsxKjprODFTIX/usqbB/DL5mzvTNNzvkCGsJuc5nMaHn3fRO+o4rLq+DkPXozZrT561voDyS3lk/dUW8msPXhkQCtuHgViyUVR2VdXc7Kkzz5Z+dKsOeQbP2r9BpjPqxEYTv0pNxdpC2d/QH1lLthiQ18qwKQbEWrzhwjxONnGGcalgs+bC0G0MvE8CbIpcfj5fa5j6c6sQ2SnkXjkxN3V58XvCHSYQFJIyB9x11+60crFCZhMl+mvX4wtMNfcAFyXhj/6R4S1K5K535JSZ8LmHP3O7C/cxi0hBQuLbLS6RF0NSmuj73b/TZCzj8BvZfRBxcKo7VAKfTkLneUTdqUHKeq3gqtAOKcJ/7mVexrZ6GjVXNLPzPXOaTc8kcSjcbqwgD6c6Pr1CDXQ8yD+40vbOQ61LLRXDdf98tYD8is6w5Jpuz+zXJf4aKZ+AXS6msUwwKvgPFIm+HkWHYOHScVap9aSlOMghA0aINjwZBwP0I4THgN6Q5rOTLk9qcmFA+fAvG44glM1bLD1UYltuqY6NFJ7QNXybs3y3XWmm53/3E+ljXwa0i5QDReh2L4A4l8XIzbI7o4ZI/9jXpCGmUqx59n3kgcrc5fVxteunU0rL7Qv0HR7Tn5NuIuqsZMELEAKmv5KEsc9PIPlnr+SCP2A1ASwjNq7Z2erwnMiz7x65XY3j7vlJ4tvC/aAYjiQ9PZ7rXBD1jccR+n0OGuO2bGX6PkJQdsYPEUBddHtLcmaJB/77s1EAONj6IiKiEStp97GyNAd0NkI+NO27Y6FOH/xnVitSsjYz3X81PMvMrNQ/yZmOy+5JdSr8ZR3+KTfx7EwV5tpmj5qUrHu1V3Zi5rBNxZx/+Hy/GXlIhj7z0JstOdAI+GiNkKdxsVdpU4syvpDKqXGGdMG3ZZs3A2nFc/NErxY4vvBiObBKMKgqqt/PVsg2o9usSlKilY2clNIDYOhh8mfddO8=","layer_level":1},{"id":"5d437ae3-733d-429c-a8ef-9d2b8f8f4ca9","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Operators and Expressions","description":"cymbol-operators-expressions","prompt":"Develop detailed content for this sub-feature section focused on expression evaluation and operator semantics in the Cymbol language. Document all supported operators (arithmetic, relational, logical, assignment) and their precedence/associativity rules as implemented in BinaryExprNode and UnaryExprNode. Explain how different expression types (boolean, integer, floating-point, string, identifier, literal) are represented in the AST hierarchy. Detail the implementation of OperatorType for tracking operator behavior in the type system. Provide examples of complex expressions with mixed operators and type interactions. Describe how the compiler resolves operator overloading (if applicable), performs type checking on operands, and generates appropriate intermediate code. Address special expression forms like ternary operations or short-circuit evaluation if supported.","parent_id":"e2f12f88-f04c-46db-9f1a-c69036de314a","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/UnaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BoolExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/IntExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/FloatExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/StringExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/IDExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/LiteralNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/OperatorType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:50.5903713+08:00","gmt_modified":"2025-09-16T14:50:51.8817979+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo0/8R4mVRXEl+fmnlSVxLlUm4Goz6N4z39mt/zu/x8L7uUeD5HMfTg84NQBdmNq8D74PINdsrVimX62uGV3nXLPs9oJ45j8dh4e8dZcxSvcVmnBngi+DRzbqrqx7P0gID57nQCk4VTrsATYLqFyNpSpTRqoJGiSriomkXoxEbLJBdjUecGPvUmCpwYQKOKq7KEkQGttNckM2ulXXoAmkVBqnMr36ABVZHdynHJ4ZdK0Qaj7dfA2XPbKYjwq81TKgp58YHkLL2iz7Fm4m9Hb2+x/qdY/NhA8G5wnsreJetRKQQD9sWCo5iWON9bLKN7s3tgiJqgNyQdhYDI4mga2UDxTwozALDimpMmCh5Gq2QXrJ0QxQUzkG/f0QzpHzde28dRatG7pFFnHxTKnsoZtffjuCYc8nfWkM+pesZf8vjaW/2ERIIdbtHoKGfgyBXS5ArkfC3K2ppf6rDvvgqNc9eCyz/J35rcqydWwlFm7u4NmwOFkK/yKVSf0g2WjWAFWlPv6beMYW8b1Dbc06YNf2aFE4VmIdx+UiPn9AuKGfQZJcjkflf0DUQbg9tSkx4y/LsOXlgNiTdG1BV2atjfK5Amh14WOE87QglG7Kok7G0L0evx11WIJ8/oVmjhInalE99Yek37OyQNZVmD6Ql5nPizvWIFGVe8f8WYky6Kwad+kiBmRIRDQwzmysjPc2Xh1tHQFmz4FBSf7PrgbpZ0LRMwFtgMdGZ1EnPdUH+L3ylEJ4eaCz1lhU6klXc67j8PqmaYGn+L2XkoEmaaOqTgMTElsS8ACmwkk9oFknTbXjcAOHzkL1dSbS6w1eFTp1ibSrOvYGGrpyTxvsTozJNl3JX8dSzx8BHR8hP9LvZtDbHCxUDaH3I1gyG7ju0FyudaQjbaYFbRdzGA/7Hc7/ex5GcYrbz/llPycIB5edMW/m3fkWr5gcx2d58ajjVyIc+qA2dv7IXd7DH9HlqYYx/ClO5TFqq5Dly5tP1+aSNpgGqobDV1Y9Fs4Oi07KIaEnTT35ja3Gv6LoIXw2NWyX96xpIyC5/KCuKrfJNFpjSgMq0mUGiFSKrrhhD2todT81kvby77xJEkelm8tb23y/2hlH0z7MlY1Q+xi8e15lLAGr3aDJ5Sw/uHegaSN10p9EubiCj0Om/UBcOgZ/LeIGbASGSGoKfNE7GWBKrg9gUdpowIvQmU51+hwOcPw4Ms8m4ueocXcJwpsCbQwsky0YDdp9mxlg9xXmo3Xu9osMMgW79hZs4Hf2ZnWwak50C7fsayAbHK2/sXNzGrweLjQBY6RFO4DckKoGMrBizlr/TAp4O06uApd8dQUzlLnG2LTqc9NooXyuTOxgLvyeahfY0nXnvNVMr/ICV88uS58ihKYa1VIqYMNn0y4HXQV+6eRq6UrSaME/9VYZDsl3lBtHKTrQhopmZPsW0sXIWX8bFGWKBmc5wtG2rcSIfVrsbkjGdrdt9mVj4dMzguNGsyuZF58e9XlFRf0Q/iG8hV9pUzIuM40aiR90igYttomjxxNAOJ1Zi083ha7m65rsq6brENInIQ+Yg8NSP+wICR511imLWCCQiW0DupG4eEW/hsQXeF0CxUwuDk6pUY/J6B2zxWQUlCmPeo5UqJxqIjtojdNRDr9deypoI4Qa4foaMPjq/STvWh9v7gZE5VDW7YVjWkgIp/jTaI8vHE90hbtw5c++Nmapom+AnfQXRC1+ZWVtBCrIbwYVtA39763cFzkDQJPtYGtoyDLkAiklJNJXKwagECZoN6cECb+K26gEq49bq6MbY9Be6rW9N5CKzKFiddAu8z8lHv7RMMURBJJv2jX1y6CDfShqEtjl5FKf1jm0IJSacMcb7Tv/MVJv/21L6DuP2p8lRMAkJDyGJ/Yycbc8ctZi3eRolO02mDnDh0fsrhqe3EK+cAsn5MmudlqLGhw3xhLZ9+/+RSmEmYGGbW5DMWEIYPY5wKfh37cznwl/y3zHQGd/0s0K4eshc+ezV9v0QseGwI06hKfkXfqqng0zkz0iyMnQVfe+HX6iO0C3/EvEXuUzTXXlnR0bkzlsciczRAvoW+gLmZWSX1LLPunQ3Uj5PTZ5wVJpMro642E33EYMIdaImRhRdI3krglRS4wixZbfckIvFvbsRNicfGx+xu0PQZzLIpPBk9YcTH982WTXLRC30b2GizRK0Xpn+ySbt2PjxJorChV2RngD7ZXctONnaY80DUZRyASSsBxQbf5x1bYyGOIeAPIRw5Wc1k1rziaM=","layer_level":1},{"id":"67e42aae-4075-4ab3-b4bd-a70a85e8b76b","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Type System and Type Checking","description":"type-system","prompt":"Create comprehensive documentation for the type system and type checking phase. Detail the Type hierarchy that represents Cymbol's data types including built-in types, arrays, and structures. Explain how TypeTable.java maintains a registry of known types and supports type lookup and unification. Describe the implementation of TypeChecker.java that performs semantic validation by verifying type correctness in expressions, assignments, function calls, and declarations. Provide examples of type checking rules for arithmetic operations, boolean expressions, array indexing, and function parameter matching. Discuss the handling of type coercion, compatibility rules, and error reporting for type mismatches. Include information on how user-defined types (structs) are resolved and validated during compilation.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/ArrayType.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/StructType.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.1724785+08:00","gmt_modified":"2025-09-16T14:51:26.3955442+08:00","raw_data":"WikiEncrypted:vKr6dgGvp0y08i+7u+cDRCOorftDLgQ09pymjz9BQud+On04oPmZ6KXrOnpHyH6VukAbLVnuHHvH2pJmtuDPLo0DifyYM+Hd01Q3aBfUMv2uy73j0uI4D4epkm2+3rroWI9tVIu9eGutkZlifqHTzfWS3AXsVphAcVYTiDgl0j+crNCe5Ob8YJVO3/mK78w5JCqbz6C6+Bk0NeqvfnTMVXHprAneiRVO7G2RJ9xyqabtMiyeYYjVtJXbYW3fu2RUrhVU+E874rsIk0sBj1dKMLexCVgJxmojyewXFLPhjPSe7j+547wmvEFFN1yVBK3+pg6n5Tfb1uMqxEZzL2jwUGBuWo2fvI/vNdW8UJpYVMxfGcgv13rYkdaE64xCOOucBZ1dIH0N/1EytVNkfbaPhyZV2hfVylgtPy5v3ksTUl2S/wVAyLYEHVzPRmmTUj8A8aQ4shdXKH7Ien45566B3lPOFkyy92Pfi+sdx5dOo8y2CBGSEtyLxp9C93Y6idxHAqatujcq15pWOuUu2mCROBfF4kTJksJ6bVgGUOgNkikqGoJvxC5By7zYpj0z+kKUSe/jwJoEFzghk20WCCSWxnnm+7OnbegV6Xz94s7qLr6ulleMY4l4bUz8p/Bg+6fO67BSHdLRTTpqkapLo9G1hInm1simea9T+IJfNHQokXNUiimm9WAvPkqRduW5ya+ljV0bx8yWzAzr/QnLv9z4LhJqZ1CD13CbaRATdZKQcMxFexMvhk+wAxUc1gYw2L+l2L76gTHm730GMsK3K+XzO1pKXhTdUAAXL+qkpkQT8FhLDXL3lawfp0zYenIarErZmVsbgU2wed7D+XLTvShNQdloD4jiv9N0oS9W/G1E+HpGYMjYvV/D84XbVVhuI0MQH3KmjNZpOdR+V4K9tLZyqe2pYEUDhIoZraFF8UIWiCHcvKG8YG9rjTXdCICu9m0TCyXbiSLZyAcOK6URFaI3DbJikRpkUctSb+tq0+cxMzlSGz79HM/+w/4cSt3dl+R4xeYt/MjwPSCJx6C5cgfEx0sUY6oyRTXaNtzTrmQeiy21PRSuiyi1VPInVoqgqhacKbS36MtrOuRQI08NJ7JfdIgXhVTZgS8C/cItCwpW3O5pjyiKMXSBjRhlCxtFv3bhH8uzcTMJbdxSHvlJw9TFD19ZXvZnY9a0h+XUNl8PUUjlxpl3NoiUFTn53DYnEnywz7q5HSMsihzLx5UNMPdT5IrypJAA5PprLTJpHQC/Was659v/ESbyldlA7/NlBmHrqUJVSp2d7X3qjBr+F87TSM7Ccd2isgXXRY1A1oAET2D9WotIE651GM4TM44B3LwQeVepj9mSNqAQUu6CrIhlwRa0Et8mMSfMpGj8ZWxEZwDLoJJRY0MmGbpYl4zlEKJxMspeNbmWhm/xlm7MY5LaI8dOFJNKEOCLSGG8vlTbdAMqIhC0FJtkAuhCiC5lFU72xXRgyluM2DpcIezZFlqOdk6KnY0YLtngqICPig0JDbFST4AE8BEB69GnN56+ilkcBuc5LM8j2s6nbm1jwQRbDXXxw4vnnwT8BA4DgWIugkQ+ZXeM261DKbMT7Bilk1PEIPvDh89Lp2iZq38DcKV56F1Nu/W1gkxl71ALIGb+YIPLeDHGPxnRIMqEaevsPUErog+1nngU7hzuC/ZixdWYwXWHmYVWudrKf7YRUiDy0ZstaXkVbEEOgMBQRgcOrVoFpsm08dTjRiv11rQjN5FnMnRlwuExMRhWkwxNyruUxXHnGM4XSkutv1q+tS2FPOKs","layer_level":1},{"id":"f4ffcf01-0acb-4db4-a6b5-92f53b7c781b","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"AST Construction Process","description":"ast-construction","prompt":"Develop detailed content for the AST construction process. Explain how CymbolASTBuilder.java transforms ANTLR4 parse trees into the optimized AST representation. Detail the visitor pattern implementation using ASTVisitor.java to traverse parse trees and create corresponding AST nodes. Document the key transformations performed during construction, such as eliminating intermediate nodes, combining related tokens, and establishing parent-child relationships. Provide step-by-step examples of how a simple function definition is converted from parse tree to AST. Explain error handling during construction and recovery strategies. Address performance considerations in tree construction and memory management of the resulting AST.","parent_id":"991e5381-362e-445e-8f05-5e5c818d750f","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:18.0723599+08:00","gmt_modified":"2025-09-16T14:52:22.1670381+08:00","raw_data":"WikiEncrypted:oiB98Td4k33qtSx6lIMAxrhT7lHRj2p4xizd8qFUYZr0+9lHg43po3ku5bLIpwm80C76jbW7qIMNJHzL8rk33Na+9jzpqq65lqFnCGZeza8wFjCW2Hf6TDBtfRzEFcx+yB5YE5y7Vf6ZgC98cBCVwZftzR9Y4cMiWEzDVPPBS1alGBb03EPxKT4YGvjgFzzW3n3I7ZYAcg0QkQDBkqIXdZVH+IOuQBu+1t/RQqmqx/YZDfRx2AJeGjngBewbRSGcyv1p4OSak8OxiBSzTu+RG1ElVtZiyOtZCypjcN7lP+DHGRO1TPT0ZWb7FtEZiLk5MS5bUJwz4IOZ38QeLx6oobozZYFwDcK80vUJL+m5dXBbdtShVxNA0TYT0SUndLWREb/LFuxPk7qKVxFF2Pph1At786uO5EwPc3YcPpjbi0FWY8aEPTbHdZaVGercCIrpIjV9z1zU+Pu9OMEYlGPzuVg+ULDuf5R12HotrimiDkMycjrdWwmYtC5n+5gHM7TRjVJb3V24o8P6Jk88A0dSaL1RN/YCZQeeSthVimiIhQ5i/9hONJCNB2KQ/jFwQ5drTLRsCizm3jQlU4dU0vCzw5Q691PdqqMfLeJdsk9MLY/+5j9db6UUcGUYIzqIT+hoaobVdZShFsI80EmFxDRCEGtcJsB7CnNzjBLBfeHaJb+XfLl6vFKzQyxvlWgOGbLgqO3HMG7Js9Kxi8MqupGxe+XS6n76Xt1vyliRqWAuzvsTSt7uP25MVqsDy1PUvhcyOCymO9X/RIJf548Wa/v17so+pdBhU4jNu0m9czDx9Ga0ujKmDmzLnTDsEnh6fVDESaOfPmMb0sf2fhoC2+/TFCCOWccoHpZrlWXy921uIDkrLP3A2s0hliuKzSqwD405cFOcYF2/wZh8FPy+6FI8TjlsNX0GnXWBwBgnWc0YmNVzijy9XZipVlw1V/CiVmx5MFggy53ow9TS41XAnY3QEJsoFNVheEKqxWuH4bElpes/rlrzfHhVIAl3pTbn2uy7ttpmFyo3PlZp7PGgKNLcsTSfPWXFd8RVI0lGV73tgVpTfHCtENn8e6h6FQzaLUNfzaI5eZBtraxwEc9ydwWFel+ZwQ83I1RmfFB3x0m4sjybE+HP48pzLvC3IX9onTVc4RsRsrWLswXW/ykzR58RvNJLYxDURGqAepVCoYiBFg/K4r8oHX/hOfJm6T+K5q+4MaEH51f7s5qy5VmvyROKcgxxG8CVDdvoj3GbwEuYYtRD1K6l3q57x82MUjWdzCMF4q2oP2z0XT9CP6jZHCSnbqtSFi3w5mnuPP1nq/sHmLj9vAx5wBJ739ycRXMLhKDE3mCeeiXv4R+9zCjJmN7B/DWcU/QAsPfDhXnwnk1B/FFRlRbUzNp3ASDfKUSIiwori2uhbW4rr5wcGz2nM+gqIEAmtxgyACLrwNlskOxnTruzLgYsimu2gH93uiyfLsN27HoZvNw5zIDfzPVTykG5Z6DD2g2LonWa7pLfsa03xEof5AtGQUFv9cwJScnp8iG4aeB99CLrApYslSMlpPJ1Ny1Cq7F6WVfMETl4Z4i/YBA=","layer_level":1},{"id":"54b252f4-31e1-4598-a68d-5125bed6c064","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Function Call Representation in IR","description":"ir-function-calls","prompt":"Develop detailed content for function call representation in the Intermediate Representation. Explain how CallFunc.java models function invocations in three-address code, including handling of callee, arguments, and return value assignment. Document the structure of call instructions and how they interface with function entry points (FuncEntryLabel). Describe the parameter passing mechanism and stack frame management implied by call instructions. Provide examples of direct function calls, recursive calls, and calls through function pointers. Explain how the IR represents both built-in and user-defined function calls uniformly. Address how call instructions interact with the symbol table to resolve function signatures and type checking. Include optimization opportunities specific to function calls in the IR phase.","parent_id":"e2398669-3afe-4bd3-9bcc-aaba5dbfed6b","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/CallFunc.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:04:39.1749768+08:00","gmt_modified":"2025-09-16T14:52:52.1474509+08:00","raw_data":"WikiEncrypted:1uL1obcv+aLKjuTk/HzndA+0ovI/TRNzwy5hfO2nWw32GjFmAdUn/GcrqGlEXcN0D717vskZZaJ5dZGaNjd0k7I/bhYNvxAyo7wkadqy5FrX9A3PSfix3gcblYlj3txJjTUfSwkaVMlzd+F5LVaZrCPO/AuqmRYVOA025DmvKLzbvnd05PCS7yN9OkSQWo6alEO1NswgdOJXxf2BO0okr3Ol54qapwirbr7ZGKsDJaWjEQKqDoLH765aa9ufYZUka//zZg8rkPKK0h1aN9PDDhNpuoUX1EybEnhZpbYk52zKxR38jkWcOecP8rZ/Xg+8K+2rgwgjR+cle2/HfDjflk6E00Hfb+VdqfEBZRHm1uOLgsgOEu4HgWSk3ezJHriwgKG1sVFDRJ5+t2KzDnI/otZ07NZ84J+S0pBZB3/n29Pt8wyBRyml5P9odxyKsUDBbrcl6s0IHly+w0ieDrB6d+pf5iEb+CqbTmIXzVVmfRqrl1v9zpto5wBv99vx8n39yp5YSJYqolid2NkrjRy/MIP+/57Sguo37F3BtOYMZQUgxn0VHByllMf6nKCNP8EZRH7lgObmaFf7vzlKPkI7ZGYILeXzsUyrklPUIur4dy+kfysN+7SSf5APZ6iJkq4l5AGqWTEz6XShmaFy6jF7GsOOjQ5CiL6gbHdbWgzUsAV0HcvUwBKNaHYEBtO2iZN0eng/Et+7sprfHxwT4cfzCGiKqvsl7XhO+wCbM2ZmCoXTyvMaGA6dN7sblxg0BzYzgLxF+Xjm9YHBYps+nKkEtvcDkQYGGzHzvvekc8xnTLsmLqIZwZs02rxbUwV3nij1byVxa8nJNWX8NxDQtjqBspm738VpJ3FQZDDk1Y6/Z0QAKoofVyEWjas5tB7KGfGu1GO82oBJ0oFLNVuTipENGIQ10acCClbnFA+pf48G9BPLzOyD935BCJXpvnbILQrLD3yTlIhOCXYqZ6YAjVykcf7NQkq9CzhuY04SlBXiXmjfjOwvg50HWjw+eSd4s65Oyjk6r38oHBdtJOJBeRQiC2Z/zp34NDVji/qQ7gzG1hjnsu5fQpJCYERg97dRU+wXGHCctJkK963hAfRVgWKAvvG58ZNMe8Qutu7Vo8FWK0BiaYde0JssgCSGD0K5qjnd40UwjoNco6H/LaOct091IVDlxfQzC/dmbJEoSflAfrozqs3DWkCRT+qA+bZMbpZUyoJyBKLR4YtBkW3qcsKrdbU2/BmfYX0Mwlu3l9yE+dX+/R52xP3N2KC/inLil/F28jAPCXO1db5qqCpsN1fte4veaNcq8w94usC43q165pllnyMNiLi0ehJBUsOWbQBW1a0+VPijQGspM/Mzy7rMGB3aw5UGvCe4qsiZFa0awNdNhjOZlfVYT6CTC5SIaiN6rPN4dowP2tY7x5vmcQpBN1JpuOrhl5FbO7+rq/OC8Lw1zPim7N9TDb3asUxfYynJh5LnKVCJqavhjmKotjSmYKHdmLlMV9AJF5NG41/ApL0bGqgv6SmEUl0GE+Z/z8dj","layer_level":1},{"id":"9d8b252c-3d10-4393-9f99-17716c5d0b3e","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Liveness Analysis","description":"liveness-analysis","prompt":"Develop detailed content for the LivenessAnalysis.java implementation that determines which variables are live at each program point. Explain the data flow equations used for liveness analysis and how they are solved using the ControlFlowAnalysis framework. Document the computation of GEN and KILL sets for each basic block based on IR instructions. Describe how liveness information is used for register allocation and dead code elimination. Provide step-by-step examples of liveness analysis on sample code with different control flow patterns. Include visualization of live variable sets at block boundaries. Address precision issues and how the analysis handles function calls and complex expressions.","parent_id":"b3926619-907e-47b9-8b5f-2fd3a6d8325e","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:08.0564093+08:00","gmt_modified":"2025-09-16T14:53:34.2173596+08:00","raw_data":"WikiEncrypted:vp5iIehX8Bt9/0gaK3FLs62nTUEz1yBF+B32Tv5Zp6MFxCxpNFCctO/ejjbYKNQsPx2IqWolo5Dfw9FPwvW37Sk/5j1SwD5pcbW83UP0wLEkzYqB1xslGujoQWWFDBoh38LZV9c8eJS0t3mjTQCz4NSbS08BgE9flfEcZlwjO+Gaps2wfncRkqojCNlA8UFQA34Der1sCtcReSkgAkImVBGu3VqYxz6gYTHLoraZBpxAXgDL/2yfz6zQGAtla7Y+/+Ss1BJxmMO4xXiKtq25aJYgNWxaX0+yVxiBtHRwU+AUG4ZU+zI5T5pvVU42IpF3vhpdLzLyasM9desJ0x86/LGEA1mtfw6iaNy9D4dN3Rbw8/R3j8ckGvfy1/c/kO+ZuTRyPN3doAjA5326maixa99EYWvfRF+ONa6ZTM0EQwfrIiS3/lztO/soSc893urmJP7vUKgrHUVOURXvaPT4hiFVi2HXKtQngCi24zOlxb5mOvaUMxMhmgAlEfotUBt118kKTUvxcJb7leEa809iXyIy538h0SJiYgHcX4waauSD0jx52ipwlN5C5Zsh1MqV/o6OZpzGQIE0aCacIDRaP8E3KjdnjhAm5Tm2E+Hd07Q6gFV8NthiPRaNTmTTqn9Am4Oy7X8mxrrEi6RpKo6MSovdVx5o4NNHZjGXI+coFeQC3f8+/fHjebp1YViCug/kpn0/58oGv9/qaZ6ztwXrDJdUv9wxPbbzB/8PbDBALD8sLKMsRaKniFTqAvz3TDTguwRP75M878Lbh0naYkF/8xsLcCTcCxSbrAAsxPwiTfZ2RLDBvqTH9ZkpAhvPGnUVP7tgEkakaDPLurasZ1ko75XHIHz68Em2YOg+v7aoTyMkq50iuih60TEB6S9VmTXHnaDf5E8jbPym6SGQHsjGzNzWuG6ItxIB6x7q+5ddNg6ENj4n3zuI79VGR5gM/mj8GK+GyiESkBcMPHAlIwDcFgH7dF60kpgXzRMdSB9CTZyEC2hpBt0esHFCgO5Q23p3/O3TseEW2PMH2xnpih3ULm/P/fSVZolOlYA7oJbu0jaKRYKOxqrmahfvyLEQdMpWnL1iuWDay8YyTKa6Rx4A+u6qHdHGhW7l4W6B1zrg/GdKQOAaeTFXjnkbjaMfwYuDyEV/8iOpimnYYEaulhFItQ1CZz2kDfMDcOVldFaf7oKOxUG46TwM3qTWULDypmcA3K+mqsXz5N+wClBI8z+Bet7aqNRabl6Pb1QpoaGqkw8pqGGV4FlmRoUw3OCP7oqtgG557BF8QFMxalecvvPZhkTP4IQJhsXl8VkcBjj6jPGhSIH+j8oVoWXoYecup1Awg5KgfeaoQ+f0Ai9w8Z0a3A==","layer_level":1},{"id":"80951cce-ce82-45d2-8a56-51beec7f1f87","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Execution Engine","description":"execution-engine","prompt":"Develop detailed content for the virtual machine's execution engine. Explain the instruction fetch-decode-execute cycle implemented in VMInterpreter.java. Document the main loop structure and how bytecode instructions are dispatched and processed. Describe the operand stack operations and how values are manipulated during computation. Illustrate the execution flow for control structures like loops and conditionals. Provide performance analysis of the interpreter loop and discuss optimization opportunities. Include debugging hooks and tracing capabilities built into the execution engine.","parent_id":"786cad12-f31d-426e-9be4-322905970e5c","order":4,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/VMInterpreter.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/CymbolStackVM.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:20.8880565+08:00","gmt_modified":"2025-09-16T14:53:55.4373462+08:00","raw_data":"WikiEncrypted:jMgId5h0EoZtwilIIkOV3gGBpC1B3YEGQvLcrfhqq/8zvqvtYwQQU699Llh13eIDXg7eW9DYvCGYhvqEjlFcyP8U4R054dpH5NfJ/R3ICz7xAnT4aW6gBuH3uWKV/HEFbSP+DbXueiF1P1OjYzeTdr0jdv2IRB4+xWccQeYbsqlZEe8uwpiIO8oFgrDEckE+hIO4FLrrxaXuATVMozrrvUSVj5WZ44hg5YDBR+99E4OL2wCjrWKQr0ZO+svOE5s0R2fT+yG8PGNbJjyoQCRUqVSK+KyH8vrnAFwQ4UIgJ2UTg0YVkB1r1sbSLqK7dUwXC6CV5Ge4si2ATFxJG2DClVMegR37mKPuBM4WZikFs7ci6uXmz2Jc92CYDaJcXsvTUo7FPwOHsc7Eqf8/Fav+LKy+SSVGDtkGF3a8eV1Dmc2/9nMMjYZDtYLSrEX2WLeBL11SK3OtY5MTTruRmaK3b3SjBYQ9FNDspWZHwIZbo9rIxZ0Ja13hSEfCmXgYi2ih+6lsq+VyIIZFNwK0dxEM297FtrfTJxDyGfKIzA20s4CmZYtqywrtx/LvdymnSrfchPaFqdfyLXSFODgkFY8NCA9JiFdkQdYZS/ndLz8yKz8cCrDgfoIigvxmoekubgMBmXA7XZWMn5T3GogK7K1O+zv/zVQpmvGYbEdCjGJcVYFwb9Qas7CSiSjvFJvQN0OILqFR0nS4eZ90pMrJ/b5y1Ts+Y62Bh2CixjpxFRiq9zlQqt4KoR5EG31a3hwYTtbO7oWemZDR+kwQwWh9VuU9EV0Xk02IRC6JPMdqW7tBwLH3mylaAHBM/W+Cbk9QgMWeQAVsVNA1ormIJdrk9kHeK88A0q8iP4aZ/N+1r+x3wbR1/8326D76yMEZxzPbIyUJvWuMD9coaVlSBnFF5nS+xIoem2t+Hx45ywbL5C7q1Oray5S/aHPjEWzmzwrZGnOaCtaNiD092UEXO4iB7JsfR+QHUP1aWfZbXA7ARTUPOtWtvMBrPrgadMeam/NR5CPrQRZfY+6mtS3E1wQEsGepcrj2sFB3qSJQzadxfLH93mTppHdDjwcswNx+jH+NsTjJWhN4gPbURDWWNwHofu7cSx9tEonu0opeYw+Apz5qXOEbDroNP3FCh02V1dbfVMKfm9nQ31JyDYYyIUB72R0Hni3vgRpdjudG87yb/P/5nkk=","layer_level":1},{"id":"3c4df7ae-7805-49f5-8b6c-30f2a704c369","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Interprocedural Analysis","description":"interprocedural-analysis","prompt":"Develop detailed content for interprocedural analysis capabilities in the compiler. Explain the CallGraphVisitor implementation and how it constructs call graphs for entire programs. Document how MethodSymbol information is used to analyze function relationships and dependencies. Describe the process of building call graphs during AST construction and their role in optimization. Provide examples of how call graph information enables optimizations like inlining and dead function elimination. Explain the challenges of handling indirect calls and recursion in call graph construction. Address scalability considerations for large codebases. Include troubleshooting guidance for call graph-related issues and performance optimization techniques.","parent_id":"1b2548b7-74c2-4e17-b45f-ed8bb24967fb","order":4,"progress_status":"completed","dependent_files":"ep17/src/main/java/org/teachfx/antlr4/ep17/visitor/CallGraphVisitor.java,ep21/src/main/java/org/teachfx/antlr4/ep21/symtab/symbol/MethodSymbol.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/ast/CymbolASTBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:18.1207492+08:00","gmt_modified":"2025-09-16T14:54:30.2334516+08:00","raw_data":"WikiEncrypted:9O0DRY1Dye2nQGntjttvHlfG5ckd7fqLPSLbR6hK/eCUIJlMqbzfNV6yOFWN4QAf5okWLqKixuQ/w/y8eZwkOQ2kJmxs2SuMaFVp/0KGdOGYsc6SoPUGoZggpkHKVmgU5sJpSm3wCTF0TNcotMnRLaMFGWuFe0sLNLYHydgdHAQk3SG2u0mvgh+dmA2uELb5ImY238nQ6bkAhmpxV0Y27uF6XvPjHo5NomFpz7tetAbMUCGjzax3wF/VXmudyewuXvy4io455WXrN8nWEzmdTU4r/qAq9JCcUzrYlsx/jfD3z0sZAqftB8nhLB4rgZluHfo0H0jQTK/1pboELd4f3uY4Z4uhmuJ9pdx0J4dualZWlyymNNveDYrJDb177cdhVrzp/4ecgRcF9FSb1MgApaXvXLSEPx/3EMhaJwjMayd+mJVCASV04mq0SLgpveBii9BpJfA4zwvxriWCTL3oDa5Chyks54yr/m/JU/GH92JlrYc8roo7cEdcxOR3cuzyysyHfNBWZvCymuPpFT6Nl48vVLTa4/hnoa0gc8a21SGVHTYDX/27iedx15tlgFLrvT3it70pzf39DgghmVbdXPfhyFuiJF9nYOJlfl72gwrgQfdmCmutFBf27S//p0LqILlb9wbwYU4kvGEwoxwNnakI1AJ8rW8PrCIoo9rv/WyXppzscKx0hZLGWw/vN/Puq+Ceuz+tYRz2nO7n7t9gQUKntHKDb0KQh9AIj7CnPhrmNdASWFwKBfv42kiFO5L3sy+j6i0RCXFn5h/cpX/I19MrvIFlsVsVR0TzwxCNBQCoUILcMEvPs9rYEiFW8iFc3mBi4HALk8fpAxtrZLqH7lsqIkB4i6Y5ubWSVux295U0OLXv1Wf+31uxQTwupCwVbXklnWteLsl0DhkIqcD2Ts7gzdBQFQxvAEKg9wmsWc6jHceUUA/Avnbd0HBh53v3Yd9HRJT/SgQeiarWwLwOb0cLrV2unsJrUF13osVCrTST77xrVegnjYpHEoHNGAVss/s2DD4KF7kimJiYrc8SljcLffBYXn7pl7asN9mAG+RnzHMehO1bIMJgzlqv6LH0TX7trFr0Rn47delvj+WHRwxk/f8kptRtYvrxH/9pRd2RZ8D2pZGnSpKxiE23QF9w+O+/En8TBkxbEN0bC9LEg0Si8m8LA/16OwNGnE4WsyVXfUuBBVYWPTZPinQHImqG0KQehszO6VconAyCkXEyGPnA4MvF3cH0t8BjJKxhZnt5854oE3sKSPBwu39WVrZ8ejJ4jfJ74tUdFfYS7wiW2Rx1dj1TFza4AOdHQGgcqdY6SO48ctGl16hgAkEbvpi9k9mm908LUZpKe+vT1vFksa/4N7InjZvXWXYl5jrFsLgaDqyfBUJw+AnBPq6aF0xWXzgxjXCdgHb5t6wq+IY37JbouXBOGe3UHVwpj0Bp3BbgmegoWL34HespzBs5iwMMk20lB1EtT4eB7NKGOBK9beyrJPY8FLMkpxt5kCWiIFPP8ZYiEF5cI/gJNV3geaQMfgW1n9AK56vWW97TX0lYVp9oyqZjIIKqBPDiO5nnZvYHAa9m8wxI063+eDrUZDLvtMKmbwGJ/hzZxwCXJzP4i9gaPex4xYMLZQEvX9CLiaw=","layer_level":1},{"id":"eb7621d4-3db6-4d44-8452-cf19191a8bc5","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Code Generation API","description":"code-generation-api","prompt":"Create detailed API documentation for the code generation components, focusing on the CymbolAssembler class and the IOperatorEmitter interface. Document how intermediate representation is transformed into assembly code for the stack-based virtual machine. Explain the API for instruction emission, label management, and function code generation. Detail the extensibility mechanism through the IOperatorEmitter interface and how custom code generators can be implemented. Provide examples of how to use the code generation API programmatically and how to customize the output format. Include information on how the generated code maps to the original source through location information.","parent_id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolVMIOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Prog.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:50.9613322+08:00","gmt_modified":"2025-09-16T14:55:00.6396392+08:00","raw_data":"WikiEncrypted:l0OSRLb3jX0WYjxj0Qo/H4k3JHg/jz4y5OHRzNJJll4HnnhwSWGuojz+b4/mtjy4tixy6SHlRCPPiC9khsRAtyq+d0DnxOSpGMPBTlPvMLiQwQtxFuFwFGcsXOrd9rvbiftXzhIjV6M6WmX6EOp56Jn+1/1QCeuzZjm2Z9rvBtsLYwBpegcuzStVCu7WG9xCvyVLMO3Ax6iYaxASQZ+RRp/tvYgfV0p0/6dOk2Ozx+1jY1VbJwqarwpYT165epCivByOeJ7O44SwtqOHlpLyLbj0OadtMIZu61TtPBqc2B0UJ8pMAFKuGvJ4JqynLLMoR1Js/zaIdZgMlXCeaqwOryIe1Ly28azXiej/oMUPeuS5XFpZspHLAtVJucTTJ6c44LS6Qq60wQQ9hug0WqqPZvOa3WpnudlHE2kCmFrVhjR+evh2anXogjnCKFVhkNd0lnb6inDnXe9g44VFu6eudIVaGNkuX7k8WzpvpH7BDb07PGMdQ56CwoERcd8HhfZ7blhz7Z52uTcFNVkU3k4Uhcarerkqon8hBR/VmXc7eIXNP543fGUWA5dB6basy0l8upEbCwnBy0Wgl8c9fafjvefhGc74V4tIfDaxyl21a1F8y6jt52+uLGhZaECMXOt3dQa7OKXurEIC/wIBGc02ESOrUsnyNRtDVZgCdor28ZLM+hQRlp+iWkFVVVjZUx7iNAmp0Y3ODYxBeNVLSdp0ckhCa4NnHWUncoFNjqQgZEeYPL4hGsoaJD0KXOSvHLwEfk8ioDRG/+PtFcF6sTREGa3Ck5Ao1ZTpCo5j/W192lWA83GLmk/FxNg8v6kxBFGhBln5mgt/tcBaJrRtkpt1DpOnZ4QYFoHm3ZQtxuqGKTzBv3uGIBlhzAMbC3Cnf8pKZMiI+Rs3p2gNz2m5XzfSeOpBKsLHXzhzHHwittBN8+36duPsVAmDRso+y9z/vAN4wyv9b7SON98mOVBHjT1cvdRcpjnZsIBuJg6b28+jM2fu0QAkyU6/3Qef6kYYjO0OnUWeItKAbhGqQKyGdBbcvdzvnu4/N0EFyVt2EEYxWyiIcIMBH0HgLKtvdFm/Qm1nk39JuXM/9mqxs4SPdZwk/dDvq4AMuQHVWDTuBTolo14C7yirC7E7iWw7MvBbxisA2Utn9oVcYkIQhmzXJQ7btA3LIAm1j9rkxpL2yKmO99CgThx2ficYnKU50LmKrm663srs0vNuVL3WgpF8plxOQTeEPoBhlEO0UsdLTFh2Mp4xIiZsE+thInrWp5M/swbdaHi2I/NK2ysUXyS6hkSjgaVJO2wIeJbykv6A1cOAl4MGJtw0ie6a3ugQQwXJukMGt3aJ3JBu2sVXao2+axFOyQ73an3f1867hKcz/fbYtPEgcVmXmg/j+2XOO4pQ9k56A+o5EhpyxwE32hIrAqFH5tXA27fanlxSZBll9+aZggqJrYUV6iKjQJCyZqJh0JORJ9HjjoUM8uqhm6AzbjZJdf8RImnkobAdqhWYNXmsmL2EWZo7k1iUa2c4FAOKW6rs","layer_level":1},{"id":"89e1c8ef-50b5-4d3d-acb3-c24947b363ed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Optimization and Advanced Compilation","description":"optimization-framework","prompt":"Develop detailed content for the optimization framework in ep20-ep21. Explain how ep20 implements control flow analysis with CFGBuilder and LivenessAnalysis, performs basic optimizations like jump threading, and structures the compilation pipeline for extensibility. Use CFGBuilder.java and LivenessAnalysis.java to demonstrate graph construction and data flow analysis. Document the design of optimization passes, including basic block identification, dominator tree construction, and live variable analysis. Include examples of optimization patterns and their impact on generated code. Address challenges in implementing correct and efficient optimizations and provide guidance on extending the optimization framework with new passes.","parent_id":"f44e27c1-6dd9-4ae0-b131-7a0381989c6d","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java,ep20/docs/design/register-allocation-algorithm-details.md,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/cfg/ControlFlowAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:08:27.4517229+08:00","gmt_modified":"2025-09-16T15:20:41.4978592+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl3lPUMpNdx1kmDVaFEXPdSnQa2kL4lUUsphxZz2e+/qzoAVGBCyaYaq43tHLFC+UCt5UL3DPooLHVzrIK1RQTkTqjrZLfLj2jGId8zJGlmNcplPE1neGMJ72I9sszhKG7Q2GCmakk+TlJuwlFocYRpl5O0NgZHvFshkRhyFgZyXhUD4tGAbagl/k6stMNwcUzcbJFag+FG/SzTSkbp0wk21zkuEO2+A067/0Tir4zqqYPz7ozR0zAtm+VY2mBbqfmU3HY681GldE8Z5a6TguDum4Jz84P/q12erJf24aPsatRRztGd69VExOzRGT0o0YAJYdMZIRx/yT0HXqRIQTRsXIUhpiS1FebbYT44ropNxdswG3Lc5Ty1u2/wX2kWo5jOGxBkA81DcHScav81lt9a47S9WfH0sZtrYUsquVHYACWTFO+t2dvb9wlazLQZ8MiNizdSESD0paSaMG6xDSONtoCpituhkwHL3K2NvyDoveNIi146CuBXYNfKcco5yDvD41dSWPfb32SscDHJXd1STuYUN6dsasOSwyJfI1i2waTqdcW5vdB4pS+zjsSiSTtMBD0JBWA81R7j2P01Y+A6KyNTTVL5QkVcS6rdh3iQtEtm4t706t4dslCpTeYbeND+Qz2LRonnCXz5/cVSMcc3Fdtn2o/0ktK+k/frQH4mOAYBSx773AVD+jcnW/wwLf7GQDveqJ3q8FKFXg8jYLjUJhITFXeNaPuU2EYJWk740KNlvLHuLekYW4t2F1dxXBsd7U+Cw0E0dz/1kZhC9HKIHzOWd48Tw5e6tuEDQCUnE1uwKSPQ4ie84SQ/WLZeuSZaQ7EZLnve4XH5dh8Dn4ttH3XNuPIj8neQgOPO+J4G6wi+aRNypHzU20QWMdw4OttZiKDbsB2o1JvxJHtJKC2GAmUIDwgw6uSLsKNOvpEW3j7b1sSeWQSvlqupNpyLmxysF1XDYgwlSlsE6KlWyXyJb0JvWX3Ax6GY2hF2k11ItKbI5HZ0wn0qAop8XooeDnxC4YqSqFl9pwF135lpTGjc+mwQV1BsirslMzHc7WnmeG/DeAw7RgjvAUHDbWAf8E38vndtxr6jLAxm75UGDvi52g+wv8H2Sx9vqBHFsoCPNkUzPyEmYwOz6+5FE9yvCMKG36jfCIxU+7bYFKSOmygENNqFBze1bW934Oe287FAnZJy3zd5+6oXMfj0QjQThIOgHEbXuCSUJrE91ToUpVPmTMNoaIxOHgmOZXN9WAriZjHrIxyvwGMEU5/n3SvSUont2FRW5ZlJzw8dQ/V3ZKS2tzRUsN90DPzd07QImB0cQwyyKADbrTHpc0wWN6ccWTgPHznYLuOYyOn89dwmhalHTfFwO0QyQqaVvLALDlJu15ZfE47rzYQe7P5vpcCgFfdxJDjD/F7L0QpLrD22vrqz4Zyu/QdY8SesNuW7JmQEFvQJbJHPjObeMpatq8Lqbm+KBRia5IpxoMwo1nukxRaFBrkV+HiI1qYSaqSASOhLNteT0jeySC/Zkqn48s854o9Frws7ArRG52O/1rQYdd5blnlL0kkcnPZ2qYhb7V5lwqp6ukgeK7nlxDTqDGFLrT7zqTTnB2f5RO1MxfEel4+1cWEdvfZ34Zj1OxeZ4tTfSF9E3WepmvriutcHUH2qVz+3ObK460z/6cg8Q5sn1JO9Y=","layer_level":2},{"id":"f6ef1ed8-23ea-4c51-a0bd-2374b1475754","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Expressions and Operators","description":"cymbol-expressions-operators","prompt":"Develop detailed content for expressions and operators in Cymbol. Document arithmetic (+, -, *, /), relational (==, !=, \u003c, \u003e), logical (\u0026\u0026, ||, !), and assignment (=) operators. Explain how BinaryExprNode and UnaryExprNode implement binary and unary operations, including operator precedence and associativity. Describe function call syntax and implementation via CallFuncNode. Detail assignment expressions and their side effects. Provide examples of complex expressions and show how they are parsed into AST structures. Include information on operator overloading if supported, and error conditions such as division by zero or invalid operand types.","parent_id":"373de73d-1fd5-4ad2-bab8-0877f0474ac3","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/UnaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/CallFuncNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/AssignStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:06.286015+08:00","gmt_modified":"2025-09-16T15:20:34.2659197+08:00","raw_data":"WikiEncrypted:5LqOgvXJBLYelC9ffMKo03pSjNzJ7WZXtP0GI988juu3GVtUOkH8d+aCPrhrcgH/DDjyNTbqBvEeE/EW5fEtSQ+9HGb+FKuLtxGS87T3qDOaviTwjTQDyTQL6WYGVnWFPtfn6PAVWP8Bkz6v05xj122V+PUYOvZmhS53gz/jMA6ATzc4wDadbFrdMncLsLf38PHWvfMtz43OrAdjySUQondYP5UGZnS1UJX1hXsS0COMViCrIXsHMdgzVQt4PlMSvCO40S3an6hpd0fh0fZVsR3w7kuYv3F7dcb6u+A0R5ZbtjKte8f90uw6keQ6rj7bnyShVyCt6AzTHeuaHkOljBk4Wq4NmtPdsEi/JMh9P4rlgoNJ1YFwXVhFviXSyaMzsrIdGomC/UcI5JLnCTPqyzNfWDyY/gHPub0H7TqbAqqu3qIeIuwr+I3nkGAAWMBPCyGr7YPY3c9BHKFxxlqSfkqpizifMEsWR1MAx3xyrvGRcCkKLrOl4Ne+m62TmD8qAZg3qxGCKtgbzYCPGMEJiX4lKWl8Xd9zISNHcwhPy2fttO8jDe1m0n1K7QDTz2xzWvRYTAdG1mvxLa/SEyITNrT+vTrfaC7A8tc5IOlx9kdXVRm8ZdHLX915I6tXi02zA7Widev4ZFMLRyPOfQr3uElIZGl/mClPMVl2r6Sj0dFJrfCcQ+mNfYd3HYImmlShXNRKZ052E405wClo2Jnmj8IzEkxpeCOxvTQN/kXV7k6uxygzec4cVYBGTHaqhd+dyuegyfCGu4xjKvYdAsd7cQqo2PFZHpdMtip3WT1x+lMb5sszGGVqOkp5uhiwsDFdvJdNF5am/axCUbBRSPymj9ktZv/Dyefbdk3MsMKqlSEAYgIgPHSKKpMTEH2htWgHt5rcQ4ZXAhETAhwrXNL73WyYigdoyOxZpgN/AyTu2cb6QLdEbm/pFsNnTmHzMXMN7u8PhL0h03pibF4BUAxHnNoECmzOZhBiGGjrmZEjS+zxQpwpFLf21CkNiOvJOzN36Ze15rs5ee/7Cgq3PKzOF60b4AxsRbzbyfFVSsT/WZ2QRgwXaCz0G80yygVE0KnPutX0UuzYq5xFlVSdhvem3bsOSQeUFs2Rr1G6NO0PY77dC9CM6HSACBuQaXpobBiXKVqCPfhYR67NILsjuf+lsATjjfHDlWT/ceW5bdEizZ5H+c9fK7BxrT+UnKzz4NjUoqJ4YZzwrzbmGDmukGDXfDmBGqiHji+Bb5Uj/MewXBgCni7rH90dFrgsWJCdCE+VhfgwEnOWyFNK5c0FBEcLbcfjA7v/SX8LUkqsNdUcamXBOxF7WrPLtWEEWzgiwSH8HiovZOBZw4fbBM6fX8Ztq5naidnBlb+fOxX9RFbCWnRSPfPuL4CLe3HlCE3lLsVF1arDaawcTefqkveSqBvOSSJI6BIVEYwHjqlTcoDSHY2zmXDX8cTtxE5qP0ctzADDZSR4J1p4QQp3nDB0oQbt7BEc0A79LNUR3dGg/CzBW5C6J97XpduHlpiWmqrJMM6wcKh72GKhf1+CVaKo2XkFTBIn99zbPbvIX7s8+JR2LxgHH8Pu3J//gspFhSrJMIwNvw84BErJXxj3eFYc7wioQg==","layer_level":2},{"id":"896ae6fe-867d-4388-9fcf-354c9e9462d3","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Error Handling and Diagnostics Architecture","description":"error-handling-architecture","prompt":"Create architectural documentation for the compiler's error handling system. Detail the CymbalError class hierarchy and how it categorizes different types of compilation errors (lexical, syntax, semantic, etc.). Explain the ErrorIssuer component's role in collecting, reporting, and managing errors throughout the compilation process. Document how error locations are tracked using the Location class and associated with specific phases of compilation via the Phase enum. Describe the error recovery mechanisms that allow the compiler to continue processing after encountering errors to provide comprehensive error reporting. Illustrate the flow of error creation, issuance, and reporting with sequence diagrams. Address how error messages are formatted for developer usability and how the system supports both single-error and batch-error reporting modes.","parent_id":"5a9fd681-5265-47c2-9876-2eb17d74535a","order":4,"progress_status":"completed","dependent_files":"ep20/docs/project-architecture.md,ep20/src/main/java/org/teachfx/antlr4/ep20/error/CymbalError.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/ErrorIssuer.java,ep21/src/main/java/org/teachfx/antlr4/ep21/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:42.8969914+08:00","gmt_modified":"2025-09-16T15:21:37.831224+08:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX04EXNWsx1CSUfMeh3J2VGOx6LxuOgbNnJPSreHaBb/CDFs8vHqxA60aQaLGQxyeyxH4QPY9OxpiIERpq2UypuI+TnGvWJBFjconVfY/SzZSwxq2ijdZ0SGQv1flfJWTkuKvFUsY4tjv/uUYTrxKrMvQ3yqAPyXIUtvNHbpR5n1CW2nlMIHtDfeb+AEJHwVC4ykrQBe0DRXZaBntSQamYAOXxMAviTM13HZvNHKjp3pOaeQESTpQF6wwvl8rHUUlt0pra8daEmDOiDgAx2kIeWmPlreRxnla/oDZWjhqKLaIFaeji9E9mgV3Nj/pd5OhleO4wWdx1k7BhOtsx3FfWUBXCJ6kkHgV/RRrzhTpbKsvrNEE7poe2RelTyO0DvdT0i6+obXKCmSN6PJnHeHdUSUgMx+qakroeqYQlb6oBF+Clw7Gf+KU+cbfm5LRTwFiGKgSYaj6rFvCH0UO+kBs+UcwJeTBQtCen9tAHfVGDNw4wahMXvofT3cy0qT2dnndEhSWO9+IY605Frj0ed9fh2p4tIAfjze9UgZk3YsD21Gg1RCNm4oP7PZrVgj/1u1MT4XICC10Nn9k+s2A/RdB9E2H5LANsETKN8WNUZwCjQu4EZkaVs0Jgr8IFkb4UfxNl/Duikta9nt0aP92Vf+wURYakbtJerZPNGdFCubGZQtKN5vGBA2gesE3d7EKXaCYBCPuoMPOIEVvUNqDxsOboL7MSbCG87tmwTHKMOwS4ZrKZSOXR1+mJU5OGPmvif4z2B3udO336LfdXakhsbYAG2M6Vh3x59zjpzMT5JsiXNMhSrCR30UXUiRsHPuTHdqtR1zLFgC+99lTpRvpNlQxwrAoIvVuR2Yr2YPOt54473Ed3MSeETvetyT75GvLtXYkydWdMI0N6t2/UaZGeuR/OwNAV9/rNPREKmpz/3ZgKzy3GVTx5bBr3uCrHByvNQSBs8QSYL+tcggiu22H9enVKAUjjyi1bWit3efqTJk9JAWP2Ho8GgHf5KNcOE+xBs6P7frmJMJJCNE73eEa05QOBurX2kjRiZ8wyNWP63dOoTIzQZ9058BHYsQNTyzMEQvY/u36cimof0PY0NtCC5A4Vn/e4GI+udTFNn8+8Ru0TOMMquINS/hARUTOCG1ynMnglVMy+cYzXzUi1gHyeeMamF8pksvkys13AfNwSgnDYwy+B28xUO4s0OU9n42Ufa8xDjQVA9lZ0xOgk+4CTojUGTVOPd8E5FMibr8qqVn35bw/s/Cc70RG0rT+47HzCwpsf9jnmj4Q4DrCPmQmr82mZ1kLMTobkigYtzqId7mNcB/zBUCRTuH+G2F/f7Zt+trETXQybppn67oT6GuGJKo9/9xfvhq7qt9tjwseOUzSwxAA+5y2J9fzI2kYdMHHGCOK4BibzGvXWWbMMAm5U6QwGIgQSWytdaJG13lRHgJsWyOjJk3BSZOsDC1uqxyO3fvRSh+pf0bEmTWrlW66HT3C8saLs/0rXSjvjB+aR0iV7FcbbbDOB8Rj+VxQcUIN693b7ps/bglD/hkJ1N0xKPuDqsuIf8e4gbZlZBGQ3V9Oh94mJR0mBCBf95e9Au+97ypZUS7SYO8o7eKIBo7JV+E/+wFGQHdDdUBsiqvKXihmZjHpzXEouhsQicMSQkQisHfElPzevWvFLOpcE0aU4KwOCS5StdjRGKE8GHL/1G5livxf4mWxO90QKWJwlqVE8SK4Dv0ZZzA7w9NAh1Xh8VYMkn5VRHYx5Rejyaaa4TtlRicg","layer_level":2},{"id":"eda2018a-8a06-4714-bd16-25f911468c36","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Stack-Based Virtual Machine Architecture","description":"vm-architecture","prompt":"Develop detailed content for the stack-based virtual machine architecture. Explain the execution model described in VM_Design.md, including stack organization, frame management, and instruction dispatch. Document the bytecode instruction set defined in BytecodeDefinition.java and their operands. Describe how CymbolAssembler.java emits VM instructions from IR. Illustrate function call mechanics and return value handling. Provide examples of arithmetic, control flow, and memory access instructions. Explain the role of CymbolVMIOperatorEmitter.java in instruction encoding. Include performance considerations and debugging techniques for VM execution.","parent_id":"73a9de86-3c93-47d4-84b6-073c2b7827aa","order":4,"progress_status":"completed","dependent_files":"ep18/VM_Design.md,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolVMIOperatorEmitter.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/CymbolStackVM.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/BytecodeDefinition.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:58:59.0970649+08:00","gmt_modified":"2025-09-16T15:21:41.6399314+08:00","raw_data":"WikiEncrypted:pvBeicjrbFt1PVx45D4cuoxDivw1Q+Bm/5/ticGMaEWXmD25vkZrKHtLfDAHOWlWvf2TrOw8KmzfdFLvaAY74dmjeQ5CpOFH4OaYbLiTLTIFADTjFvwcm58Tdeo1JkQyF4FWWyycwMLLKt9KIMr/Xv1jEz9oaO5KJKC9LK9UDE1T3xt2cc6+5ds/AmAwfcUhDfV3f4WqyqMG3IEIebblPGmgbPfbmUlN4E5pnJhfyaCKZ6HyTpgqGt8C5GPs7pwFoGib+mrwT8JFsFJimzcJD8Cf4JZBijbv6fUh21OwjlhLqUAXPTexARrdYcsrD81Z5tEAjtyKt0ZdKylFC21QpmzKiXK/wvzoXaJ/2PPBBKX4f86AZB0BBgxFD2OpsqkP+R2Xy4o6jxOxGPESm+1MxoZeaudRglx/g/0jPwfFT7CXSBFiG77Zlqi+iTPZL7F1mZ+tgus92ZRcteLa2w/FyTEst4vI1luevPrEijFs+ErRl12kl4i5nDSaAXgVjfdfGEZGMQ2+BlDcuLAZK8+XxtBt32HdYqJPcNqLAH33RmchiYXTqrPeNhZEiefWboeDfkQqMAoqISDIktpVOsvsHD1+9GLDnkDLBcyPPVQZrXvj2CorQSWQVUnSt/POF1vuJhZ3lxziKqZ5nTNJYYuh0wYuJF3685zL5npCvocsQhWXL9q/zKLF6xvSnNv2i6LC9xlWjgBR9xV0n3AsitiPLJv66RYZ3L0R+xqievdPynFlxvfWY8kfkLPHeoviYyh7J06yRXJ+6vJqhbCjHOekWlQriFxmbq8Akj3ldyBAzwbXZg9iU/XYEquFPVZri/zz5UOhZNHyM7X8QrKMsfeHswjZYvdjw2tRoGnze56JUy65SuVr1cSzZuo6dmY+RIutWMd5JuLswOIuuuN6PO1FV0ztj4dFEjm+ORqObkGcn69UDNxnl0YszFS8xcQbk6qzPNoQ2thuecNSqRFlnNmlWnQEEtu2AwDWu0FzWO0W44/YuSnNbnTmROP5bJuc+yWtG0pWcllOmtiZRf1vRms/v+P1wtxBXxHYp/MLtTMRL6wladJtVjqIIYjtfIJWmV8pGZZPGqCYc5RLZXZswYl/wjYfjQFJ/kv7uEziE4IIyuibt6CqDSZ9u5dy0D4Ip+bUm29yDM+jC6NrYmmSqzjj40lwbFTvbufEMRC9oSI/jpoCIFoQWsikVsDKewjtkLUnEYTkV2RkP4ZfP5MJoKq2WWXwcXQgTS/Vzf2dr7X8q+oWgklS/D6BxLORjNTz9NLE5xSE61RRd8nsqXaO5/ccDN7279J40dL9HrEGe4CF+3qJx0PZK2KUGdlUu0rmqc/9PmGL9j9AAQcTv4al1/yqsMUtiN/Aa/nVdmBJzyyCc2ju4WWN61aURkqHHy5dUVU/bhCMnygMN+4aYc0/7lzbs7+1vUGwUUQ6ou8pgGxe+/MpSYtt3vCM5NXMttYVM4yuVV1QTYtkRHoQPkKTlsDDlxzZa6GRHUNNwUk3BflZ00xmvF2MyS4uGqh+rqoS1gWSLFWHZcPfg6/E9E87Yq2smMau5Lom9ZaPVp02dP/n1lyc/TmbbVVscRHLr1B+S9wEU4Wq0dkKoWvBTnYEQnl/vEn8zNpfqBxgUg7+mgvHOF4BC2TDp61uZb9efrtJ8Zcc","layer_level":2},{"id":"ffe6309a-b8b9-4776-84cb-028eb78677ce","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Label and Function Entry Instructions","description":"ir-stmt-labels","prompt":"Develop detailed content for Label and FuncEntryLabel IR statements that represent control flow destinations. Explain how Label statements mark basic block boundaries and serve as jump targets for JMP and CJMP instructions. Document the specialized FuncEntryLabel that marks function entry points with additional metadata. Describe how labels are generated during IR construction from high-level language constructs and how they enable structured control flow. Provide examples of label usage in function prologues, loop bodies, and exception handling blocks. Explain the role of labels in basic block identification and control flow analysis.","parent_id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Label.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/FuncEntryLabel.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:36.9880356+08:00","gmt_modified":"2025-09-16T15:23:10.1889586+08:00","raw_data":"WikiEncrypted:HfwylyGPL34NvuXFDpnUX91i5oV73CotXuwDJHUfu68Ktw+2MkocvxjhB4yB4lXCSMm9SSUpmOaiISKZPTWUBqpxQAy6Vp0PaWT5HM2CY/XVKJ2jLiPnxdZPVopuUShjhH+NhdkG5wiPNggElK73blclNJD2ygWN/5Gp78Nxl0WPhBHGwWGtNwbZBzZt/wc31j/YCHLZsqzEmCTyTCgbdQer3G+eGifbJR+Q6VcdxEqb06fUvAaN0pqPMd+OnQh9bsbEKJbJHHS15/gxPF/JlxBQfGlTc1Nw8T6oBPqr036Vhoe4H9YLjqpTnOBuPd4pVKj47WJQToI9mV84+GmoDlNy/Om/ZO8Lw4i9dcR6RtHrJ9u6ZPVIvOqOhXSdxP0LOczTkCdM8Ic3HS3EKGLrlt5XthPuMNRPWamvew5oR5yV1up9MNr2bXNVKuz05K5aqUADc9aCz5px3ArbgZCRlRF8UEj/Kb83vJXdBzaBvmr0FTHrwKWSjLNWcZHWgwrc8i/EP4tQkH4IvR/s4nC2H9c3w1mVZNEYT+U1KHNA5j7Aznx9SH0OnXe67r/O34QnPiC594rDfxhlj3mq8xRF2vvkJwv5NSH/gjt5UjSw68pxWwv+XErnIbqH3+CSrlCW89k39DkAhHTicaVSjENDxOvKD4SZwXRQU8BjBS97EhslAAb6p6lyWNXNHjwyZXgdy+vnplRrNZPcGBpU57usO8cKCTDDP+KTqDDf2BI8gvJ77tZ8HhvKbiZ/ylBOlNW7YdQmVLJqAHMT2aJCs2laYlh6ZAwQ+G3xhgRg+6uk2frmynHv3Pgp+sL8nZCWOyFdvRYQqON1dBpThiBOmgO59mRAAiRKdtdOb5Vpg+H2qezRD+a+qc0fSbreAouYMNN+xN+PLXgAWDWsY6yDxlfMjTC8F1Op5umb6LOR9L0PJIbUC+fKp133M2budz3Hw01Z9pfkNBMsZqmjXxQmSR3FrbgDvbok2Yz4uCHbJ71qhjpVsUdFFVcR9k0sen2aGRhdwvqFcqcbu24DG80LZE8NdUrLwlkcR/XY3oDmw1psQm8sTk1UXmleSiZ6Fw2KlfC9cu0EqY+uySdvyCEfLpQ8VxLonIlXAVjuTome5TqZW6eDdEC7quIgbMQjRll6BgUuKHXtQ0r5CWJI0dvpNZvTYUgDdjuD8euJy0LbodkxgljgN6cwU0sw5gxJ6nCZ3zhzf4bqNyzby5w3r7sWMDJh8wMs5EwRv9oexI7kKRT889mz2jnCX6weXPBlbA4zc02l5/AOTrQzNB9bxaZlD8Xp1hC/iTTYRcXEjvSEJnTe/7A3qd42ybqOO63v2gX3Ct2CyoldSTh2lbBrCakNlnr5POYzPpISOuWsiHDfcFBowAk=","layer_level":2},{"id":"4998a10b-e6f6-4b70-9f44-4e315963c35a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Intermediate Representation Generation Phase","description":"ir-generation-phase","prompt":"Develop detailed content for the IR generation phase. Explain how CymbolIRBuilder.java translates AST nodes into three-address code represented by IRNode subclasses. Document the structure of intermediate representation including expressions (arithmetic, boolean, addressing) and statements (assignments, jumps, function calls). Illustrate with examples how high-level constructs like while loops and if statements are lowered into linear IR sequences. Describe the role of temporary variables, operand slots, and constant folding during IR generation. Address how this phase enables platform-independent optimizations and serves as input for control flow analysis.","parent_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","order":4,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/ir/CymbolIRBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:14.1597342+08:00","gmt_modified":"2025-09-16T15:39:14.7645975+08:00","raw_data":"WikiEncrypted:uVeKaLIC1dtzg9FD9NaCSK7alkK0xLVjgywpFiUQRAdHI4P69HTDucD0RwdFb7+cdpGbxy6EB8Nd3afNBYURSc032hM/dd+0DhLQ5BqhEZ1zBT9JWaukJLhSRZ88LKMH4i/KKgedhijK969PRCXq56eTcp1xERsXEmUFFhRa4YUOCwjFMtjboT5Rl+iO2MW4Mrx+KxHEVm5BxQ8wtYaCrSPqHxh1n7wQEaZz9RBU34xkJVyXBmutC3WYBifueyiw0VijibL2OM2h/RejOKrAciN0tq9cmvHTxaXbHSTTgHlosn10wKQ3Vmv8EMyT7AooXWIPs+aWrpNHKA/2PZ+bCun9yRhonnYdCzcdR4KrMbNuBugWDDvrwwh9r3IuIHugmsKoTRGeJpEmUEMGb0DlISEshX96kQXf2PFirOaketi6De8z+orl3gjJV/n7PKuiVxVHfvZ6gm4JM4A5GMlE1n7Biy40W04dRUwlUJQR4eys4TzS1yzJ4GEemzhD8ejcOdm544ZM0dKR8fVA/ZD+ZCwqcYIcpXw6q7SA75Tw7PDBa7b21YgvsHWxDTlAMtlprimPLMzv0NATpbNsQmdHxOyx/5Imq61AKZjMmYZrXh2upIjnkvyJHEKiEVZuPhzq2bzVKFW84SaI/cANTB+8oM0JY2Vx1X4SpM82nunVa5LnqWiaghfS3C9bSnVyXlBhSMiX5irVr+T93zgtsmpuW5nu3N2roTexntZLRk5xlMzKzLT9BaBLihZELZ/qE0NBgl36gKnHxSaDUfqJj+IZQQAS1QAuZt0gMuvx+cXQi2M4LAI6xsiHN8AaTy+vjt1JTICCiPZp3yagaRdLQNkUsOuzaoFTswJW5Ja8k6IDn5Fp0XJsUNdxvCusUfiMeT81So2uBDOTknCw0Oq9I51i2lR0jX4W17u0JalSINvyoeoRKfKLWZfkhanigJWWvCGt8PUQCr/YQ26salu8haEsRwfsyCp0MzuNuDyzJHXiBL2KxlQiUDfBikvCCPNnzuZDCSN7kBfmV2WGAO0/zywOqFu2j+efO7e0tn096tGM07UsBMCWOeX8ttcNfluHRA3aagGKfRmJjs+b48ttkp4YT4mjB5QS5Gtv6PpPWSH25sG/VWEVZRVTsVTrWM+RUMjbLkZhBAEXtZUJhRtn4lvT3zA1yoRBpnKWiIiExYZ53y6tlxr7ZTbdjafIhVFyTWfEi+43GkpKVZipadJ0R4xtjWtPCfeXWIuGrqisB8Jvj26ngEP01CneKJhf1cwV7atChsRu4qeV48nWeBAWoozf69yFFQn6OFW2I8addmLTERQ2aSa3Vnytxt/MlmlQMvPAf9WfV0LFtxLuO6Aj7l+eSvkN7Vcwa4Rr//poTTjCoxBFfIfpB7Y3uUwBXu7uJJ/3+eHwiHDRkNZLUVDyJ/OQaKmWx1kHjcBxMpdLg1kdbKiSFNUgvA7YJHqUmRZ9LIbfpWlbnZxHdxDK+O0qS/stioJzmbDFoJp+zXTPm07ck5A=","layer_level":3},{"id":"b4453625-eb25-4340-b6cd-285607f03e08","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Syntactic Analysis","description":"syntactic-analysis","prompt":"Develop detailed content for the syntactic analysis phase. Explain how the CymbolParser.java implements the context-free grammar for the Cymbol language using ANTLR4. Document the grammar rules for program structure, declarations, statements, and expressions. Describe the construction of parse trees and how they represent the syntactic structure of source code. Explain error handling and recovery mechanisms in the parser. Include examples of valid and invalid syntax and how the parser responds to each. Detail the integration between the lexer and parser through the token stream. Address grammar design considerations such as ambiguity resolution, operator precedence, and associativity rules implemented in the parser specification.","parent_id":"","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/parser/CymbolParser.java,ep10/src/main/java/org/teachfx/antlr4/CSVParser.java,ep4/src/main/java/org/teachfx/antlr4/LabeledExprParser.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2909691+08:00","gmt_modified":"2025-09-16T14:05:10.4263869+08:00","raw_data":"WikiEncrypted:HgjcmVTJRVnJXVPG0yx0luM9biAbnQ9YnVxVHsQS89PS428SZMF2j/gUtLl6E3DIfFLnvP0X0ar90mbUZOaQLcb6SxF2z2J7HjRYxOhDoZAlHm4wK6UiZtSrxbMjMnNxivMrhtVlXdcTedRYqAQ/Vm8JSurZehd6W2hucjF7zMS/y+fvCmwGb2sCbxkhtFwvlQn8Nn5/yf5dbfFbtFFfCIIPLDfbht54OebNUCuQlTPia1sH4qc3fgEPJ3j5sRfwSkpltpPUUbDR2U9t96rn4MWgGqvr/u4PHlidH6SriQ48qE3+tGiF7Wr9JWrcROxurKfYtbssltqBL8xlt7C1X2m+OBvqO7q93khfT32T44a7j0P1Vjg1Z6j5eE1ZDlOzXhuis1modBgEFSzaeb4Us4Ct2ukF69DU8SusY/7IdEgwqr02CMD9d9wZUX47lkamZBxQ+EvwtQgbRwMN9p5OKcpVWOFUUAeIlgqYX5evgTQ0EnDx2Ii+7+nGgGS83NJ+2nWSvL5m2K4LJJ6TQRx/NC+0tdeeNKV1DOVLlIYVQ+3v6zTdaIfPlw7tZ2RlCkHitDnlZlWjnu7G2Cxv0NLnwjqJ8CpE+2gfIfHLDqVCn6bM8m/FxVFFlfflQGnPd+oQyczoOCbAI1wIb9E9t1uzxSCp6II07dbPBkR8Y9smWm4WYC9Dk+vPj9K5iDgqupcHgQ+Humi9dOT1YxGtOqsNt8aRkHoDkqLTYdEgmMiHa8v24wkUkxwJ7fdzbGiB5Fc8HMaqTPEOgEXG33nhuKu4JIqB6lpB1shNOETtyAXDIngc28grY0RDmP14tCQPHzDEtPDopSozq05khtps6M1K0vvem9YM1riI2vJZ6ldlyBNGRbDMGp0Y7AZqbLcDyoUlPd3Ecf5xKQ8On41ZWiF2z7HNPT7YuWl6PYXjGhM64u66B5Pn0UERWqUdbUOtbsaufKMe/o4bYB1CiZUhhWNXL9uRlKl3aH6AVO5D5vDE0HPp3dkhfV7B8BX4AyQ5kRGgh2YDpj3bKjxOYEmEpE9KrT6R9Oef4FgjnSB8egr4iwQyrbvqhx7fZ7/O+KvzylgvBRN5Kc0+GtEl+OOF+Z/GRBWbmdGQRfOwG9pjLJRi4BoLwu9qzf2rHOdbenz4EAheCcjxNKye6wgt4T9L17ir0y+booXfgA0ZENRfOlfLF3fjQgaeE/jyFm6KGMg24yKZLNljWT6YUcki/xucwqDlpOEG1q0xoobs/A/FgfwlTLcV2tysL9xb/1I0ihF/mf6m5hoVdZF8uJhLdZTy3NPP0d9z+NEKpJteCAEVQopysoVSxz70TcoGQ5W/MOQxOB49ujEbh7+6ZkN6CPf7+B/17S1TIFh5mTwQ/mg//bHSwGQVGh8zEl72nggVQGqjJ7hAINtF8GFpi8qFQmXV3U1JmQhPNzU7Y0gBivXR0h1KHNZ3hZiQs7LFRLNZWXp3GhE7bYcYbmjLPsoci/PirMtpMrraXL5JyCDSjpb4tekvKLZF6/4RXh35xkanfmUlYssPOPe0K0dN/I/J/UarlFVP/g==","layer_level":0},{"id":"f539a84b-5019-4478-accd-ad307e810d29","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Advanced Language Features","description":"cymbol-advanced-features","prompt":"Develop detailed content for this sub-feature section focused on advanced language constructs in Cymbol. Document the implementation of user-defined types including structs (via StructDeclNode and StructSymbol) and type aliases (via TypedefDeclNode). Explain how struct members are accessed through FieldAccessNode and represented in the symbol table. Detail array support including declaration, initialization (ArrayLiteralNode), and element access (ArrayAccessNode). Describe the internal representation of composite types through StructType and ArrayType in the type system. Provide examples of complex data structures and their manipulation. Explain how the compiler handles member lookup, type equivalence for structs, and bounds checking for arrays. Address memory layout considerations and performance implications of these advanced features.","parent_id":"e2f12f88-f04c-46db-9f1a-c69036de314a","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/StructDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/decl/TypedefDeclNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/StructMemberNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ArrayAccessNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/ArrayLiteralNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/StructSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/StructType.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/ArrayType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:01:50.5914041+08:00","gmt_modified":"2025-09-16T14:55:44.672047+08:00","raw_data":"WikiEncrypted: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","layer_level":1},{"id":"15a01fdf-9601-4f5e-97e4-16803762d036","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Intermediate Representation (IR) Generation","description":"intermediate-representation","prompt":"Develop detailed content for the Intermediate Representation (IR) generation phase. Explain how the three-address code IR is constructed through CymbolIRBuilder.java by translating AST nodes into low-level IR instructions. Describe the IRNode hierarchy including expression types (BinExpr, UnaryExpr, ConstVal) and statement types (Assign, JMP, CJMP, ReturnVal) that represent the program in a linear, imperative form. Document the use of temporary variables, operand slots, and control flow primitives in the IR. Illustrate with examples how high-level constructs like if-statements and loops are lowered into basic blocks with jump instructions. Discuss the design advantages of using IR for optimization and code generation, and how it abstracts away from both source language and target architecture specifics.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Expr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/Stmt.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.1735031+08:00","gmt_modified":"2025-09-16T14:56:50.7544446+08:00","raw_data":"WikiEncrypted:GAYP+Q96byUZT4Py247W7Csxoyf7l1uH/SZ2ie8YahDjrN2raWInEQ6fFY+WER6mdA692efWyOcMWo2Bf4mqYk1K5KCqwU9zDZ3/jM5JiNxGg8GQrPW8T9JcCHGSLekr2BRiO4uBYCQtN6Mhph0JbE+SQLXXlWxOFPF2LBhcxuRF2Qw8ybbfWUaIuduBTNrE5gFo2WHUhFvk8KrbRerwTjvqQRhXkhYcE6E2x5Lsuau3UErRaHe+UHKRqkQXOlsRHT2J8cazyMJ3+xjdYE8rPUpCZoSW2DmY0XXenpi1j4mKqzqhQChJuYAEV2pe3sOL7PfSgUDKI2Zkfip8FtRHe8Px/eaXpT/Jgwx5o50C1bm6EmcGzpiBNYZ/aJ/lP57Cf2kYC4ngVNLC9g1/MUReJYrMLxJAiPNvCLt4Wxm+Lzfy9DqjlaIL/WzZTYSKQHElwmmPdTnDnPniaBeXZ9vYiaYZgUdH9i3T76cdLFTW9lLrSzFQv6EGOiaKaXggDR2aM3VLN/cOpXT69zeAR6fWYM8hTRXJGRxNKB3oJPGDszMmivB+1eY8+yiUYPy2e4Vm0jAwXzCU0bsTOlSsWzEIQE8PTF+mjN6jNqh+ZFOk3Jyqf49xRs1uZbpIS85SkTj0DzzbNbwRVKGahW/nu9sYAZD+KPyBYfhf7QWoVVdCzXXe3TJZTW4AN+Z3w3hyfDMh2jvgaX3Y1A+uUeHYf5wvX1wOxaaQr+BF916VAo3OKb77Z8kUy5vR5mMODEDbbtKhkooiK/CFt3eOydOa0d5Ea3NlclaObG4NK9nvF8wnbscxlCjahRnNqnvesiAUwCsI5OBOXlSqU/eA/kdDyuZL4Fruo5x6yppry9bURsBbr1M6M0g7YT9+MK4yT9TpYMEfI1eHpkZj7zMMaXdpEL+eTQWsDmmiXd4YRFVeaTchksUtlKlnhFN/1+XV1+3fQGRDvPv70mtsKsq+6byhG4JV+txtsZL5fvn+tosho4MWUc1q2XtBj+BRbL8MVSliDKiHhz8SxFDM9rMLHD5Zm9VPmd97eu5qgfhpAebF9zu642HJBvx2RE/2ndUESjEPQgmLcSaXJMKMdZLw9xeLCWaLD2v99jHT2nud7MTjYIECJbeT8lci5L2cxDp/rwJ5Sti1OlAy/U5Nl5tNR/W3LOVwdBwUbPyqmZKIdPZ6Bn2CNoi1eO2SbDugzKDBk6//tyhkrqQdrP/rLy6twpTftiWhHJtZGSQeyskwGBpg5P7KvEfEAd+zrlFA/W2WwM4jIYIX3ext58/EIFXmCQCF6CdMZR2/2HcGqo1UcwrAG9c041E1T7uRnNJTjfgvD1N/YkVLbNmpLQ0YVcaFeJfik6QRmsFPCn4jDqJN8qwWrQqLK2kygMqvifVt04L4/Gy36BJ2fHddPyaLWZVB9/S7hxErIH7m2QNwarbMzp9krYBFzRZLGKCYlbr4MOKtTB98nMtChXZoHaYMIFX6cJkBmApeKHeA9H0v6Fv7aNisn3UMSmy2q+66Y7ZDBt7EOp8XmfPJtQYqWuw9V3DzyzZpa0aIdV67zCIv9xMYVRBl5mgYKHFORNU12O1XqU8f4YgLBUpjHzp2oeV4PGH1i0dcrLs7VEt0ejEDPXSWEePwMD/XsSSNpDfY15mzhGcutYIP/LHdjkZeEcfJTKUSNrXEa4AvGg==","layer_level":1},{"id":"7f232943-157d-4018-9248-fe0126d13299","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Visitor Pattern Implementation","description":"ast-visitor-pattern","prompt":"Develop detailed content for the visitor pattern implementation in the AST. Explain how ASTVisitor.java provides a clean mechanism for traversing and processing AST nodes without modifying node classes. Document the double dispatch mechanism and how accept() methods in ASTNode.java enable it. Provide examples of concrete visitors like type checkers and code generators that extend ASTVisitor. Illustrate with code how a simple visitor computes expression depths or collects variable references. Explain the advantages of this pattern for adding new operations on the AST and maintaining separation of concerns. Address limitations of the visitor pattern and alternatives considered.","parent_id":"991e5381-362e-445e-8f05-5e5c818d750f","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTVisitor.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:03:18.0734522+08:00","gmt_modified":"2025-09-16T14:56:47.1238139+08:00","raw_data":"WikiEncrypted:dXDsAbYfYn/Hcz9i+o5IMtvio0zhFd+gWt49l7eyN3BnzuL9mqOYj+MqawuPEju1OklIHgCNvrylTu6fQsJFuNHsLXrg+Q2REi3VzG+wGdImACHrkYsGte3/kO35xViDNkGJthIn/+kSyfCuUV39CFeXH18RuRaNp0d+hOEgDvmtAiqEcQ3TEmTP2UdfmEc8DSe9PiZdoqgzpy0a+yD9sHpkKaizKLSwqSveCRv1QJEEqiPX/JeqYFeGo283XXRYdyQ9tQ682w2EltzAcpQm6MUNsdATdpft3iRzUUlU2VTal4KFCUk1fQtYgaGxPENKkg+z/dBbwGQYAJbecP+zisSLA1vXldFdqr6mTP9CMY2nixuYKq3oVUuWlhvanLTVzdqkM4AvoPJi1bUAapWXOLTm88LNPKbWZgQw4WQtsRspMH7w/T+b10QoQkvF6RXMhwRO+8SikACfm4V47fzVPB5qM3+wcsAb+jzRenhtKhmhDn/IKc2l6TL6lCE+F9rJCjuOicfeP5ROsQFzq8BLvBITwK9H4loch8B11QBSCm2rmf3nLRsP28JaDrgZYRPRgBoFmXT31bOaK7HesYmytCfJsGftldcvUTHN3fqsSfZVKldn4YsDGaALjiUzssm7FHVlsQqHJABl9IlUYO15ouIhwBHfziqrPcxZ8viYjCuNv+Z8tfTKAPjIP6S86uwcH0yB0iDLVvt5fQC84ULHJBJhK65lntiQWg4knX6Yc0tWHKR5i1bDw1hAg9d/b70Krh0Ql3Cugx9mpnomP8TydwuEwYopvRyL35bgGZv6RuB3M+FfjH+zP7xXYbSihzK0eymXwGowSklVWSXlBId4tH1OSJA+qVL9+7syK5iM5wkAo6aO0C9ZPIxFKLXj5VRfJz7UmNtlJWfNzG6GFfW37t72iXCCOuhjs509swAVHFU3T9oaxlG1Cpj/2tJdVEqmgOu/FiOgqdaAvRc04TFvwMj9hOG+KHGjJIeFUcO6uvgm5NlvBDoa4Y5nppLtm4G/g2XnWDG2yPorpIKZdm+jGUNaYswE/kYNkOCq1Jyv5QJb81ZFMvRQentvi22faBOoIPAVqG6Qc//biphZuhXx2FF57hfhU8I3kqL9rz0TxygVuxuKwGTJwcwfkvhoMKuDVCaV5hKa6DNM7PfgtK+HE9PGNSuKOplQIrdzefnFwn0Y/h+F8F6+Z/QBpR++wYW+uiseonI1YuVttG7W3UFCkcuYgscxUGZnirqakTR8AuhSj+vNpfxKT39XS6s+tlYJCfRX1/xnMyGTH2cqOb5MRn5V0c6kvy5OPMpvzZ0XjIbmXzYP6Rrks7QgiYAkzdybNs0IUrn5gZjJDZtGqCIytQtdIwG1Dk5pQXWCj2rDjK/rKBFnYOYFcKLP3pp+q3Qfl3Ld7yHVh6yEjWnKFuv7bQ==","layer_level":1},{"id":"faa4a661-2c6c-4b5b-8d52-c211db2b520b","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Flow Optimization Interface","description":"cfg-optimization-interface","prompt":"Develop detailed content for the IFlowOptimizer.java interface that defines the contract for control flow optimizations. Explain the methods required for implementing optimization passes that operate on CFGs. Document the expected behavior for modifying CFG structure while preserving program semantics. Describe how optimizers integrate with the compilation pipeline and interact with other passes. Provide examples of concrete implementations that perform jump threading, unreachable code elimination, or loop optimization. Explain the contract between optimizers and the CFG framework regarding graph validity and analysis invalidation. Address error handling and optimization failure scenarios.","parent_id":"b3926619-907e-47b9-8b5f-2fd3a6d8325e","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:05:08.0574396+08:00","gmt_modified":"2025-09-16T14:58:06.6056952+08:00","raw_data":"WikiEncrypted:/Sbj314x444yxSSutJieZSucw24SfIoiWRxcrgONZWlKI5PzSXdkdAIdjF2+j7r3WPw8k57kYpGGX3kFya2thS4KgiRmZWNSZqwqQn5M3nO5n4Y/BeomrdevL17RpRP5keF9phVWolTRD85wscYzE6o0v3MuYWLLGQ765ERbeMYqZHLLGyIgkP05mz9yLrYRuwjv4ghY+jqMuZySL9+ymmraWdd9x4mT4lEUOfnDrC5FqFL9tCe/MG60g2K3nGCtXCb6kXsy4kJbnlHcCTX4+0dFQIFhwcLFLJGHAGblYNEv1jg6YINLmVNUJThUh/5w4Xc88pGTjfjhYmDhmOyLDv91hNcetIx+t7CNetnwZTETRSeZ1sKvf+Df31SChgdJROTzbSxaHCeCuqWTWqQ08RsTh7quXCrhK5jcPxzGbK+IezjxkLdP+vMwc236N1XWz/HQgH2w8UEm1b0eSiXRlB1bwthN3DSlaZnr1gYhqsQwBCbAPH4AyfenFqKiTmbUlhElNBGRKOtlXJIKgbp37o/FNC/FXxXSjq4JGn2PeSodPIx00sfCBkpk75pUzGnwC7v6xH/4Q8NOjeVdlPK+pPfEqRWJesSmSMQCgplBd+4OB/DWDrpA7vPZ3az38FRtpu7PmzwN6QRMSuZyNXoycAQFZpV9c4UL+VG/wYqVIpt3u++IBg33Vz5PbmDx9vGIFe54vA2mhsvZ9ea6KLNTsVS/MB2eVgO1SLPimWoXlitNA7nObJgp3s/h0+vBr364KVuGAxrLVnpZqXtXmDnUEF2J8k51S4NdgRoVDfQpFbEkAFnzY4y0sodY9rJq4A7C0nSIJgLZHq8aUwX2BKpN6QxWDiWbZ2PDSPUtDNEu5s6cUBVccSQ2RCqKTHcDWXfnSOwDf+CQwQTD5Xvg8qz20XN2WKpzvIu++RKcEEdGTut+PQKoNL4PJVGOmIcyb9k+MB7JYFvLkwfrPd4WIkq80sYe0u4qnlVphfsCxXy31kC192wL0hpz13+nSOeqEDGtIybKlWVVv9V+R3CCChhIdQl+OrHq75QA29i2RMAIlPeUtDEX/i/gljsq2yYeAoWDaTmgS/bMsKBYQPJTMCtFtUFkasT37MEZnUErAzJvgJDb90wNfVaECppgaoEJeIiy9pY/fo9z39ZnQZdhgVm45Bipnqm2xUSGhj9D5VRsfZPgY/fbxAEISEuTgCnLDysuIfeiuVxeNH+5ELjGRusYCC38LGXz7Gf+lLVN1zlB+UwJhnv5qB5Yl4KK0aRIJ21HG89SbJybrFSsrcj4cEUMKZRggClno/T76Dc560K2k5pXndyEb14FiekP48ehPCuYY/7mS3gpCJ8FZTeHjXnDe0qzuPE+QhyuiiS6zccdr+Q=","layer_level":1},{"id":"5b44d567-0fcc-4690-a9f7-2728e0b5fed7","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Debugging Support","description":"debugging-support","prompt":"Create comprehensive documentation for the virtual machine's debugging and diagnostic capabilities. Explain how DisAssembler.java converts binary bytecode back into human-readable assembly format for inspection. Document the logging infrastructure through CompilerLogger.java and how execution traces can be generated. Describe the debugging workflow from compilation to VM execution analysis. Provide examples of using disassembly to troubleshoot compilation issues. Include guidance on interpreting VM state dumps and error messages. Reference the VM_Design.md document to explain design decisions behind the debugging features.","parent_id":"786cad12-f31d-426e-9be4-322905970e5c","order":5,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/DisAssembler.java,ep18/src/main/java/org/teachfx/antlr4/ep18/misc/CompilerLogger.java,ep18/VM_Design.md","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:06:20.8885715+08:00","gmt_modified":"2025-09-16T14:57:50.3452621+08:00","raw_data":"WikiEncrypted:IGJnZREY6KPscHFIFvSUZLcbhIjBor7Zf715JFyUr+042vmACBivG7TZJOkpLeTMUsuMwsNgjQzvEaH0KPKiXTWWSP1B9ct40Jq1Edw5AIGrOHHsgrAZmaNkd26AudVN9Q/Jw71LIMu1R8UOaoOsJfZ4FkPVs4UeUjPWDgFKVqqdNW1oz6L+A/84vsJue8sVVfvgbF4xzYFOp4vUziqa1A8zUUakQOfJJ1ekH8N6UD3R9tQ/YAQj0LcSoFnowWKCfzpe+0MASsMeYPKOlQSO0H9UfoJjWLPjOkusIQNGTyrVrHT2adNkWpDS/TXgOAH87zO5i2hIDDwc2xWQkPWj1Uv55DAMsKDh45rR6F7gceidUp2XnPT2Gcov9d7HHk5MleYf9oAGbGkVO9NKuBlQEuMAcYVQDy8JzuMZuizKRwEq3fvaZPXnCsneP807oAh1nHtYcvqzB7cAQa+n3Ml8cWXb3FD9Z+NnIiP6U54gyfhF0sp+fVQnS8xtiQJbkEhrYMZdqDJzr4SfPpZWL3f9qcO7Jss9S8QzrixnKCB6fB9itl26KtsvvCF4Y7XTzD+0vyTxDy0t6E/zpm2xdxqMInoFAeXAgSVpucy0c/6lqaqrtwyJIzlxTT38WC6mSs9eRyEtFRZLGydrL0BmNMWNqlaVsRbTN7z7rAa1utrGXPYPmVB7GDksUXkVHgRwbK4Duavg7lrSPPcxryxTuarhMJJUjc5VMlvdj7XRpQvJaN3UmKAsKITjCXbjHD9opB9jIGcrXOO89CYi0GmX+N7wnzc8djNYIaW7y5D6jOi5bTjEiWeBCB8vLVWZsNKxKnNt22Vp2KlVAaJaDXPe/TfTQjJSFOHqO4OS6eXw19Xz0RwcDRjLhrnLVsl8r/MVz/q+p86qNGocsYm6k3WO5b4/ERZysZZAmaay3hL/MSmFltS4wTRtYjVx/HBfLyxAjivsIppbKbdKpLEUaeBXDeppJ0KSU2+e4F5gAAeTsvrn++TdYnkQCOZp79L5brRCzVqNLiAp9yM1DAFMZyHViaaiwoRSF15lwJ4GYvZJ5u1Xz1/DGPPUm3nE975c7n/8tRMHYAjBtMG+Kq18LIV7RhhZQQxyUbRPrR+p0jIOVPzFf0JnGq+zkE7sW4WnALnT8vovLAo3mhjPbx7mMErn2Cuw1U5YQu0DVCsNjBltIRfspbPlWtZFOaZgM1wnvVo3QdADgjBY/ZXxRaTz2Z+bfE4/HhyrHnynlpqZvrrjKchvQomSckiUtanViRXJNJi30tif","layer_level":1},{"id":"ebd4e00e-545f-4627-9f50-119b59511389","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Intermediate Representation API","description":"ir-builder-api","prompt":"Develop comprehensive API documentation for the intermediate representation system, with a focus on the CymbolIRBuilder class. Document how the AST is transformed into three-address code and basic blocks. Explain the IRNode hierarchy and the structure of different IR components (expressions, statements, operands). Detail the API for creating and manipulating IR nodes, including arithmetic operations, control flow instructions, and function calls. Provide examples of how to use the IR builder programmatically and how to traverse the generated IR. Include information on how the IR represents the program structure and enables optimization.","parent_id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/Expr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Stmt.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:50.9623694+08:00","gmt_modified":"2025-09-16T14:59:44.3541033+08:00","raw_data":"WikiEncrypted:7Bo/g9v2SkUsUwquWFaUG6MiruBgHD8zNgVSogpF0HKGyqQNlE7ih7c03dQKF7gjzTJRhP4PiquHmmQWAt3v/ehqsHZ8iq6LIZGWnoPGHbXa3QW6fpXllTv4ANPEWdrf7L0cRY4Sv1tKaCBJ8F3LMx6BAF8wi5FEOVqKNudXVCu69ijaQJtBppR/jmtHCh1a7ztCw2WvAXByqpXpqzQAOa8zdY4BbZLGkC7S3v7410TRqbTDRfZqSUj7agsYcOkLt/EWi6pN1h8r9T2gh2jTTTusCo64SrEOEdU/yoMkKws1p4rNDXxeeDXcyRNje/eJBELYhuz2auxMch2YTDc55K+MeCViWMxH43qQfDhZ+ZcXS+n8nYCufl3j9MkUQGdcYNUGvzDduxq4ISsKb4fHL43ACQsC72OCbpQ959HO1mw7p4x/9PifubMRj3kmq144uEtpgSWwbZMCh9uVg0P+ftz/a3YKfS0EEhTcTAnULzZxvjhJNjAfcV6NwtRc2ynomgjVCcY1Fg91+CdrAaq8Zpm9CWHcCVao6ZvSUNIOjDGyRzpy1DoAtgnKO8h2FeAw3KA/G0XT3P9ah8U5Vgzcl5dxkhwgraiBkPE3B/3b3Q06lYhcOBvEt3a5gbQygMIqgWCCgds+CGDGPY6XA1UXbCAuSBWf8i9TnMq5KYz/eCpcmlV2eQ09I4pCT2iQ2C1rvongYDA6cGPYexoHyvRlNM1fiUw/ZUuhRyWqN0p2PsF59qIlaTFR2NJxNStX7BuzGeguJUOlnugivLZwldexCHurwnRQ5mzN3csI5JDEgTDquBBRIwxzVC3d2KsfxpKrJaHGrxE3msOMYhXqOskTWWKvInfazRv5w22VBLp7W4oJI1UXRi2j0VcLTfY326fEPBmPW+YnNb1RUe22OaGqwxpEw8h7SWX2vx21xCewwjfXgkYAyQLilVJFH3Njx//IFvuE2TrSct6Yp0fk6++8iVF2CN0+MgGsqmO0j9cZ16Txdw7fVZU2R4k/6CImgNrqJDU99iRfwyF3VcqbOhX4MvU1UEcyYrWdEICsrUzknZXobZt3RSvvMu/NnLbKNIMTGQ8pFTIH0MkpvAeZCTS7PE12QgO+FTm5guycXDV/A6j/cjNW4N0ABXuhAvKfE+JQ8Ubn+7+vMLfBYA3Zc/6D4sd7j2AU5j7zaJH8kcgnRjkH4+bi0468kaSEcan8t+rqHZj5WxTEQuoNhe8Nhtq8CKxFHSONSfpM6J0p+3yXijxi3CByAZ8i51LjFzvUqLg7Qd6zCG85yK2/L+cNBq0w4WiNbD6sB6AZ0YtYPKTDqYoy0xNJyWiGbOofqhssr9e0g7I6Dmwa6FXy+rYpw1+vkZIFQOF6bgP54C5thpu5qixsxOTiZghDWZj8KK8ep8CX42WLn3XVdujQj9K6kaCiwA==","layer_level":1},{"id":"5f3712e6-1e45-4f57-9156-d7861054d6ed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Expression Statements","description":"ir-stmt-expression","prompt":"Develop detailed content for the ExprStmt IR statement that represents expressions used as statements with side effects. Explain its role in handling expressions that don't produce values but have computational effects, such as function calls and increment operations. Document how ExprStmt wraps expression IR nodes and integrates them into the statement sequence. Describe the translation of high-level expression statements into ExprStmt instances. Provide examples of ExprStmt usage for function calls, method invocations, and assignment expressions used as statements. Explain the importance of ExprStmt in preserving side effects during optimization passes.","parent_id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/ExprStmt.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:36.9890693+08:00","gmt_modified":"2025-09-16T15:22:49.514379+08:00","raw_data":"WikiEncrypted:HfwylyGPL34NvuXFDpnUX2c6ikJxbwrXEA1LJUiTS87Vvgl9dOWlu7Q1erI8PaCrKrU9SJbgNIypYb37Z8NKbx5UXFqSRa+jMIiUDsKfK2J+vJFg86Tup3dOnwJwVPS2LepVFTnT2B3iD8vuALQanvvqYppU2h8UAEJONTD4IZ4NT+H3wOoqyct6/+9i5sWOqdBQLAcA9zRclgCqXvFfxy/p0WVQMLGKR+0UWyGFZQPNhNBkzdJSDcslyApXeIGFVnJhw+EnXNzVgF/Om4KhcAAKepQH1LOW4FH6NUuOFOJ+VVNfWSK/cIzrdYVS2uKW2jglZbzWnTSTtcdcA/wKCDw9hon4SASwnofvrGq+bXxNanvHO6lBGrLdUQkOQtN46nPymd3j2/Ol6JERGERaN2qUihNWf6ZQNipZ3MvhFhGIBMBZIbCBM7whl/OkwRcYU8n6JhNFF9vtSv9pAC6VIZQgPKgpyA47X1HZw6Tk9Q7lcxcyEPSkrOkwJkBlau72uHuTSoyh+wSwSKqgPvc1HS1xuf8Qn/vAsyYC7lHiDZzPgk/1dR9YwFtbmU4gBXBzooz6AeVGIAjp73N5YTUtEb1hYWC9wJBXCJDj/IxwgB795DHg7dSxRXPk+fr78Tk+h7j+qZIw/97w+NT/prkMl/wA1OZzMWa8ypGE79dKJwtruo9y7lon52vCrtPQhtQHVX/rxyanaNtQhVkT3N5h03ZgL/7ZT8NKvhEE5Z1ohUESHbcc1cbvXcgiX0GjUQgyHFCnfaHDaPISA2spzV+eneSjc5aarHSqxQTbNETs/Nvdhz31wlYnLIxWlShIdE0YZmvEV3YF63m8oWiT1Ias37udspS+/dRKz0ivak+sr7CuQfKEIQ8dukjko+3InQ+DrEnpNWuk/U42avQfYhWx1RfV/mlOEevNBF45dyB4xhTIN5gY2Goqa9etu0L+W0UTAt6a/lPKjA1uvaHzgOwXlzlUF7ZQyETZDUSd1m6aUQQ43ic4xvG5bYVJdTgUekksOXJokg2l6zlhUhecd7MZP6wxcFe/6ml82BNjKPWKXDmXt9A7aABfKXyzLCIjNjKeEy0vVzZW/BkLAvzrPyxqmSmfr1xFbs3LItN99w7YXt/s4u4C8Rc5c+Npext48rzEHgJfGWKn+DbhefSA+FAGvTK6t/qweewW2GS5+msOxfpjG1FiiICzARXdzz1suriMCD/90RTLEVjA3mOTEcbb/pHlQ4LmvBJ/HeeMwpHwNxb334xExbiGGNBnU0u7HczzlDoTJw0+1V08qkFZSzvbKw==","layer_level":2},{"id":"29798e0d-83e9-4460-8b75-c5b34c095670","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Flow Graph Construction Phase","description":"cfg-construction-phase","prompt":"Develop detailed content for the CFG construction phase. Explain how CFGBuilder.java partitions linear IR into BasicBlock units and constructs control flow edges based on conditional and unconditional jumps. Document the representation of CFG.java including entry/exit blocks, predecessors/successors, and dominator relationships. Provide visual examples of CFGs for common control structures (if-else, loops) and describe algorithms used for graph construction. Address the importance of CFGs for optimization passes like liveness analysis and dead code elimination, and explain how structured control flow is preserved during transformation.","parent_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","order":5,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/cfg/CFGBuilder.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:14.1607603+08:00","gmt_modified":"2025-09-16T15:39:23.4236815+08:00","raw_data":"WikiEncrypted:1VvwO8J9baKrL5ZR07tod49e2+7IMxD2RzRUtLnzpE96lsQQdS2Lf7cso1PLVYqJ0F9MOeUbLeoYhqjDopHkFnm1OZ+4CnF/ihuQkPF9q2oJcFaDrrVYjcZXFOpdzOuszD+VM/yt7GKK43DDMfG6i/zNvUbpzANt9Ki74Qk5NSBf0fDLwNcaYCi8CqRJ3QkzT1Uh2Ej6LLdpmPcdW9hiYPjEX6IkJW+TaBCejcE0/n47bj5IK07pKC9fNywUwcevIMB50JtdE4tRrGaRVH+vTHFFAcFY60fBN49D7u/PRZ9UXDuQ1LpRPYRBd4ix0P/8eV+dbAC+XploPerFpqFTAF6JplvMqOYTTVWl12vgXFkj/dHd++fBhFmfqwacG17Fxu6uNQPwBDxAKgAX3m1sfRlPNxryLdolQQFTlEIGP3X9YJLgjPx52K61IUA949LOVNrhARNphUdyth/MhOCyH9gQMv2DqD4qJB3AeqU4IIelzQeRYm3so4em58CPscM0bc4lzwjB9Y6Av1kvztmeiMAJ5160VKe8eNQzRtAgDD6XF8wad6VdkwX+3E+4nodA8HthZHh35wWfDSW3wS3CLQ/c18g6maEVuY2yoZewhxrqX3HUKj5Fb5SewEToH87tDtSzIsvwlGut9+oUERDfEtnx+HIoC9x4WWpvC/1kiucTgi+TRQjs5D2U4GKvb5HVExiQlorB474dJcKDdKHsg7VHWPin3etCZS1xBMxTGwe3T+GD4KMLCA+em+VvU+wROyApButbp7w4ah3BU3kTqxfu5ytNTttO/MbCM+HJjP4ygLIRjqUYejAeoaLJdOscmxVjNneXG7dmGMiR7La/469Yk2TwwVQNqSdc3xIFC5TTOhuD9bSn5U8YS5WyO4YZLa8YitqUJhSTtmg8rD5gLYeZ5fWm+L4gFjJaSi/By6OX4mXwa3f9C4IHVM5GD2H/EMJhGOsCZhN/RUVVKHHEXUteQoXf5E1YPBlnOLTny297rW5QDaaPoY/wQVfsTcduTO5q2BBP5PF6wUj3Zw+TxeTWafy2KSsazihOCU4CCm9gNW2vZ6EMXs9tjVKkO1Lsd56FigxTwqSPIUfyC+N0UrcB6rPZd+PhU6zNycYeGAl9s0IT8CObjc7BKNZAXo/rS6tWx16Esi3x85AC0FN9CdsxfVR/gKRYk3II36MGJG+kfG26T4ntUQ7obJR3/8mHqH6XdMRDzozr9fcMqWf71qoUjzslrsNBpoeTyEyLgq9v5BskGZUY2fHsppsKdz77C3IpDq54N94NXFVVd8wenEZ2M6hZzZaMH+yWU0uQFk9lI3WXACUhKf4EMhjx5kbdGwmmo+LLBsuR3DRyZsfMVdq+zZox3Mg0WN2U+GzdERmCChU4I+fExWwVRnmVlXIzHu6dVArAFO3pDI0tfF7FPGLqmJVq0UobqRF7P0L7PLb8n3TwZsqNOtlERf3IjaKlaty0Q51FkQsBUalemdgiwgzbBTpMwInIbYBnHKxGliSnBpa/h/lKiMkNKbh+mHFFQT7T9D1zdEd7MwuAjsAx+DgrxMHQ+A3R/1/+aq5/yIw=","layer_level":3},{"id":"991e5381-362e-445e-8f05-5e5c818d750f","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Abstract Syntax Tree (AST)","description":"ast","prompt":"Create comprehensive content for the Abstract Syntax Tree implementation. Detail the AST node hierarchy starting from ASTNode.java as the base class, with specific node types for declarations, expressions, and statements. Explain how the visitor pattern is implemented through ASTVisitor.java and its role in tree traversal. Document the AST construction process in CymbolASTBuilder.java, including how parse trees are transformed into ASTs. Provide examples of AST representations for common language constructs. Explain the advantages of ASTs over parse trees in compiler design. Address memory considerations in AST representation and how the AST enables semantic analysis and code generation phases.","parent_id":"","order":6,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/expr/BinaryExprNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ast/stmt/IfStmtNode.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.292215+08:00","gmt_modified":"2025-09-16T14:05:44.2532408+08:00","raw_data":"WikiEncrypted:+s31Jz3+aJ0Ek8iXZTmnovMDzZggj9RYHEozkXyd5K6DM4V7Ciax88Em4/pVh0AmIAUYva6Y7xVkVZ2TKvPcPBwYof+tJ8tQXRX0w3QlMQQpx3IwocphjpzQKOBOpibq0KHSpIWLN7ymwbuYaLK+L1tC6l3q71bDwIQolJEO3x2ad86LTYYKInOQ7pwYjT2sogXXGcOjheZTAg7oUGgpELXPz2FZN3maMLSBvb/3e6iCwG63F3qsqzT7YvcEjI5VZPa6j6/Jkrk0RqEqLgGcoTytAsH9lVA1x5Wg886CkJ+AAsNB/4ljyfgC7MQB3A9aqQ7DR7r3U+0uwF8J5J40iec1l4t5wLnQpwgMVfg/42G4qOmIRPxMD6z2vZR9EKx6gpblMcAXfsPAEvnkqVlzLWVLPDwNMnG20hEGxbHJlKQ729ZaxfaHE/fPcuEGUmb0tscjbf4bUshKoTkzwQX7P6Z5U6PfGwDyl6/OUSI7IXwDE71z/HWIpDSh2YrqyscW0NXdYsyOW7U+oAPiV/qP2Rs6twyDyjIYEjgXk8yUfuzfhblNBG7kRE6dNWJmKzJsKUvkH71yjPpiNQKBJ0V66m4w63lQDEfe1SbOoU4lDXTLFDO+UOUtsE5nPe2YdYQnLuD8tjYVq4LpQbpoGDJl2hW4oG5Vx4cfTEIrcmtLhWulqGLEykP5FKCZRZB0JjWsYqxRboq8inn4hUUo9yYA3UR9dHy/GmJM/gQQt3tlwr2gmngYotYTZXqD2eU1eIXxoFXii1Yp/njQcQpLZJucurYg8jQB4nYSn88r9o2vKUJUqI0BP67ILpj3avkShay+xT/2FANIA+ZI46RjeXBCdLusb8Rg0eNTsKYvZ1s9/uM9xd12Z4NQLyZBoz4vkkUTZPcFenj5yEKX5As+D+L/YnIjSGNTmH5JPnvKdYqaN09erwrMMGC9l2JYGgaoJMPtDlB+M9x36xU2P0+pMglWxzGI5m2Axk26QPYCyUIi7CYKwyj2L1c2E8/h4iHFPCrChFo4BqouofhNwYqPBgKKvhDNDQ2A16YcIea6ZvIdwjPKX5xwxc8OJAyj6W67mZrksabcSuMBY8r8+VMYnJe3oJpOOWFKEZ1N75NYl/2EDCT7Tb8se4ibxpQmbCqvhEWDAd7zJZ+OLO1NgFY/I9XLdyxmFlbtbQ6IQq7a/hDjOaYV3qFklOs5E3qGg+OhFAdtt6dZJg00kynrn7KNCQD5VMLzHxNl7h9hGz21ff8B0pF63JsmqKQdP2fROny8ngdkiZ7se0aDSeN7IpMitqkHn3CVYmYsJHjcHcQfw5LJVtIjb4ov/3+tFlREn06Zqa4LJdB6fofd+c5MqQoL5gx0CC712dS9HIpaa2k+Y//COm7kYt4rcrmyA+7Gux/E867c/zSY3uSXldsUM3a6QCg5AhzJUn+jBCMAvymVuPzro5fNzlpO/a6e4X0ApPtcu1XuwfbvNfnRaheexvMVg47Zsw9/7qyD4k8EntEXDWV9nxzq8aVHYayI8p/tl1HJ2grR2A6TaNgo9EapryW+/leEfCufWbhAhd0krBuTJs8b1Vkskyh0lwDvi76dyEO7Qr0bvHdZErdmod+GbCmkLv5rEFaSKiUvSYmPWseAB6f0YV168jIsf4VFHvTKQwefMzyx8OjOBzZz0JYcT82nz1WWpcNLGaJXYQIMNXcU/uVYGA1bt1f7F6m1XxWFrjXFB+9L","layer_level":0},{"id":"f62cc1d7-1650-48ce-a3d0-300b7c13e19d","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Flow Analysis and CFG","description":"control-flow-analysis","prompt":"Create architectural documentation for the control flow analysis component. Describe how CFG.java and CFGBuilder.java transform the linear IR into a Control Flow Graph (CFG) composed of BasicBlock nodes connected by control flow edges. Explain the algorithm for identifying leaders, constructing basic blocks, and establishing successor/predecessor relationships. Document how ControlFlowAnalysis.java performs data flow analysis on the CFG to enable optimizations. Illustrate with examples how different control structures (if, while, return) generate specific CFG patterns. Discuss the representation of entry and exit blocks, exception handling paths, and unreachable code detection. Address how the CFG enables advanced analyses like liveness and reachability.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":6,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.174532+08:00","gmt_modified":"2025-09-16T14:59:37.8611294+08:00","raw_data":"WikiEncrypted:QIBzkuXysBzMSQmkzf4c6+fAoyvQlKispF9LpJ0UyUk2dMlUkNH6njCQrqej0hNdF/E2RxRxcEKBSjWKj84c64tEsHVhX1dlYGoneL03Hv/YRqi57HPUC9RsAZus/TcW8niTs1hfE9+Y9mn+kYjleZ1B266sFg23sMG2lTwAG9bsWsQKIjwLoADrPvl3JXa7YM0NzES0v65podPBzsqa81KdonmRCQ6xkXVtrlDRCB43lIG/Qdjt6XWOWZ4iYHDEpKN+9lTtoChqrMkwL7vUl6JmcjCffef6YmYX9LYnHzan0uBSolQ8GpXE7+G3E2XhLirOcnOhNi2/ITU8oITs1Xt/9scg0P38P9sNUy5kSE65o97T0edjDU+bhuX4COsY8K5C9SMFys/2uXNnlEGTVDdN4OMIs3/MMEkn+nKkjuC4DsTK+ntxpqKRjHjoUpV7uLjNME1O6rs1j1lzDodMD6uHly0c/ViynckghbYlPW8iuZA6AsyIOp3ajDG1fxY26EGt/A7VI57Rj9namXy8RvkPMEy3uIZSaL3GboNAdzal6h+CMQkQVWR+t6L/iFoMSFA+TwZM2bsXQ17b2Ugyi4+N+k9100ei0z8siDw19UyLDmOWkDUVFPmadnbv3430Xgyt7ByOSucP7chVseiZl/9A+P+v+ImUzWoWdFbQiJCAbU41IXkiYo6/NORx/BzeK8H8xWKY7FrKBGrVf2LeYm48P6E3EhkCNnj2X5fn9jA+uh7u9+A9h6GBgSgT0mk85RNcW2g6tdA4+ANWAYHt+xY45aVtjhxQHqd3pteo+ByXJdPSslxu9kvFzPjKecAE0j95LhhK+XfhQC35NrtauAXyiTUgvlMLJQe/PMG/kW/qIms3OoHuXw+sC6pSH4p43ghqMQXPGpKnd6ilQDI2dQFcnE543Xubgfh+u/QIvK5ro2F5+3Fvfla8jg0uAKqUj4N/BNjp+SQR/Igfb14x67/D6Yt7+jF2oGodor8bPO7OcY1VbQwBaQQaiVJCCH3Z1hn46MnrxTmoKXQlvR6sinpplX6hC/zAlHFEUs9vi0w1ij7syetEZlNDaeMqBs7IT8AAEVfPYo8UBjYqRJPraz9HvJTEC44gKmIujU9CYeaIaFPejjNfNKIgDwF4SIaqIfpN+jK/D4inQHjh/gdnvovHQPjBEKsrjWKAK2iPDnH4+aBYokTZqvwWe84CwrbL2nMuyqmAX9SERQZVTFkQ0TM5WWX1BRupG9QhYM50WI4LLhskQispJXHMt1txAtoJ2dmcJYIsAcqq00PJhQ/stTF1verC5pFqPv5EJWrSSonR3wkrkupcMMYlEDEB/FVRoCoQY8fqf22H6+MNuL1jZHIQOFXr2/ZhNHihovqPgpPtzvPtewqeVjZHDE48cgcT4QRAAAGGhPGwBBOmKxVtsKNaUbKmD1qtD8gTVyGJr95RfMBje0LEmL3VzBdRlLRqZ2PY+ERtQOvgNQ3fK9LvS428GUo3FVB0qhViGP2h7h65qfpfdJtHxIt6rB7m3BIOy3+AfEqhRyP8+bOmDal3yso7EcP2Iho3hHqZomGouzCaHS3+UdIS4fsGjFdGV3B5iHqP+MA241nnjEQUyAKhTn3O1raBAgpPe4cI/bL+orw=","layer_level":1},{"id":"f348b47d-0c42-4dea-96d9-88036f5bb118","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Flow Analysis API","description":"cfg-api","prompt":"Create detailed API documentation for the control flow analysis components, focusing on the CFGBuilder and CFG classes. Document how the intermediate representation is analyzed to construct control flow graphs and basic blocks. Explain the API for traversing the CFG, analyzing control flow paths, and performing data flow analysis. Detail the liveness analysis implementation and how it identifies live variables at each program point. Provide examples of how to use the CFG API programmatically for optimization and analysis purposes. Include information on how the CFG structure enables various compiler optimizations.","parent_id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","order":6,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:07:50.9634039+08:00","gmt_modified":"2025-09-16T15:01:21.5834192+08:00","raw_data":"WikiEncrypted:M0BkmJ/RCa/QXAtpwUw6KenzRvKb/H8GSFBogYM0k82ywpLjGi3ngKP4VPt/qiev9xr4LCfJfzKT0cZSj+WsfQaFj9SbC2EGvc5d6pHc+GMEwDno9Lkh4PgQOVgKNYxEmmCJTl5p6GLY6+hmBGcnCp8j5OuVnaFlQIg+ypQEs30psybcVGe9wCPADMCR553SNzk3JihKf389HKsyiZrr+SPhRuoXKp+anEQN4SWV25S/QiGZ3vfXbt8ncVcB3wEzrFGv/P3Ack9gXxBeRzzvTbPLSN2nimB21HTxgi+pNQNCWMPbRnRvVMIhDNMgvWvKbfyyFYHLQuzqYkpT1YmuLrPanC4fY0XY4hNP+WbejdODF5gsvDvHqOXJCgEk/XTguWnqiwCQGo3dx1T+GOHiBf9rPLv9wMqkmA+BvjUqaE5suWDcv9BU3/wq+fyCI6uYQeKC7vRgsEeYmLcHii9iqnKlUdRiDcW2nJGw9WArBgnQWGUdu5/R26in0BOYCN6940urmpv4spBbADzJsWTngr4rfBHssxTk1HYg0/ClOIggC77OavnpVi3+cSDjUqHwG+jdYcRNxTLim5zPeIuMwLSMf4X0g2Ao0cmDv7dDXjsK9cLafVy1PtSSfLhaIZvg3DM5vFKPhj4PLA7cktzOgc1gRDzsY8CIZD/I18eF9n3NISmxlZ1FrUlwYXibOR6xnwgj2ubS7JDiZaipVYybXGVqJudgeKO6T1PuOKqO/0975/qrM5oqUdwoQh6bR2vPDFyXbfW4voyLTUtoyixXaPiT4XdTWO0YzaHVcOAwH5KybljH/qgRq0XSV9xoNXcCimHs/sDUyhf76Jb2pzdh+lIzXCoKiZNICj4ahG0SpUORlrA3yXO3XAzrwTOG/Z61fldTjN37uzzZsyCFvr2PK10Uhz1xke8zsPrG1LklwupCOauATGjDmIeHm67dKHvcv7DNfEMVnolkKObp7a4hVhGLOfks0DMFXkAFU/a7fwJrx+Gil5TpGPlqoKAAyTKvsjCvuHQ1fZaLos4fRkRKuRtr2/2AU6IKp0fiWhZME5GG8LgRi9Ke3c7kan2wnE6o3YO3jYnbCk09jgHZWwkQmReW0AgCIcoFsPLmfwqn38Am/dZ3hd8gcLMkurnUJes6cHVBfiO1enpAXBUKCRm/6xvr/Zx7VD/ugHx69Q/JVnSANCnMrNzbXwtAgUGt9WEMspUPcOQ4zaFkNZo+ua2ctNeXBHUwoWbsgjqKnZ5bmMG4wXz+ruHMhHdAXFlRMP/PucV7uMiqsyaXeq7kx35RyhKF4VPYzzpCG5ZsIVVKfOnpVJ2xt0Hjh3V55ZrdzwxrFI5P7r8c+8bZqLFXGW+G7c1KDM1l4Bn5v+xOaVmQfYWuRBx8mzGSPS0HraB7clB8","layer_level":1},{"id":"fd13ef88-8a0f-4534-9b7b-b39640a64222","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Return Instructions","description":"ir-stmt-return","prompt":"Develop detailed content for the ReturnVal IR statement that represents function return operations. Explain its value field that contains the return expression and how it handles both value-returning and void functions. Document the generation of ReturnVal statements from return statements in the source code. Describe the translation of return expressions into IR and their integration with the function's control flow. Provide examples of ReturnVal usage in functions with different return types. Explain the role of ReturnVal statements in function epilogues and their interaction with the virtual machine's stack management.","parent_id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","order":6,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/ReturnVal.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T13:59:36.9901005+08:00","gmt_modified":"2025-09-16T15:24:00.8537614+08:00","raw_data":"WikiEncrypted:HfwylyGPL34NvuXFDpnUX7B4qLewUBAWp9E1HcbJ8SHEVrjxYwGQ9I3vQIaIrgQGofSKzCV9LM8u6NgB5QmL1pVSpJU8MsJhk4B7R7IlMHpYZHujd/s8J732gjAHy6RWDAI/4J9pBQkDF+tBOmvE1uPlviQzPk7QfUoulph5exHxGPuPpS2DNjRujp96F5uRUuTCbZMy70cD7hPAlCCMjmPt97GUI+u7g9W0B87r1FeJqKOAjpAXdEmguAPx8t1Ui0ylwooOmNgq4M7dhK66mruIpE0TG6F6it7NjsXfzipy6CWvGhry2p5pKZ/PQc+lu1l3wI2666Ep/354r5EGlvdSPcFpI+wmr3//7xqTotSMGYmeQbqzZACyksNZkaHB6WY4SPzWwoP+3WlHiElVxKHmBBKZCRKMfb28QwceeBXvCwiJEkgjp1p2bhu2gPfi5OBaoj3bi6HbDd7n8SQ2CFMkzU+psPZ8YHGayvTPNouDLnUwjTUiB991B6ihQrhvb7YFUI2LuPsmELYCU5SzbZ47ttXRCaMjStwS6cq9qWhwyYoMQpwt14XBRF+WMToNXmx+mAhcG0KP2vU5CCniw1byYeNrmmJ4sJAVa8MyouUwwmQjn0xsW8a9LZ9RK9mmLmSq4NZjAifc6XnIN4DiPWDvrKGLQpT52C4VFVc0c30V/P+5LAYtQZla/VMOqspXwUvSA6kJhczFF1GyJzzESYcHn6lN60iUso46cvM8Rb5zi3hLEm3nnOtXHhUG91RrA+lsgos8IqbtmINM50dkeDmuCLvMkiN22GV0WMnEnN/YBntywiMMMzcR7XLQ56a8rlGkz18oPBc0MlrX0664qIppLHqzaJVPUBfxuaZiJFbjybvYTzcEvIiLSbZ5TDtZB8c2bINacjNgLcHyTmOMOHff86H8q30EMi1RNzCS2tL2BGJqyK7AhhTm78tN3YrvIU9tblQYxceSVQ1CuZSX4oLYnwlLDB2IWNi+jRD/qTZc1fLC1z+w1kmbrIuwsDuQpCWYknnARTuk2H/8gL9/8bvg3/fjmom9j0CDRWGzjo5y683lLiaOFKHqEe9LNKSETl2DZjwTubsSlGP12/UfarJ0zOlvuuzbVwFQzoDyB9ZP4/1pTO/PhkL/pWS06afWvFHlt1ATV+p+f/nkukLRkNdfWa7f32JUwBUF3Qox5TDmj3qa8RDWoVgQyO7P9XkX2LNNIpIUr8Dpg3/1SXGuWcfLaIp/umldIPnco4FFhAQ=","layer_level":2},{"id":"37809977-cdfb-4669-bd59-c2fe5b8459bf","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Optimization Phase","description":"optimization-phase","prompt":"Develop detailed content for the optimization phase. Explain how liveness analysis determines variable lifetimes across basic blocks and enables register allocation. Document control flow optimizations such as jump threading and unreachable code elimination implemented in ControlFlowAnalysis.java. Describe the extensible optimizer interface IFlowOptimizer.java that allows plugging in custom optimization passes. Include examples of before/after IR transformations and discuss trade-offs between optimization aggressiveness and compilation time. Address how optimizations preserve program semantics while improving performance.","parent_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","order":6,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:14.1617869+08:00","gmt_modified":"2025-09-16T15:40:27.8459735+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl89Z2pRL+FJzE3fW9Z6FxSOrWrEihDvx0lgITVUXeN5T4WXqqXlmTNNDldaJ5szdemWbA9lPd/w+JpZ/LqHrrJFA7GADP0s/mnYOZT++mYgVA4leRg8rf2tWSvtxd+yJIuDZ71spD+bb7HHWeWxlCRpAMoeWp3QrzhmTNXGWWSP8ZXrojghnyA/k/IrRWkPa7TWr0BJMF5LkQ6bgXjZ3cT7vuN93+8ngmB+x/JlsK6aU93I7g1vB7naVy9Y+xgZK9buToAdgo932lQkB8qJl/Env/nz/LRL/wqs3sJAFl4A5vMEzvQvxFkIpU57PvP8v+aTvZcmKtZZi0e9XzfojM0wnzjJbfbN2HAlbGdy8wjAQRtmpP3W+dSHcg3z1QtGPtyF9UkHYCIe9kiCMcLw6RddZf33l0NKMVuxYKBy3jImODQAxC1qDN98N3DBiEqjnxXm9AWEHHtc7l+ltTXKujAyRqctMbAWr4LEnzvPDx1mSX+4AbG92uFOwtcoZmmtyiSEhOMZA+jI7QDR8SpEc05QVUODxxITqYhkg48IgSPiSo0x9fMMFF5gPcT4rYxo9zjsZ51U21/dPHO4Ae5FzHD8B5C4vPL6OO5w1jSp0oPVGmleuFIgeFjHtNS1RNz4ipK7YDvOg/kc6WLxuYcH3Vw4TuvrojyDVpWuAuZvHtQF/2ivwq41C7iBkZec/IH0C2i0RajdubzFqpIcRzJpuHyXYo9M5UNYip5Th9TRG6SvnBcJM/2xKeMcTRA+ey1kS3bARTWUNWQhQ5yHmuwDB0zPAbAtS2S0Sl7RC2bWr43VOasqelS3n+R/erD/YXaIhmd3cdVTIgeE7Jc8sU45z+ploWZvP37v1eieXgCrWfUjZdapELu+mJ4SXp7wVljbf56LZHN2GhGcN2nBI0M2De8IvUcCM9+Yd2uN82TmPeJz10GPyxnnv76azF/ngot6rv8ox70Qs2CHNDyOXA8nB74LVnZBc7U4aAg+ACBw6BylVOMo1nKwPr5tVu+lgNg0Y5J6i0Hsbq1p9slvY7etyIkrJS3WGfJgiKP3gz0mNps2dT0FWfS9LYqbSYZzruSpYc1d8HHFOfg45lEIy+PBw+ZX01E3CvDkltxOJckhr1fdczl7nrc5aNK+jBKIoHoikkhKsjeTfB2AOU2h1H9QmozhCwNm9WU9zzzP0fuFlToUXRvWWxY80zwSDyK4gPqWLEvhGizvtbqAm9wJn64t5ic4E2FXDIy1EqyI2cBrTJoegMTRF1qS4eGksKSrWlKyHtZuvQRtjDGGljMjbyZw+HeDGUCK1NeljTBbMOeHtI5rfOTjRW+EHrL1fzReziW5FlXKNJYlmnegkadssLdGmBVsmP2+9+VHcOcI6HnmQGguoIoXRQVtCsW+Iguxc7prtB7CXo/wc407ORbkszySMoTmVopwKrMvQxoULvuUX98xa","layer_level":3},{"id":"07048b64-60ab-4f22-a6bc-52300115700d","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Symbol Table and Scoping","description":"symbol-table","prompt":"Develop detailed content for the symbol table and scoping system. Explain the hierarchical scope structure with GlobalScope and LocalScope implementations. Document how symbols (variables, functions, types) are defined, resolved, and managed throughout the compilation process. Detail the Symbol.java base class and its concrete implementations like VariableSymbol and MethodSymbol. Describe the role of LocalDefine.java in symbol declaration and resolution. Provide examples of scope nesting and symbol shadowing. Explain how the symbol table supports semantic analysis and type checking. Address collision detection and error reporting for duplicate symbols. Include diagrams showing scope hierarchies for complex program structures.","parent_id":"","order":7,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/scope/Scope.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/VariableSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/symbol/MethodSymbol.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.292215+08:00","gmt_modified":"2025-09-16T14:06:14.4010637+08:00","raw_data":"WikiEncrypted:oMua+SIQ0+LKIeGHhgzO74fCEa+tYNp9fTrBJnIBMHeg+RXVhZuqDIsxhOOXK1P8fjXHYc61gF6w4PXsKG98IQ5Zef0+yin6peJX0DLwHtxiL3ME4qvUYhKClVMQxy5Z/DvMh//lRTpdVbt6ikn99fXfR7j7iCy3WulZWncgjQE9kbhR1sw8UFxRNQ0KVt1XMckmVz53vi6niWy9+9iRxT4hKuPCKHWrj3BIAd31tNAw3ZmJ2GtsvvQTFH2rQcqmw95yN272RtcejEtt0YeFJC7sG6v4wGhzVnCHNnJM1X+KKOr5CE28KE5iQy5z/qgIWauiDZnnA5dDHR4gHrxH3P92HggWZNeA/OcEHHPvS6/d6qBtFY6iJKNZGOfYVvFsyac8NlHj4231+7TJOQjHi+WNfb5ouKe26V6MV+aOemTc0wbN2EZFGqYG3kuTIQjHKwig4DSC6GRQFpRZGYWYXyMsiyqugU8niAjb46EzdU4PqBe+cMsCGVoPh8Aykai1q7E3PynwqakVq9IOQCJQ/fbdUxT8RQBY51+3sQ+LNfOJq+vyMFZXFSc5gqtiz384XURSOwxwiUPadIPA0nwwagWy67HtQrBZY0bXyjgq6wAiSE2zFFEPvXyYNak2pr1NHnF7gQnlqJ3Xdwtt5iUJM8cmnxHCfci/Uua+dFaArh52AtSchYvUxlySmn2zv9ucaOEfokI+BT6PLWXFPmATMIIvtDCQ+tzqqT3rCdwOz2kK1PH7OZLKDJrDLEtVo7wB3aB4/2oz6iPW1bnChmJ82czCuZaSDSTlP/U8nrNHzYBaZn+6AdrChf1c6/gUTFUdVInUQ03lKcOeM1cLnhY8ybna+WI6Cakbav8TVV0yVk3ehkp74s83ae+m5Df4bBTiTpWPgQ4u9LTxQtCfMeA/A0DujHgICdgyzTRxN8NOMl+uvvoNkJb++9aq1RTtFtc6GGvpLFQ3P/OeCkoorc2Go9OD1IU8IA1EPwZZuDUOWwORkjSphLbA2dvjehHe/1OkTjC1E7TUG8yzh6VTcsiJSdnkw6WX2berUkLEWGJ/WWW5MM2Ol7yjNI4eiZDiR3/slwCzyjZaHvAgwsikJe+4zX9NPZGC2weXuRpBHYghHLDv895Xg72ccdSPg7GwLSld5JXUC6Bw3n+YTUWxpzrINPtMYDmGXyrERS3OQwsMtmEGr69PXu1UL3kQ5ohiZQkY3oEbrxVWdgpEWTZk8+Hujmi1eSq42Ze9oYzBJJsKBBPw9ObZnO7ievDRXrkgWGxtC8dJGwdEMW3i0LHVUpHdQ4525Ved7ofsT7hKVgF4WR+kSAXhkbtlDRz1c+IeC+ZHWR/UExklk8PiM/lWwfcldRHflb8d95V1VLDBG3bNqZ1MJjYlxY7bce91R0kRJ5MGJ6aC0SOW/d2MfZU9EAh9P3qLc82Q0D9l4MVWtsaA6Wqgd5/lYVyZnY/pJGd/e9fPiIP+00Fu7KNWu7UV6fv7ka3Pj3vpBTB4ZpDo4Uk0GlO4elzl9BTktOjmi8tGcQtPsOTTFP+fqWG3bChNfC5IILBnqu3EZFKVj1rVxKhChNBkP4lZIOxeRCHqswTiqqj/bj3D+5GL1dqxmYZ8WD8xnAI7as0hF0QZx/KQR0x3R5Hr9TQRKauvbCoyeUYmksiqAFP0uVTi5lQ9bn47nOLZlRRCfuhcnELOL88Sb6wcuSZp8wndajW2RikKUgsb/nBvLicivgqlKElJV7eUGPW7TGMR+KpODa9T7EPRYsgRU5JzVjmYKfoFY3FsOISODdUJF/pkYamf3YH5ebVcCpCPjg==","layer_level":0},{"id":"25ff33bd-8c70-492a-a93b-3b2a5c14244e","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Optimization Passes","description":"optimization","prompt":"Develop detailed content for the optimization framework. Explain how LivenessAnalysis.java performs data flow analysis to determine which variables are live at each program point, enabling dead code elimination and register allocation. Describe the ControlFlowAnalysis.java implementation for identifying unreachable code, redundant jumps, and loop structures. Document the IFlowOptimizer.java interface that allows pluggable optimization passes to modify the CFG and IR. Provide examples of optimization patterns such as jump threading, constant propagation, and copy propagation. Discuss the optimization pipeline execution order and how optimizations preserve program semantics while improving efficiency. Include guidance on implementing custom optimization passes.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":7,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.1756036+08:00","gmt_modified":"2025-09-16T15:01:07.3425099+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl0HqIGBkz/wOA3wApR2qpasFujyibiq6JEfFWYnhM15TJaj+M8kfZS/xX+6B5QC9lwTjtLLzw25KwGiWLcJZzAD2v3r6mvZgV62QQncC8tqAqtR5m23CKEx0Y7GN02oRDdBB7BNJnAusSgzGy42nNG0KnMeMVcREHv1oPBZvjmmevoQFME7i0o6Hn0tvgPalgUMgf34BtDCbdCceoiStg29/XjYtAwB7+sWRmF12r5fSDSCXHiIUv6cbfyZF8aEfHoQy3QbKJvFK0OKACMyEzqBU9yIVpNbb3Gd74zjlvCFp0YVFkssi+rY5Mt+WOFt9mgzxqwI4j5oRRwW/8reO4tLlwLe9OhLpseP7BrRyMJmNqtEvLCycEb3QFP9e3iV9kSFDytXX1oL63awe7Y/LtieUDEZH2UMk7Zl8ZNP+Gq9J2QvztxVvUTUdKDTzJ5Mn2vaWnSeT099UceitJxircBcrlFNBJ2cu4iuHjDClIWAPTHmtXd101VnL38fzUxsXZzQkralDrc7NK86QpkbJ+cyDr5pn+qE4xvh8dR5eA+UfBZMNMUsMqNeIvfeXbBoZhDcSYYjaOgInWwIbcAG+EfBBchk6zUr5mmXXZYxaDRfye7Q4ANygWtoDrujHYZg7Km4NQQ+7envMyLWzvsa7bd+NPqetgESctBb2OgU9pQpW0ZrrI08Mvh9aavM3/n51rP/YywoymaGhYgpmQnhN/cAKOdsPQZqqQozN2m4M2fYg4WQqkxExTQA4OxyFqjgwh2sI4ENdBrF9ot0q/m6cT6SWwkqIDQrZ7qJs7eVjWwdii/iMBIBbWc/TG03ZyamJRaDMfs13zezdtnBnBf/KEFVP/72+ayW6n3opGUpN/3zG1/EsiZwhRPeAYpLv7k6SJzw1WjvTbm4GVg0EBiaI1NfIN+5eemEpN+NShEalR2CtdHGoCca5YWSLJcFwSZIBir5jlaIwGdwwlxLhbCfPkheAC45UWJXKVan9jvU28y8dLWuRJGZAcR1ALzDoRUifmPREEd7fvKv6QeTMBEXyFxL9C13BeZVGDN3kAJY1Ql5GXil0Vag4JH9vCXq2nmHaoy6PWjXcaz4aFzLYZHWAeGUhH5bGSjNmUyLXnQTub6Ii2J9PCoQPNWqA6fVOM90kdue8b0/ej+8txj0zdNhyZ2N9A3ZVsjhUPXhkHNktmy581jPQ2C9nwiUfquIXfjjrLzO8m0CNJVci42Zc8ypKQpXaQdI5Rc1mnle/QxC5lkdeL/HCBFsDzDvnGfXCaqcC5BekUgivLSo9Pb74fBgKDo8LgqmXmDn+W5sgOODziygnkV3Ro+BlbQMZ4tqoOqOR3JBWbzeMF3wzgpYCAB9n5hPDSHujdBlqzg7xjICJ/d80rYhC0bFg+5a9DQreVT8vV8AhosL1AXnI6McuGW6IuEv2qWQd2FV7YbzKXt368hHtRn0kNlJKOJtvQo+3wIDWss4IFl6DzBn8b97Pyrtv1bPzsE6Vox/c2YGsqrgzkLct","layer_level":1},{"id":"1f5f5f70-13db-4a3b-be03-bef8d5729365","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Code Generation Phase","description":"code-generation-phase","prompt":"Develop detailed content for the code generation phase. Explain how CymbolAssembler.java emits stack-based virtual machine instructions from optimized IR. Document the IOperatorEmitter.java interface that abstracts instruction emission for different targets. Describe the mapping from IR operations to VM opcodes, stack management strategies, and label resolution for control flow. Provide examples of generated assembly for arithmetic expressions and function calls. Address considerations for instruction selection, code density, and execution efficiency on the target VM.","parent_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","order":7,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep21/src/main/java/org/teachfx/antlr4/ep21/pass/codegen/CymbolAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-16T14:00:14.1628138+08:00","gmt_modified":"2025-09-16T15:40:20.8410755+08:00","raw_data":"WikiEncrypted:l0OSRLb3jX0WYjxj0Qo/H+QYyfqGDH76glPwBtJJuji3Fw+sfwzctQ6/99V3vQx6cm0o9b6LMJIli7V0JxiXpU+tByy5t1EYeAOjOaeYPCqmx2qaFuLeLmAL2JoSF8y9Db5RKlwe7fhwZPuZEBn6lVARSPAw3htOzie3GeI0mZrwNgwx7CydXYZuCPCrnaP9iko4kbNc3S8U8FSI1YgQs0wx/crosjgiVRDeDL1iR/cAcl+wbwaNNkO+XK0/gTUivvDb8RDoYO9FLnocq7qlugcNNOASLMWLx5usV6r4HHKL9TrNRc9htv06MiNwzW4xRVskO4ii+d0oDkB0Ct0MJhd3fmWbI3CKCCF5dcNaketyJ2S3BdkXTxFX8+cLCu+ktl1w2OibUfT3OSDlzFsfhND6msO0gp5ooLqKGn3sQjDQ4PJsbO/lwY0JbnNrX/8jbymUn7y1GT1R8M2kHRbOZ5ud1V5y/ufxkTymuXjX4kkie41sZZv3CLvaDuXeQFS+L6ONoAm/iZS8O+7Mhp327/ACe+V20RcCWskwj4rwFpAElYe61twDT7mW6blK3YUInJXyCK+ev9YC7sOJh2+nQdVJ4FOmvhO6pPWZt9jTb6L8sAZu7wfgKeIzhC5Qirnmee3o8hxAHmVNohSVGlsgb8aeTTqr9SAxd1Enx0cjA1XBfM1oyrIBNB7iOVSFefKt5aRljUp+G86cDz0jvT6Pb8hzbYDeLTodwbOOuxRWNAsHAdXjmUz6V9JEbeMZmhlnkTdaw7erWWUTnDHVStMqV6vHI8L0u3U6tg5k4QpYns4/8fsVefUzTlLEiVqDRmWeGdNMFEBmtOGQVm60MQkNoG7ieOca5V2by17uyrKfNMvlkm/MW7D60tk9hVUMArBilfCZ9MhJHyHxVBZNfTW/Yi8kajOL0TV5pcx6bpDisOGPlG/cX5zSpEV68TFYkfNGz1lMUUOVsBLfiqeAuElQiRqQhyRsITWRmhvkqwgKoAK1D2yz+wCpflC1H4586nPuJHhSEMdbbEV5KUdn8CGCYbWxl2FZ7k36/1B2yy9qg6PJ2lr1WKpFt+k0Lf3XFbKMzYkWMUGJGh7CQawaDPJhbIWzrM8PyujuVWn/5/Swnj7nTr0yIoUO8KgrhspIoHlWkldtZcS8SHWIciUU3Ah6Z+zZ4LRHr8VOCBgk9t9fLvMC+umO1zI4ks1BLqQA3HM9UzaAV/aVEQD3Ud1ZjWI1my1hvDDv2ya5xG5Z9ShWWva6SMGlGnHITheo1nfN5wlZNpeUC9828AaS5gPyVOfpS40ghPVYAacB16Sn6203Mp1NBg+ege7DpH//81Uu6mIYju8v8g2VczcdYmBOMesk3Tw0P5yLIJgDtbK71sroplChy4co0WR3yvwQ2PDib994","layer_level":3},{"id":"24f0102f-a33f-4f5c-ab6a-11870fa7d7e1","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Type System","description":"type-system","prompt":"Create comprehensive content for the type system implementation. Detail the Type.java hierarchy including built-in types and composite types like arrays and structs. Explain how TypeTable.java manages type definitions and lookups. Document the type checking algorithm in TypeChecker.java, including type inference, type compatibility, and coercion rules. Provide examples of type checking for expressions, assignments, and function calls. Explain how the type system handles function signatures and return types. Address error reporting for type mismatches and how these errors are integrated into the compiler's error reporting framework. Include the evolution of the type system from basic types in earlier episodes to advanced type features in later episodes.","parent_id":"","order":8,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/Type.java,ep20/src/main/java/org/teachfx/antlr4/ep20/symtab/type/TypeTable.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java,ep19/src/main/java/org/teachfx/antlr4/ep19/symtab/type/ArrayType.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2939282+08:00","gmt_modified":"2025-09-16T14:07:10.6347963+08:00","raw_data":"WikiEncrypted:vKr6dgGvp0y08i+7u+cDRCOorftDLgQ09pymjz9BQudei/cRv0Z83M7vPRjQWL1QvLkIe1l1XZgtNX+f41CU8/bECFmpOeMO1MMEh26LC/4fT5Vo3G/Y1XdmynDDczEfq1i7dRy1PhdqTzAMNsuE8E7fawcj/IWAM5BjzrOHcZfmuXY++41py4gaBa7kWRldvw/ul7hHKqk2pM7nqk8THaMEoB3Itkats9Lz2p2TXITgsTrumFwm0Az11gerIq5NK1GvvM1gkWpOg3jc1c2ZctFcIlkNKhqAvFm2Wq8Ru4fErHjjho8i9hxKr7aXPh7gQ4zNBriN7DFkjrgCLXUfcE2a0DcEODtT1VIuyspDu3DbONlzZ3S0zz4Vs/0e/ZtAN8xMTCRBULith6cwAMgrUWnjgxPKiOpZcG/le5L4PT+h0iW17bCL7So/9iD0GH5Zo+W5HfoPlFpiHnJSnwrlpEgV4wROY+6kWlLP35fzwSsznMCtF+NDYDXD+OZXWBOs31e4v4GVw9AvNHZo6FI3eA64P0sXaaYSkTAjZebWBpqcyTXjwowxrtZPqZ5Detc6i1eDIii6VEQRlabO9e5yBIwY8jfGKGyczec2hRSRA0V1YpUNA6jHCb+28gdFi3hZt5G5mbEmvG3KM6NOs7dgF1qM8Q+6NgHZj7mDe4XlPv2rrK+1f7lls1FKbT70QMFTiqhEwNCGSpQRhszitCVs18kBE/s3ZamUUKQWO2qEXqjny3QXb5FmWLf5jAHaYxTD5vVGwwn2OjoMKXbtAWQGPuhZcNsh0vv4qteJEgy7mXf6PXqDRf3NEpUAoaAbGlVvgrSfRVAQZIXo/8HtDZcKafrFgRKpa/HYHYSVejC367ZZmTsLmn/Az7T3nOBNfMDkGvt/RpfQJB1pjun5N61VodefsoqfdPeuTCDnznZpSb50VxWXCg4mft2DbUC/yUsurugk3kRcwkea5heXxryZ8Au+gl8owUjhregzBSSjxmGV4/+sOQrPXLNBocHLX57D+Y8f9BV+ux5JfDTmjn9b1FAG6XVo8hEABmfLYJ/Tof+X2JL3lbU/sQXsjqIeDn58wDeY4o6Yk58nEdRKtyuXAawlitFiA4Lz06v3nC5gwXnm4eYSdtefFwNKiO0UvV5iUSP2M+GB2aU1algr48ggwc7V9e/+cQH2iyb0b3XHq7k3A3jey+2uyud5CJMzg9X0mf5CMm0RCe5ACpY2HQpwHSABiLjSQ/VJNrg5BXCCGIWWbOU26QVqvivcj3P4gnAbMbQnDWBOHcNr6LuUvsdElyYt+QJzUW7qDCIm107eTeaDcwLvxvaTZ4SAoHOqtf4YS4xO9Totl1lq4DrJiAQ4WCU1/nxx8A74L3UBWN/hNGbe9PeochNPXlQJ0kX0YPfsKJt0EMEZbVvhB6UaAY3DE4Tdf0ijT9QstRGRcjoqVsOFEf968/q7kQBS9Gvdr5hp0coaP14OH0Ix5Ki70UipoeUrJTSAW1MD4DHxqNlAY247fdGMVxHqBgupDuIX+6HuL8RMZ1W3P85YCLDQj1znL5EnSsGQ4yYq2+iaXD0dUFAD6v0yhK6mNUuW2F+JPx5BLh9YeXF6Ojbzd9FGcZ6ZzXl6KG41gfUIy3qfz9DO0Kw9Rfwb4FAvhXvhFwjW2X5FVM0hJFF8TNvZI3+axrq+4gOJvwDh0gb1Af9JJR1u9rPS4nkbvPAZNe5xmCKYOXX6vKzctsYIbMhi5GuBAgMNHb/NDpEidjfKwwSXIfz973ksxRTK3yyG8nJpbPP+IxJQJ/RTPPiIv6vq7IRiyFpWTw==","layer_level":0},{"id":"4078be93-a696-451a-844b-f5db53ddc3a7","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Code Generation","description":"code-generation","prompt":"Create comprehensive documentation for the code generation phase. Detail how CymbolAssembler.java translates the optimized IR into assembly instructions for the stack-based virtual machine. Explain the IOperatorEmitter interface that abstracts instruction emission and allows for different target backends. Describe the implementation of CymbolVMIOperatorEmitter.java that generates specific VM opcodes for arithmetic, control flow, function calls, and memory operations. Document the assembly format, instruction encoding, and symbol resolution process. Provide examples of how high-level operations are lowered into sequences of VM instructions. Discuss stack management, frame layout, and calling conventions implemented in the code generator. Address how debug information and source mapping are preserved in the generated code.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":8,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolVMIOperatorEmitter.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.176635+08:00","gmt_modified":"2025-09-16T15:02:18.2938329+08:00","raw_data":"WikiEncrypted:l0OSRLb3jX0WYjxj0Qo/H7RHhqitOnOdiuDaGCmhl1sm8euWj6yfrmcd9QwblMGbvwr4ABFK5TKoOTrVEZvAGXIKLhaeh6HKK/i4FPacc5vWr+GhVQlax7qKYkxxkv9mNh7VJn06I1sSJJ7RqD4QqUro2Kyr+uOpoteiJKBs6oWLUXYdawsd05DN3nFk6JFMNslfUoqrMVkrrD/34QuXNFo0QbQaa6hPXR/NnINFrmERR2fAFrUAqv5ol2rTJGR5n1V4pSlEIVG+JC7qZe7CLKBmf5rHvTw+SJM9DBRaJobe4YJFXN5GZURxXyKhJX9sG7m2WODtnvd/K6w17buPyi5+E1PJGeHoyobjRaX5xLQWgQxGDVI8F8QwR7YybQD4EeauB84YjYjw5sBjJGG4eCt2iUukuonMpRRlgwzyFHt2lmmPFSgIOh8MkUm4T+IDFqknfggcpQVzFDRIEdv+VZFjLGBC6tkKdTVTfeiAzhPibYd7FmvM/ZUvQ9ebgIJoJ5U7S/XCfn1nlj5knXRuIvZeklwOPG5mZt76hd5/28EUOzeNcL7ZcyPEKvz0qTJA8c+zi74bGlcYEx0Hj6UiRB0q8tBvNGZ9P6IatNB+IAKYVZf/B9XnRdGXbIZ6hNl+zTGMy51Ynwi3g+Q2PVMXnqCxj9Y1IQB6lGIpVa1yCMwNJKoG6+EBhyz+epMLXVxKh3Q+pxnFHrVcRE4KF1k5uXn5kTQhl00HIVFJVq0KJPhwF+zmuzFrFP0Hp8t6FsS6sDVpJjXCuMmVpDUz+ta+CYeazTAp4V14ophH9AH2HmLQdEJwfAUQsiZnSy2AoZJBYi1AOepBQGYKu2y/A/6t+ygNH3FNr2M6VT7Z9MD9SA4WUWFjPA05hhSgSB6zkvQH67DVjZFm0P30hHBQWi+5mNXyXm525U2G7Hwn5CNOqk3fI3/BDiv1Xx2Wk7Zw4weJ7N6paoBwKgUYjAg8MUAWby3PX5NAKoLD8nx0Xwzm4N+10VoxLN70yMG7jGRMsg+xlf1KVrDAsU4b0zYhqYj/H6K4QDQM6jEPk4g+c5aLiNz2Hr9u79dGugi5UYprv80WcmhZUr37Z6Gz5hww3TRcS7znpk9aXK5h9G++iVCXNCLGQDNNqlsZJMK4cJg2xjFRaJrnMQUZaXD7xBnbTXvrTvXzA4Pzi4YBWpRnK6zOv//ZBoCFaOEyQlNl3J0E00V1TU27N3FkE26cssFySih3IQgGv5yjv4Oih5XV0GsfuFJHsH+pcujErzTjquktEh+xHm4yRzYGITwpMb5he95q1uAiSLWwFzDLujPvDp/wvnLl+cJh/oJRwfDMKOoR980JvZ5VJQCAIq3Lyg5p+KYXIbJMYis6T+j4mkcoHWsVYOoi1KSubEQ17pF84t0/Q3rcCWwhbn128ieqznpeFAFuaiQE20B2+OTwUNMOVskOqTOQPszbOjLxuM/cLsNvHh/GakJ2cs+8d92VlQR1f9qsqfMSQpFCbWyuqZOjCNUNGuKqdNRilr+ADOdY3zikCsK3afbGyHd90XsiFTNvJUOCTnyC7qxxJc9XQwxvK+mrLdDYnguYCMwWZs+OGlk7ssjXhX3mNCo5Gb9iwdmJvbl8goW94VkXchsfQlAOtFBCngQ=","layer_level":1},{"id":"e2398669-3afe-4bd3-9bcc-aaba5dbfed6b","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Intermediate Representation (IR)","description":"intermediate-representation","prompt":"Develop detailed content for the Intermediate Representation system. Explain the three-address code format used in the IR and its advantages for optimization and code generation. Document the IRNode.java hierarchy and specific instruction types for arithmetic operations, assignments, control flow, and function calls. Describe how CymbolIRBuilder.java translates AST nodes into IR instructions. Provide examples of IR code for common programming constructs. Explain the linear structure of basic blocks and how they're organized in the IR. Address how the IR represents variables and temporaries through VarSlot and OperandSlot. Include the role of the IR in enabling platform-independent optimizations.","parent_id":"","order":9,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/ir/IRNode.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/expr/BinExpr.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/Assign.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2954746+08:00","gmt_modified":"2025-09-16T14:07:06.2910567+08:00","raw_data":"WikiEncrypted:GAYP+Q96byUZT4Py247W7Csxoyf7l1uH/SZ2ie8YahDjrN2raWInEQ6fFY+WER6mdA692efWyOcMWo2Bf4mqYtqT8mo58OGbpS9wngpH6njeiNWQtdiZxUVcKL43BlnPwm9gyH8JZ3MndU9qVz9FlY9rjbdB8t3o8rdamCowzpiZHLjA7kDMtM8IICp/btI2CY5+GcyKyEYml3LpUNQoyGGJ1ezrbiz9RG8+41dYtpMZB6JPf3xb44oBBAXYYg/x5hMQy4OCc/y8+dlnXGHaIQ0uRkQyyCIbYDKqwc0FcorQQZ0p1lKH4rSoujF3LRrp6zpwet27RLcCy6dFAfaopevnVqy67n/M9K1qeJKLOeY+abFeh0MmZhCEbypJVvG3uRETJ4JC2z+L84lVIMsjf09MlSW75E7Dk1HaEU5Bw3yps78ikfO1erNDh6qbuKerg6XG5KpRRXTRyiYgOEjYqk0YHSR2uCHPSvLLF+Lm4etzCCGTRi4phN8UuZHM46c6saqic0IY4BjjUaL+GiB6VPQDdRnsXL1/CXuc/jbGPF/4M/2sPlD8/c95cNSBROpjrd7wb63WvFCoMD+2B7p4MPlaHLmW5hE1ukoYdGgl0VMbQ2aGjs6b9uxl6+2xB/ik0bfsTMlpNI9W/1NSZGBRxRV2V3XrSZUu1V+ssUVQSdQ2vUb48xzvWIn9rAXzc9zIhaHvsJ9oL5ZG1m1kcPkeZ9w0gFuTE7ldeUH8ANnW4ppxXsgZsJ1QBJWzxUz86pAUjdF3alAhhbigWW4gmlzhABc8kaJfSLsl4AyMo6zZRApxj45pMs2ey9jdKtB1+TJKwR3EHNGejzNH/evmvAHOL8uI+R2HaKHdfKsXhTj8/kntW/XRt7t0N24Vv2iN7MC+vAl5p10xSh/81cgezjU6g39tCv2CPnRet48aTFCx+fWf4ljkjDLAx/Vl2p2mCyZHQR2IhGTGpLjdNwjecI+LKOISfYDfXiZKLAfF2d25Y1o+SRG/xG08amFNwPkos3zgbeJ1XbV7rXIYUaKyoMuGG7nRe6aY+T2nHTQr6MDtKDT0+uXprYfEBpLb4FekHwIukA6VoF5zokf+P5/5WfT/dnrKivPlZi/a2dhP/ZU5DX1anmXyyZHWf/JMbWIxu6fyXOcJfgUaOAC5YhiLMDHSj9TC9Ccv8X3jH02dSAnbsgMmw9m9cJjWmIMjKboVDYpWnX71CR2b78WXNnIhbkp3SwW9vLw+I3Vk7Y9X/ni/oaEU5L2qjpK75xFPSl0ocLhWkFVnxOsy2VOK+iOIEM+064g2mz37sbxxsdmF17rVuBGHgQOGHY+VHcR2oQk3WMMzzH2C1FbkIdILkXhOZTXwLNogGFTHbR0XOY1yNT/3QUl4bjFCuTqBxV9dAu9txW4oZiNUsk0G6KvZJmGLNkR7MRytyEY6v8roNbPAbCiqhHTzOjRd4nqqSLLhiST+7r/DQp9CkjwmNZQHxctezA31WprkkCcMfev5b4hoitt4Wujbx6aBvceKvYp6iPJgewm+lR5ncaJ9uWkAHFg+0v5uAT7oprCQiLgjb1gl1Tpzs3gYI58QvL+dZLyagMtXC/8jvViEwZvJzw06bQj5igemC3gag/L4RgOj5l+tmMILt1E4XOTChUYkXFP8viRz6LfXbMuliWkJ6vxaLCZV7E3VWakXMwZ6zaaAHEo//ACTityV6idI4KIUwutrdWFFzUlIoSIcUZYAMDfh2jskhnv26w==","layer_level":0},{"id":"7bb91e05-ccd3-4ae0-9389-586f0c3b1a16","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Error Handling and Diagnostics","description":"error-handling","prompt":"Develop detailed content for the error handling and diagnostics system. Explain how CymbalError.java represents compilation errors with structured information including error codes, messages, and source locations. Describe the ErrorIssuer.java component that collects and reports errors during different compilation phases. Document the Phase.java enumeration that defines the compilation pipeline stages and enables phase-specific error handling. Illustrate with examples how errors are propagated from lexer, parser, and semantic analysis phases while maintaining context. Discuss the error recovery strategies implemented to allow multiple errors to be reported in a single compilation run. Address how diagnostic information is formatted for developer consumption and integrated with IDEs or build tools.","parent_id":"0a280837-5a3a-4748-babe-7bba3080c119","order":9,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/driver/ErrorIssuer.java,ep20/src/main/java/org/teachfx/antlr4/ep20/error/CymbalError.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/Phase.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:02:45.1776668+08:00","gmt_modified":"2025-09-16T15:02:39.8595151+08:00","raw_data":"WikiEncrypted:Jt2SeH9cQITjBGdB/YEfX3N8YSBxdShIw/8QWs/GeiLmzikytsZe8mQYzKYlEl2+N80zb+/pmX+qoVX3pYgXXY0yeqpg9NyNF1cEFCkbwul3KdGN+xugE2v18k6ZXGQuCsKGKgSMgvR8eUmZei/fv6eS9pJ348ESoqo8RNm6AoXVXpSqjh+pVBxEbABaM28pbiSzjADWJK84okzNdyaD/SwLZ7hvWQEFA1VDQMgNipUp013kWK2yOT7ZAYF6mXSCGe4mQiTZE+9ENFg/KmQbmKbZ759sOJVMs5rx+r+3C3YwB4UKRnHRH7wOWVYwXtBQAZ5QktkjxbM3B3a5vBJU3kxfa1gWHBI4qtUMl5fGCI6iW/zeiiLFc/D3YQrFDtdAGyDCitUS+9qXa8QUO8bbrAB9TzyTD1rYhSTyvoRbntYAC5pOlf0kG6Cf4SL9WoQ/RYMWnRMWDiDaglF7KsngfqcMOgU4vXBvv1z1z4wqK7s3NeAcQKvc5Pn02kFM12WXIwF6+h3tomkeX1c35aw48x9i26aFhNf4jIB02Xch38wtnvaqxZh3gmtz6QQzFIgzLLFRVVb1EYPUm8qfAZhqhBkys5useaqQ4ycF5XyX042m7e6Lm3Jlx1cdapQ0DVR7nIz0ZQ3s1vUz/4Ty7VYo3oculIgAXGUtiAa87iYhUkB3QnRKaaq0RyzBzyikwewI8yFXGnf47eqfGyfSdXgRNCl87UBxcN5uENJzRUkV/r1QZ4valjF5FMAB53m9ViAlZKNu5fTWiGPOkHaa2g1TONKkWfeQfK2Lu2aqYpBjBoDCeu+ml+u+qPwUQqlZDdvuCmFwdyIPtF7QN/njzYfMMwn1Z2k2s10vV7tquqDd90oqbGVOw+bNjd+YZ6oK6XAKH67dANsCKiN25Ds6F+zTJfweZXj2/Q20JHW6Wozug422o9zinz9PxOGRK4u9poOu/o+c8PGq45Un23CIMKzplIEgGOVyoGzSrmGlrWzHRfCPR2VcW4a9Py6VVpqrlHcqnnhAcUbHgEVjbe0Mu6AqJqaOM/btoYFWxCUJ0d5adcd1Z8gSnpn6mq3bMmuRqbeAE0hQQT5N3p+s+MLTRAKhYcdRpuj6ZqI27q7wDn5N9v6P3TJWzp0fDUbsDD26jupbFrNUlGLUtBU+3m1NN+mtKxX7IsgTheUQKadfeZ1x8Dsj7ToBb/BfL++TOTxcd/Ghy+pdUqZ8hFCWTnwpELqJX7luV/8xO6YgWCIUP5yfr7uA64n8YNYT11gL7qpH1NWao7aMVxXmRw5a3V8c4W/TzczFknG79r2fPEf77qMJdbTq11t7unGDC2d+FUL5BR+Vn0Onxt723EPj8FObYGiPkvalvhUWeFE+XWOFTiaAwlP7k9by1kq688xNjS4HLMn7hYsQMCXBrYiDc3zONlTW54RbrfGJR1Wc/FIQmyoHoLv4iymRGltzapN/uZE5vNQIfoKk8naZEf0njnYevj9EuUu7eHlwlDJaK7iBUgwqOYVLSEBW6pP9fLGb/wfmcei95AJEV57Dsix3avNVYOSo3wmhvJEL7qjoCGSknipVyuk=","layer_level":1},{"id":"b3926619-907e-47b9-8b5f-2fd3a6d8325e","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Control Flow Analysis","description":"control-flow-analysis","prompt":"Create comprehensive content for the Control Flow Graph implementation. Explain how CFG.java represents the control flow structure of programs using basic blocks and control flow edges. Document the CFGBuilder.java algorithm for constructing CFGs from IR code, including identifying leaders and forming basic blocks. Describe the BasicBlock.java implementation and its role in optimization. Provide examples of CFGs for different control structures (if-else, loops). Explain how the CFG enables data flow analysis and optimization passes. Address special cases like nested control structures and exception handling (if applicable). Include visualization of CFGs and their transformation during optimization.","parent_id":"","order":10,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFG.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/CFGBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/BasicBlock.java,ep20/src/main/java/org/teachfx/antlr4/ep20/ir/stmt/CJMP.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2965267+08:00","gmt_modified":"2025-09-16T14:08:11.303638+08:00","raw_data":"WikiEncrypted:QIBzkuXysBzMSQmkzf4c6+fAoyvQlKispF9LpJ0UyUk2dMlUkNH6njCQrqej0hNd2u3pP9VoaUzQ7vv3JBQeQztuxOYq6jNtMPxdooTO5zFZWI0dGo/9QX4GBsKCqFx3BEE9Z/E0gZk5GjedHWYEkSiQlNfSyY2XZ5v2bHIJtVLy5Z1k4PxcXywNqcJm9nJiz+Odlm5PWUUw7kUOjCSWxrfGzxL2l6ww/12sIaj41EfLNeafjF300heEc47f4p/0tW1tSUn2cFssTbrWlYsXu6dmmY4QF/ZaBUAbyFNc5xNzZ7x01zz5KzhhSnsnAer2BlRZ7B7iElAWUsxU4Vpq+vULnjZxgj11no6mLVNKgz2vZA5whSZfM7YA4xPnDY4XgPMYncWQ5MON53WITZ9yofke6CiiEk4xTX/8WfIX4RMlk4Vtw/HCuhsHL0AnyU3tMKWstE0NGjo2xNqw3UfrqJTHcXtzSt5TCV+CN+SAL3I/xIJu7SzWD9PMbeT5Iext5FfoIAq7J/DqX7D3114+u3C4abaF442c+EG1vZjxJHChD99e+0yu7aj2GJhhvm4sZlceMUPjJOwLpiQKpb2x+HgYVkfhbBaMcrYQNP4tKh/cVDPs4XOB0Pi6J+uU+Unv/k237z7zXD9wm9iqgii5XeFj3bIa53exKBoW15UGe1joKF+pvMkA4KkdFD4DqtZToo4lwUnwuiaZNa71t6zjmawPHAHgPw9W9Gzg8c5BFdi0yCWdETrA6aydn/GgGFStcxLp6MN4YG4q4Lbl5vg/lfHlo7uqbhUgQdDyOMEFilZ6wLkA0TeLM4MlhIJy4j1DdD9O6DX9Bdyh2YkJDYr5rs0rmR4ByEB9fNT3xtjw5LOBQgJhbw59yIKb3ObUcTuaJEs9DokSyskUhfZXT+tuU/0i1WEZOAFhW77aBlWxUKO72z2x5UUEvwOhsKnLCkpmnY5VYZTzzLfKKR8ZFzW8fLvHUNNuc+et8LzEm8api0B4Eq8D9iYeALTR9W+ORIwX9dsQomrRxvCpgrMq6auVsdaoh3bCh7PAqTWOfCSPBzLTLycg3NJ/DtZApEaabvHRdfikvApEVObOE1qQHidIDWuYQpyNvgvCd3t4jQafb2SPJqUl9Qm2phQWSiCr9kQK8n0DIn3arGI088ZSd//8Y23rG6riwWXb3ZDnLaV0KTq2KXE1bje87XtlKEP/plUiMGrPSGmcjsxpC8RvFLqj/nP/KLFAmX0ndQemjfOZJ5aqgxLy2DM47yrXJt2sLvhl5Fb1bpfSPw/+PVBjZRi+he4lzI5oTvt136jfreyqbXzdyTRbXuYQmvbCshaRNj7toGKO8y5/m4TWGZCFMgQxsn0utuW8MbhJoc2butOIznSTXQAk0go6NprkEwncMWe/jLeSHaFCNwf3VzAk3RmBarCEEA9jkKXxblzJbXYldXpJiV13OgHr9/FMMZUgsd5wmOmia2SmEoNeU92ANK/Qw12Xz74WsZGYHyMpQWP+qx19CBm5JQCqhfJKV5SIT7tcvwKwl+xYwjrpal/UCD97tysyoRchIZ2bQJaBLeth9oFwOqFeD1s831OeePVNkAHP3SjiKqEHdjYT/SpTc9YnsRmgFFGSAYipXKnCIBUyQ/REGb0BUnfZjeOrzgcS8Wn/aAK3jDKGLCPfSo8Z9udDl0jffAsyxRvX6r2stF3cq2V3Yf+uN+i0r2xUgLPGAViB","layer_level":0},{"id":"80dffe0f-be9c-4f29-8527-ad9414ed7db8","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Optimization","description":"optimization","prompt":"Develop detailed content for the optimization framework. Explain the different optimization passes implemented, including jump optimization, dead code elimination, and liveness analysis. Document how ControlFlowAnalysis.java identifies optimization opportunities in the CFG. Describe the LivenessAnalysis.java implementation for register allocation preparation. Explain the IFlowOptimizer.java interface and how it enables extensible optimization. Provide examples of code before and after optimization. Address the trade-offs between optimization aggressiveness and compilation time. Include the role of optimization in improving generated code efficiency. Explain how optimizations are integrated into the compilation pipeline and can be enabled/disabled.","parent_id":"","order":11,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/ControlFlowAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/LivenessAnalysis.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/cfg/IFlowOptimizer.java,ep18/VM_Design.md","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.2976131+08:00","gmt_modified":"2025-09-16T14:08:17.033821+08:00","raw_data":"WikiEncrypted:mQTetUyqAd1osAW1jpeHl0HqIGBkz/wOA3wApR2qpasTb0Jp32vEUjVk88kVXy6zM2OKoLx3x3k7q60W5Y/nunX30B1CukZ0f8/tXkC6sdXPn6IbMIvEudvUMwhOEIGEocquy46ck2CgNkM1T5F/hxUYpAoZrGqPSRP2elxbaTmFR7V+p+n5gv6ljJaMeqLgz0rWhyOcLAHM9M5DrKWRHcxjoYrqQ5u3TWJtLXfYm9X44/h7J1gOdspMSUBheKQ9VwKKfOanCRODsRfi6S5FJxyy/X88RTT2gnoIIdojbn1KL60JqhKjPRWhJcpzEVHixmTEDttvSO3um7kc9qKEHWtYecynp0Q2o2LcTs7oW+nu0oQXXHZGd+uOXmtqCBmoQc6Yv43ag/ns+0ZF/7PmAC3kfawU2d93/IJLQq1n7kE+hPqNwUgr0gGw1Ez3jha4G00ErPRbXwcwacJWyO/nywqGMbqPof4WDdptgoPj3QXsUIpYeqJeCcNKexZ2jch26MLAl0KOCxHTL6MNM4eHe5qHp2N/iqrDLnSJIyRJnDj2majhpmRcXs6RAEe8S6F9vftniQ4WX+p5g/8N5dRs/xxzldDF5t1SnKLHh7ZK7riPXXtnd+XgxLO7ilClrusjp6NMK9k1GECekr2GlMI7VsanVB1sfnWw1+AZdS2vWJYH4zJQ5xXDto8QygizUF6i5f0fyPtHchc/4i8BBBCOWsxaYX+iNe3wV4kYIl4D+5W5S5n/18MIo/atfoXerjGnETLlRp9RcBDt4//cK+zKPlNCqKGvNHggLr0Z2KvNmmlm9Z6D077q3O7Zz9G9uqBDIrkFC3w6IAr0G6RuoJcV3861HtYPdJz34MuiedmLrVHwVRZ1fMl8yASQ5d99Gxl8XabSTffBx15u1qUNxb5h+4lLJba/LgICdo7ORAB2BfM+8wRyynHjJRQ71nzbw17HVKVhN8joWhwCTcB0tLad68IggRmSAD9atPPyQCOSmhomD2P+0PnAj3MPaaFoeDZ+PjV+hUlteVIFGFWfnJh/Vm3/dYx/s6sAnAaayuN6Wbc9BDQTco4PHftsIS1q4RkaXFrYM1ccZe8kbicoXdD2UG5GP1V0Z0loXtIIDdf3mHFzgfPw9fZ0MfAjzeXu0yTALKvnHHIyYELuoLAqI9mP0LXJiwbQdl8dmfCBqZxO4Ftk6EVExNDUGqfJwx7rGTTwCkXsJjKtvnAJGgSZh8UeyEfcUJGPP5cfV3HUzMLZ7Bu9qRR1hf2YOkRFUO6VQi0H2hJYcYBgz8SjxQVbfym60kGa/5oqSD7ZTT1Xf/5TN3roOlcDVzQMXSZou2FXeOAQTz6D/4HKgXaoylkIzj81EpAVh8HWRf3HDcq2VCP0+6LZ8QymWChskUqK4sabbXO4yT89bajGiyR9uxhKbInOR8uvYZ3o3r2N/P6hYWmTM4q7Y/zzQ0sMBSjWeAr4Qve9Ldzkr13/KCDd3ZeeHr6AWUlaei+P2rYXzTHu2KXR25Lpg1feAVG7LClx9yRF+wEy4YXTY/dvvPoG2KmMBP8pWq9B6vEwoVBjU35nTnEN5dz7jZHOVGi53HH6767dLi3n5lkKqVhlWEWkS7K7UK1SlxrQ5nmePl2qKsjaW6FFXcw467lbW4JjuTS4XiBUt0cpYT4recE9vzG0pqiSvT3/nkc1wRczEqhpAhxgyySIxpsyHXlL9qqB0v8wAoRIJr2GHxCfgJ2WoIdfynMSNPoZLQ==","layer_level":0},{"id":"f65967b8-0d58-4d3c-b53d-ecf1430b3dd4","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Code Generation","description":"code-generation","prompt":"Create comprehensive content for the code generation phase. Explain how CymbolAssembler.java translates optimized IR into target assembly code for the stack-based virtual machine. Document the IOperatorEmitter.java interface and its implementation for different instruction types. Detail the bytecode format defined in BytecodeDefinition.java and how instructions are encoded. Provide examples of assembly code generation for arithmetic operations, control flow, and function calls. Explain stack management and frame layout during code generation. Address how high-level language constructs are mapped to low-level instructions. Include the role of labels and symbol resolution in the final assembly output.","parent_id":"","order":12,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/IOperatorEmitter.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/BytecodeDefinition.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/ByteCodeAssembler.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.298632+08:00","gmt_modified":"2025-09-16T14:09:11.9153793+08:00","raw_data":"WikiEncrypted:l0OSRLb3jX0WYjxj0Qo/H7RHhqitOnOdiuDaGCmhl1sm8euWj6yfrmcd9QwblMGbvwr4ABFK5TKoOTrVEZvAGXIKLhaeh6HKK/i4FPacc5vWr+GhVQlax7qKYkxxkv9mNh7VJn06I1sSJJ7RqD4QqUro2Kyr+uOpoteiJKBs6oWLUXYdawsd05DN3nFk6JFMNslfUoqrMVkrrD/34QuXNFo0QbQaa6hPXR/NnINFrmERR2fAFrUAqv5ol2rTJGR5n1V4pSlEIVG+JC7qZe7CLKBmf5rHvTw+SJM9DBRaJobLvjpfj9ImLE8y4o6VF/lHXQ03EilcbNGtMtboKb8K4mSBMerw61+OqpfP85APw3RvQbT9NBXDp/13L0Te/AipcYYsriTRbX17PLwRRIwq1G9u08UlJ6Ne3igYZiq4jGeTtSbi2tmB4AkNbrHE0+2VE21XTqpUSpXaxLMg0ZgWcMPoNRes/oGcbuLq6aKipOQlG3C4MIAXlARKhQZFynyUXdEe1ncWAKfCV7YehtoUnph5ZOK4kyBeHNmkdXU2wX4HkwbIOYifWokinUU1JZgttPAAOYlbUjY6QeD+IOEi/S11P0lcAx6oV6ehSkLVAzcnoS0kJy/zxZ37N40bpXQ9bHa8TX8NWGDT3TKO0AFPAQbTS+6WlHPugsiNe4iE0wMeILgnf43GOeLBJEweU7ku1V6HvsvP1F7GJcO6CrpHTW7TSe8VdyCqJJpghZAag2H3kbEuke3QUaJ/beHR8ChE80w7Lr+j5PzT/CXUlzst+dIYqSVRNum5LlIBo1k4MlYcuHrQQrR2oQhBp2KilQtuFQiv0BSFFqizkhEcGh5dspew7xGbZnCMtAZv/FBGKQ8Nnj8JY3ObRlQL4Vqiqa62tEg6lZsPNu5YUREy27qaukAUO4jOZN08MU8XtVgjexLdb/2cuP4ejx7Zg2yxosnAGQbC9kBuI9LTqDO0j8kSw+EiuKrhduEJhpTpweCegbwBwWiXZoRXib6mrTb78P1+ZI5Ybc3bh+eevLpsU+4fzyID8CtxCXrc6/jU1y8JEstwQn3X1KlAYpRB3pir4oQk+P+P2oHcku9E6Iq4PdYvKjoiTkawWWkpPTS/kbAF29kiJqxzePn4CxzRDpsv9LYzmPt46QLk9G38oFnVHw5pzk/J0mTOzvDoRePPUUek8WQ4/RroRUhbyGwlOXRFJZpu5Wtb82h8EojS/5rlL4XXhrpmZ0m2GrnqqmOwbOu7182F+3kxZr9Wgjw6fn9B9BfY+RYqFMtPQixIHazfCDdS+nuWZB1TgjPc0Xot7ewNf+6svF7cAx9IzR2rcno76Ce6zfSaZrmE2J8vbEDlPfUKOeKtCnYXesv74bzIx8a2Uw/lkcWJARdr3GqTR05wmO7tRU6f6GSCBDzqOtuj7xP1LmhAlaGivC1TowAyVNJb9+N1+sd+dqq1eWwGhZya8oErKf+CeritJIyfYtil4R2qXCNGNzV+u7F8m/YemvQbXVVyUNOxxuruQ7/0eB05Mmm0VlW9tpjoy0Y+yb16brXXuOLCnyYG4x4BqFqgE4/cqA3RQaxT0uh5PNmOvt/AfqOEwIk9NhvhA3lnPRy4EEvwrxhA059+iyiHt5aXRAdWLz8lMmTZQFV0vpHZvhrwBT2s43P99SLQOAjSF92dKVwZ/8V5EJMRA8xg/7ITbPUiZfL/X0RtK86TGnm9pTOLvTNnb5JUPX8Yu235gUcK81bpaDRwUXAGQo1sy0Z+fR68RY8=","layer_level":0},{"id":"786cad12-f31d-426e-9be4-322905970e5c","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Virtual Machine","description":"virtual-machine","prompt":"Develop detailed content for the stack-based virtual machine implementation. Explain the CymbolStackVM.java architecture and its execution model. Document the instruction set and how VMInterpreter.java processes bytecode instructions. Describe the stack frame management and function call mechanism. Provide examples of VM execution for simple programs. Explain memory organization including global and local variables. Address how the VM handles control flow and function returns. Include the role of the disassembler and debugging support. Discuss performance characteristics and limitations of the stack-based design.","parent_id":"","order":13,"progress_status":"completed","dependent_files":"ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/CymbolStackVM.java,ep18/src/main/java/org/teachfx/antlr4/ep18/VMInterpreter.java,ep18/src/main/java/org/teachfx/antlr4/ep18/stackvm/StackFrame.java,ep18/src/main/resources/c.vm","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.298632+08:00","gmt_modified":"2025-09-16T14:10:02.6924495+08:00","raw_data":"WikiEncrypted:y2a4hKtf0s+4uvn2ROPZrd+tFq+otHIykcSrp5tV43ltzIqFjmK7Foat+EwH87Po6ARo+GOQvIUvwg3JmpDA4qN0/ee+NPr/XmZBvmpEN1QwRQoMfW+oQJ25FZ72QOao6rnpVkrRHSUyT+N2j2oLSoNAEibud37C7Boak1J0BCFeJB7wjhDDZGFrEmSfU39JrR4QaiximcG8qirvPSiG/IxKnATLHFeddg4qY+LtEQVcjRCeMWcXoA5jCsHaDTLHTojyxVG6Xo/p98e7FJ4cecNQzavpedZGop9GUqq8oONYUpdAQfzuWbpOHdJRPr0MDlgZJ7N5tjZsH3/0L1nOlQFZmCY62rgSweNJ8A+oqk/vdUjJne5tEn2wXGx0tVCAqXuupbE+lEZRvDniy4R7STJJZAz4QCIS8kb5wX4J4xra6ZMQBsENDKB1Sc2M6VdeCarJHOxQCbDS+BWUawqwBc1s3WPFsbdtiMmvpW43n1PRznC8zyAP3OK7Y2P+xVkomXGn8JvCRStW37h5JzGBD3XyUJ605BuVJMT6Y2y7kLaaJKtFzKFUFIg9Tj0hmU2+C9iI74w9zcOqCgJDVUJWayKuhsdVdmvLK5Jz30bFLZPeRoESxstbrnwKu8Fmvo5BZ7yenSBlMp584sNN2veg3HakHq3+mqp188uNnpaO3wdwHkgtFOP1KtgASrvEVdnXFb0AJOgFNzLPHI9jgvTdmC/eiGKRZ2LX8qOzCi4et5HHAK6oXeTFkv26d59b86Iy2x7gB4fjjAS2AT+WDcC0ShjbHcL8tRItLLTW9lCDWq5qrmXIiKn0Bt9g/+VBnq2sV1V23gxStUb4Bvs9Ku9lNwMZHQMHOS9gPEQsYGDbD0GwKMs7ynUzXSQYeX4aqOz4m/NYBfiWBqINzdsT9odhLVpK3c7oTcesj3MMDoKXUEPMJTKqQ+iRF3zpWTD6naCS9MJzK8UnB1d5BKs2q9hbNG+XFuz125U4m4x/AiBeClQitYA68FWKMlB6ot6zatG6JWJDMvaWdqCI/WWqg1C6PD1fUXIBZbREo8wDz/huB5491ZE7wuGwhN3FzUTrqvZzYeheASTkAeN5wk/hFKC4rUf6MtQf0PQwrXKSoJ8AZGPo8xA50wO9ezP1FyXduQK37smoTvgVDJRwSB8bktDsrktgAxRzBq6Y4sb1oPv9pP1SIvamuib1DyC5wwarE7zrLWU1VOJ7whB58sDuceUP2+JFIcDfZ7xRXJo921pCLtkUqs4eoLE1zLZ13nPG6I/U6IDLtZgwNy5O7SozHnepQCMGU2XJZd6l3JFDfV0fMDHqX2DMPp2eoVGX7ziadlv2dUJpxhylOUQiK7QEz0S/5PMEEOEtmxTTBTos6oNnuRKuPwfL5rRyYyYqIO03PRbc9yyg68d4TZH+YbgprDxyrx82a0tzWZaGCizvknRebHnHZoyuCtvg1vAjh0oioXdLFM4M7h4NxDwevHvqmKIQY5l4r6JUlHY9pbiQjlp7HpX9p6MFCb25F7BjIBR8xd2OQobh2v2SV7cTuhztWj6V6g==","layer_level":0},{"id":"d2c2667c-8d88-4098-b1c1-29a9a9a3bed9","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Testing Strategy","description":"testing-strategy","prompt":"Create comprehensive content for the testing framework. Document the unit testing strategy using JUnit for individual compiler components (lexer, parser, AST builder, type checker, etc.). Explain integration tests that verify the interaction between compilation phases. Describe end-to-end tests that compile and execute complete programs. Detail the test organization by component and phase. Provide examples of test cases for edge cases and error conditions. Explain the use of test fixtures and expected output verification. Address how test coverage is measured and maintained. Include guidance for writing new tests when extending the compiler. Discuss performance benchmarking and regression testing practices.","parent_id":"","order":14,"progress_status":"completed","dependent_files":"ep20/src/test/java/org/teachfx/antlr4/ep20/pass/sematic/TypeCheckerTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssemblerTest.java,ep20/src/test/java/org/teachfx/antlr4/ep20/ir/ThreeAddressCodeTest.java,ep19/src/test/java/org/teachfx/antlr4/ep19/TypeSystemTest.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.3005161+08:00","gmt_modified":"2025-09-16T14:10:47.3206031+08:00","raw_data":"WikiEncrypted:a51tw9+B5Xez88YuZqi4cPV0J1CJauHTZselAZQ9sG40Lb0MosJIfbxZqj+gJA5m8musMdI2GJsw80+O72ORSeZOknJn9Jy9d1VfNiP0Dq1o5DpuToUCJJxTwOYjwY1PxZ9zCcoFWSPw/h+8L825gJUL53t2q0Jt3XFJUltURF5GNjICUdsNcwxuIog6kZbJKJXwBxJHmWqX9zA+dvbskVVyJGM3coYkxeMg7/mIvB7RNsssIm1y3GnBjjsImaAJY1R3B5YssoOwxPvX3dOsqVIphTEN/jycmEz2V/2o2tA94lxbZHjWYRaalf/2Omn94H+Z6zel0msVUaeYeS/GlFD1QNS7nfJKIRvUFFWg+3pW0aJPMixxvexipjDZGyBi3M++9WehYyv7rM+GmHDUfDFUeeRtOiqeD/2ah72lrt5GTz+uIfjfg8834zMgc4n8EhehHjZVvtaI65uKh0/EmTaIIuLsIHOEOQriZmOq1+eOGu40iPYlN0yg4YZydwTL2hefevJ+R7fPQWdTzjqQhUheEvX5qvM+SJ8euK7c5vllvyQp3vx5/fSDjEIcdcsJqULg8YD+dTNoA8RNE2bgCDK3hN8aXHPr5TjPpRyLDIpRpmC2VnNdjrNUvyQ7gCltI5GSjnKBM0LT2IfABD8i+iihmKVVRflbcFrC3o7TJITHElARyfoQNpIVTHB4MpaREyMo0MPH/c0d+uXNz39kMBHZFDGz+wAWtR5FgUz48eT0YYii+9sPtn3iV2y0QPiOft606dpHW1qpqC9LzZ7++Gh9VU15qSaRRsPu6OTFoaDUdk+ImMufY3NBS3ievSbZOHy9i8mu+1ucUhaLbMJIKdFtnfQeiiuxpiZcNnfYj7ed1gfjqteAq1BC88CPzbA3t+FPYuiILW0uBTASJ6oHThHCRSg83fSid9RYd+5h64BpCTE8KgxxPgM0RDaqGRHltqDIoER3j8z3e2b7Oz2hEgpawHw7s08OL+/7bDvYrRFIrLALHe5hFeFs+CKhwiX1fOK6xP44DlefoA5jDDLLcL4IGoBk6d0+X8D4ybhue3C0A1LZl1Q2ciaAh4YiGQEv9j+Vh8JJzryeZ62o1JIkn/4fzqLpt3wm+9JzW3LvSf1NUFeH0Sz6OEGGMC4E4JJq2u99IyARvan9ls7znAyzVIHbojCGyNYVLVBp9lEf9nntwyFWJsHIor9/AcPMOeiUll3cm9Xvl4sEtvHdwJPFCUMpYOpsRUiYecB7i/WnojS2OeJ7t5CQbB8Pm/bDSDTVThDNppxweqaarAQMdt+UuLSVkimiwq8qcPhAFxyr05ExuQjKgy2AedvqomaXik+mSEmMZS8AiuchnFAbM1jmYZ3bi+VULmIc6ejg3mwjmKXKWCasRlGGTiWx6vja0GsjSzv5Unu4UI/5bW1t9d9eeTdoGjvH+MzSbX90rlxNlY0sobWPuhgc25Rf5RDjedJG92hiBiCX3GNIPxEfG7qow6wYdAzTlBJ9/Rid3cbXSvEDtFnKd70/VWwbiwpIXNi3c+uaIn0JNQop8p06rTiUXYVdVc3PQ8v10bJEQgCAHwbqieVt6BCG9oTyi40ccDnmUKJHlrqrt3FfRnXHex3jpS17sbvvHBi/LQgbtUl/oKTYwfLLSo1zI2LU5QKpAxZJCoxXMLuCmMrA7TXOEIMTXbyG6NZOSvfRL6W7HewQNRN2omsk7CsrDM9hiP0CWqVsOB+wqc2S0Nn9wtL6WIH8jEDNCaBG8EAmuqZMJfha5jI=","layer_level":0},{"id":"1b2548b7-74c2-4e17-b45f-ed8bb24967fb","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Advanced Topics","description":"advanced-topics","prompt":"Develop detailed content for advanced compiler topics implemented in later episodes. Explain JIT compilation capabilities in EP21 and how they extend the basic compiler. Document register allocation algorithms and their implementation challenges. Describe advanced optimization techniques beyond basic flow analysis. Explain the modular compiler pipeline architecture and how it enables configurable compilation workflows. Address call graph construction and interprocedural analysis. Include language extensions like arrays and structs. Discuss the challenges of implementing these advanced features and their impact on compiler performance and complexity.","parent_id":"","order":15,"progress_status":"completed","dependent_files":"ep21/src/main/java/org/teachfx/antlr4/ep21/pass/codegen/CymbolAssembler.java,ep20/docs/design/register-allocation-design.md,ep19/src/main/java/org/teachfx/antlr4/ep19/pipeline/CompilerPipeline.java,ep17/src/main/java/org/teachfx/antlr4/ep17/visitor/CallGraphVisitor.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.3020665+08:00","gmt_modified":"2025-09-16T14:10:56.2685729+08:00","raw_data":"WikiEncrypted:qSUmbhu+RuqdVWUcJ+wGdyVAD9Ks19xuWOYgkjDNvKBwFZN2dDegGRt2vZTJRk+Ji+Yjf6JStqPLVhqLzlVOIGriBUQ6tgXCkKnmiJA8ZYNFl/hSPR5Sf7AsCBDFmo3uTlm4FdaLy+vPKPDZrJ5CGK3S8raa4cwaKIUZGKDPnzcIz/AA0ZSo5SlmhZbpirNEQC6MohobuAiD/AwPp2a7xfO4nKeDe5T6/zkb6MfctLZ7LZiWMkXvybkIzmkWPrMtuuF9eL/raoAdUYFo4RpRQ8acV47eJbqGJh6GnX+8xQZyorgGpjf72o1kbfkDtbJPRDPp+vA5A/gI6xw/41DlNdGSQnGqXSJrAsReaulsA/Y4mpSvSJ+7EEOp4x4AIJYoBNSwsH/34kOFmKvBZz4WA29VPJS0rySdQVx4FjumaAUU3kEodBzOcVWs+bhXE+j0Aud7zsCrLjo4/t85qWcaVzA3XVAAIYyZJHAwRwEZSwLkr0FO8yEzZSnqmdHs4MUY5vskv0tckae0SyIzt7HfCKC/F9AykwktHrWT723nrIHsC0Bz/y/tYnpSUlqaxSBkNcYaCxWC9X1Ch5Bg2cwbFMZ4aEZ/DU1J+upBmGX6mE6u3QUHP6nF++m5Xk97oKLuA5y32KYu/XPNBK7e/xtsMGD9BglgFAbRQjgqkta/ZaYZ2TxdLYi3KwczYk4Mgj//i8WjV2KKj5Ouw9t44id3QLOQmuvpaySESEUCd45c69Hxj99G6LME2GXAfH+bRGTQsh85cM/2f/v8BNjUTxlmw1AGF9AzxMrsy6za8IbvOdqbhn0VPc6olVvdN95t/Eb9A3HKYtXL1JqgNF7XlTTiOtr1yD4U0bmSdJQcDABBY64gT4HWGJEMNjFiFd5oCDRAIkJGj6GDXDUcOq8NKXkRxeEPJcatkp6GJTne/2+sBDXlmvGI8THBfKmScsOs/yty/ZiopzLprmvtudsJmBuTvYUYSXN42uracrve7nXzSKfRDVYN4mSZwKLnKoqvFnr5574PuPgYbWmWvW7yAYC+VbaU6vgk649If2MB+2g08P4DNjV2w/eoHF7h+4p0lORfPHXY+u5svP+u1no+BkNMl+DtHS2eDcOunIJJQwwCztdk0+pmGuMP1hFtlybsPULn4171KDJvvXAiIVwKjME7f/qBqZV4Q2+qXqy90HSP1Ez6vNR5XPFln1xJ2ROulT5zVzGi3fb2UxYxl9GnaG7y4UYUOXw9OYhpHNzUuJqdEAjvFSYncLFZ5tOkROrm8tsSufY2mm4BXk2o7nqz84MqFGN1yYZcuxPmf08Iy+rmtw6VUYkgP2DWY5hM74rDUTIMYh6NCUQhT89xiyqSaK03SMOqMFYgd0M5cswojUx0q4fiG+lIAyKvLgsQJhfNZvFvTDeXx+rKblJUp1Oic6j/TjWNGcIqlydw1l2tpHMrF0R1vs+vN/38x9nEpex3tsrYC5ECQwlRXaoAakFl9HNQ8UpVQ36576tDtJnqxTcn+qpPM21VDrhcabK+amFPr8GZWJacOeHR/9pR+lXVEgi4Oa0YrY3wa8OGTZbZD+/ntYwu+SqAoS56Boalfmuf50Kg/gqtg5wORf+QJGy2YFbnBjExGeWkJZLFDTTVBgG3WhwMed11XaloPNP6edOyFqGg","layer_level":0},{"id":"5abf66ba-0cba-4071-bef9-21651f79b18a","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Development Guide","description":"development-guide","prompt":"Create comprehensive content for developers contributing to the compiler framework. Provide guidelines for setting up a development environment and building the project. Explain the contribution process, including branching strategy, code review, and pull request workflow. Document coding standards and style guidelines used in the codebase. Provide debugging tips for common development issues. Explain how to extend the compiler with new language features or optimization passes. Include guidance on maintaining backward compatibility across episodes. Address how to write documentation and update examples when making changes. Discuss versioning and release management practices.","parent_id":"","order":16,"progress_status":"completed","dependent_files":"CONTRIBUTING.md,ep20/README.md,ep16/tutorial.md,scripts/cpfromtemplate.sh","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.303099+08:00","gmt_modified":"2025-09-16T14:12:56.102367+08:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C/ucQxiwh0okVA48AmODs5Szbt24MRpdYo2LFNA+b14p/t+/eH6Nvm1ImUHqBDK8WBIEF6lzUM9ILeVlMGYfKsD9YzF75OW2lbcDAUZVl9ngbSyxh9J8W/tiRQi07IlcCRcM3Ug8lLFHQBYRiaGnyELkkaWih1x5nAsDC+6RZ7QP3Ib0BFxcwlKQGmu3nqXcw6OGejejuadOQZJD8YFkCVFbxl/VvnRwuwU4mfhhULvWYW+FikRGzOyaxs6uLtbdxmE83U7IgX1Agjzw7qbf/oQ4XkyR/keZv+apYLs9cav8JkZULed0MeP7AJaFn7Hd4ehI6g+EA1toYwojLDvj3JFLEu5GkP1jNcAv4Qz/bKXZefyYb3VFnIZN5GHP31YqrhZ/6gzBe/Mz0EyXygNfiVA+18AJKkRgQ8BxuBKXl+958CZb9yBPkx4yFA/XL5E0GDAC5yJSW3KolM7suuMqyG+G0YKmOT6f5+EVIWJDrVaWfbBuNeLp+sVg9G8PjIPtEoAkM80Y3o/LCg/RBiC/LuRYTgz6pJitx8atzHwajhvHnMor+Vw+ABvnXhH71rf9ukEy0zGDixg3ADM7VsK/E4GSMInDbhTnQ4TtxFIQmUMebFSyAirCsIjX4ZvATwTBFEx/CPUTlRpK3kz28rqAMIznhFhrYqyjpgmSFUIDk58KtrjbKM8jdzN5f1SYy0y9yumP4DgGpS2tHNvMMfuHzfnhtGCRmSSgUcrINo/9Zv6YvaxN8qZ2NL35wG/hUTNVM1TUVghpOJOVWIzFgSccGeDOANuMod/FhyUVn8OhiyTeUbo860qDahSjqSQ3IYFEcZlkdWqjplsCDSJqsKjw/cCOBTzcvl+mncU8an2u6r9EvO/niGB3Es6kJK+TQ1mq7dnI/r8l/IWfGhA9YYWqwUW0chP70NDX5/Vu68qupJ460UvYJ/5QnRUHGqjhAdHykPInUOryMU2eIquJILP/hLb+ILuP0AVW9cp+mmT42S2zRr7dXHHn09/WcJwd6I0VSPZfv8sv/8A2q8ecaAb1XD5LbD8RckbEgAqeXNSaN1TCYrCybTJbXEmpe9rghjcEAAUg6tOaBvTpxcOU7elyou20lPjuew/KVRQc4DaW3FVZQuy/zNku9X0xropaRQxH8KSCLvNR45PqCZQHKXbZ2o8sm4bbOiB4Nxaypvu0cigUajvgjK/SLIMo09nxjEswWACIOzCTZ3QrpPBnaZw5/nDV82PwJWCcWAhYkRnh29kZ4fz0sEWzMoSyrZu3tQE1Pm4JjeUHYfeI2zadZ5F+pF2DkEJCLw3oYDdQ102c5jII","layer_level":0},{"id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"API Reference","description":"api-reference","prompt":"Create comprehensive API documentation for the public interfaces of the compiler framework. Document the Compiler.java main class and its public methods for programmatic access to compilation functionality. Detail the APIs for each compilation phase: AST construction (CymbolASTBuilder), symbol resolution (LocalDefine), type checking (TypeChecker), and code generation (CymbolAssembler). Include method signatures, parameters, return values, and exceptions. Provide usage examples for integrating the compiler as a library. Document configuration options and builder patterns for customizing compilation workflows. Explain thread safety considerations and lifecycle management of compiler components. Include version compatibility information and deprecation policies.","parent_id":"","order":17,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java,ep20/src/main/java/org/teachfx/antlr4/ep20/pass/sematic/TypeChecker.java","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.3041394+08:00","gmt_modified":"2025-09-16T14:12:19.4549676+08:00","raw_data":"WikiEncrypted:C34GewOyK1SlumqKiPsSg+WPNa2UHH7yP2PPjE4/OPlAbu3AvGLNlwH2YbJEsK2ZFah4wHB5r1ikrL2gZxnF1CFDJ8yaMqyclzXC+/T/NDnGasu2QwIhtWObRcOtlmYfvruZEt7QT8KRFoWirgTW4/jT85kznjJwWxt5p4EaqRi/F9ePzRz7mmA9nHKnjigKHZ4zW1MIlXUCpquyfo/L3NkJZ16BYPTu2WbNsp49fL2Xbu+gHPSL/zpLLHHW/RsVuZ1CYXyVTbB4V21kjUH1GCXAPMA6nhggBiiMQdrc9BVaX10rHOHqxpUrp35Zc3WegW3nXaS/0wWOYOM31iT7nsU0YPyTfNHcc3IzUENGK5Gi7AMTMX7MhPDoN1m6Ge1dpA0sX1slfxeyCWDEEcumzjOd/8Ya7A1XeeQLB1NdjLph32r7WjeqaABnX952QztfrJBcJC7qGe23tbDc7KFRUS/tVnj7cMJvtVXm/0YOGv1dbP3jVuxLq5IZs5z01ipUc483j5f24FQa4fxDDi9CD1D0Wvuc6EIKKojP/Mx4ZVAakCTLBs39VDeAZfbuTynoXQeFMxByRsY0kcI5Uxm2j7lSuD3L0jXe4p0v2Giu8A4jOvE/ziNGXaWSt2mZpTBmMluKUyKSEiXyskawzMJryt7ZpXvCl3D4Q2deO+UGdz+53m+djVKa8FVc/Cpe1Bp9wl+OjIPyQIy7ED7YCjuIiFmd90ie3v0DnZmAwd/q2dX+8kdSznNJU4zX84/QvV8tGpCGLTk8h4caZgsOiXYrV549Nnh4dy6UX4+MHT5rGvu9nLFDpUMZLsKHsET9IoXCGfxlTWiDObkmcc8oYExaKZ7tvyzjXDOToGBv5HGJRgKNQfBAt1qrI1UKe7C6LjOUW56vIKNv0QLAC+bU2k6fvcIv6Oes8+GN1dKOfa0/qPPbSx89Z5kX9D1v09yONNO3EuPBuC9Fh47sgPpU1x3AbeS0e0dMTq68dVW0fslShdMCn1dkkK0A/C/wqClcCH62XpxvsD6Ju3Z6ibCPe0jNvMOgR22aNqonjhat5efKRAKnHv3+LV+TJdh2mYk6Fv6TLqXg8MquIC5BJlPlcjSt1eWnhojSM7wR1Kao+k2ghXmyqeShRGDZg66ZzQ0WfJ3fzk3PBUJwvxDuw4jMVH8mvW4/72Q5hhbeVLGZGTtxB17mQgkj+BE0djiXNQtteZgaClMvT3ySW7+GeEkrgr2aTnmY0HvoZSPbKdAljd1ll64vp3QlQJlWzTKc+DSTKB8z9TBNc9bvbnEBygR4deaV/IlMGw0JBA0RkujFiatrSGGgiFwqX/mcZ/YpgBiVPk+mMCVwAKaNOY4rC4oZVm2ulFk/xRPMt6J3rF6WexIQxFtwXlfTwCjWo5oaoPIDdDW0rAY7Lzb4hOV9S0o8gllxh+yCT07uIB5/ehCGMrVyK1p0CmnzpdKSOsmpVEv0dVuwJOMwvwvqGG8qc6dqjZWZajlFfrfSac4QOvRDoCJMJm00BWiG2OjxoVAF4zBCeG8mFmbPMZvgsQWUcmATpRYjGaAZI7nZhkgj8zUhmq74Xf/hudmwPYFkjgUhY9yGqarFZ8AZraJsy0IdnNixrKBIJApRZQ1hm6fGiF3UeJeWg0/PaLDQXl7faSnrkbK54yttXb7bCFg7CaMpavsg/BZsRhsCc2RbaMPvErEy933gBPb8tR5ggG0IkMrJdqRiQqbGo1eOc6Hm0jffR1wvCU5xFhKzqQTP7PTz77sllHrbNeTrRxkqeJuOIz0FlDKCLz5VUoTasMVSYluW1ypMKr3v1Q==","layer_level":0},{"id":"9baf7cf7-ab36-4ee6-96e2-27113ca5f3ed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"Troubleshooting","description":"troubleshooting","prompt":"Develop detailed content for troubleshooting common issues in the compiler framework. Document error classification and the error reporting mechanism through CymbalError.java and ErrorIssuer.java. Provide solutions for common compilation errors related to syntax, type mismatches, undefined symbols, and semantic violations. Address build and runtime issues with the development environment. Explain how to interpret error messages and stack traces. Include debugging techniques using logging (CompilerLogger.java) and diagnostic tools. Provide guidance for diagnosing code generation issues and VM execution problems. Address performance bottlenecks and memory usage concerns. Include a troubleshooting checklist for new users.","parent_id":"","order":18,"progress_status":"completed","dependent_files":"ep20/src/main/java/org/teachfx/antlr4/ep20/error/CymbalError.java,ep20/src/main/java/org/teachfx/antlr4/ep20/driver/ErrorIssuer.java,ep19/src/main/java/org/teachfx/antlr4/ep19/misc/CompilerLogger.java,ep21/TODO.md","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.3051785+08:00","gmt_modified":"2025-09-16T14:13:04.4322318+08:00","raw_data":"WikiEncrypted:CaKOW8OSSWs4aEYk06Hu0hGGy7zXJE5t3XZJK+9x87U7MbBuSJQZj5VKy37lfAZW3q2vRlHn50goW+5RwQbDesdx9to6pvj27WfIiTpJhn/ssB3nyJJefBuO4BpHPM3jkcjz2oRP+jP5n8d3JqG6+rrhI1Q+noDy/pJKhe0rG8devE0kMcwzWjd7YFrJKgDB5jfB2qltm0ONhERT/Nwey7PwyTNYicBL6cL8rePg2DYcSdf3QqF0Q7OdSNgW8cOdIFymaha7Y80V/xabZmJhMlv9axtGhHG+7owvFxQdeZo3FDmlNpWCj2w8R578jgZkkf79oADRuCKr3+j/RDTFh5lTdQeK0qtxufFmAm+S3sCHGtn6F60IXLkDjLJr7AVQ3hq0TvI6+gFFxI7voHuk3ld64CzMSXUcY0ruuV+1o+3qPP4XLuZyHDQiUgYk/mLKDKkLxlq5ajVm8fauv0vP+udqp2yVsZBjf5Ig/5vg37LWUL5qNJFFEk0LNy5HeuRYGeI6SXcNcs9qnRw908MMq3dCy6OeN4KCUbmDibJ9TtLJ8gRxOrNzruDJEC7pI9eHqsd4c7wNJoKtzSA4qlkGdZjAGmwk89NKBN9VehmJfeEaRtzhwZhl3pAMJYU+Vd0njJ5+EIaeapUWwy4ROArh1K3AoAQoCD7Hrxt9ggGyF50FEC9Ig39vD/9dQ2KSv+PvjpfEKsMAumgrHXmQMQ4fWpNlF7ftGU3tNevtk7HlKnhgum4EueTWnB5eMSHMZLpOhwq4pCRTK9vn1XUV34WNuz6u17uiVPvtacVHafwyWRaGS2+vxdXOoCz0MyhSC9X/uzQWskiboWvtROtBjk2Kjo43uogQkJeELZrEEfr5R7pWBkHS1RPQGWUJ6ykLKqqGw5hkGfIxyzeSAH++mogL99RsmQkEYbq8QPUVRsg6gNa5wbfLW9SXtXcpnpm80QUM90j4mDriQR11oOO5uXZB5GpcgA/o31QnYMC6iBGmjrwg92qRUAATe52rYeHK7znArYbj5UvOZ4ZoWB6lulLu366rKDM3iJgbBk5IrMM4j6JpqWuTiBcHtohrYcLkAmTU6IEASla4AUH1BVHaZ1IKip6YwKwoOLci+I2KitfHVEupFAWZrncL2zJvF/l2NS17hyKcxkASatZXlA6SWUj1VTt11dt6PQCUT+GFu2iGHgwvZO6To9Xze2Bks2qC8MTCqpe1seIkWok9exsPqnNG2flHwMXzRTjS+qj6N9GTQnefQrhDDi8kqLexJS7J9GuodOPwXGfjRumAXedPCHy7YFV2Pb0DoKnFnZeq2uhAvwlz/fY8V/W1dgrp4Iyy+ud7DKon/nwADF1B1JT1o7GQ902/Vila37+H86X9JKr/9xVbTda/v+GNjC/CttYjsZjM+kRa7lEGBHfWIuGK3N51c4pX7efEAZffgZKC18FJwST5njD8+CQo1bsqwTeQDf8DlxvVBkI0Cti1kzlOPxevlr/nIZ1HSGR4LkHRkc8aasAYB9dENgCHRMHWz69vSws3YFTmXB9ZAfrrL/9gU+7VJxfTrRRprnhp+vZcxs/Xufs=","layer_level":0},{"id":"5e6b3a73-d632-47b0-a13c-f0a869c9dcf4","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","name":"References and Further Reading","description":"references","prompt":"Create comprehensive reference material for users who want to deepen their understanding of compiler design. Curate a list of essential textbooks on compiler construction (e.g., 'Compilers: Principles, Techniques, and Tools' by Aho et al.). Include research papers on key topics like register allocation, optimization algorithms, and parsing techniques. Document related open-source compiler projects for further study. Provide links to ANTLR4 documentation and tutorials. Include references to virtual machine design and implementation. Address online courses and educational resources for learning compiler development. Organize the references by topic and difficulty level to guide readers based on their expertise.","parent_id":"","order":19,"progress_status":"completed","dependent_files":"ep19/Design.md,ep20/docs/technical-design.md,ep18/VM_Design.md,ep16/tutorial.md","keywords":"","workspace_path":"","gmt_create":"2025-09-08T12:00:35.3067324+08:00","gmt_modified":"2025-09-16T14:14:10.1038933+08:00","raw_data":"WikiEncrypted:MigMyRqIavgSeFgCiAw0Mg2cvTU9B1MdpfI0qwPmlQPu52ZIp2sg2UNrNk2h2t6DJvqmLjgJ1tA0OPeOS4dBiO+yq4aFuGdyLSxppgAnBPvob4FKU7oixIdpYMFPOrXhY56PPGSc3CtvXDrc64ZjPaBp67DK8SlGAJ2Cs3PHdxs32fgmzcUpWc/b8+W9V8sNLHiSQ+PRH9F0clKYWsYyF8TL7aHrbAFwTlPrMu6PH454Q/BnToQXCtLhzVtInbkmIlWkA4PJU5QzYUEcmC2ldDMt2/SC9MMTQg2TFPkDjxopHGUm80rqBl0vukWVb2wz3NI0i5dkCnJuX/o4X+V1EqLSlF5gQJnnvTJMWwjgfSjRMH5H8uCNP2olcdgjAtPklysBCi+Vj2U7tNQhtE0KAg8eUWcF9Op4eyxCqc1ZM5AhTvJ/DE8xSD9z0jIP+Jy6seJnslKFzWNiT5opquxGrMDgV8/uEs3UaXTqVF3vRRqgeuBDS4MpXPhSAnTUYLjL55EWwkRDKjYMT4MmZ1sgv5j0/rFHY6Syr7i9R18gEk7EfAYxnuI4dJObXSgT6lzqiVsQZNFAjrfKHjrtHDD8lLNFVQPI2D87B84nxzHmg5TRXA4Eq5Rcd2qBnuiRK8iKqWPOpDhFX+NCMv8TEMd4T3eXTuYMlOFFnlJF+plZPG7fwq7xLFb3/9EADMrbbdiU8VTKaxKciMppfHDN9EU6JPOI6s0HFFFM4hL7uA9tJ7J7cp9BSiRPO1rMPQUIOCZKgq3ptZFEOqjaTCDt6OxnABuf8w79Rm2W8dcnWd6em0Co3kU3pCknDZGPZf40zssnB1SfdjXshs8FKcsISi2PyzJ9YrivqU/GOjhBviCAbczHysnxx+SVCSQ+9tw5Fg4Gn1/WdsKig/G2XJFRwPBv8M9KMtL449EfDTx5Qde426OAoG3KqGM1aEfBxQewTYci0enDOBRdhxcz/uvgdjVLg8aa3mb5tnj86LNwXtkQniy5rD9gQQpBxcQmbzP6bW3Bc+rRY4YJ5YlsoauTk9u6biK7plPfKvO07CuMbhU9JH2csC2KK1jIBuHG4QXYx2dd7oa53j1HUyQrM+Qhp9mvAYvW/2hLlWEG7a6JwHht9eUtJ1hHT6prUl53O50+GjTKeDqJpEk4+dBilCH/N5WWUJmwu7mr2d+69Lr9KpLEJ6ZedMm53h7AmqUAlhFbYKks9EauxibPVntS4deYYJF0+jPA4IUX4AJodKJ0v/uL7WpS+oCtjId1J6ebay0RjdmKkaW/jSxepFNdW4AxfehFmioaJMvqpCkwytMv6e7UaNaSrl1AUEkblpKS+UFpMcnCSVtgT+i+fama9X3A0gMD0HoRNL643634+7X6oJccm407RfqJdAHgFMuvb1VYd0A+","layer_level":0}],"wiki_items":[{"catalog_id":"661f3c30-4572-4ede-92c3-ffc405d097f6","content":"","title":"Getting Started","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"c2283c1b-1e9b-4019-b690-403f7c777eff","gmt_create":"2025-09-16T14:02:02.3093358+08:00","gmt_modified":"2025-09-16T14:02:02.3119955+08:00"},{"catalog_id":"028064f0-4617-43b8-98fa-7f5a4c031eb8","content":"","title":"Project Overview","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"3b7c42c2-6c97-46b1-ba23-128a97dcc86c","gmt_create":"2025-09-16T14:02:53.270152+08:00","gmt_modified":"2025-09-16T14:02:53.2732407+08:00"},{"catalog_id":"e2f12f88-f04c-46db-9f1a-c69036de314a","content":"","title":"Cymbol Language Specification","description":"cymbol-language-specification","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"41682475-b624-4387-8a98-71757d90358e","gmt_create":"2025-09-16T14:03:08.3555922+08:00","gmt_modified":"2025-09-16T14:03:08.3586782+08:00"},{"catalog_id":"0a280837-5a3a-4748-babe-7bba3080c119","content":"","title":"Compiler Architecture","description":"compiler-architecture","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"667bbe66-ba59-4589-ae68-4cd6550f1068","gmt_create":"2025-09-16T14:04:10.5048433+08:00","gmt_modified":"2025-09-16T14:04:10.5079509+08:00"},{"catalog_id":"a8a753e6-2805-4250-ad07-b61191d4a485","content":"","title":"Lexical Analysis","description":"lexical-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"d96c0f7c-3deb-4057-9a28-4415b7f53c29","gmt_create":"2025-09-16T14:04:22.1037227+08:00","gmt_modified":"2025-09-16T14:04:22.1068847+08:00"},{"catalog_id":"b4453625-eb25-4340-b6cd-285607f03e08","content":"","title":"Syntactic Analysis","description":"syntactic-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"89156d74-d78d-4c78-b068-ec977ccbb5f8","gmt_create":"2025-09-16T14:05:10.4194003+08:00","gmt_modified":"2025-09-16T14:05:10.4269177+08:00"},{"catalog_id":"991e5381-362e-445e-8f05-5e5c818d750f","content":"","title":"Abstract Syntax Tree (AST)","description":"ast","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"c3f45b09-5eef-426a-ab92-42a27d20185d","gmt_create":"2025-09-16T14:05:44.2495723+08:00","gmt_modified":"2025-09-16T14:05:44.2537627+08:00"},{"catalog_id":"07048b64-60ab-4f22-a6bc-52300115700d","content":"","title":"Symbol Table and Scoping","description":"symbol-table","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"ce95d0b7-2432-4610-b3f8-55cf188f1a9a","gmt_create":"2025-09-16T14:06:14.3979765+08:00","gmt_modified":"2025-09-16T14:06:14.4015718+08:00"},{"catalog_id":"e2398669-3afe-4bd3-9bcc-aaba5dbfed6b","content":"","title":"Intermediate Representation (IR)","description":"intermediate-representation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"71b1ca0a-d0bd-4175-b9de-e40ec498d78d","gmt_create":"2025-09-16T14:07:06.288476+08:00","gmt_modified":"2025-09-16T14:07:06.2915749+08:00"},{"catalog_id":"24f0102f-a33f-4f5c-ab6a-11870fa7d7e1","content":"","title":"Type System","description":"type-system","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"10da5c7f-fdaa-41cb-9bb1-3a1d8412d5bf","gmt_create":"2025-09-16T14:07:10.6321383+08:00","gmt_modified":"2025-09-16T14:07:10.635315+08:00"},{"catalog_id":"b3926619-907e-47b9-8b5f-2fd3a6d8325e","content":"","title":"Control Flow Analysis","description":"control-flow-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"0694f3c4-3eba-4d38-aa68-6880544957af","gmt_create":"2025-09-16T14:08:11.3010523+08:00","gmt_modified":"2025-09-16T14:08:11.303638+08:00"},{"catalog_id":"80dffe0f-be9c-4f29-8527-ad9414ed7db8","content":"","title":"Optimization","description":"optimization","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"77a6dd37-e02e-4b94-9c12-c9d0e37e2fbd","gmt_create":"2025-09-16T14:08:17.0312396+08:00","gmt_modified":"2025-09-16T14:08:17.0343344+08:00"},{"catalog_id":"f65967b8-0d58-4d3c-b53d-ecf1430b3dd4","content":"","title":"Code Generation","description":"code-generation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"f6bb5ee9-c902-4ba0-9c9c-9491de85989c","gmt_create":"2025-09-16T14:09:11.9127986+08:00","gmt_modified":"2025-09-16T14:09:11.9158991+08:00"},{"catalog_id":"786cad12-f31d-426e-9be4-322905970e5c","content":"","title":"Virtual Machine","description":"virtual-machine","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"750ff60a-29a2-4408-b7e5-9c29e1d91333","gmt_create":"2025-09-16T14:10:02.689863+08:00","gmt_modified":"2025-09-16T14:10:02.692963+08:00"},{"catalog_id":"d2c2667c-8d88-4098-b1c1-29a9a9a3bed9","content":"","title":"Testing Strategy","description":"testing-strategy","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"00447f15-66eb-4b25-91cf-070dbdacdb0b","gmt_create":"2025-09-16T14:10:47.318007+08:00","gmt_modified":"2025-09-16T14:10:47.3211713+08:00"},{"catalog_id":"1b2548b7-74c2-4e17-b45f-ed8bb24967fb","content":"","title":"Advanced Topics","description":"advanced-topics","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7a54de68-f0d8-494a-9500-644a979a8e8a","gmt_create":"2025-09-16T14:10:56.2659702+08:00","gmt_modified":"2025-09-16T14:10:56.2685729+08:00"},{"catalog_id":"23e66f8c-6fe7-40c8-aff7-3bb22ee16cc7","content":"","title":"API Reference","description":"api-reference","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"fc9eeaff-ea14-4985-84c7-0685a3cba799","gmt_create":"2025-09-16T14:12:19.4518624+08:00","gmt_modified":"2025-09-16T14:12:19.455485+08:00"},{"catalog_id":"5abf66ba-0cba-4071-bef9-21651f79b18a","content":"","title":"Development Guide","description":"development-guide","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"5f433d82-4477-40aa-9554-0fcaf5c9d2d3","gmt_create":"2025-09-16T14:12:56.0992646+08:00","gmt_modified":"2025-09-16T14:12:56.1028769+08:00"},{"catalog_id":"9baf7cf7-ab36-4ee6-96e2-27113ca5f3ed","content":"","title":"Troubleshooting","description":"troubleshooting","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"e174f1b3-0477-43fe-8387-d46d81d59b42","gmt_create":"2025-09-16T14:13:04.4296528+08:00","gmt_modified":"2025-09-16T14:13:04.432795+08:00"},{"catalog_id":"5e6b3a73-d632-47b0-a13c-f0a869c9dcf4","content":"","title":"References and Further Reading","description":"references","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7e915051-ff12-4e39-a61e-4b3f04f3d33f","gmt_create":"2025-09-16T14:14:10.1013216+08:00","gmt_modified":"2025-09-16T14:14:10.1044058+08:00"},{"catalog_id":"f44e27c1-6dd9-4ae0-b131-7a0381989c6d","content":"","title":"Educational Structure and Progression","description":"educational-structure","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"64f8b48c-252c-4cb6-9e91-1296e7f53ce7","gmt_create":"2025-09-16T14:14:17.022685+08:00","gmt_modified":"2025-09-16T14:14:17.0257724+08:00"},{"catalog_id":"60f83f8a-c470-466a-b1c6-cadf689da583","content":"","title":"Syntax Overview","description":"cymbol-syntax-overview","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"386b036e-ce65-49cd-8d89-a8d4943c372b","gmt_create":"2025-09-16T14:15:17.8343321+08:00","gmt_modified":"2025-09-16T14:15:17.8369069+08:00"},{"catalog_id":"cd847beb-9c64-4a3e-ab37-5a8bd8002795","content":"","title":"Lexical Analysis","description":"lexical-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"69a5f7d2-fbba-48df-898f-30326a939c70","gmt_create":"2025-09-16T14:15:22.7648798+08:00","gmt_modified":"2025-09-16T14:15:22.7679931+08:00"},{"catalog_id":"32f48f4b-a49f-4d52-a28e-81c006fe2406","content":"","title":"AST Node Hierarchy","description":"ast-node-hierarchy","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"d74310c5-fd05-4be5-b630-24fd6f1c2b44","gmt_create":"2025-09-16T14:16:18.2971353+08:00","gmt_modified":"2025-09-16T14:16:18.2997273+08:00"},{"catalog_id":"e5a64b7f-3741-471f-9704-71e221208f20","content":"","title":"Scope Hierarchy and Management","description":"scope-hierarchy","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"5aec84ac-4fe2-4f7c-93bb-9a2c847ba235","gmt_create":"2025-09-16T14:16:43.1226939+08:00","gmt_modified":"2025-09-16T14:16:43.1257576+08:00"},{"catalog_id":"735267a7-d7c9-43a8-b387-fd74a43b22aa","content":"","title":"Type Hierarchy","description":"type-hierarchy","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7d22f823-be30-4bbc-97b2-02641d042c23","gmt_create":"2025-09-16T14:17:26.1693277+08:00","gmt_modified":"2025-09-16T14:17:26.1724272+08:00"},{"catalog_id":"e9ff7f84-653c-49a5-b676-fc3d4a0d9f4b","content":"","title":"IR Node Hierarchy and Base Classes","description":"ir-node-hierarchy","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"f986a7b9-46f5-4971-9d5c-d7d3d78b932c","gmt_create":"2025-09-16T14:17:43.8087956+08:00","gmt_modified":"2025-09-16T14:17:43.8129027+08:00"},{"catalog_id":"0aa7f589-1d51-4698-bd19-4170ee70cd18","content":"","title":"Control Flow Analysis","description":"control-flow-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"515e0ec5-5924-4210-9b20-777e71f11e44","gmt_create":"2025-09-16T14:18:54.882944+08:00","gmt_modified":"2025-09-16T14:18:54.8860548+08:00"},{"catalog_id":"4a0e6fb4-52cf-4c8d-a0d4-bed1b9842d25","content":"","title":"CFG Representation","description":"cfg-representation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"8b645609-6081-4e4d-8823-1444f1a00fc2","gmt_create":"2025-09-16T14:19:06.9647618+08:00","gmt_modified":"2025-09-16T14:19:06.9678529+08:00"},{"catalog_id":"b4f32d89-d03e-4891-96fc-942c302f2851","content":"","title":"Instruction Emission","description":"instruction-emission","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"5ded5d75-20d5-45f5-8dba-768338979b94","gmt_create":"2025-09-16T14:20:06.2835141+08:00","gmt_modified":"2025-09-16T14:20:06.286608+08:00"},{"catalog_id":"56ae2815-4760-4627-aba4-00ed00b27f52","content":"","title":"VM Architecture","description":"vm-architecture","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7cdfe161-e54b-4add-822e-183552349eea","gmt_create":"2025-09-16T14:20:14.583976+08:00","gmt_modified":"2025-09-16T14:20:14.5871129+08:00"},{"catalog_id":"d3be53f8-78e1-4c0a-9987-f17b176152df","content":"","title":"Unit Testing","description":"unit-testing","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"dfb38ed6-221a-46ba-bbf3-047eff1661e0","gmt_create":"2025-09-16T14:21:02.7028376+08:00","gmt_modified":"2025-09-16T14:21:02.7054708+08:00"},{"catalog_id":"cd733f7f-5343-444f-be4b-aa82fbda82db","content":"","title":"JIT Compilation","description":"jit-compilation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"ebeb04bb-9c31-44b6-8fa9-dca0db911f7c","gmt_create":"2025-09-16T14:21:31.4661386+08:00","gmt_modified":"2025-09-16T14:21:31.4692482+08:00"},{"catalog_id":"cf946cad-ae18-4c34-a765-ba479cf63554","content":"","title":"Compiler Class API","description":"compiler-api","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"2d3aff8e-980d-458e-ad25-ccfa0b34e5e5","gmt_create":"2025-09-16T14:22:09.526825+08:00","gmt_modified":"2025-09-16T14:22:09.5288862+08:00"},{"catalog_id":"9f19749a-9488-4a84-9180-95fdccc13ede","content":"","title":"Data Types","description":"cymbol-data-types","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"e79ca8f0-3611-424d-9929-1f4777145bb4","gmt_create":"2025-09-16T14:23:07.1179314+08:00","gmt_modified":"2025-09-16T14:23:07.1211048+08:00"},{"catalog_id":"373de73d-1fd5-4ad2-bab8-0877f0474ac3","content":"","title":"Cymbol Language Specification","description":"cymbol-language","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"98ab0cde-c9e8-443f-9373-e7304cddaa30","gmt_create":"2025-09-16T14:23:48.1078697+08:00","gmt_modified":"2025-09-16T14:23:48.1105082+08:00"},{"catalog_id":"04bb9ce5-9724-4759-b127-08200b9bdc24","content":"","title":"Syntactic Analysis","description":"syntactic-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"e536e41e-3935-4ff2-9e0b-5bde9a04822e","gmt_create":"2025-09-16T14:24:33.0137974+08:00","gmt_modified":"2025-09-16T14:24:33.0165289+08:00"},{"catalog_id":"0921675b-6ea3-467d-8f5e-f502cb7b06cb","content":"","title":"Expression Nodes","description":"ast-expressions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"a4f0a60b-cb68-48d3-b3ea-45b2356ab234","gmt_create":"2025-09-16T14:25:00.6515444+08:00","gmt_modified":"2025-09-16T14:25:00.6548258+08:00"},{"catalog_id":"8e0f1db9-190d-44db-81d4-1db880a0413f","content":"","title":"Symbol Definitions and Types","description":"symbol-definitions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"5ebe70f3-25bf-4ca1-bade-727dd2991a28","gmt_create":"2025-09-16T14:25:31.5727389+08:00","gmt_modified":"2025-09-16T14:25:31.5758345+08:00"},{"catalog_id":"cc99a14b-18ad-4ad9-9639-c207a0e9dcbc","content":"","title":"Type Management","description":"type-management","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"1ced48ef-5445-40e4-94dc-afe624a99008","gmt_create":"2025-09-16T14:26:34.1477247+08:00","gmt_modified":"2025-09-16T14:26:34.1508233+08:00"},{"catalog_id":"f315b1b9-34c5-4219-9adb-38f4397d2f9f","content":"","title":"IR Expressions and Value Representation","description":"ir-expressions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4b2e4193-781d-4614-83de-600584308b8a","gmt_create":"2025-09-16T14:27:21.9445741+08:00","gmt_modified":"2025-09-16T14:27:21.9476714+08:00"},{"catalog_id":"5836939f-5189-4ff7-9bb1-2e5c9bac5a33","content":"","title":"CFG Construction Algorithm","description":"cfg-construction","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"e8fb0d5c-29f4-40cb-b7b8-276c2d13a949","gmt_create":"2025-09-16T14:28:30.2700786+08:00","gmt_modified":"2025-09-16T14:28:30.2731784+08:00"},{"catalog_id":"c0d5454e-e30a-42f1-8dad-2e14644248a8","content":"","title":"Liveness Analysis","description":"liveness-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"082c7ebb-da4a-4a55-8eba-ebc7fb6b4c5e","gmt_create":"2025-09-16T14:28:49.6899339+08:00","gmt_modified":"2025-09-16T14:28:49.6935721+08:00"},{"catalog_id":"b3491b83-4564-4015-a493-9f6a7cf3bde2","content":"","title":"Assembly Translation","description":"assembly-translation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7dec2b1c-90f7-4bee-a3c7-f18bd80266ee","gmt_create":"2025-09-16T14:29:44.8709323+08:00","gmt_modified":"2025-09-16T14:29:44.8740475+08:00"},{"catalog_id":"fb69c068-d3c1-4114-a6c6-08c5aee8db3b","content":"","title":"Integration Testing","description":"integration-testing","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"837d5124-29fe-4da4-83b8-e8b674ea658e","gmt_create":"2025-09-16T14:30:46.902376+08:00","gmt_modified":"2025-09-16T14:30:46.9049661+08:00"},{"catalog_id":"8e7b69a1-6b26-4c7a-ac7f-65be941397f7","content":"","title":"Instruction Set","description":"instruction-set","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"68fd8a97-9548-439a-90e6-1e6843d3a627","gmt_create":"2025-09-16T14:31:37.3468839+08:00","gmt_modified":"2025-09-16T14:31:37.3505479+08:00"},{"catalog_id":"2961b515-bb17-4600-b58e-3337286a3503","content":"","title":"Register Allocation","description":"register-allocation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"2e258770-747f-48cc-a025-d162bac5c0fd","gmt_create":"2025-09-16T14:32:02.2750983+08:00","gmt_modified":"2025-09-16T14:32:02.2781884+08:00"},{"catalog_id":"5a9fd681-5265-47c2-9876-2eb17d74535a","content":"","title":"Compiler Architecture and Design","description":"compiler-architecture","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"ef0fed8b-4c7a-4553-a087-b95072bbe00a","gmt_create":"2025-09-16T14:33:06.5971599+08:00","gmt_modified":"2025-09-16T14:33:06.6003236+08:00"},{"catalog_id":"df2619d9-cf7e-4b68-8e1b-bb782fa9cc48","content":"","title":"AST Construction API","description":"ast-builder-api","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"62b72ff5-50bd-4c75-9278-3fcf2f53eb15","gmt_create":"2025-09-16T14:33:48.4748636+08:00","gmt_modified":"2025-09-16T14:33:48.478522+08:00"},{"catalog_id":"f023a450-ffa7-4ddd-9524-b92947b8dab8","content":"","title":"Control Structures","description":"cymbol-control-structures","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4f022f49-7730-4dbe-9fb6-211d373351f2","gmt_create":"2025-09-16T14:34:23.169536+08:00","gmt_modified":"2025-09-16T14:34:23.1721204+08:00"},{"catalog_id":"4ae8a6dd-1851-42ce-b3d8-f2a6504cc33d","content":"","title":"Abstract Syntax Tree Construction","description":"ast-construction","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"55e304d5-d031-4539-b74e-372731fbd6e6","gmt_create":"2025-09-16T14:35:04.3132661+08:00","gmt_modified":"2025-09-16T14:35:04.315845+08:00"},{"catalog_id":"bf5c1d81-8eeb-447e-bc38-07153331492d","content":"","title":"Statement Nodes","description":"ast-statements","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"16c10ba6-cba9-48a1-9a96-e2caad541b4f","gmt_create":"2025-09-16T14:35:36.6027023+08:00","gmt_modified":"2025-09-16T14:35:36.6058479+08:00"},{"catalog_id":"7741c855-f348-49c2-92c4-3c4bcaa00cf0","content":"","title":"Symbol Declaration and Resolution Process","description":"symbol-resolution","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"28b4b6f4-aa93-465f-acf4-775dfdf19579","gmt_create":"2025-09-16T14:36:48.6065001+08:00","gmt_modified":"2025-09-16T14:36:48.6090798+08:00"},{"catalog_id":"2451c2ec-6a76-40d3-96ca-02443e4b3d27","content":"","title":"Type Checking","description":"type-checking","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"af493f68-b1a6-44a6-abbe-65b733d28c5f","gmt_create":"2025-09-16T14:36:51.4352807+08:00","gmt_modified":"2025-09-16T14:36:51.438427+08:00"},{"catalog_id":"63913b66-2318-4abe-aecf-ea51035a8333","content":"","title":"Addressing and Storage Representation","description":"ir-addressing","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"05c92537-d099-45c3-ad2b-f1a0cebc6f0d","gmt_create":"2025-09-16T14:37:50.6860006+08:00","gmt_modified":"2025-09-16T14:37:50.6886371+08:00"},{"catalog_id":"1c7a452d-3cc9-47ca-9afa-1846aefb790c","content":"","title":"Basic Block Implementation","description":"basic-blocks","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"bd2ee6c4-441c-427a-b9a9-2ab21c784f54","gmt_create":"2025-09-16T14:38:15.9270693+08:00","gmt_modified":"2025-09-16T14:38:15.930214+08:00"},{"catalog_id":"ae55ece2-1f98-41ff-9d41-af1176576908","content":"","title":"Flow Optimizer Interface","description":"flow-optimizer-interface","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"cdb060d7-8175-4c33-9343-39c0fd988cd0","gmt_create":"2025-09-16T14:39:05.2976529+08:00","gmt_modified":"2025-09-16T14:39:05.3002423+08:00"},{"catalog_id":"24b1a9d4-6072-425f-aa4c-d0c722fe2db1","content":"","title":"Bytecode Encoding","description":"bytecode-encoding","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"f97eec75-0214-4915-9ccb-bc9eebfd4002","gmt_create":"2025-09-16T14:39:29.3099822+08:00","gmt_modified":"2025-09-16T14:39:29.3125679+08:00"},{"catalog_id":"1b760258-826b-4254-8248-f7db32d1cbe1","content":"","title":"Stack Frame Management","description":"stack-frame-management","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"0aa81012-72ae-420f-8dcc-ca7f86739fea","gmt_create":"2025-09-16T14:40:22.520779+08:00","gmt_modified":"2025-09-16T14:40:22.5239424+08:00"},{"catalog_id":"be9aff74-6d86-47e2-a599-df2491e0ddc8","content":"","title":"End-to-End Testing","description":"end-to-end-testing","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"227dc7d9-6d71-4588-bc20-8112ce025681","gmt_create":"2025-09-16T14:40:39.0318847+08:00","gmt_modified":"2025-09-16T14:40:39.0344685+08:00"},{"catalog_id":"90649706-c147-4381-bd1a-b402800c9cc2","content":"","title":"Advanced Optimizations","description":"advanced-optimizations","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"ca452e21-faf2-42c1-be63-b4bc97629455","gmt_create":"2025-09-16T14:41:59.0080842+08:00","gmt_modified":"2025-09-16T14:41:59.0116932+08:00"},{"catalog_id":"e0490cb2-3505-49c9-8283-e7f5e0c57049","content":"","title":"Symbol Resolution API","description":"symbol-resolution-api","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"e376605e-9ffd-468b-b025-277d7f3187d1","gmt_create":"2025-09-16T14:42:49.8081888+08:00","gmt_modified":"2025-09-16T14:42:49.8113026+08:00"},{"catalog_id":"73a9de86-3c93-47d4-84b6-073c2b7827aa","content":"","title":"Core Compiler Concepts","description":"core-concepts","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"9b09cd9e-4a89-4bf5-ba3b-1976d95aca98","gmt_create":"2025-09-16T14:43:06.1066005+08:00","gmt_modified":"2025-09-16T14:43:06.1092432+08:00"},{"catalog_id":"7f8be801-10c3-457d-8010-46cdc0518468","content":"","title":"Functions and Variables","description":"cymbol-functions-variables","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"81d59589-534e-4ec8-afbf-a9269de7d44f","gmt_create":"2025-09-16T14:43:43.4867797+08:00","gmt_modified":"2025-09-16T14:43:43.4898789+08:00"},{"catalog_id":"7bd73bde-5f62-45a9-9813-c4a794967c75","content":"","title":"Symbol Table and Scope Management","description":"symbol-table-management","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"9d7542cf-d3fd-4bec-bc3d-fe8ab0d541e2","gmt_create":"2025-09-16T14:44:21.5186689+08:00","gmt_modified":"2025-09-16T14:44:21.5212675+08:00"},{"catalog_id":"82728814-0cad-45ac-b006-83d6de25945e","content":"","title":"Declaration Nodes","description":"ast-declarations","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"05548912-6b93-45f9-abd4-7fe0613d3ddb","gmt_create":"2025-09-16T14:45:10.0700072+08:00","gmt_modified":"2025-09-16T14:45:10.0731177+08:00"},{"catalog_id":"540f0827-3ba6-48cd-9ac6-94cb8fed67d4","content":"","title":"Integration with Type System","description":"type-system-integration","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"1d6ed4ff-b835-4f9d-a560-8287e45dcfde","gmt_create":"2025-09-16T14:45:27.6801452+08:00","gmt_modified":"2025-09-16T14:45:27.6827214+08:00"},{"catalog_id":"f38cb86e-078c-41cb-8a13-a889ea5a9cbf","content":"","title":"IR Statements and Control Flow Instructions","description":"ir-statements","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"56c62c0c-e93a-4da1-b2dd-6f4e9ee7c529","gmt_create":"2025-09-16T14:46:21.6917492+08:00","gmt_modified":"2025-09-16T14:46:21.6943438+08:00"},{"catalog_id":"d8ddafdf-2a14-4521-966b-d144044caa0a","content":"","title":"Control Flow Analysis Framework","description":"control-flow-analysis-framework","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"74bcfdcb-1e60-43f1-869d-c68c76d790e4","gmt_create":"2025-09-16T14:46:57.7565868+08:00","gmt_modified":"2025-09-16T14:46:57.7596805+08:00"},{"catalog_id":"f95b2f93-dfbc-4544-8d56-d97724f14adf","content":"","title":"Jump Optimization","description":"jump-optimization","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"948c1f99-3cfd-4c78-90f3-1bf1e60a5b9e","gmt_create":"2025-09-16T14:47:30.8633119+08:00","gmt_modified":"2025-09-16T14:47:30.8658885+08:00"},{"catalog_id":"76fe6999-e264-4aa0-8faf-ab45385c88ee","content":"","title":"Memory Model","description":"memory-model","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"19ac0a58-72d7-476b-88d8-b9cf3fb26df1","gmt_create":"2025-09-16T14:48:14.2857465+08:00","gmt_modified":"2025-09-16T14:48:14.2888577+08:00"},{"catalog_id":"60878b24-bdbf-4f16-a44a-443f67f98071","content":"","title":"Test Organization and Coverage","description":"test-organization-and-coverage","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"3dc0d795-ab57-4d56-b25b-b61a5bd2768c","gmt_create":"2025-09-16T14:48:36.5648232+08:00","gmt_modified":"2025-09-16T14:48:36.5674027+08:00"},{"catalog_id":"2f083cf5-ec04-42ef-b95a-90bed7758568","content":"","title":"Modular Compiler Pipeline","description":"modular-pipeline","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"d7519541-c841-416e-ab69-ae74fa1422d3","gmt_create":"2025-09-16T14:49:31.185666+08:00","gmt_modified":"2025-09-16T14:49:31.188849+08:00"},{"catalog_id":"60aa6685-af80-488f-b869-51f27a4b8ba6","content":"","title":"Type Checking API","description":"type-checking-api","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"ca33161c-333f-495b-9859-f51ad23f4ebe","gmt_create":"2025-09-16T14:49:54.5982803+08:00","gmt_modified":"2025-09-16T14:49:54.6014661+08:00"},{"catalog_id":"3729618a-f751-4366-93e2-66a3ad6d5850","content":"","title":"Build System and Testing Framework","description":"build-and-test","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7b6a5663-07b0-4a4a-bb93-8bbea555595e","gmt_create":"2025-09-16T14:50:09.2371804+08:00","gmt_modified":"2025-09-16T14:50:09.2397648+08:00"},{"catalog_id":"5d437ae3-733d-429c-a8ef-9d2b8f8f4ca9","content":"","title":"Operators and Expressions","description":"cymbol-operators-expressions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"9cfe2f41-f502-434d-a974-3a368a52b11f","gmt_create":"2025-09-16T14:50:51.8797611+08:00","gmt_modified":"2025-09-16T14:50:51.882306+08:00"},{"catalog_id":"67e42aae-4075-4ab3-b4bd-a70a85e8b76b","content":"","title":"Type System and Type Checking","description":"type-system","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"5600e1f5-ca06-4a9a-93ad-99d6775e0b0a","gmt_create":"2025-09-16T14:51:26.3928768+08:00","gmt_modified":"2025-09-16T14:51:26.3960584+08:00"},{"catalog_id":"f4ffcf01-0acb-4db4-a6b5-92f53b7c781b","content":"","title":"AST Construction Process","description":"ast-construction","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"20f7df4d-efc6-4250-a3e6-0ffc6906fe26","gmt_create":"2025-09-16T14:52:22.1639385+08:00","gmt_modified":"2025-09-16T14:52:22.1670381+08:00"},{"catalog_id":"54b252f4-31e1-4598-a68d-5125bed6c064","content":"","title":"Function Call Representation in IR","description":"ir-function-calls","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"fb94e4ab-ae91-4f0e-a955-10a3b859ce33","gmt_create":"2025-09-16T14:52:52.1443004+08:00","gmt_modified":"2025-09-16T14:52:52.1479633+08:00"},{"catalog_id":"9d8b252c-3d10-4393-9f99-17716c5d0b3e","content":"","title":"Liveness Analysis","description":"liveness-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"3a173de5-e03b-443f-a0ee-a10a970ad782","gmt_create":"2025-09-16T14:53:34.214716+08:00","gmt_modified":"2025-09-16T14:53:34.2178785+08:00"},{"catalog_id":"80951cce-ce82-45d2-8a56-51beec7f1f87","content":"","title":"Execution Engine","description":"execution-engine","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"1bc31256-c161-4da8-8a37-613ab875eec5","gmt_create":"2025-09-16T14:53:55.4352599+08:00","gmt_modified":"2025-09-16T14:53:55.4378714+08:00"},{"catalog_id":"3c4df7ae-7805-49f5-8b6c-30f2a704c369","content":"","title":"Interprocedural Analysis","description":"interprocedural-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"0b92e763-c5c0-4c16-a8ae-50fdb34b5347","gmt_create":"2025-09-16T14:54:30.2313953+08:00","gmt_modified":"2025-09-16T14:54:30.2344924+08:00"},{"catalog_id":"eb7621d4-3db6-4d44-8452-cf19191a8bc5","content":"","title":"Code Generation API","description":"code-generation-api","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"67f5bc3f-158c-4cfd-b3b2-6d15a43f119e","gmt_create":"2025-09-16T14:55:00.6375059+08:00","gmt_modified":"2025-09-16T14:55:00.6396392+08:00"},{"catalog_id":"f539a84b-5019-4478-accd-ad307e810d29","content":"","title":"Advanced Language Features","description":"cymbol-advanced-features","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"f3e94080-c639-466f-8a42-f9f93d9634cd","gmt_create":"2025-09-16T14:55:44.6694469+08:00","gmt_modified":"2025-09-16T14:55:44.6725651+08:00"},{"catalog_id":"7f232943-157d-4018-9248-fe0126d13299","content":"","title":"Visitor Pattern Implementation","description":"ast-visitor-pattern","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4c07f46e-d7df-4a12-9942-2c1ea97c2e58","gmt_create":"2025-09-16T14:56:47.1211838+08:00","gmt_modified":"2025-09-16T14:56:47.1243221+08:00"},{"catalog_id":"15a01fdf-9601-4f5e-97e4-16803762d036","content":"","title":"Intermediate Representation (IR) Generation","description":"intermediate-representation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"29c85cfc-ca24-4a18-97a5-5dc9eb8bbe21","gmt_create":"2025-09-16T14:56:50.7518615+08:00","gmt_modified":"2025-09-16T14:56:50.7549597+08:00"},{"catalog_id":"5b44d567-0fcc-4690-a9f7-2728e0b5fed7","content":"","title":"Debugging Support","description":"debugging-support","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"1aeb0af8-dd7c-4510-99f3-420f8420bc29","gmt_create":"2025-09-16T14:57:50.3431973+08:00","gmt_modified":"2025-09-16T14:57:50.3457795+08:00"},{"catalog_id":"faa4a661-2c6c-4b5b-8d52-c211db2b520b","content":"","title":"Control Flow Optimization Interface","description":"cfg-optimization-interface","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7729d29e-aa87-4cb9-a0a1-21630a6bf1b6","gmt_create":"2025-09-16T14:58:06.6036144+08:00","gmt_modified":"2025-09-16T14:58:06.6062092+08:00"},{"catalog_id":"f62cc1d7-1650-48ce-a3d0-300b7c13e19d","content":"","title":"Control Flow Analysis and CFG","description":"control-flow-analysis","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"41532df7-eaa0-46b5-a7e3-e49af7279c5e","gmt_create":"2025-09-16T14:59:37.8580129+08:00","gmt_modified":"2025-09-16T14:59:37.8616469+08:00"},{"catalog_id":"ebd4e00e-545f-4627-9f50-119b59511389","content":"","title":"Intermediate Representation API","description":"ir-builder-api","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4d6b9be2-327a-451d-9a96-763283abcad5","gmt_create":"2025-09-16T14:59:44.3504739+08:00","gmt_modified":"2025-09-16T14:59:44.3541033+08:00"},{"catalog_id":"25ff33bd-8c70-492a-a93b-3b2a5c14244e","content":"","title":"Optimization Passes","description":"optimization","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7b37d09b-943e-4f3b-8a6b-a2f7633e8d82","gmt_create":"2025-09-16T15:01:07.3399263+08:00","gmt_modified":"2025-09-16T15:01:07.3430233+08:00"},{"catalog_id":"f348b47d-0c42-4dea-96d9-88036f5bb118","content":"","title":"Control Flow Analysis API","description":"cfg-api","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"6997972d-f527-4e9a-b01f-2da363139fbb","gmt_create":"2025-09-16T15:01:21.5813633+08:00","gmt_modified":"2025-09-16T15:01:21.5839329+08:00"},{"catalog_id":"4078be93-a696-451a-844b-f5db53ddc3a7","content":"","title":"Code Generation","description":"code-generation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"5721eea7-78ef-48ea-ac37-2ffdcaf9a71a","gmt_create":"2025-09-16T15:02:18.2912488+08:00","gmt_modified":"2025-09-16T15:02:18.2938329+08:00"},{"catalog_id":"7bb91e05-ccd3-4ae0-9389-586f0c3b1a16","content":"","title":"Error Handling and Diagnostics","description":"error-handling","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"92509907-e1af-42cf-9f94-b29d421f621a","gmt_create":"2025-09-16T15:02:39.8574479+08:00","gmt_modified":"2025-09-16T15:02:39.8600261+08:00"},{"catalog_id":"d37c0744-1e79-4b41-81bd-05db17b138ba","content":"","title":"Foundations: Lexical and Syntactic Analysis","description":"foundations","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4dd4d5b7-f47f-4995-bc33-7baa9ac81814","gmt_create":"2025-09-16T15:03:10.5325703+08:00","gmt_modified":"2025-09-16T15:03:10.5363322+08:00"},{"catalog_id":"05b0e2b5-6dc9-47fb-87a5-7fcbee19fc8b","content":"","title":"Syntax Overview","description":"cymbol-syntax-overview","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"382541a9-5470-462f-a29e-e32c8ad1f01c","gmt_create":"2025-09-16T15:03:42.0948133+08:00","gmt_modified":"2025-09-16T15:03:42.0974137+08:00"},{"catalog_id":"a8f928e3-5267-4078-a432-0a28cc43b98a","content":"","title":"AST Expressions","description":"ast-expressions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"dcc7e908-ff0a-435a-a1e6-580a85f2eb22","gmt_create":"2025-09-16T15:04:22.7753348+08:00","gmt_modified":"2025-09-16T15:04:22.7779179+08:00"},{"catalog_id":"a71db40b-272f-428b-91b5-c4b69ce4739f","content":"","title":"IR Expression Class Hierarchy","description":"ir-expression-hierarchy","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"60fa350e-daaa-4daf-a2eb-d9272d28f8a2","gmt_create":"2025-09-16T15:04:43.3866588+08:00","gmt_modified":"2025-09-16T15:04:43.3892672+08:00"},{"catalog_id":"5ccec58c-50de-4e2e-8bc6-407c7c1d8f92","content":"","title":"Compilation Pipeline Architecture","description":"compiler-pipeline-architecture","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"8558fb2d-6335-48be-9ed9-4371380314e5","gmt_create":"2025-09-16T15:05:39.0087479+08:00","gmt_modified":"2025-09-16T15:05:39.0118448+08:00"},{"catalog_id":"8d046970-fe69-4daf-8978-bd2113e2f2c5","content":"","title":"Abstract Syntax Tree (AST) Hierarchy","description":"ast-hierarchy","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"73f22dcb-0e5d-4e34-a610-e4b340b79a29","gmt_create":"2025-09-16T15:05:49.8287428+08:00","gmt_modified":"2025-09-16T15:05:49.8318371+08:00"},{"catalog_id":"ed534d72-628d-4be7-9720-f8f7685cffc3","content":"","title":"IR Statement Base Class","description":"ir-stmt-base","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"32698302-84ca-4ed0-83da-0d0e7a75abb7","gmt_create":"2025-09-16T15:06:34.9541167+08:00","gmt_modified":"2025-09-16T15:06:34.9572387+08:00"},{"catalog_id":"2803383c-c032-4237-a6a3-7f213fa21d33","content":"","title":"Abstract Syntax Tree Construction","description":"ast-construction","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"2f4fe9fc-e5f9-4098-9621-d813f6bfa1a1","gmt_create":"2025-09-16T15:06:49.1947283+08:00","gmt_modified":"2025-09-16T15:06:49.1973096+08:00"},{"catalog_id":"62584281-0d29-42ca-882b-ef04032a32af","content":"","title":"Data Types","description":"cymbol-data-types","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"cabc8204-6976-4c10-a40f-d600cf436a1a","gmt_create":"2025-09-16T15:07:28.3008079+08:00","gmt_modified":"2025-09-16T15:07:28.3029503+08:00"},{"catalog_id":"3fa600c9-6872-4fe9-937b-f5de56c5ea1a","content":"","title":"AST Statements","description":"ast-statements","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"632c0632-c17e-4aef-8c4e-ca261d18f664","gmt_create":"2025-09-16T15:08:20.0131755+08:00","gmt_modified":"2025-09-16T15:08:20.0157449+08:00"},{"catalog_id":"e5f39a13-a940-4a44-94a1-b1ad913b950f","content":"","title":"Arithmetic Expressions in IR","description":"arithmetic-expressions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"ebdf8bcd-4b4a-4755-91a3-f22233e8939f","gmt_create":"2025-09-16T15:08:31.0227788+08:00","gmt_modified":"2025-09-16T15:08:31.0269016+08:00"},{"catalog_id":"f1a59a9c-eb6a-435e-8fab-8701a6b44e34","content":"","title":"Component Interaction Patterns","description":"component-interactions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"147e8406-7ea4-44f9-865e-3157b1a68dde","gmt_create":"2025-09-16T15:09:11.2234925+08:00","gmt_modified":"2025-09-16T15:09:11.2255498+08:00"},{"catalog_id":"832b5caf-32bc-4586-b131-068261fdbde2","content":"","title":"Symbol Table and Scope Management","description":"symbol-table-management","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"54cb3f56-6ea5-431e-a7bf-849913b1fe96","gmt_create":"2025-09-16T15:10:10.3276518+08:00","gmt_modified":"2025-09-16T15:10:10.330218+08:00"},{"catalog_id":"8383b686-c54e-421d-92b6-d0fac2405525","content":"","title":"Assignment Statements","description":"ir-stmt-assignment","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7a3b8059-64cc-4822-9fdc-c585cbb492d8","gmt_create":"2025-09-16T15:10:28.8170599+08:00","gmt_modified":"2025-09-16T15:10:28.8191683+08:00"},{"catalog_id":"892e2a79-18f0-445a-ae68-33efb444526c","content":"","title":"Control Structures","description":"cymbol-control-structures","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"c4790833-6199-466e-8260-b118685f5728","gmt_create":"2025-09-16T15:11:54.093769+08:00","gmt_modified":"2025-09-16T15:11:54.0973768+08:00"},{"catalog_id":"650e30ed-8c52-484b-b415-044f4dfbff89","content":"","title":"Symbol Table and Semantic Analysis","description":"symbol-management","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4a6db506-d097-481c-81df-1f236e187fea","gmt_create":"2025-09-16T15:11:54.5300286+08:00","gmt_modified":"2025-09-16T15:11:54.5331236+08:00"},{"catalog_id":"f3614b9e-ef0c-4719-994e-14b52e43924c","content":"","title":"Constant Value Representation","description":"constant-representation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"85da14a1-95fa-41cc-a9d9-b886bc608dbb","gmt_create":"2025-09-16T15:12:57.0409195+08:00","gmt_modified":"2025-09-16T15:12:57.0440121+08:00"},{"catalog_id":"50cdd8b6-b8a5-4fcb-81ea-ec1e925519a0","content":"","title":"AST Declarations","description":"ast-declarations","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4807f4c8-5604-43f5-b96c-29a188e9365b","gmt_create":"2025-09-16T15:13:35.4671076+08:00","gmt_modified":"2025-09-16T15:13:35.4702026+08:00"},{"catalog_id":"c9718273-8ee3-4b28-9a04-6e8d7cf08ba8","content":"","title":"Design Patterns Implementation","description":"design-patterns-implementation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"a8345ac6-c44b-4036-ac3a-c23be4960dd8","gmt_create":"2025-09-16T15:14:09.5852707+08:00","gmt_modified":"2025-09-16T15:14:09.5878525+08:00"},{"catalog_id":"280be546-5e60-4484-81b8-6af79027275e","content":"","title":"Type System and Type Checking","description":"type-system-implementation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"3dff9aa4-df7c-46b9-8b13-74d7859b4aa9","gmt_create":"2025-09-16T15:14:59.3061408+08:00","gmt_modified":"2025-09-16T15:14:59.3102708+08:00"},{"catalog_id":"e412c6c6-f68e-4907-8a4e-d2092ed4ca8b","content":"","title":"Unconditional Jump Instructions","description":"ir-stmt-jump-unconditional","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"355ca7b4-6a3f-41b2-98dc-5e1ba31c2b90","gmt_create":"2025-09-16T15:15:12.8341546+08:00","gmt_modified":"2025-09-16T15:15:12.8372403+08:00"},{"catalog_id":"54709b3e-2aa8-4c1e-8881-65f0d6134efe","content":"","title":"Code Generation and Virtual Machine","description":"code-generation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"8d523bbf-7189-4fbd-a9e9-ad98bbb718dd","gmt_create":"2025-09-16T15:15:54.1980838+08:00","gmt_modified":"2025-09-16T15:15:54.2012057+08:00"},{"catalog_id":"ec0ea5cb-45cd-45b0-917a-e0a7534caf3e","content":"","title":"Functions and Variables","description":"cymbol-functions-variables","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7ff35bd1-153a-48ca-b53a-e75f8b03ab7d","gmt_create":"2025-09-16T15:16:49.8191675+08:00","gmt_modified":"2025-09-16T15:16:49.8217501+08:00"},{"catalog_id":"6a005956-8a98-4532-81eb-16844193b31e","content":"","title":"AST Type Representations","description":"ast-types","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"67397c95-cdcc-4a80-9ff4-a17e8b737fca","gmt_create":"2025-09-16T15:17:16.8394881+08:00","gmt_modified":"2025-09-16T15:17:16.8425948+08:00"},{"catalog_id":"aae5e5fd-c5e1-4541-ab79-3e92c452c9aa","content":"","title":"Operand Management in Expressions","description":"operand-handling","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"6e579750-e653-4359-907b-8ec9c48e1508","gmt_create":"2025-09-16T15:18:07.6111506+08:00","gmt_modified":"2025-09-16T15:18:07.6132289+08:00"},{"catalog_id":"11cbb601-e7e2-4319-80c5-23ee6b0ecc05","content":"","title":"Extensibility and Plugin Architecture","description":"extensibility-architecture","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"a59d87c1-005e-40c1-8b2e-ca31d39ac44a","gmt_create":"2025-09-16T15:18:17.6413396+08:00","gmt_modified":"2025-09-16T15:18:17.6439267+08:00"},{"catalog_id":"269d5bf6-a82d-4480-a1b3-74b90e0eeec2","content":"","title":"Intermediate Representation (IR) Structure","description":"ir-representation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"dec2a193-f5bf-4d5b-8cd1-801cdc174720","gmt_create":"2025-09-16T15:19:15.2111787+08:00","gmt_modified":"2025-09-16T15:19:15.2148106+08:00"},{"catalog_id":"ee13fc90-335f-4d82-b18e-bded68f4edf6","content":"","title":"Conditional Jump Instructions","description":"ir-stmt-jump-conditional","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"01293e18-2b98-4b55-877b-08c247251bee","gmt_create":"2025-09-16T15:19:18.1504397+08:00","gmt_modified":"2025-09-16T15:19:18.1540438+08:00"},{"catalog_id":"f6ef1ed8-23ea-4c51-a0bd-2374b1475754","content":"","title":"Expressions and Operators","description":"cymbol-expressions-operators","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"cc581887-9642-468f-8485-8003a4ef29f9","gmt_create":"2025-09-16T15:20:34.2633347+08:00","gmt_modified":"2025-09-16T15:20:34.2664315+08:00"},{"catalog_id":"89e1c8ef-50b5-4d3d-acb3-c24947b363ed","content":"","title":"Optimization and Advanced Compilation","description":"optimization-framework","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"979eb5af-59de-4aea-bcc5-1d29570354fb","gmt_create":"2025-09-16T15:20:41.4952457+08:00","gmt_modified":"2025-09-16T15:20:41.4983725+08:00"},{"catalog_id":"896ae6fe-867d-4388-9fcf-354c9e9462d3","content":"","title":"Error Handling and Diagnostics Architecture","description":"error-handling-architecture","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"439abb40-ebc7-459d-92b6-9207f594bb20","gmt_create":"2025-09-16T15:21:37.8276166+08:00","gmt_modified":"2025-09-16T15:21:37.8317378+08:00"},{"catalog_id":"eda2018a-8a06-4714-bd16-25f911468c36","content":"","title":"Stack-Based Virtual Machine Architecture","description":"vm-architecture","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"6ac58b0b-d8ef-42ab-8c02-7f74633c6cca","gmt_create":"2025-09-16T15:21:41.6373505+08:00","gmt_modified":"2025-09-16T15:21:41.6404482+08:00"},{"catalog_id":"5f3712e6-1e45-4f57-9156-d7861054d6ed","content":"","title":"Expression Statements","description":"ir-stmt-expression","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"e563b95e-c2ac-4de3-8c5d-e513e2762c8e","gmt_create":"2025-09-16T15:22:49.5117241+08:00","gmt_modified":"2025-09-16T15:22:49.5153946+08:00"},{"catalog_id":"ffe6309a-b8b9-4776-84cb-028eb78677ce","content":"","title":"Label and Function Entry Instructions","description":"ir-stmt-labels","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4df4f2cf-0227-45bf-aa62-8dc5fbd86f5e","gmt_create":"2025-09-16T15:23:10.1863772+08:00","gmt_modified":"2025-09-16T15:23:10.1894736+08:00"},{"catalog_id":"fd13ef88-8a0f-4534-9b7b-b39640a64222","content":"","title":"Return Instructions","description":"ir-stmt-return","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"0d1088f4-bbf8-428c-b990-a77ddb88c506","gmt_create":"2025-09-16T15:24:00.8511749+08:00","gmt_modified":"2025-09-16T15:24:00.8542748+08:00"},{"catalog_id":"cda74bbe-ab6a-4d6c-b212-e881d286e06a","content":"","title":"Binary Expressions in IR","description":"binary-expressions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4af4f32a-879b-4db2-9fe8-80be0f3aca19","gmt_create":"2025-09-16T15:24:12.6029876+08:00","gmt_modified":"2025-09-16T15:24:12.6057106+08:00"},{"catalog_id":"62e11430-f6ca-4cdf-8106-0a3050bd7394","content":"","title":"Operand Interface and Base Abstraction","description":"operand-interface","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"006b4e0d-4282-4ad7-ac3f-61c1b4244c20","gmt_create":"2025-09-16T15:24:57.2931941+08:00","gmt_modified":"2025-09-16T15:24:57.2963067+08:00"},{"catalog_id":"b80d8119-6f5b-4aad-9943-446655f67cba","content":"","title":"Lexical Analysis Phase","description":"lexical-analysis-phase","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"fca12049-eac9-4f9a-b8dd-6360a21b622b","gmt_create":"2025-09-16T15:25:26.7541163+08:00","gmt_modified":"2025-09-16T15:25:26.7572562+08:00"},{"catalog_id":"e5ad9a45-9d22-4202-8c87-b46f9a12b396","content":"","title":"Compiler Driver and Phase Interactions","description":"compiler-driver-interactions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"b485a9a7-81f0-4466-a6ff-ef88bcc8f59c","gmt_create":"2025-09-16T15:26:25.0671168+08:00","gmt_modified":"2025-09-16T15:26:25.0702508+08:00"},{"catalog_id":"8c1af1a7-d93f-450d-b2c1-a9eab2bdbd1f","content":"","title":"Custom Optimization Passes with IFlowOptimizer","description":"optimization-extensibility","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"adae2e3d-1496-4388-aaba-b6ac49fe36c7","gmt_create":"2025-09-16T15:26:48.2288272+08:00","gmt_modified":"2025-09-16T15:26:48.2322101+08:00"},{"catalog_id":"b8c07031-73e5-468a-9590-2874ec0d3560","content":"","title":"Visitor Pattern Implementation","description":"visitor-pattern-implementation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"5cf9a50a-05e5-46b5-b08d-72ed6724c2e8","gmt_create":"2025-09-16T15:27:23.4377169+08:00","gmt_modified":"2025-09-16T15:27:23.4402923+08:00"},{"catalog_id":"6b71a676-0c1a-4fe0-bfb0-8d9f22825d57","content":"","title":"CymbalError Class Hierarchy","description":"cymbal-error-class-hierarchy","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"df5f44e6-37cf-4a64-921d-c9cdd5477f15","gmt_create":"2025-09-16T15:27:47.1884278+08:00","gmt_modified":"2025-09-16T15:27:47.1910133+08:00"},{"catalog_id":"ec3a5d0e-9da2-476b-b3cb-7f1bbd956995","content":"","title":"Unary Expressions in IR","description":"unary-expressions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"7f56f799-34ff-4924-95e6-b652ad5ef384","gmt_create":"2025-09-16T15:28:22.6106356+08:00","gmt_modified":"2025-09-16T15:28:22.6137439+08:00"},{"catalog_id":"7632c150-f891-4d76-a9a2-c0061d548e92","content":"","title":"VarSlot - Variable Reference Management","description":"variable-slot-management","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"9b54db5e-eb77-4629-a0ba-8fb54452d1e9","gmt_create":"2025-09-16T15:29:01.2118424+08:00","gmt_modified":"2025-09-16T15:29:01.2154592+08:00"},{"catalog_id":"7c6b727a-6205-40d2-9487-1ec941ba512c","content":"","title":"Syntactic Analysis Phase","description":"syntactic-analysis-phase","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"0c183862-96d9-4144-be1a-de154a99551f","gmt_create":"2025-09-16T15:29:38.7426881+08:00","gmt_modified":"2025-09-16T15:29:38.7453408+08:00"},{"catalog_id":"533613b0-4a25-4a85-96b4-4cec4a7bb4fc","content":"","title":"Compilation Pipeline Phase Interactions","description":"ast-ir-cfg-asm-pipeline","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"813c2494-e830-49eb-b484-f405e2f81218","gmt_create":"2025-09-16T15:30:38.0152981+08:00","gmt_modified":"2025-09-16T15:30:38.018389+08:00"},{"catalog_id":"0f591dab-d9a5-4d4a-920e-17e51daaaaea","content":"","title":"Target-Independent Code Generation via IOperatorEmitter","description":"codegen-extensibility","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"602de67d-dfc0-4059-b3ed-8d98df92af6a","gmt_create":"2025-09-16T15:31:00.7056277+08:00","gmt_modified":"2025-09-16T15:31:00.7082122+08:00"},{"catalog_id":"3dc624f3-2a91-44ae-b26d-98e97ed66a5a","content":"","title":"Strategy Pattern Implementation","description":"strategy-pattern-implementation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"c0d540e1-a582-4082-8d0b-62f4c4348e92","gmt_create":"2025-09-16T15:31:37.5455557+08:00","gmt_modified":"2025-09-16T15:31:37.5481396+08:00"},{"catalog_id":"bbe95f58-7151-4441-887e-46cfc4621194","content":"","title":"ErrorIssuer Component","description":"error-issuer-component","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"9e0b23ac-0fb3-44da-8b73-4a7e958b76e3","gmt_create":"2025-09-16T15:31:47.2864468+08:00","gmt_modified":"2025-09-16T15:31:47.2885114+08:00"},{"catalog_id":"4567db44-a56c-4eeb-8f1f-3e69dbb7241d","content":"","title":"FrameSlot - Stack Frame Location Management","description":"frame-slot-addressing","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"03b68741-a9a7-4061-8e33-98aa84432cd3","gmt_create":"2025-09-16T15:32:26.1266209+08:00","gmt_modified":"2025-09-16T15:32:26.1292239+08:00"},{"catalog_id":"9f77fe64-ccce-48e6-b0e8-79a172acac48","content":"","title":"AST Construction Phase","description":"ast-construction-phase","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"5f595969-6c74-49a7-8a02-27acfa87edcf","gmt_create":"2025-09-16T15:33:36.5824777+08:00","gmt_modified":"2025-09-16T15:33:36.5855732+08:00"},{"catalog_id":"1765045d-54fc-418f-993c-a459a854be75","content":"","title":"Symbol Table and Type System Interactions","description":"symbol-type-interactions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"bf43d59a-19a5-472d-ba52-f0fe41558ef5","gmt_create":"2025-09-16T15:33:43.4005428+08:00","gmt_modified":"2025-09-16T15:33:43.4041734+08:00"},{"catalog_id":"ce164e68-cb2c-4541-af3d-c1663ab43654","content":"","title":"Singleton Pattern Implementation","description":"singleton-pattern-implementation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"eaeefa3a-ada9-4d92-9eaf-3f3b882aa214","gmt_create":"2025-09-16T15:34:47.2917845+08:00","gmt_modified":"2025-09-16T15:34:47.2949155+08:00"},{"catalog_id":"5563ceb9-0f72-4d65-8bf9-d1ad2feeec66","content":"","title":"Configurable Compilation Pipeline Architecture","description":"pipeline-configurability","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"e661a2cf-5180-43b3-b3df-e0afaeed8ab8","gmt_create":"2025-09-16T15:34:50.9438864+08:00","gmt_modified":"2025-09-16T15:34:50.946453+08:00"},{"catalog_id":"f9fd3b2f-fb06-4402-9149-d9c838fffa5f","content":"","title":"Phase-Level Error Integration","description":"phase-error-integration","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"3e4af601-d154-4d3a-a6b4-a05aaa2b97b4","gmt_create":"2025-09-16T15:35:45.4359052+08:00","gmt_modified":"2025-09-16T15:35:45.4384769+08:00"},{"catalog_id":"8f308476-59be-4ca2-b4dd-8a1deb18d451","content":"","title":"OperandSlot - Intermediate Calculation Results","description":"operand-slot-intermediates","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"411eefc4-66bd-49d6-b27b-4b97139149d3","gmt_create":"2025-09-16T15:35:49.3134918+08:00","gmt_modified":"2025-09-16T15:35:49.3160616+08:00"},{"catalog_id":"1e728540-f781-40c0-987f-7ef442ae8d92","content":"","title":"Error Reporting and Handling Integration","description":"error-handling-interactions","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"79b2d337-c9e9-4150-a52a-a5c0715026e1","gmt_create":"2025-09-16T15:36:44.5162992+08:00","gmt_modified":"2025-09-16T15:36:44.5188844+08:00"},{"catalog_id":"a2902fd8-a9dc-44b5-a780-35cad48d9162","content":"","title":"Semantic Analysis Phase","description":"semantic-analysis-phase","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"8ac437e9-80ff-421b-beca-c1e9d1fe21cd","gmt_create":"2025-09-16T15:36:45.0265931+08:00","gmt_modified":"2025-09-16T15:36:45.0302458+08:00"},{"catalog_id":"38c81246-9ad5-4540-aa6c-472a9e1193c6","content":"","title":"Composite Pattern Implementation","description":"composite-pattern-implementation","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"9e1ee075-114d-4b3b-9938-bcee0c109611","gmt_create":"2025-09-16T15:37:44.7672359+08:00","gmt_modified":"2025-09-16T15:37:44.7698431+08:00"},{"catalog_id":"ade55ae0-4d68-4343-927c-1b71d49c2b52","content":"","title":"Extending the Cymbol Language with Custom Features","description":"language-extension-points","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"9d62209b-c1a3-40bb-89dd-51c7fe02a0ed","gmt_create":"2025-09-16T15:38:02.1186817+08:00","gmt_modified":"2025-09-16T15:38:02.1212541+08:00"},{"catalog_id":"4998a10b-e6f6-4b70-9f44-4e315963c35a","content":"","title":"Intermediate Representation Generation Phase","description":"ir-generation-phase","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"37562bba-713f-45ee-8a11-eec6d97cf602","gmt_create":"2025-09-16T15:39:14.7619547+08:00","gmt_modified":"2025-09-16T15:39:14.7645975+08:00"},{"catalog_id":"29798e0d-83e9-4460-8b75-c5b34c095670","content":"","title":"Control Flow Graph Construction Phase","description":"cfg-construction-phase","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"4c4a1cbc-a62c-42c8-8109-23863f5580d0","gmt_create":"2025-09-16T15:39:23.4211129+08:00","gmt_modified":"2025-09-16T15:39:23.4236815+08:00"},{"catalog_id":"1f5f5f70-13db-4a3b-be03-bef8d5729365","content":"","title":"Code Generation Phase","description":"code-generation-phase","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"fd664f64-4b30-4601-92b2-da26c135562a","gmt_create":"2025-09-16T15:40:20.8351731+08:00","gmt_modified":"2025-09-16T15:40:20.8415923+08:00"},{"catalog_id":"37809977-cdfb-4669-bd59-c2fe5b8459bf","content":"","title":"Optimization Phase","description":"optimization-phase","extend":"{}","progress_status":"completed","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","id":"2bfdccbe-92cc-4cf4-ac4e-e6c40c9bd47c","gmt_create":"2025-09-16T15:40:27.8433691+08:00","gmt_modified":"2025-09-16T15:40:27.8464898+08:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Cymbol Compiler Project Analysis\n\n## 1. Project Introduction\n\n### Purpose Statement\nThe Cymbol compiler project is an educational compiler implementation based on ANTLR4 that demonstrates modern compiler concepts and techniques. The project systematically evolves from a simple lexer to a complete compiler with JIT compilation capabilities through 21 progressive stages (EP1-EP21).\n\n### Core Goals and Objectives\nThe primary objectives of this project are to:\n- Provide a clear, complete example of compiler implementation for learning compiler principles\n- Demonstrate the progression from theoretical concepts to practical implementation\n- Showcase modern compiler architecture with modular design\n- Implement a full compilation pipeline from source code to executable virtual machine instructions\n- Support educational purposes with comprehensive documentation and test coverage\n\n### Target Audience\nThis project is designed for:\n- Computer science students learning compiler design principles\n- Developers interested in understanding compiler internals\n- Educators seeking teaching materials for compiler courses\n- Researchers exploring compiler optimization techniques\n- Software engineers wanting to understand language implementation\n\n## 2. Technical Architecture\n\n### Component Breakdown\nThe Cymbol compiler follows a modular architecture with well-defined components that handle different phases of compilation:\n\n```mermaid\ngraph TD\n    A[Source Code] --\u003e B[Lexer]\n    B --\u003e C[Parser]\n    C --\u003e D[AST Builder]\n    D --\u003e E[Symbol Table]\n    E --\u003e F[Type Checker]\n    F --\u003e G[IR Generator]\n    G --\u003e H[CFG Builder]\n    H --\u003e I[Optimizer]\n    I --\u003e J[Code Generator]\n    J --\u003e K[VM Instructions]\n```\n\n### Design Patterns\nThe project employs several key design patterns:\n\n**Visitor Pattern**: Used extensively for traversing AST and IR structures. The `ASTVisitor` interface allows for separation of algorithms from the object structure.\n\n**Composite Pattern**: The AST structure follows the composite pattern where `ASTNode` serves as the component interface, with `ExprNode`, `StmtNode`, and `DeclNode` as leaf and composite classes.\n\n**Builder Pattern**: The compilation process follows a builder pattern where each phase builds upon the output of the previous phase, transforming the representation from source code to executable instructions.\n\n**Strategy Pattern**: Different optimization strategies can be applied to the CFG through the `IFlowOptimizer` interface.\n\n### System Relationships\nThe components interact in a pipeline fashion, with each stage consuming the output of the previous stage:\n\n```mermaid\ngraph LR\n    Parser --\u003e ASTBuilder\n    ASTBuilder --\u003e SymbolTable\n    SymbolTable --\u003e TypeChecker\n    TypeChecker --\u003e IRBuilder\n    IRBuilder --\u003e CFGBuilder\n    CFGBuilder --\u003e Optimizer\n    Optimizer --\u003e CodeGenerator\n    CodeGenerator --\u003e VM\n```\n\n### Data Flow Diagram\nThe complete data flow through the compilation process:\n\n```mermaid\nflowchart TD\n    A[Source Code] --\u003e B[CharStream]\n    B --\u003e C[CymbolLexer]\n    C --\u003e D[TokenStream]\n    D --\u003e E[CymbolParser]\n    E --\u003e F[ParseTree]\n    F --\u003e G[CymbolASTBuilder]\n    G --\u003e H[ASTNode]\n    H --\u003e I[LocalDefine]\n    I --\u003e J[SymbolTable]\n    J --\u003e K[CymbolIRBuilder]\n    K --\u003e L[IRNode]\n    L --\u003e M[CFGBuilder]\n    M --\u003e N[CFG]\n    N --\u003e O[ControlFlowAnalysis]\n    O --\u003e P[CymbolAssembler]\n    P --\u003e Q[Assembly Instructions]\n    Q --\u003e R[VM Execution]\n```\n\n## 3. Implementation Details\n\n### Main Entry Points\nThe primary entry point of the compiler is the `Compiler.java` class, which orchestrates the entire compilation process:\n\n```java\npublic static void main(String[] args) throws IOException {\n    // Initialize lexer and parser\n    CharStream charStream = CharStreams.fromStream(is);\n    CymbolLexer lexer = new CymbolLexer(charStream);\n    CommonTokenStream tokenStream = new CommonTokenStream(lexer);\n    CymbolParser parser = new CymbolParser(tokenStream);\n    ParseTree parseTree = parser.file();\n\n    // Build AST\n    CymbolASTBuilder astBuilder = new CymbolASTBuilder();\n    ASTNode astRoot = parseTree.accept(astBuilder);\n\n    // Build symbol table\n    astRoot.accept(new LocalDefine());\n\n    // Generate IR\n    var irBuilder = new CymbolIRBuilder();\n    astRoot.accept(irBuilder);\n\n    // Optimize and generate code\n    irBuilder.prog.optimizeBasicBlock();\n    // ... code generation continues\n}\n```\nSources:\n- [Compiler.java](ep20/src/main/java/org/teachfx/antlr4/ep20/Compiler.java#L30-L162)\n\n### Core Modules\n\n**AST Module**: The Abstract Syntax Tree module represents the parsed source code in a hierarchical structure. The base class `ASTNode` provides the foundation for all AST nodes:\n\n```java\npublic class ASTNode {\n    public \u003cT\u003e T accept(ASTVisitor\u003c?, T\u003e visitor) {\n        return visitor.visit(this);\n    }\n    // ... other methods\n}\n```\n\nSources:\n- [ASTNode.java](ep20/src/main/java/org/teachfx/antlr4/ep20/ast/ASTNode.java)\n\n**Symbol Table Module**: The symbol table manages variable and function declarations with proper scoping. The `LocalDefine` class traverses the AST to build the symbol table:\n\n```java\n@Override\npublic Void visit(VarDeclNode varDeclNode) {\n    super.visit(varDeclNode);\n    currentScope.define(varDeclNode.getRefSymbol());\n    return null;\n}\n```\n\nSources:\n- [LocalDefine.java](ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java#L70-L75)\n\n**IR Module**: The Intermediate Representation module converts the AST into a lower-level representation suitable for optimization and code generation. The `CymbolIRBuilder` implements the visitor pattern to traverse the AST:\n\n```java\n@Override\npublic VarSlot visit(BinaryExprNode binaryExprNode) {\n    binaryExprNode.getLhs().accept(this);\n    var lhs = peekEvalOperand();\n    \n    binaryExprNode.getRhs().accept(this);\n    var rhs = peekEvalOperand();\n    \n    var res = addInstr(BinExpr.with(binaryExprNode.getOpType(),lhs,rhs));\n    res.ifPresent(this::pushEvalOperand);\n    \n    return null;\n}\n```\n\nSources:\n- [CymbolIRBuilder.java](ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java#L100-L115)\n\n### Configuration Approach\nThe project uses Maven for build management with a standard `pom.xml` configuration. The compiler itself has minimal external configuration, relying on command-line arguments for input files:\n\n```xml\n\u003cproperties\u003e\n    \u003cmaven.compiler.source\u003e11\u003c/maven.compiler.source\u003e\n    \u003cmaven.compiler.target\u003e11\u003c/maven.compiler.target\u003e\n    \u003cproject.build.sourceEncoding\u003eUTF-8\u003c/project.build.sourceEncoding\u003e\n\u003c/properties\u003e\n```\n\nSources:\n- [pom.xml](ep20/pom.xml)\n\n### External Dependencies\nThe project relies on several key external libraries:\n\n- **ANTLR4**: For lexical and syntactic analysis\n- **Apache Commons Lang3**: For tuple support in CFG construction\n- **Log4j2**: For logging and debugging\n- **JUnit**: For testing framework\n- **Mockito**: For testing dependencies\n\nThese dependencies are managed through Maven and are essential for the compiler's functionality.\n\n### Integration Points\nThe compiler integrates various components through well-defined interfaces. For example, the code generation phase uses the `IOperatorEmitter` interface to abstract instruction emission:\n\n```java\npublic class CymbolAssembler implements IRVisitor\u003cVoid,Void\u003e {\n    protected IOperatorEmitter operatorEmitter = new CymbolVMIOperatorEmitter();\n    \n    @Override\n    public Void visit(BinExpr node) {\n        node.getLhs().accept(this);\n        node.getRhs().accept(this);\n        emit(operatorEmitter.emitBinaryOp(node.getOpType()));\n        return null;\n    }\n}\n```\n\nSources:\n- [CymbolAssembler.java](ep20/src/main/java/org/teachfx/antlr4/ep20/pass/codegen/CymbolAssembler.java#L50-L57)\n\n### Component Relationship Diagram\nThe relationships between major components in the compilation pipeline:\n\n```mermaid\ngraph LR\n    A[CymbolParser] --\u003e B[CymbolASTBuilder]\n    B --\u003e C[LocalDefine]\n    C --\u003e D[CymbolIRBuilder]\n    D --\u003e E[CFGBuilder]\n    E --\u003e F[ControlFlowAnalysis]\n    F --\u003e G[CymbolAssembler]\n    \n    H[ASTNode] --\u003e B\n    I[Symbol] --\u003e C\n    J[IRNode] --\u003e D\n    K[CFG] --\u003e E\n    L[Assembly] --\u003e G\n```\n\n## 4. Key Features\n\n### Functionality Overview\nThe Cymbol compiler implements a comprehensive set of features that demonstrate modern compiler techniques:\n\n- **Lexical and Syntactic Analysis**: Using ANTLR4 for parsing Cymbol language\n- **Abstract Syntax Tree Construction**: Building a hierarchical representation of source code\n- **Symbol Table Management**: Tracking variables, functions, and their scopes\n- **Type Checking**: Ensuring type safety in expressions and assignments\n- **Intermediate Representation**: Converting AST to three-address code\n- **Control Flow Analysis**: Building CFG for optimization opportunities\n- **Code Generation**: Producing stack-based virtual machine instructions\n\n### Implementation Highlights\n\n**AST Construction**: The `CymbolASTBuilder` uses the visitor pattern to construct the AST from the parse tree:\n\n```java\n@Override\npublic ASTNode visitCompilationUnit(CymbolParser.CompilationUnitContext ctx) {\n    var compilationUnit = new CompileUnit();\n    for(var childNode : ctx.children) {\n        var node = visit(childNode);\n        if(node instanceof VarDeclNode varDeclNode) {\n            compilationUnit.addVarDecl(varDeclNode);\n        } else if (node instanceof FuncDeclNode funcDeclNode) {\n            compilationUnit.addFuncDecl(funcDeclNode);\n        }\n    }\n    return compilationUnit;\n}\n```\n\nSources:\n- [CymbolASTBuilder.java](ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ast/CymbolASTBuilder.java#L50-L65)\n\n**Symbol Resolution**: The `LocalDefine` class manages scope and symbol definition:\n\n```java\n@Override\npublic Void visit(FuncDeclNode funcDeclNode) {\n    var methodScope = new MethodSymbol(funcDeclNode.getDeclName(),\n            funcDeclNode.getRetTypeNode().getBaseType(),\n            currentScope, funcDeclNode);\n    methodScope.setArgs(funcDeclNode.getParamSlots().getVarDeclNodeList().size());\n    funcDeclNode.setRefSymbol(methodScope);\n    currentScope.define(methodScope);\n    stashScope(methodScope);\n    super.visit(funcDeclNode);\n    currentScope = popScope();\n    return null;\n}\n```\n\nSources:\n- [LocalDefine.java](ep20/src/main/java/org/teachfx/antlr4/ep20/pass/symtab/LocalDefine.java#L90-L105)\n\n**IR Generation**: The `CymbolIRBuilder` converts AST nodes to IR instructions:\n\n```java\n@Override\npublic VarSlot visit(CallFuncNode callExprNode) {\n    var methodSymbol = callExprNode.getCallFuncSymbol();\n    var funcName = callExprNode.getFuncName();\n    var args = callExprNode.getArgsNode().size();\n    \n    var callFunc = CallFunc.with(funcName, args, methodSymbol);\n    pushEvalOperand(callFunc);\n    \n    return callFunc;\n}\n```\n\nSources:\n- [CymbolIRBuilder.java](ep20/src/main/java/org/teachfx/antlr4/ep20/pass/ir/CymbolIRBuilder.java#L280-L290)\n\n### Usage Examples\n\n**Compiling a Simple Program**:\n```bash\n# Compile Cymbol source file\njava -jar target/ep20-compiler.jar hello.cymbol\n\n# Run generated VM code\njava -jar target/ep20-vm.jar hello.vm\n```\n\n**Sample Cymbol Program**:\n```cymbol\nint factorial(int n) {\n    if (n \u003c= 1) {\n        return 1;\n    }\n    return n * factorial(n - 1);\n}\n\nint main() {\n    int result = factorial(5);\n    print(\"5! = \");\n    print(result);\n    return result;\n}\n```\n\n**Expected Output**:\n```\n5! = 120\n```\n\n### Feature Architecture Diagram\nThe compilation process as a state machine:\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e LexicalAnalysis\n    LexicalAnalysis --\u003e SyntacticAnalysis: Tokens\n    SyntacticAnalysis --\u003e ASTConstruction: ParseTree\n    ASTConstruction --\u003e SymbolResolution: ASTNode\n    SymbolResolution --\u003e TypeChecking: SymbolTable\n    TypeChecking --\u003e IRGeneration: TypedAST\n    IRGeneration --\u003e CFGConstruction: IRNode\n    CFGConstruction --\u003e Optimization: CFG\n    Optimization --\u003e CodeGeneration: OptimizedCFG\n    CodeGeneration --\u003e VMExecution: Assembly\n    VMExecution --\u003e [*]: Result\n```\n\u003c/blog\u003e","gmt_create":"2025-09-08T11:56:44.6067407+08:00","gmt_modified":"2025-09-08T11:56:44.6067407+08:00","id":"8ec376b2-edb6-4600-9036-db904e9bf57d","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":""},"wiki_readme":{"content":"# Cymbol编译器项目\r\n\r\n[![Build Status](https://img.shields.io/badge/build-passing-brightgreen)](https://github.com/your-org/cymbol-compiler/actions)\r\n[![License](https://img.shields.io/badge/license-MIT-blue)](LICENSE)\r\n[![Java](https://img.shields.io/badge/java-11+-blue)](https://www.oracle.com/java/technologies/javase-jdk11-downloads.html)\r\n[![Coverage](https://img.shields.io/badge/coverage-92%25-brightgreen)](https://github.com/your-org/cymbol-compiler)\r\n\r\n## 项目简介\r\n\r\nCymbol编译器是一个基于ANTLR4的教学级编译器实现，展示了现代编译器的核心概念和技术。通过21个演进阶段（EP1-EP21），项目从简单的词法分析器逐步发展为完整的编译器，最终实现JIT编译功能。\r\n\r\n本项目旨在为编译原理学习者和开发者提供一个清晰、完整的编译器实现示例，涵盖从理论到实践的各个方面。\r\n\r\n## 核心特性\r\n\r\n### 🏗️ 完整编译架构\r\n- 词法分析和语法分析（ANTLR4）\r\n- 抽象语法树(AST)构建\r\n- 符号表和作用域管理\r\n- 静态类型检查\r\n- 中间表示(IR)生成\r\n- 控制流图(CFG)构建\r\n- 代码优化（跳转优化、活性分析）\r\n- 栈式虚拟机代码生成\r\n\r\n### 🧪 测试驱动开发\r\n- 131+个测试用例，100%通过率\r\n- 92%代码覆盖率（整体），核心模块95%+\r\n- 单元测试、集成测试、端到端测试全覆盖\r\n- 持续集成和自动化测试\r\n\r\n### 📊 调试和可视化\r\n- AST/IR/CFG可视化工具\r\n- 详细的错误信息和定位\r\n- 编译过程跟踪和调试\r\n\r\n### 📚 丰富的文档\r\n- 详细的架构设计文档\r\n- 完整的API文档\r\n- 测试策略和实施指南\r\n- 用户手册和开发指南\r\n\r\n## 项目结构\r\n\r\n```\r\n.\r\n├── ep1-ep10/            # 解释器阶段\r\n├── ep11-ep20/           # 编译器阶段\r\n│   ├── docs/            # 详细文档\r\n│   ├── src/             # 源代码\r\n│   └── tests/           # 测试代码\r\n├── ep21/                # JIT编译阶段\r\n├── docs/                # 项目整体文档\r\n├── scripts/             # 构建和部署脚本\r\n└── logs/                # 日志文件\r\n```\r\n\r\n## 快速开始\r\n\r\n### 环境要求\r\n- Java 11 或更高版本\r\n- Maven 3.6 或更高版本\r\n- Git\r\n\r\n### 安装步骤\r\n\r\n1. 克隆项目仓库：\r\n```bash\r\ngit clone https://github.com/your-org/cymbol-compiler.git\r\ncd cymbol-compiler\r\n```\r\n\r\n2. 进入EP20目录（完整编译器）：\r\n```bash\r\ncd ep20\r\n```\r\n\r\n3. 编译项目：\r\n```bash\r\nmvn compile\r\n```\r\n\r\n4. 运行测试（可选但推荐）：\r\n```bash\r\nmvn test\r\n```\r\n\r\n### 编写第一个Cymbol程序\r\n\r\n创建一个简单的Cymbol程序文件 `hello.cymbol`：\r\n\r\n```cymbol\r\n// 计算阶乘的递归函数\r\nint factorial(int n) {\r\n    if (n \u003c= 1) {\r\n        return 1;\r\n    }\r\n    return n * factorial(n - 1);\r\n}\r\n\r\n// 主函数\r\nint main() {\r\n    int result = factorial(5);\r\n    print(\"5! = \");\r\n    print(result);\r\n    return result;\r\n}\r\n```\r\n\r\n### 编译和运行\r\n\r\n1. 编译Cymbol源文件：\r\n```bash\r\njava -jar target/ep20-compiler.jar hello.cymbol\r\n```\r\n\r\n2. 运行生成的虚拟机代码：\r\n```bash\r\njava -jar target/ep20-vm.jar hello.vm\r\n```\r\n\r\n### 预期输出\r\n```\r\n5! = 120\r\n```\r\n\r\n## 项目演进阶段\r\n\r\n| 阶段 | 名称 | 功能 |\r\n|------|------|------|\r\n| EP1 | 词法分析器 | 基础词法分析 |\r\n| EP2 | 语法分析器 | 基础语法分析 |\r\n| EP3 | AST构建 | 抽象语法树 |\r\n| EP4 | 访问者模式 | AST遍历 |\r\n| EP5 | 符号表 | 符号管理 |\r\n| EP6 | 作用域 | 作用域解析 |\r\n| EP7 | 类型系统 | 类型检查 |\r\n| EP8 | 解释器 | 基础解释执行 |\r\n| EP9 | 函数调用 | 函数支持 |\r\n| EP10 | 内存管理 | 内存分配 |\r\n| EP11 | 错误处理 | 错误报告 |\r\n| EP12 | AST优化 | AST优化 |\r\n| EP13 | 中间表示 | IR设计 |\r\n| EP14 | 控制流图 | CFG构建 |\r\n| EP15 | 数据流分析 | 数据流分析 |\r\n| EP16 | 寄存器分配 | 寄存器优化 |\r\n| EP17 | 指令选择 | 指令生成 |\r\n| EP18 | 栈式虚拟机 | 虚拟机实现 |\r\n| EP19 | 代码优化 | 优化算法 |\r\n| EP20 | 完整编译器 | 完整编译流程 |\r\n| EP21 | JIT编译 | 即时编译 |\r\n\r\n## 开发指南\r\n\r\n### 项目构建\r\n\r\n```bash\r\n# 清理项目\r\nmvn clean\r\n\r\n# 编译项目\r\nmvn compile\r\n\r\n# 运行测试\r\nmvn test\r\n\r\n# 打包项目\r\nmvn package\r\n\r\n# 安装到本地仓库\r\nmvn install\r\n```\r\n\r\n### 代码质量检查\r\n\r\n```bash\r\n# 生成测试覆盖率报告\r\nmvn jacoco:report\r\n\r\n# 检查代码风格\r\nmvn checkstyle:check\r\n\r\n# 分析代码质量\r\nmvn spotbugs:check\r\n```\r\n\r\n### 运行特定测试\r\n\r\n```bash\r\n# 运行特定测试类\r\nmvn test -Dtest=LiteralExprNodeTest\r\n\r\n# 运行特定测试方法\r\nmvn test -Dtest=LiteralExprNodeTest#testIntegerLiteralValue\r\n\r\n# 运行带特定标签的测试\r\nmvn test -Dgroups=ast\r\n```\r\n\r\n## 文档资源\r\n\r\n### 项目级文档\r\n- [项目总体介绍](docs/README.md)\r\n- [开发指南](docs/开发指南.md)\r\n- [架构设计](docs/架构设计.md)\r\n- [测试策略](docs/测试策略.md)\r\n\r\n### EP20详细文档\r\n- [编译流程序列图](ep20/docs/compilation-sequence.md)\r\n- [EP20改进总结](ep20/docs/ep20-improvements-summary.md)\r\n- [模块交互图](ep20/docs/module-interaction.md)\r\n- [项目架构](ep20/docs/project-architecture.md)\r\n- [TDD实施步骤](ep20/docs/tdd_implementation_steps.md)\r\n- [TDD改进任务](ep20/docs/tdd_improvement_tasks.md)\r\n- [TDD测试用例指南](ep20/docs/tdd_test_case_guide.md)\r\n\r\n## 贡献指南\r\n\r\n我们欢迎任何形式的贡献！请遵循以下步骤：\r\n\r\n1. Fork项目\r\n2. 创建功能分支 (`git checkout -b feature/AmazingFeature`)\r\n3. 提交更改 (`git commit -m 'Add some AmazingFeature'`)\r\n4. 推送到分支 (`git push origin feature/AmazingFeature`)\r\n5. 发起Pull Request\r\n\r\n### 贡献要求\r\n- 遵循项目编码规范\r\n- 添加相应的测试用例\r\n- 更新相关文档\r\n- 确保所有测试通过\r\n\r\n## 许可证\r\n\r\n本项目采用BSD 3-Clause 许可证，详情请见[LICENSE](LICENSE)文件。\r\n\r\n## 联系方式\r\n\r\n如有问题或建议，请通过以下方式联系：\r\n- 提交Issue\r\n- 发送邮件至项目维护者\r\n- 加入我们的讨论群组\r\n\r\n## 致谢\r\n\r\n感谢所有为这个项目做出贡献的开发者和研究人员，特别感谢：\r\n- ANTLR4团队提供的强大解析工具\r\n- 编译原理领域的先驱研究者们\r\n- 所有参与测试和反馈的用户","gmt_create":"2025-09-08T11:54:16.4420464+08:00","gmt_modified":"2025-09-08T11:54:16.4420464+08:00","id":"af7541ee-6860-4f96-bc92-d6db402965e8","repo_id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":""},"wiki_repo":{"id":"4ea1088c-ab5d-4cd4-a37a-bbfcb4436118","workspace_path":"","name":"How_to_implment_PL_in_Antlr4","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── ep1\\n│   └── pom.xml\\n├── ep10\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── CSVLexer.java\\n│   │   ├── CSVParser.java\\n│   │   ├── Calc.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep11\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ASTVisitor.java\\n│   │   ├── AdditionNode.java\\n│   │   ├── BuildAstVisitor.java\\n│   │   ├── Calc.java\\n│   │   ├── DivisionNode.java\\n│   │   ├── EvalExprVisitor.java\\n│   │   ├── ExpressionNode.java\\n│   │   ├── InfixExpressionNode.java\\n│   │   ├── MathBaseVisitor.java\\n│   │   ├── MathLexer.java\\n│   │   ├── MathParser.java\\n│   │   ├── MathVisitor.java\\n│   │   ├── MultiplicationNode.java\\n│   │   ├── NegateNode.java\\n│   │   ├── NumberNode.java\\n│   │   ├── SubtractionNode.java\\n│   │   ├── build.xml\\n│   │   └── file.py\\n│   └── pom.xml\\n├── ep12\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep12\\n│   │   ├── ast\\n│   │   │   ├── AdditionNode.java\\n│   │   │   ├── AssignNode.java\\n│   │   │   ├── DivisionNode.java\\n│   │   │   ├── ExpressionNode.java\\n│   │   │   ├── InfixExpressionNode.java\\n│   │   │   ├── MultiplicationNode.java\\n│   │   │   ├── NegateNode.java\\n│   │   │   ├── NumberNode.java\\n│   │   │   ├── SubtractionNode.java\\n│   │   │   └── VarNode.java\\n│   │   ├── parser\\n│   │   │   ├── MathBaseVisitor.java\\n│   │   │   ├── MathLexer.java\\n│   │   │   ├── MathParser.java\\n│   │   │   └── MathVisitor.java\\n│   │   ├── visitor\\n│   │   │   ├── ASTVisitor.java\\n│   │   │   ├── BuildAstVisitor.java\\n│   │   │   └── EvalExprVisitor.java\\n│   │   └── Calc.java\\n│   └── pom.xml\\n├── ep13\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ep12\\\\ast\\n│   │   │   ├── AdditionNode.java\\n│   │   │   ├── AssignNode.java\\n│   │   │   ├── DivisionNode.java\\n│   │   │   ├── ExpressionNode.java\\n│   │   │   ├── InfixExpressionNode.java\\n│   │   │   ├── MultiplicationNode.java\\n│   │   │   ├── NegateNode.java\\n│   │   │   ├── NumberNode.java\\n│   │   │   ├── SubtractionNode.java\\n│   │   │   └── VarNode.java\\n│   │   ├── ASTVisitor.java\\n│   │   ├── BuildAstVisitor.java\\n│   │   ├── Calc.java\\n│   │   ├── EvalExprVisitor.java\\n│   │   ├── MathBaseVisitor.java\\n│   │   ├── MathLexer.java\\n│   │   ├── MathParser.java\\n│   │   ├── MathVisitor.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep14\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep14\\n│   │   ├── compiler\\n│   │   │   ├── MathExprBaseListener.java\\n│   │   │   ├── MathExprBaseVisitor.java\\n│   │   │   ├── MathExprLexer.java\\n│   │   │   ├── MathExprListener.java\\n│   │   │   ├── MathExprParser.java\\n│   │   │   └── MathExprVisitor.java\\n│   │   ├── symtab\\n│   │   │   ├── BaseScope.java\\n│   │   │   ├── BuiltIntTypeSymbol.java\\n│   │   │   ├── Scope.java\\n│   │   │   ├── ScopedSymbol.java\\n│   │   │   ├── Symbol.java\\n│   │   │   ├── SymbolCollector.java\\n│   │   │   ├── SymbolTable.java\\n│   │   │   ├── Type.java\\n│   │   │   └── VariableSymbol.java\\n│   │   └── Compiler.java\\n│   └── pom.xml\\n├── ep15\\n│   └── pom.xml\\n├── ep16\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep16\\n│   │   ├── misc\\n│   │   │   ├── CompilerLogger.java\\n│   │   │   ├── FunctionSpace.java\\n│   │   │   ├── MemorySpace.java\\n│   │   │   ├── ScopeUtil.java\\n│   │   │   └── Util.java\\n│   │   ├── parser\\n│   │   │   ├── CymbolBaseListener.java\\n│   │   │   ├── CymbolBaseVisitor.java\\n│   │   │   ├── CymbolLexer.java\\n│   │   │   ├── CymbolListener.java\\n│   │   │   ├── CymbolParser.java\\n│   │   │   └── CymbolVisitor.java\\n│   │   ├── symtab\\n│   │   │   ├── BaseScope.java\\n│   │   │   ├── BuiltInTypeSymbol.java\\n│   │   │   ├── GlobalScope.java\\n│   │   │   ├── LocalScope.java\\n│   │   │   ├── MethodSymbol.java\\n│   │   │   ├── ReturnValue.java\\n│   │   │   ├── Scope.java\\n│   │   │   ├── ScopedSymbol.java\\n│   │   │   ├── Symbol.java\\n│   │   │   ├── Type.java\\n│   │   │   ├── TypeTable.java\\n│   │   │   └── VariableSymbol.java\\n│   │   ├── visitor\\n│   │   │   ├── CymbolASTVisitor.java\\n│   │   │   ├── Interpreter.java\\n│   │   │   ├── LocalDefine.java\\n│   │   │   └── LocalResolver.java\\n│   │   └── Compiler.java\\n│   ├── pom.xml\\n│   └── tutorial.md\\n├── ep17\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ep14\\\\symtab\\n│   │   │   ├── BaseScope.java\\n│   │   │   ├── BuiltInTypeSymbol.java\\n│   │   │   ├── GlobalScope.java\\n│   │   │   ├── LocalScope.java\\n│   │   │   ├── MethodSymbol.java\\n│   │   │   ├── ReturnValue.java\\n│   │   │   ├── Scope.java\\n│   │   │   ├── ScopedSymbol.java\\n│   │   │   ├── Symbol.java\\n│   │   │   ├── Type.java\\n│   │   │   ├── TypeTable.java\\n│   │   │   └── VariableSymbol.java\\n│   │   └── ep17\\n│   │       ├── misc\\n│   │       │   ├── CompilerLogger.java\\n│   │       │   ├── FunctionSpace.java\\n│   │       │   ├── Graph.java\\n│   │       │   ├── MemorySpace.java\\n│   │       │   ├── ScopeUtil.java\\n│   │       │   └── Util.java\\n│   │       ├── parser\\n│   │       │   ├── CymbolBaseListener.java\\n│   │       │   ├── CymbolBaseVisitor.java\\n│   │       │   ├── CymbolLexer.java\\n│   │       │   ├── CymbolListener.java\\n│   │       │   ├── CymbolParser.java\\n│   │       │   └── CymbolVisitor.java\\n│   │       ├── visitor\\n│   │       │   └── CallGraphVisitor.java\\n│   │       └── Compiler.java\\n│   ├── TODO.md\\n│   └── pom.xml\\n├── ep18\\n│   ├── src\\\\main\\n│   │   ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep18\\n│   │   │   ├── parser\\n│   │   │   │   ├── VMAssemblerBaseListener.java\\n│   │   │   │   ├── VMAssemblerBaseVisitor.java\\n│   │   │   │   ├── VMAssemblerLexer.java\\n│   │   │   │   ├── VMAssemblerListener.java\\n│   │   │   │   ├── VMAssemblerParser.java\\n│   │   │   │   └── VMAssemblerVisitor.java\\n│   │   │   ├── stackvm\\n│   │   │   │   ├── ByteCodeAssembler.java\\n│   │   │   │   ├── BytecodeDefinition.java\\n│   │   │   │   ├── CymbolStackVM.java\\n│   │   │   │   ├── DisAssembler.java\\n│   │   │   │   ├── FunctionSymbol.java\\n│   │   │   │   ├── LabelSymbol.java\\n│   │   │   │   ├── StackFrame.java\\n│   │   │   │   └── StructSpace.java\\n│   │   │   ├── VMInterpreter.java\\n│   │   │   └── VMRunner.java\\n│   │   └── resources\\n│   │       ├── c.vm\\n│   │       └── t.vm\\n│   ├── TODO.md\\n│   ├── Update.md\\n│   ├── VM_Design.md\\n│   └── pom.xml\\n├── ep19\\n│   ├── docs\\n│   │   ├── ep19-improvements-summary.md\\n│   │   └── tasks.md\\n│   ├── src\\n│   │   ├── main\\n│   │   │   ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep19\\n│   │   │   │   ├── misc\\n│   │   │   │   │   ├── CompilerLogger.java\\n│   │   │   │   │   ├── ScopeUtil.java\\n│   │   │   │   │   └── Util.java\\n│   │   │   │   ├── pass\\n│   │   │   │   │   ├── CymbolASTVisitor.java\\n│   │   │   │   │   ├── CymbolAssembler.java\\n│   │   │   │   │   ├── Interpreter.java\\n│   │   │   │   │   ├── LocalDefine.java\\n│   │   │   │   │   ├── LocalResolver.java\\n│   │   │   │   │   └── TypeCheckVisitor.java\\n│   │   │   │   ├── pipeline\\n│   │   │   │   │   ├── CompilationResult.java\\n│   │   │   │   │   ├── CompilerPipeline.java\\n│   │   │   │   │   ├── ConfigurableCompilerPipeline.java\\n│   │   │   │   │   └── DefaultCompilerPipeline.java\\n│   │   │   │   ├── runtime\\n│   │   │   │   │   ├── FunctionSpace.java\\n│   │   │   │   │   ├── MemorySpace.java\\n│   │   │   │   │   └── StructInstance.java\\n│   │   │   │   ├── symtab\\n│   │   │   │   │   ├── scope\\n│   │   │   │   │   │   ├── BaseScope.java\\n│   │   │   │   │   │   ├── GlobalScope.java\\n│   │   │   │   │   │   ├── LocalScope.java\\n│   │   │   │   │   │   ├── Scope.java\\n│   │   │   │   │   │   └── ScopedSymbol.java\\n│   │   │   │   │   ├── symbol\\n│   │   │   │   │   │   ├── BuiltInTypeSymbol.java\\n│   │   │   │   │   │   ├── MethodSymbol.java\\n│   │   │   │   │   │   ├── PrimitiveType.java\\n│   │   │   │   │   │   ├── StructSymbol.java\\n│   │   │   │   │   │   ├── Symbol.java\\n│   │   │   │   │   │   ├── TypedefSymbol.java\\n│   │   │   │   │   │   └── VariableSymbol.java\\n│   │   │   │   │   ├── type\\n│   │   │   │   │   │   └── ArrayType.java\\n│   │   │   │   │   ├── ReturnValue.java\\n│   │   │   │   │   ├── Type.java\\n│   │   │   │   │   ├── TypeChecker.java\\n│   │   │   │   │   └── TypeTable.java\\n│   │   │   │   └── Compiler.java\\n│   │   │   └── resources\\n│   │   │       └── log4j2.xml\\n│   │   └── test\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep19\\n│   │       ├── CompilerTestUtil.java\\n│   │       ├── ComprehensiveTest.java\\n│   │       ├── ErrorRecoveryTest.java\\n│   │       ├── FunctionAndMethodTest.java\\n│   │       ├── IntegrationTest.java\\n│   │       ├── PerformanceBenchmarkTest.java\\n│   │       ├── StructAndTypedefTest.java\\n│   │       └── TypeSystemTest.java\\n│   ├── Design.md\\n│   ├── Plan.md\\n│   ├── README.md\\n│   ├── pom.xml\\n│   └── tdd_driven_todo_cases.md\\n├── ep2\\n│   ├── src\\\\main\\\\java\\n│   │   ├── org\\\\teachfx\\\\antlr4\\n│   │   │   ├── ShortToUnicodeString.java\\n│   │   │   ├── Test.java\\n│   │   │   ├── Translate.java\\n│   │   │   └── build.xml\\n│   │   ├── ArrayInitBaseListener.java\\n│   │   ├── ArrayInitBaseVisitor.java\\n│   │   ├── ArrayInitLexer.java\\n│   │   ├── ArrayInitListener.java\\n│   │   ├── ArrayInitParser.java\\n│   │   └── ArrayInitVisitor.java\\n│   └── pom.xml\\n├── ep20\\n│   ├── docs\\n│   │   ├── design\\n│   │   │   ├── register-allocation-algorithm-details.md\\n│   │   │   ├── register-allocation-api-design.md\\n│   │   │   ├── register-allocation-design.md\\n│   │   │   ├── register-allocation-integration.md\\n│   │   │   ├── register-allocation-test-strategy.md\\n│   │   │   └── technical-design.md\\n│   │   ├── migration\\n│   │   │   ├── final-project-report.md\\n│   │   │   ├── grammar-diff-analysis.md\\n│   │   │   ├── phase1-operators-completion.md\\n│   │   │   ├── phase2-arrays-completion.md\\n│   │   │   ├── phase2-arrays-summary.md\\n│   │   │   ├── project-completion-summary.md\\n│   │   │   └── tdd-migration-plan.md\\n│   │   ├── compilation-sequence.md\\n│   │   ├── ep20-improvements-summary.md\\n│   │   ├── module-interaction.md\\n│   │   ├── project-architecture.md\\n│   │   ├── tdd_implementation_steps.md\\n│   │   ├── tdd_improvement_tasks.md\\n│   │   └── tdd_test_case_guide.md\\n│   ├── src\\n│   │   ├── main\\n│   │   │   ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep20\\n│   │   │   │   ├── ast\\n│   │   │   │   │   ├── decl\\n│   │   │   │   │   │   ├── DeclNode.java\\n│   │   │   │   │   │   ├── FuncDeclNode.java\\n│   │   │   │   │   │   ├── StructDeclNode.java\\n│   │   │   │   │   │   ├── StructMemberNode.java\\n│   │   │   │   │   │   ├── TypedefDeclNode.java\\n│   │   │   │   │   │   ├── VarDeclListNode.java\\n│   │   │   │   │   │   └── VarDeclNode.java\\n│   │   │   │   │   ├── expr\\n│   │   │   │   │   │   ├── ArrayAccessNode.java\\n│   │   │   │   │   │   ├── ArrayLiteralNode.java\\n│   │   │   │   │   │   ├── BinaryExprNode.java\\n│   │   │   │   │   │   ├── BoolExprNode.java\\n│   │   │   │   │   │   ├── CallFuncNode.java\\n│   │   │   │   │   │   ├── CastExprNode.java\\n│   │   │   │   │   │   ├── ExprNode.java\\n│   │   │   │   │   │   ├── FieldAccessNode.java\\n│   │   │   │   │   │   ├── FloatExprNode.java\\n│   │   │   │   │   │   ├── IDExprNode.java\\n│   │   │   │   │   │   ├── IntExprNode.java\\n│   │   │   │   │   │   ├── LiteralNode.java\\n│   │   │   │   │   │   ├── NullExprNode.java\\n│   │   │   │   │   │   ├── StringExprNode.java\\n│   │   │   │   │   │   └── UnaryExprNode.java\\n│   │   │   │   │   ├── stmt\\n│   │   │   │   │   │   ├── AssignStmtNode.java\\n│   │   │   │   │   │   ├── BlockStmtNode.java\\n│   │   │   │   │   │   ├── BreakStmtNode.java\\n│   │   │   │   │   │   ├── ContinueStmtNode.java\\n│   │   │   │   │   │   ├── ExprStmtNode.java\\n│   │   │   │   │   │   ├── IfStmtNode.java\\n│   │   │   │   │   │   ├── ReturnStmtNode.java\\n│   │   │   │   │   │   ├── ScopeType.java\\n│   │   │   │   │   │   ├── StmtNode.java\\n│   │   │   │   │   │   ├── VarDeclStmtNode.java\\n│   │   │   │   │   │   └── WhileStmtNode.java\\n│   │   │   │   │   ├── type\\n│   │   │   │   │   │   └── TypeNode.java\\n│   │   │   │   │   ├── ASTNode.java\\n│   │   │   │   │   ├── ASTVisitor.java\\n│   │   │   │   │   └── CompileUnit.java\\n│   │   │   │   ├── debugger\\\\ast\\n│   │   │   │   │   ├── Dumpable.java\\n│   │   │   │   │   └── Dumper.java\\n│   │   │   │   ├── driver\\n│   │   │   │   │   ├── ErrorIssuer.java\\n│   │   │   │   │   ├── Phase.java\\n│   │   │   │   │   └── Task.java\\n│   │   │   │   ├── error\\n│   │   │   │   │   └── CymbalError.java\\n│   │   │   │   ├── ir\\n│   │   │   │   │   ├── expr\\n│   │   │   │   │   │   ├── addr\\n│   │   │   │   │   │   ├── arith\\n│   │   │   │   │   │   ├── val\\n│   │   │   │   │   │   ├── CallFunc.java\\n│   │   │   │   │   │   ├── Expr.java\\n│   │   │   │   │   │   ├── ImmValue.java\\n│   │   │   │   │   │   ├── Operand.java\\n│   │   │   │   │   │   └── VarSlot.java\\n│   │   │   │   │   ├── stmt\\n│   │   │   │   │   │   ├── Assign.java\\n│   │   │   │   │   │   ├── CJMP.java\\n│   │   │   │   │   │   ├── ExprStmt.java\\n│   │   │   │   │   │   ├── FuncEntryLabel.java\\n│   │   │   │   │   │   ├── JMP.java\\n│   │   │   │   │   │   ├── Label.java\\n│   │   │   │   │   │   ├── ReturnVal.java\\n│   │   │   │   │   │   └── Stmt.java\\n│   │   │   │   │   ├── IRNode.java\\n│   │   │   │   │   ├── IRVisitor.java\\n│   │   │   │   │   ├── JMPInstr.java\\n│   │   │   │   │   └── Prog.java\\n│   │   │   │   ├── parser\\n│   │   │   │   │   └── Location.java\\n│   │   │   │   ├── pass\\n│   │   │   │   │   ├── ast\\n│   │   │   │   │   │   ├── ASTBaseVisitor.java\\n│   │   │   │   │   │   └── CymbolASTBuilder.java\\n│   │   │   │   │   ├── cfg\\n│   │   │   │   │   │   ├── BasicBlock.java\\n│   │   │   │   │   │   ├── CFG.java\\n│   │   │   │   │   │   ├── CFGBuilder.java\\n│   │   │   │   │   │   ├── ControlFlowAnalysis.java\\n│   │   │   │   │   │   ├── IFlowOptimizer.java\\n│   │   │   │   │   │   ├── IOrdIdentity.java\\n│   │   │   │   │   │   ├── LinearIRBlock.java\\n│   │   │   │   │   │   ├── LivenessAnalysis.java\\n│   │   │   │   │   │   └── Loc.java\\n│   │   │   │   │   ├── codegen\\n│   │   │   │   │   │   ├── CymbolAssembler.java\\n│   │   │   │   │   │   ├── CymbolVMIOperatorEmitter.java\\n│   │   │   │   │   │   └── IOperatorEmitter.java\\n│   │   │   │   │   ├── ir\\n│   │   │   │   │   │   └── CymbolIRBuilder.java\\n│   │   │   │   │   ├── sematic\\n│   │   │   │   │   │   └── TypeChecker.java\\n│   │   │   │   │   └── symtab\\n│   │   │   │   │       └── LocalDefine.java\\n│   │   │   │   ├── symtab\\n│   │   │   │   │   ├── scope\\n│   │   │   │   │   │   ├── BaseScope.java\\n│   │   │   │   │   │   ├── GlobalScope.java\\n│   │   │   │   │   │   ├── LocalScope.java\\n│   │   │   │   │   │   └── Scope.java\\n│   │   │   │   │   ├── symbol\\n│   │   │   │   │   │   ├── MethodSymbol.java\\n│   │   │   │   │   │   ├── ScopedSymbol.java\\n│   │   │   │   │   │   ├── StructSymbol.java\\n│   │   │   │   │   │   ├── Symbol.java\\n│   │   │   │   │   │   ├── TypedefSymbol.java\\n│   │   │   │   │   │   └── VariableSymbol.java\\n│   │   │   │   │   └── type\\n│   │   │   │   │       ├── ArrayType.java\\n│   │   │   │   │       ├── BuiltInTypeSymbol.java\\n│   │   │   │   │       ├── OperatorType.java\\n│   │   │   │   │       ├── StructType.java\\n│   │   │   │   │       ├── Type.java\\n│   │   │   │   │       └── TypeTable.java\\n│   │   │   │   ├── utils\\n│   │   │   │   │   ├── Kind.java\\n│   │   │   │   │   └── StreamUtils.java\\n│   │   │   │   └── Compiler.java\\n│   │   │   └── resources\\n│   │   │       ├── graph_0_optimized.md\\n│   │   │       ├── graph_0_origin.md\\n│   │   │       ├── graph_1_optimized.md\\n│   │   │       ├── graph_1_origin.md\\n│   │   │       └── log4j2.xml\\n│   │   └── test\\n│   │       ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep20\\n│   │       │   ├── ast\\n│   │       │   │   ├── expr\\n│   │       │   │   │   ├── BinaryExprNodeTest.java\\n│   │       │   │   │   ├── BoolExprNodeTest.java\\n│   │       │   │   │   ├── CallFuncNodeTest.java\\n│   │       │   │   │   ├── LiteralExprNodeTest.java\\n│   │       │   │   │   └── UnaryExprNodeTest.java\\n│   │       │   │   └── stmt\\n│   │       │   │       ├── AssignStmtNodeTest.java\\n│   │       │   │       ├── IfStmtNodeTest.java\\n│   │       │   │       ├── ReturnStmtNodeTest.java\\n│   │       │   │       └── WhileStmtNodeTest.java\\n│   │       │   ├── ir\\n│   │       │   │   ├── expr\\\\addr\\n│   │       │   │   │   └── AddressingTest.java\\n│   │       │   │   └── ThreeAddressCodeTest.java\\n│   │       │   ├── pass\\n│   │       │   │   ├── cfg\\n│   │       │   │   │   ├── BasicBlockOptimizationTest.java\\n│   │       │   │   │   ├── BasicBlockTest.java\\n│   │       │   │   │   ├── CFGBuilderTest.java\\n│   │       │   │   │   ├── ControlFlowGraphTest.java\\n│   │       │   │   │   ├── DataFlowAnalysisTest.java\\n│   │       │   │   │   └── LivenessAnalysisTest.java\\n│   │       │   │   ├── codegen\\n│   │       │   │   │   ├── CymbolAssemblerTest.java\\n│   │       │   │   │   ├── DebugOutputTest.java\\n│   │       │   │   │   ├── DebugTest.java\\n│   │       │   │   │   ├── EndToEndCompilationTest.java\\n│   │       │   │   │   ├── FunctionCallTest.java\\n│   │       │   │   │   └── VMInstructionTest.java\\n│   │       │   │   ├── sematic\\n│   │       │   │   │   └── TypeCheckerTest.java\\n│   │       │   │   └── symtab\\n│   │       │   │       └── LocalDefineTest.java\\n│   │       │   ├── ArraysTest.java\\n│   │       │   ├── NewSyntaxTest.java\\n│   │       │   └── OperatorsTest.java\\n│   │       └── resources\\n│   │           ├── ast\\n│   │           │   ├── expressions\\n│   │           │   │   └── sample.txt\\n│   │           │   └── statements\\n│   │           │       └── sample.txt\\n│   │           ├── cfg\\\\graphs\\n│   │           │   └── sample.txt\\n│   │           ├── codegen\\\\instructions\\n│   │           │   └── sample.txt\\n│   │           └── ir\\\\expected\\n│   │               └── sample.txt\\n│   ├── README.md\\n│   └── pom.xml\\n├── ep21\\n│   ├── src\\n│   │   ├── main\\n│   │   │   ├── java\\\\org\\\\teachfx\\\\antlr4\\\\ep21\\n│   │   │   │   ├── ast\\n│   │   │   │   │   ├── decl\\n│   │   │   │   │   │   ├── DeclNode.java\\n│   │   │   │   │   │   ├── FuncDeclNode.java\\n│   │   │   │   │   │   ├── VarDeclListNode.java\\n│   │   │   │   │   │   └── VarDeclNode.java\\n│   │   │   │   │   ├── expr\\n│   │   │   │   │   │   ├── BinaryExprNode.java\\n│   │   │   │   │   │   ├── BoolExprNode.java\\n│   │   │   │   │   │   ├── CallFuncNode.java\\n│   │   │   │   │   │   ├── ExprNode.java\\n│   │   │   │   │   │   ├── FloatExprNode.java\\n│   │   │   │   │   │   ├── IDExprNode.java\\n│   │   │   │   │   │   ├── IntExprNode.java\\n│   │   │   │   │   │   ├── LiteralNode.java\\n│   │   │   │   │   │   ├── NullExprNode.java\\n│   │   │   │   │   │   ├── StringExprNode.java\\n│   │   │   │   │   │   └── UnaryExprNode.java\\n│   │   │   │   │   ├── stmt\\n│   │   │   │   │   │   └── ... 5 files, 0 dirs not shown\\n│   │   │   │   │   ├── type\\n│   │   │   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   │   │   ├── ASTNode.java\\n│   │   │   │   │   ├── ASTVisitor.java\\n│   │   │   │   │   └── CompileUnit.java\\n│   │   │   │   ├── debugger\\\\ast\\n│   │   │   │   │   ├── Dumpable.java\\n│   │   │   │   │   └── Dumper.java\\n│   │   │   │   ├── driver\\n│   │   │   │   │   ├── ErrorIssuer.java\\n│   │   │   │   │   ├── Phase.java\\n│   │   │   │   │   └── Task.java\\n│   │   │   │   ├── error\\n│   │   │   │   │   └── CymbalError.java\\n│   │   │   │   ├── ir\\n│   │   │   │   │   ├── expr\\n│   │   │   │   │   │   └── ... 5 files, 3 dirs not shown\\n│   │   │   │   │   ├── stmt\\n│   │   │   │   │   │   └── ... 8 files, 0 dirs not shown\\n│   │   │   │   │   ├── IRNode.java\\n│   │   │   │   │   ├── IRVisitor.java\\n│   │   │   │   │   ├── JMPInstr.java\\n│   │   │   │   │   └── Prog.java\\n│   │   │   │   ├── parser\\n│   │   │   │   │   ├── CymbolBaseListener.java\\n│   │   │   │   │   ├── CymbolBaseVisitor.java\\n│   │   │   │   │   ├── CymbolLexer.java\\n│   │   │   │   │   ├── CymbolListener.java\\n│   │   │   │   │   ├── CymbolParser.java\\n│   │   │   │   │   ├── CymbolVisitor.java\\n│   │   │   │   │   └── Location.java\\n│   │   │   │   ├── pass\\n│   │   │   │   │   ├── ast\\n│   │   │   │   │   │   └── ... 2 files, 0 dirs not shown\\n│   │   │   │   │   ├── cfg\\n│   │   │   │   │   │   └── ... 9 files, 0 dirs not shown\\n│   │   │   │   │   ├── codegen\\n│   │   │   │   │   │   └── ... 3 files, 0 dirs not shown\\n│   │   │   │   │   ├── ir\\n│   │   │   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   │   │   ├── sematic\\n│   │   │   │   │   │   └── ... 1 files, 0 dirs not shown\\n│   │   │   │   │   └── symtab\\n│   │   │   │   │       └── ... 1 files, 0 dirs not shown\\n│   │   │   │   ├── symtab\\n│   │   │   │   │   ├── scope\\n│   │   │   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   │   │   ├── symbol\\n│   │   │   │   │   │   └── ... 4 files, 0 dirs not shown\\n│   │   │   │   │   └── type\\n│   │   │   │   │       └── ... 4 files, 0 dirs not shown\\n│   │   │   │   ├── utils\\n│   │   │   │   │   ├── Kind.java\\n│   │   │   │   │   └── StreamUtils.java\\n│   │   │   │   └── Compiler.java\\n│   │   │   └── resources\\n│   │   │       ├── graph_0_optimized.md\\n│   │   │       ├── graph_0_origin.md\\n│   │   │       ├── graph_1_optimized.md\\n│   │   │       ├── graph_1_origin.md\\n│   │   │       └── log4j2.xml\\n│   │   └── test\\\\java\\\\org\\\\teachfx\\\\antlr4\\\\ep21\\n│   │       ├── ast\\\\expr\\n│   │       │   └── BoolExprNodeTest.java\\n│   │       └── pass\\n│   │           ├── cfg\\n│   │           │   └── BasicBlockTest.java\\n│   │           ├── codegen\\n│   │           │   └── CymbolAssemblerTest.java\\n│   │           ├── sematic\\n│   │           │   └── TypeCheckerTest.java\\n│   │           └── symtab\\n│   │               └── LocalDefineTest.java\\n│   ├── README.md\\n│   ├── TODO.md\\n│   └── pom.xml\\n├── ep3\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ep20\\\\parser\\\\src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   │   ├── CommonLexRules.java\\n│   │   │   ├── LibExprBaseListener.java\\n│   │   │   ├── LibExprBaseVisitor.java\\n│   │   │   ├── LibExprLexer.java\\n│   │   │   ├── LibExprListener.java\\n│   │   │   ├── LibExprParser.java\\n│   │   │   └── LibExprVisitor.java\\n│   │   ├── gen\\n│   │   │   └── CommonLexRules.java\\n│   │   ├── ExprJoyRide.java\\n│   │   ├── LibExprBaseListener.java\\n│   │   ├── LibExprLexer.java\\n│   │   ├── LibExprListener.java\\n│   │   ├── LibExprParser.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep4\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ep20\\\\parser\\\\src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   │   ├── LabeledExprBaseListener.java\\n│   │   │   ├── LabeledExprBaseVisitor.java\\n│   │   │   ├── LabeledExprLexer.java\\n│   │   │   ├── LabeledExprListener.java\\n│   │   │   ├── LabeledExprParser.java\\n│   │   │   └── LabeledExprVisitor.java\\n│   │   ├── Calc.java\\n│   │   ├── EvalVisitor.java\\n│   │   ├── LabeledExprBaseVisitor.java\\n│   │   ├── LabeledExprLexer.java\\n│   │   ├── LabeledExprParser.java\\n│   │   ├── LabeledExprVisitor.java\\n│   │   ├── ReadMe.md\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep5\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── Demo.java\\n│   │   ├── ExtractInterfaceListener.java\\n│   │   ├── ExtractInterfaceTool.java\\n│   │   ├── JavaBaseListener.java\\n│   │   ├── JavaLexer.java\\n│   │   ├── JavaListener.java\\n│   │   ├── JavaParser.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep6\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── CSVBaseListener.java\\n│   │   ├── CSVExplor.java\\n│   │   ├── CSVLexer.java\\n│   │   ├── CSVListener.java\\n│   │   ├── CSVParser.java\\n│   │   ├── CSVReader.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep7\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── JSONBaseListener.java\\n│   │   ├── JSONLexer.java\\n│   │   ├── JSONListener.java\\n│   │   ├── JSONParser.java\\n│   │   ├── build.xml\\n│   │   └── t.json\\n│   └── pom.xml\\n├── ep8\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── ASTNode.java\\n│   │   ├── AddNode.java\\n│   │   ├── BinArithNode.java\\n│   │   ├── ExprNode.java\\n│   │   ├── ExprVisitor.java\\n│   │   ├── IntNode.java\\n│   │   ├── OPType.java\\n│   │   ├── RawValueNode.java\\n│   │   ├── StatNode.java\\n│   │   ├── StatsNode.java\\n│   │   ├── VarNode.java\\n│   │   ├── VecMathBaseVisitor.java\\n│   │   ├── VecMathLexer.java\\n│   │   ├── VecMathParser.java\\n│   │   ├── VecMathVisitor.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── ep9\\n│   ├── src\\\\main\\\\java\\\\org\\\\teachfx\\\\antlr4\\n│   │   ├── Calc.java\\n│   │   ├── ExprLexer.java\\n│   │   ├── ExprParser.java\\n│   │   └── build.xml\\n│   └── pom.xml\\n├── scripts\\n│   ├── check_utf8.py\\n│   ├── cp_prototype.py\\n│   ├── cpfromtemplate.sh\\n│   ├── run.bat\\n│   ├── run.ps1\\n│   ├── run.py\\n│   └── run.sh\\n├── README.md\\n├── README_EN.md\\n└── pom.xml\\n\"","current_document_structure":"WikiEncrypted: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","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"921bc8d5c9364ea21a49d76d9abc60cac4218382","last_commit_update":"2025-09-16T14:22:49+08:00","gmt_create":"2025-09-08T11:54:02.7815723+08:00","gmt_modified":"2025-09-16T15:40:28.102256+08:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}